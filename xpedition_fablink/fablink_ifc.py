# -*- coding: mbcs -*-
# Created by makepy.py version 0.5.01
# By python version 3.11.6 (tags/v3.11.6:8b6ee5b, Oct  2 2023, 14:57:12) [MSC v.1935 64 bit (AMD64)]
# On Tue Apr 16 15:43:06 2024
'MGCPCB (AutoActive series) Type Library'
makepy_version = '0.5.01'
python_version = 0x30b06f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{EDEDED00-D5F6-4B04-8FE7-EDEDEDEDED00}')
MajorVersion = 119
MinorVersion = 0
LibraryFlags = 8
LCID = 0x0

class constants:
	epcbNetGroupConstrClass       =2          # from enum EPCBNetGroupType
	epcbNetGroupNet               =0          # from enum EPCBNetGroupType
	epcbNetGroupNetClass          =1          # from enum EPCBNetGroupType
	epcbAKBStateDisplay           =0          # from enum EPcbAKBState
	epcbAKBStatePop               =2          # from enum EPcbAKBState
	epcbAKBStatePush              =1          # from enum EPcbAKBState
	epcbARDiffPairs               =1          # from enum EPcbARFixMask
	epcbAROtherNets               =2          # from enum EPcbARFixMask
	epcbARRtdThisPass             =4          # from enum EPcbARFixMask
	epcbARTunedNets               =8          # from enum EPcbARFixMask
	epcbARAllNetsItem             =0          # from enum EPcbARItemsType
	epcbARBussesWithPathsItem     =12         # from enum EPcbARItemsType
	epcbARClassesItem             =1          # from enum EPcbARItemsType
	epcbARDiffPairsItem           =2          # from enum EPcbARItemsType
	epcbARFilteredNetsItem        =3          # from enum EPcbARItemsType
	epcbARGuidedPinsItem          =4          # from enum EPcbARItemsType
	epcbARMarkedNetsItem          =13         # from enum EPcbARItemsType
	epcbARNetGroupsItem           =14         # from enum EPcbARItemsType
	epcbARNetsItem                =5          # from enum EPcbARItemsType
	epcbAROrderedNetsItem         =6          # from enum EPcbARItemsType
	epcbARPartsItem               =7          # from enum EPcbARItemsType
	epcbARSelectedNetsItem        =8          # from enum EPcbARItemsType
	epcbARSelectedPinsItem        =9          # from enum EPcbARItemsType
	epcbARTunedPinPairsItem       =10         # from enum EPcbARItemsType
	epcbARVirtualPinsItem         =11         # from enum EPcbARItemsType
	epcbARLyrsAddLayer            =2          # from enum EPcbARLayerSelectType
	epcbARLyrsBottomUp            =0          # from enum EPcbARLayerSelectType
	epcbARLyrsRemoveLayer         =3          # from enum EPcbARLayerSelectType
	epcbARLyrsTopDown             =1          # from enum EPcbARLayerSelectType
	epcbARAutoOrder               =0          # from enum EPcbAROrderType
	epcbARCustomLongOrder         =1          # from enum EPcbAROrderType
	epcbARCustomShortOrder        =2          # from enum EPcbAROrderType
	epcbARLongestOrder            =3          # from enum EPcbAROrderType
	epcbARShortestOrder           =4          # from enum EPcbAROrderType
	epcbAR2LayersPlanningPass     =0          # from enum EPcbARPassType
	epcbARBusRoutePass            =15         # from enum EPcbARPassType
	epcbARBusShieldingPass        =17         # from enum EPcbARPassType
	epcbARExpandPass              =1          # from enum EPcbARPassType
	epcbARFanoutPass              =2          # from enum EPcbARPassType
	epcbARLPlanningPass           =3          # from enum EPcbARPassType
	epcbARMemoryPass              =4          # from enum EPcbARPassType
	epcbARNoViaBiasPass           =5          # from enum EPcbARPassType
	epcbARNoViaPass               =6          # from enum EPcbARPassType
	epcbARRemoveHangersPass       =7          # from enum EPcbARPassType
	epcbARRoutePass               =8          # from enum EPcbARPassType
	epcbARSLIPass                 =16         # from enum EPcbARPassType
	epcbARSimpleFanoutPass        =9          # from enum EPcbARPassType
	epcbARSmoothPass              =10         # from enum EPcbARPassType
	epcbARSpreadPass              =11         # from enum EPcbARPassType
	epcbARTuneCrosstalkPass       =12         # from enum EPcbARPassType
	epcbARTuneDelayPass           =13         # from enum EPcbARPassType
	epcbARViaMinPass              =14         # from enum EPcbARPassType
	epcbAcceptAccepted            =1          # from enum EPcbAcceptType
	epcbAcceptAll                 =0          # from enum EPcbAcceptType
	epcbAcceptUnaccepted          =2          # from enum EPcbAcceptType
	epcbAllowMetalOnLayer         =0          # from enum EPcbAllowMetal
	epcbNoMetalOnLayer            =1          # from enum EPcbAllowMetal
	epcbNoPlaneOnLayer            =2          # from enum EPcbAllowMetal
	epcbAnchorFixed               =2          # from enum EPcbAnchorType
	epcbAnchorLocked              =3          # from enum EPcbAnchorType
	epcbAnchorNone                =0          # from enum EPcbAnchorType
	epcbAnchorSemiFixed           =1          # from enum EPcbAnchorType
	epcbAngleUnitDegrees          =0          # from enum EPcbAngleUnit
	epcbAngleUnitRadians          =1          # from enum EPcbAngleUnit
	epcbAppIDCES                  =1          # from enum EPcbAppIDType
	epcbAppIDCellEditor           =2          # from enum EPcbAppIDType
	epcbAppBoardStationRE         =2          # from enum EPcbApplicationType
	epcbAppBoardStationXE         =9          # from enum EPcbApplicationType
	epcbAppBrowser                =3          # from enum EPcbApplicationType
	epcbAppCellEditor             =8          # from enum EPcbApplicationType
	epcbAppDrawingFileEditor      =11         # from enum EPcbApplicationType
	epcbAppExpedition             =1          # from enum EPcbApplicationType
	epcbAppExpeditionPE           =17         # from enum EPcbApplicationType
	epcbAppFablinkXE              =7          # from enum EPcbApplicationType
	epcbAppICXProVerify           =10         # from enum EPcbApplicationType
	epcbAppPADSDecalEditor        =18         # from enum EPcbApplicationType
	epcbAppPADSLayout             =13         # from enum EPcbApplicationType
	epcbAppPADSLayoutViewer       =15         # from enum EPcbApplicationType
	epcbAppPADSRouter             =14         # from enum EPcbApplicationType
	epcbAppPlanner                =5          # from enum EPcbApplicationType
	epcbAppSFXRE                  =6          # from enum EPcbApplicationType
	epcbAppSolidEdgePCB           =20         # from enum EPcbApplicationType
	epcbAppSymbolicFloorPlanner   =12         # from enum EPcbApplicationType
	epcbAppViewer                 =4          # from enum EPcbApplicationType
	epcbAppXpeditionPD            =19         # from enum EPcbApplicationType
	epcbAppXtremeDesignSession    =16         # from enum EPcbApplicationType
	epcbBaseUnit10NM              =1          # from enum EPcbBaseUnit
	epcbBaseUnit1NM               =0          # from enum EPcbBaseUnit
	epcbBendOriginCenter          =0          # from enum EPcbBendOrigin
	epcbBendOriginLeft            =-1         # from enum EPcbBendOrigin
	epcbBendOriginRight           =1          # from enum EPcbBendOrigin
	epcbBoardAttachPointCentroid  =1          # from enum EPcbBoardAttachPoint
	epcbBoardAttachPointLowerLeft =2          # from enum EPcbBoardAttachPoint
	epcbBoardAttachPointOrigin    =0          # from enum EPcbBoardAttachPoint
	epcbBoardContentAll           =-1         # from enum EPcbBoardContent
	epcbBoardContentBoardOutline  =1          # from enum EPcbBoardContent
	epcbBoardContentComponentOutline=2          # from enum EPcbBoardContent
	epcbBoardContentLoadFullDesignData=3          # from enum EPcbBoardContent
	epcbCanDelete                 =2          # from enum EPcbCanDeleteLayer
	epcbCanDeleteIfDeleteObjects  =1          # from enum EPcbCanDeleteLayer
	epcbCannotDelete              =0          # from enum EPcbCanDeleteLayer
	epcbCellDBChangeDelete        =1          # from enum EPcbCellDBChange
	epcbCellDBChangeOther         =10         # from enum EPcbCellDBChange
	epcbCellDBChangeRename        =0          # from enum EPcbCellDBChange
	epcbCellModifyConfirmationAnswer_Cancel=4          # from enum EPcbCellModifyConfirmationAnswer
	epcbCellModifyConfirmationAnswer_No=3          # from enum EPcbCellModifyConfirmationAnswer
	epcbCellModifyConfirmationAnswer_Ok=2          # from enum EPcbCellModifyConfirmationAnswer
	epcbCellModifyConfirmationAnswer_Yes=1          # from enum EPcbCellModifyConfirmationAnswer
	epcbCellModifyConfirmationQuery_CannotRetrievePins_YesNo=4          # from enum EPcbCellModifyConfirmationQuery
	epcbCellModifyConfirmationQuery_ExtraDuplicatePinNumbers_OkCancel=5          # from enum EPcbCellModifyConfirmationQuery
	epcbCellModifyConfirmationQuery_ExtraOrMissingPinNumbers_OkCancel=1          # from enum EPcbCellModifyConfirmationQuery
	epcbCellModifyConfirmationQuery_NewPinCount_YesNoCancel=2          # from enum EPcbCellModifyConfirmationQuery
	epcbCellModifyConfirmationQuery_NoPinsPlaced_OkCancel=3          # from enum EPcbCellModifyConfirmationQuery
	epcbCelltypeAll               =-1         # from enum EPcbCelltype
	epcbCelltypeDrawing           =1          # from enum EPcbCelltype
	epcbCelltypeDrillTable        =128        # from enum EPcbCelltype
	epcbCelltypeMechanical        =2          # from enum EPcbCelltype
	epcbCelltypePackage           =4          # from enum EPcbCelltype
	epcbCelltypePanel             =8          # from enum EPcbCelltype
	epcbCenterlineCloseFigure     =2          # from enum EPcbCenterlinePointTypes
	epcbCenterlineLineTo          =1          # from enum EPcbCenterlinePointTypes
	epcbCenterlineMoveTo          =0          # from enum EPcbCenterlinePointTypes
	epcbCheckpointAfter           =3          # from enum EPcbCheckpointLocation
	epcbCheckpointAt              =2          # from enum EPcbCheckpointLocation
	epcbCheckpointBefore          =1          # from enum EPcbCheckpointLocation
	epcbCheckpointNotOnBranch     =4          # from enum EPcbCheckpointLocation
	epcbClearTypeAlignmentEndToEnd=1          # from enum EPcbClearTypeAlignment
	epcbClearTypeAlignmentEndToSide=3          # from enum EPcbClearTypeAlignment
	epcbClearTypeAlignmentSideToEnd=4          # from enum EPcbClearTypeAlignment
	epcbClearTypeAlignmentSideToSide=2          # from enum EPcbClearTypeAlignment
	epcbClearancePad              =2          # from enum EPcbClearanceObject
	epcbClearancePlane            =4          # from enum EPcbClearanceObject
	epcbClearanceSMDPad           =5          # from enum EPcbClearanceObject
	epcbClearanceTrace            =1          # from enum EPcbClearanceObject
	epcbClearanceVia              =3          # from enum EPcbClearanceObject
	epcbCompPlaceMethodArrange    =2          # from enum EPcbCompPlaceMethod
	epcbCompPlaceMethodOneAtATime =0          # from enum EPcbCompPlaceMethod
	epcbCompPlaceMethodUnplaceAll =1          # from enum EPcbCompPlaceMethod
	epcbCompensationCenter        =0          # from enum EPcbCompensationType
	epcbCompensationLeft          =-1         # from enum EPcbCompensationType
	epcbCompensationRight         =1          # from enum EPcbCompensationType
	epcbCompAll                   =-1         # from enum EPcbComponentType
	epcbCompGeneral               =4          # from enum EPcbComponentType
	epcbCompJumper                =1          # from enum EPcbComponentType
	epcbCompTestPoint             =2          # from enum EPcbComponentType
	epcbCondGfxActualPlaneShape   =536870912  # from enum EPcbConductorGfxType
	epcbCondGfxAll                =-1         # from enum EPcbConductorGfxType
	epcbCondGfxBoardOutline       =4          # from enum EPcbConductorGfxType
	epcbCondGfxBreakoutTrace      =1048576    # from enum EPcbConductorGfxType
	epcbCondGfxConductiveShape    =65536      # from enum EPcbConductorGfxType
	epcbCondGfxContour            =64         # from enum EPcbConductorGfxType
	epcbCondGfxCopperBalancingData=134217728  # from enum EPcbConductorGfxType
	epcbCondGfxCopperBalancingShape=67108864   # from enum EPcbConductorGfxType
	epcbCondGfxDRCWindow          =262144     # from enum EPcbConductorGfxType
	epcbCondGfxGeneratedPlane     =1024       # from enum EPcbConductorGfxType
	epcbCondGfxInsertionOutline   =128        # from enum EPcbConductorGfxType
	epcbCondGfxManufacturingOutline=268435456  # from enum EPcbConductorGfxType
	epcbCondGfxPanelBorder        =16777216   # from enum EPcbConductorGfxType
	epcbCondGfxPanelObstruct      =33554432   # from enum EPcbConductorGfxType
	epcbCondGfxPanelOutline       =8388608    # from enum EPcbConductorGfxType
	epcbCondGfxPlacementObstruct  =2048       # from enum EPcbConductorGfxType
	epcbCondGfxPlacementOutline   =256        # from enum EPcbConductorGfxType
	epcbCondGfxPlacementRoom      =8192       # from enum EPcbConductorGfxType
	epcbCondGfxPlaneNoConnect     =16384      # from enum EPcbConductorGfxType
	epcbCondGfxPlaneObstruct      =1          # from enum EPcbConductorGfxType
	epcbCondGfxPlaneShape         =131072     # from enum EPcbConductorGfxType
	epcbCondGfxReservedArea       =4194304    # from enum EPcbConductorGfxType
	epcbCondGfxResistorShape      =512        # from enum EPcbConductorGfxType
	epcbCondGfxRouteBorder        =2          # from enum EPcbConductorGfxType
	epcbCondGfxRuleArea           =32768      # from enum EPcbConductorGfxType
	epcbCondGfxTeardrop           =2097152    # from enum EPcbConductorGfxType
	epcbCondGfxTestPointObstruct  =4096       # from enum EPcbConductorGfxType
	epcbCondGfxTieLeg             =1073741824 # from enum EPcbConductorGfxType
	epcbCondGfxTrace              =524288     # from enum EPcbConductorGfxType
	epcbCondGfxTraceKeepOut       =16         # from enum EPcbConductorGfxType
	epcbCondGfxTraceViaKeepOut    =32         # from enum EPcbConductorGfxType
	epcbCondGfxViaKeepOut         =8          # from enum EPcbConductorGfxType
	epcbConductorGfxAll           =0          # from enum EPcbConductorLayerGfxType
	epcbGfxActualPlaneShape       =30         # from enum EPcbConductorLayerGfxType
	epcbGfxBendArea               =45         # from enum EPcbConductorLayerGfxType
	epcbGfxBoardOutline           =3          # from enum EPcbConductorLayerGfxType
	epcbGfxBondWire               =39         # from enum EPcbConductorLayerGfxType
	epcbGfxBreakoutTrace          =21         # from enum EPcbConductorLayerGfxType
	epcbGfxBusPath                =34         # from enum EPcbConductorLayerGfxType
	epcbGfxCavity                 =40         # from enum EPcbConductorLayerGfxType
	epcbGfxConductiveShape        =17         # from enum EPcbConductorLayerGfxType
	epcbGfxContour                =7          # from enum EPcbConductorLayerGfxType
	epcbGfxCopperBalancingData    =28         # from enum EPcbConductorLayerGfxType
	epcbGfxCopperBalancingShape   =27         # from enum EPcbConductorLayerGfxType
	epcbGfxDRCWindow              =19         # from enum EPcbConductorLayerGfxType
	epcbGfxEmbeddedPassiveShape   =32         # from enum EPcbConductorLayerGfxType
	epcbGfxGeneratedPlane         =11         # from enum EPcbConductorLayerGfxType
	epcbGfxGroupOutline           =44         # from enum EPcbConductorLayerGfxType
	epcbGfxInsertionOutline       =8          # from enum EPcbConductorLayerGfxType
	epcbGfxManufacturingOutline   =29         # from enum EPcbConductorLayerGfxType
	epcbGfxMetalizationArea       =37         # from enum EPcbConductorLayerGfxType
	epcbGfxMultiBoardOutline      =46         # from enum EPcbConductorLayerGfxType
	epcbGfxPanelBorder            =25         # from enum EPcbConductorLayerGfxType
	epcbGfxPanelObstruct          =26         # from enum EPcbConductorLayerGfxType
	epcbGfxPanelOutline           =24         # from enum EPcbConductorLayerGfxType
	epcbGfxPlacementObstruct      =12         # from enum EPcbConductorLayerGfxType
	epcbGfxPlacementOutline       =9          # from enum EPcbConductorLayerGfxType
	epcbGfxPlacementRoom          =14         # from enum EPcbConductorLayerGfxType
	epcbGfxPlaneEditingSketch     =35         # from enum EPcbConductorLayerGfxType
	epcbGfxPlaneNoConnect         =15         # from enum EPcbConductorLayerGfxType
	epcbGfxPlaneObstruct          =1          # from enum EPcbConductorLayerGfxType
	epcbGfxPlaneShape             =18         # from enum EPcbConductorLayerGfxType
	epcbGfxReservedArea           =23         # from enum EPcbConductorLayerGfxType
	epcbGfxResistorShape          =10         # from enum EPcbConductorLayerGfxType
	epcbGfxReuseArea              =43         # from enum EPcbConductorLayerGfxType
	epcbGfxRouteBorder            =2          # from enum EPcbConductorLayerGfxType
	epcbGfxRouteFence             =33         # from enum EPcbConductorLayerGfxType
	epcbGfxRuleArea               =16         # from enum EPcbConductorLayerGfxType
	epcbGfxSandbox                =38         # from enum EPcbConductorLayerGfxType
	epcbGfxSheetOutline           =36         # from enum EPcbConductorLayerGfxType
	epcbGfxSketchPlan             =47         # from enum EPcbConductorLayerGfxType
	epcbGfxTeardrop               =22         # from enum EPcbConductorLayerGfxType
	epcbGfxTestFixtureOutline     =41         # from enum EPcbConductorLayerGfxType
	epcbGfxTestPointObstruct      =13         # from enum EPcbConductorLayerGfxType
	epcbGfxTieLeg                 =31         # from enum EPcbConductorLayerGfxType
	epcbGfxTrace                  =20         # from enum EPcbConductorLayerGfxType
	epcbGfxTraceKeepOut           =5          # from enum EPcbConductorLayerGfxType
	epcbGfxTraceViaKeepOut        =6          # from enum EPcbConductorLayerGfxType
	epcbGfxTracedrop              =21         # from enum EPcbConductorLayerGfxType
	epcbGfxTuningPatternKeepout   =42         # from enum EPcbConductorLayerGfxType
	epcbGfxViaKeepOut             =4          # from enum EPcbConductorLayerGfxType
	epcbConductorTypePlane        =1          # from enum EPcbConductorType
	epcbConductorTypeSignal       =0          # from enum EPcbConductorType
	epcbCountConnectionsByMarked  =2          # from enum EPcbConnectionsCountOption
	epcbCountConnectionsByNetFilter=3          # from enum EPcbConnectionsCountOption
	epcbCountConnectionsByPlaced  =0          # from enum EPcbConnectionsCountOption
	epcbCountConnectionsBySelected=1          # from enum EPcbConnectionsCountOption
	epcbContourBoard              =0          # from enum EPcbContourType
	epcbContourInternal           =1          # from enum EPcbContourType
	epcbCuBalPatternCircle        =8          # from enum EPcbCuBalPatternType
	epcbCuBalPatternCrosshatch    =5          # from enum EPcbCuBalPatternType
	epcbCuBalPatternDiagBackSlash =4          # from enum EPcbCuBalPatternType
	epcbCuBalPatternDiagCrossHatch=6          # from enum EPcbCuBalPatternType
	epcbCuBalPatternDiagSlash     =3          # from enum EPcbCuBalPatternType
	epcbCuBalPatternDiamond       =9          # from enum EPcbCuBalPatternType
	epcbCuBalPatternHorizontal    =2          # from enum EPcbCuBalPatternType
	epcbCuBalPatternSolid         =10         # from enum EPcbCuBalPatternType
	epcbCuBalPatternSquare        =7          # from enum EPcbCuBalPatternType
	epcbCuBalPatternVertical      =1          # from enum EPcbCuBalPatternType
	epcbCursorBullseye            =41         # from enum EPcbCursorType
	epcbCursorBullseye2           =42         # from enum EPcbCursorType
	epcbCursorCrossWithFixed      =39         # from enum EPcbCursorType
	epcbCursorCrossWithLocked     =40         # from enum EPcbCursorType
	epcbCursorDefault             =0          # from enum EPcbCursorType
	epcbCursorDrawCursorArcArrow  =22         # from enum EPcbCursorType
	epcbCursorDrawCursorCopy      =15         # from enum EPcbCursorType
	epcbCursorDrawCursorDeleteVert=21         # from enum EPcbCursorType
	epcbCursorDrawCursorInsertVert=20         # from enum EPcbCursorType
	epcbCursorDrawCursorMove      =14         # from enum EPcbCursorType
	epcbCursorDrawCursorMoveHandle=23         # from enum EPcbCursorType
	epcbCursorDrawCursorNESW      =18         # from enum EPcbCursorType
	epcbCursorDrawCursorNS        =16         # from enum EPcbCursorType
	epcbCursorDrawCursorNWSE      =19         # from enum EPcbCursorType
	epcbCursorDrawCursorSelect    =13         # from enum EPcbCursorType
	epcbCursorDrawCursorWE        =17         # from enum EPcbCursorType
	epcbCursorGrpSelectorAdd      =36         # from enum EPcbCursorType
	epcbCursorGrpSelectorDefault  =35         # from enum EPcbCursorType
	epcbCursorGrpSelectorInvert   =38         # from enum EPcbCursorType
	epcbCursorGrpSelectorRemove   =37         # from enum EPcbCursorType
	epcbCursorMeasureCommand      =9          # from enum EPcbCursorType
	epcbCursorMeasureHighlight    =8          # from enum EPcbCursorType
	epcbCursorMove                =11         # from enum EPcbCursorType
	epcbCursorMoveCommand         =7          # from enum EPcbCursorType
	epcbCursorPanCursorEast       =27         # from enum EPcbCursorType
	epcbCursorPanCursorNE         =29         # from enum EPcbCursorType
	epcbCursorPanCursorNW         =31         # from enum EPcbCursorType
	epcbCursorPanCursorNorth      =25         # from enum EPcbCursorType
	epcbCursorPanCursorOrigin     =24         # from enum EPcbCursorType
	epcbCursorPanCursorSE         =30         # from enum EPcbCursorType
	epcbCursorPanCursorSW         =32         # from enum EPcbCursorType
	epcbCursorPanCursorSouth      =26         # from enum EPcbCursorType
	epcbCursorPanCursorWest       =28         # from enum EPcbCursorType
	epcbCursorPlowCommand         =6          # from enum EPcbCursorType
	epcbCursorPlowDrcOff          =5          # from enum EPcbCursorType
	epcbCursorPlowDyna            =1          # from enum EPcbCursorType
	epcbCursorPlowForced          =2          # from enum EPcbCursorType
	epcbCursorPlowRoute           =3          # from enum EPcbCursorType
	epcbCursorPlowTuning          =4          # from enum EPcbCursorType
	epcbCursorRadius              =12         # from enum EPcbCursorType
	epcbCursorSnowflake           =43         # from enum EPcbCursorType
	epcbCursorWorkInProgress      =10         # from enum EPcbCursorType
	epcbCursorXtremePCB           =33         # from enum EPcbCursorType
	epcbCursorXtremePCBWait       =34         # from enum EPcbCursorType
	epcbDBChangeReasonLocked      =2          # from enum EPcbDBChangeReason
	epcbDBChangeReasonReloaded    =1          # from enum EPcbDBChangeReason
	epcbDBChangeReasonUnlocked    =3          # from enum EPcbDBChangeReason
	epcbDBChangeReasonUpdated     =4          # from enum EPcbDBChangeReason
	epcbDBAll                     =-1         # from enum EPcbDBType
	epcbDBCells                   =2          # from enum EPcbDBType
	epcbDBCompType                =256        # from enum EPcbDBType
	epcbDBJobPrefs                =8          # from enum EPcbDBType
	epcbDBLayout                  =64         # from enum EPcbDBType
	epcbDBNetClass                =16         # from enum EPcbDBType
	epcbDBNetProps                =32         # from enum EPcbDBType
	epcbDBPadstacks               =1          # from enum EPcbDBType
	epcbDBParts                   =4          # from enum EPcbDBType
	epcbDBPinPkgLen               =128        # from enum EPcbDBType
	epcbDCPads                    =0          # from enum EPcbDCConductorType
	epcbDCTrace                   =1          # from enum EPcbDCConductorType
	epcbDCAllDetailedViews        =29         # from enum EPcbDCGeneralItemsType
	epcbDCBoardOrigin             =0          # from enum EPcbDCGeneralItemsType
	epcbDCBoardOutline            =1          # from enum EPcbDCGeneralItemsType
	epcbDCCavity                  =37         # from enum EPcbDCGeneralItemsType
	epcbDCContours                =2          # from enum EPcbDCGeneralItemsType
	epcbDCDRCWindow               =3          # from enum EPcbDCGeneralItemsType
	epcbDCDrillDrawingThru        =4          # from enum EPcbDCGeneralItemsType
	epcbDCFiducialsBottom         =5          # from enum EPcbDCGeneralItemsType
	epcbDCFiducialsTop            =6          # from enum EPcbDCGeneralItemsType
	epcbDCManufacturingOutline    =25         # from enum EPcbDCGeneralItemsType
	epcbDCMaterialMask            =31         # from enum EPcbDCGeneralItemsType
	epcbDCMaterialOverglaze       =30         # from enum EPcbDCGeneralItemsType
	epcbDCMilling                 =38         # from enum EPcbDCGeneralItemsType
	epcbDCMountingHoles           =7          # from enum EPcbDCGeneralItemsType
	epcbDCNCDrillOrigin           =8          # from enum EPcbDCGeneralItemsType
	epcbDCOtherHoles              =9          # from enum EPcbDCGeneralItemsType
	epcbDCPadObstruct             =33         # from enum EPcbDCGeneralItemsType
	epcbDCPanelBorder             =21         # from enum EPcbDCGeneralItemsType
	epcbDCPanelBrdContents        =24         # from enum EPcbDCGeneralItemsType
	epcbDCPanelHoles              =23         # from enum EPcbDCGeneralItemsType
	epcbDCPanelObstruct           =19         # from enum EPcbDCGeneralItemsType
	epcbDCPanelOrigin             =20         # from enum EPcbDCGeneralItemsType
	epcbDCPanelOutline            =22         # from enum EPcbDCGeneralItemsType
	epcbDCRedLineLayer            =10         # from enum EPcbDCGeneralItemsType
	epcbDCReservedAreas           =27         # from enum EPcbDCGeneralItemsType
	epcbDCReuseArea               =39         # from enum EPcbDCGeneralItemsType
	epcbDCRouteBorder             =11         # from enum EPcbDCGeneralItemsType
	epcbDCRouteFenceHard          =32         # from enum EPcbDCGeneralItemsType
	epcbDCRouteFenceSoft          =26         # from enum EPcbDCGeneralItemsType
	epcbDCRouteObstructs          =12         # from enum EPcbDCGeneralItemsType
	epcbDCRuleAreas               =13         # from enum EPcbDCGeneralItemsType
	epcbDCSandboxes               =36         # from enum EPcbDCGeneralItemsType
	epcbDCSheetOrigin             =34         # from enum EPcbDCGeneralItemsType
	epcbDCSheetOutline            =35         # from enum EPcbDCGeneralItemsType
	epcbDCSoldermaskBottom        =14         # from enum EPcbDCGeneralItemsType
	epcbDCSoldermaskTop           =15         # from enum EPcbDCGeneralItemsType
	epcbDCSolderpasteBottom       =16         # from enum EPcbDCGeneralItemsType
	epcbDCSolderpasteTop          =17         # from enum EPcbDCGeneralItemsType
	epcbDCViaSpanText             =18         # from enum EPcbDCGeneralItemsType
	epcbDCXtremeProtectedAreas    =28         # from enum EPcbDCGeneralItemsType
	epcbDCActualPlaneShapes       =38         # from enum EPcbDCGlobalMiscItemsType
	epcbDCAutoPan                 =0          # from enum EPcbDCGlobalMiscItemsType
	epcbDCBackgroundColor         =1          # from enum EPcbDCGlobalMiscItemsType
	epcbDCColorByClass            =4          # from enum EPcbDCGlobalMiscItemsType
	epcbDCColorByHazards          =2          # from enum EPcbDCGlobalMiscItemsType
	epcbDCColorByHzdShadowMode    =3          # from enum EPcbDCGlobalMiscItemsType
	epcbDCColorByNet              =5          # from enum EPcbDCGlobalMiscItemsType
	epcbDCCopperBalancingData     =35         # from enum EPcbDCGlobalMiscItemsType
	epcbDCCopperBalancingShapes   =36         # from enum EPcbDCGlobalMiscItemsType
	epcbDCDelayGraphicUpdate      =6          # from enum EPcbDCGlobalMiscItemsType
	epcbDCDisplayHazardSymbols    =7          # from enum EPcbDCGlobalMiscItemsType
	epcbDCDynamicAreaFills        =8          # from enum EPcbDCGlobalMiscItemsType
	epcbDCFillActualPlaneShapes   =37         # from enum EPcbDCGlobalMiscItemsType
	epcbDCFillPlaneShapes         =9          # from enum EPcbDCGlobalMiscItemsType
	epcbDCFullCursorForMovePart   =10         # from enum EPcbDCGlobalMiscItemsType
	epcbDCHighlightDiffPairPins   =13         # from enum EPcbDCGlobalMiscItemsType
	epcbDCHighlightEntireNet      =12         # from enum EPcbDCGlobalMiscItemsType
	epcbDCHighlighted             =11         # from enum EPcbDCGlobalMiscItemsType
	epcbDCHiliteEditViolations    =14         # from enum EPcbDCGlobalMiscItemsType
	epcbDCInactiveBBVia           =15         # from enum EPcbDCGlobalMiscItemsType
	epcbDCInactiveBBViaDrawn      =16         # from enum EPcbDCGlobalMiscItemsType
	epcbDCInternalSkipViaPads     =42         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetColorToNetlines      =17         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetColorToPads          =18         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetColorToPlanes        =19         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetColorToTraces        =20         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetColorToVias          =21         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetlineOpenMSTColor     =22         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetlineOrderedOpenColor =23         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetlineOrderedRoutedColor=24         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetlinesFromBuses       =40         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetlinesFromRouteTargets=41         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetlinesFromTraceEnds   =25         # from enum EPcbDCGlobalMiscItemsType
	epcbDCNetlinesOfClasslines    =26         # from enum EPcbDCGlobalMiscItemsType
	epcbDCPlaneData               =27         # from enum EPcbDCGlobalMiscItemsType
	epcbDCPlaneDataBehindTraces   =28         # from enum EPcbDCGlobalMiscItemsType
	epcbDCPlaneEditingSketches    =47         # from enum EPcbDCGlobalMiscItemsType
	epcbDCPlaneFillHatch          =46         # from enum EPcbDCGlobalMiscItemsType
	epcbDCPlaneShapesAndObstructs =29         # from enum EPcbDCGlobalMiscItemsType
	epcbDCSelHilDisplaySolidColor =48         # from enum EPcbDCGlobalMiscItemsType
	epcbDCSelHilShadowMode        =31         # from enum EPcbDCGlobalMiscItemsType
	epcbDCSelected                =30         # from enum EPcbDCGlobalMiscItemsType
	epcbDCSpacersShadowMode       =32         # from enum EPcbDCGlobalMiscItemsType
	epcbDCTestPointsBottomColor   =44         # from enum EPcbDCGlobalMiscItemsType
	epcbDCTestPointsTopColor      =43         # from enum EPcbDCGlobalMiscItemsType
	epcbDCThroughPadsSameColor    =33         # from enum EPcbDCGlobalMiscItemsType
	epcbDCTuningMeter             =39         # from enum EPcbDCGlobalMiscItemsType
	epcbDCViaPadsSameColor        =34         # from enum EPcbDCGlobalMiscItemsType
	epcbDCViaSpanNumbersColor     =45         # from enum EPcbDCGlobalMiscItemsType
	epcbDCADRCharacteristicImpedanceHazard=0          # from enum EPcbDCHazardType
	epcbDCADRCrossTalkHazard      =1          # from enum EPcbDCHazardType
	epcbDCADRCrosstalkSummaryHazard=2          # from enum EPcbDCHazardType
	epcbDCADRDelayFormulasHazard  =4          # from enum EPcbDCHazardType
	epcbDCADRDelayHazard          =3          # from enum EPcbDCHazardType
	epcbDCADRDelaySummaryHazard   =5          # from enum EPcbDCHazardType
	epcbDCADRHighRingbackHazard   =6          # from enum EPcbDCHazardType
	epcbDCADRLowRingbackHazard    =7          # from enum EPcbDCHazardType
	epcbDCADRNetsUnableSimulateHazard=8          # from enum EPcbDCHazardType
	epcbDCADRNonmonotonicHazard   =9          # from enum EPcbDCHazardType
	epcbDCADROvershootHazard      =10         # from enum EPcbDCHazardType
	epcbDCADRUndershootHazard     =11         # from enum EPcbDCHazardType
	epcbDCBendAreaBendViosHazard  =221        # from enum EPcbDCHazardType
	epcbDCBendAreaHazard          =217        # from enum EPcbDCHazardType
	epcbDCBendAreaPartsHolesHazard=219        # from enum EPcbDCHazardType
	epcbDCBendAreaPlaneViosHazard =222        # from enum EPcbDCHazardType
	epcbDCBendAreaTracesHazard    =220        # from enum EPcbDCHazardType
	epcbDCBoardOutlineIsolatedHazard=224        # from enum EPcbDCHazardType
	epcbDCBoardOutlineOverlappingHazard=223        # from enum EPcbDCHazardType
	epcbDCBusBitWidth             =94         # from enum EPcbDCHazardType
	epcbDCBusMinLengthHazard      =92         # from enum EPcbDCHazardType
	epcbDCBusPinDistanceHazard    =91         # from enum EPcbDCHazardType
	epcbDCBusShieldingHazard      =93         # from enum EPcbDCHazardType
	epcbDCBusSpacingHazard        =80         # from enum EPcbDCHazardType
	epcbDCBusUnpackedAreasHazard  =90         # from enum EPcbDCHazardType
	epcbDCCamAcutAnglsHazard      =12         # from enum EPcbDCHazardType
	epcbDCCamFirstCornsHazard     =13         # from enum EPcbDCHazardType
	epcbDCCamSliversHazard        =14         # from enum EPcbDCHazardType
	epcbDCCamToe2ToesHazard       =15         # from enum EPcbDCHazardType
	epcbDCClearanceHazard         =16         # from enum EPcbDCHazardType
	epcbDCComponentsHazard        =17         # from enum EPcbDCHazardType
	epcbDCDanglingViasJumpersHazard=18         # from enum EPcbDCHazardType
	epcbDCDelayFormulasHazard     =19         # from enum EPcbDCHazardType
	epcbDCDelaySummary            =20         # from enum EPcbDCHazardType
	epcbDCDffDrillAnnularRingHazard=183        # from enum EPcbDCHazardType
	epcbDCDffDrillHoleMissingHazard=186        # from enum EPcbDCHazardType
	epcbDCDffDrillHoleRegistrationHazard=185        # from enum EPcbDCHazardType
	epcbDCDffDrillMinimumHoleSizeHazard=184        # from enum EPcbDCHazardType
	epcbDCDffDrillProximityHazard =182        # from enum EPcbDCHazardType
	epcbDCDffModerateHazard       =165        # from enum EPcbDCHazardType
	epcbDCDffPlaneAcuteAngleSliverHazard=179        # from enum EPcbDCHazardType
	epcbDCDffPlanePadEntrySliverHazard=180        # from enum EPcbDCHazardType
	epcbDCDffPlanePadToPadSliverHazard=181        # from enum EPcbDCHazardType
	epcbDCDffPlaneProximityHazard =176        # from enum EPcbDCHazardType
	epcbDCDffPlaneRatioBasedSliverHazard=178        # from enum EPcbDCHazardType
	epcbDCDffPlaneThermalsHazard  =177        # from enum EPcbDCHazardType
	epcbDCDffSevereHazard         =164        # from enum EPcbDCHazardType
	epcbDCDffSignalAcuteAngleSliverHazard=173        # from enum EPcbDCHazardType
	epcbDCDffSignalPadEntrySliverHazard=174        # from enum EPcbDCHazardType
	epcbDCDffSignalPadToPadSliverHazard=175        # from enum EPcbDCHazardType
	epcbDCDffSignalProximityHazard=167        # from enum EPcbDCHazardType
	epcbDCDffSignalRatioBasedSliverHazard=172        # from enum EPcbDCHazardType
	epcbDCDffSignalTextStrokeWidthHazard=171        # from enum EPcbDCHazardType
	epcbDCDffSignalTraceLengthToWidthHazard=170        # from enum EPcbDCHazardType
	epcbDCDffSignalTraceLengthsHazard=169        # from enum EPcbDCHazardType
	epcbDCDffSignalTraceWidthsHazard=168        # from enum EPcbDCHazardType
	epcbDCDffSilkscreenProximityHazard=194        # from enum EPcbDCHazardType
	epcbDCDffSilkscreenSizesHazard=195        # from enum EPcbDCHazardType
	epcbDCDffSoldermaskClearanceHazard=188        # from enum EPcbDCHazardType
	epcbDCDffSoldermaskEquivalentHazard=189        # from enum EPcbDCHazardType
	epcbDCDffSoldermaskExposureHazard=190        # from enum EPcbDCHazardType
	epcbDCDffSoldermaskMissingHazard=191        # from enum EPcbDCHazardType
	epcbDCDffSoldermaskPartialHazard=192        # from enum EPcbDCHazardType
	epcbDCDffSoldermaskProximityHazard=187        # from enum EPcbDCHazardType
	epcbDCDffSoldermaskRatioBasedSliverHazard=193        # from enum EPcbDCHazardType
	epcbDCDffSolderpasteEquivalentHazard=198        # from enum EPcbDCHazardType
	epcbDCDffSolderpasteExtendedHazard=197        # from enum EPcbDCHazardType
	epcbDCDffSolderpasteInclusionHazard=199        # from enum EPcbDCHazardType
	epcbDCDffSolderpasteMissingHazard=200        # from enum EPcbDCHazardType
	epcbDCDffSolderpastePartialHazard=201        # from enum EPcbDCHazardType
	epcbDCDffSolderpasteProximityHazard=196        # from enum EPcbDCHazardType
	epcbDCDffWarningHazard        =166        # from enum EPcbDCHazardType
	epcbDCDiffPairClearance       =22         # from enum EPcbDCHazardType
	epcbDCDiffPairConvergenceHazard=21         # from enum EPcbDCHazardType
	epcbDCDiffPairConvergenceToleranceHazard=79         # from enum EPcbDCHazardType
	epcbDCDiffPairDelayToleranceHazard=23         # from enum EPcbDCHazardType
	epcbDCDiffPairLengthToleranceHazard=24         # from enum EPcbDCHazardType
	epcbDCDiffPairSeperationHazard=22         # from enum EPcbDCHazardType
	epcbDCEPViolationsHazard      =88         # from enum EPcbDCHazardType
	epcbDCEstimatedCrosstalkHazard=25         # from enum EPcbDCHazardType
	epcbDCHangersHazard           =26         # from enum EPcbDCHazardType
	epcbDCInvalidBendAreaHazard   =218        # from enum EPcbDCHazardType
	epcbDCInvalidFlexObjectsHazard=225        # from enum EPcbDCHazardType
	epcbDCInvalidStackupHazard    =226        # from enum EPcbDCHazardType
	epcbDCJumperGridHazard        =27         # from enum EPcbDCHazardType
	epcbDCLayerRestrictionsHazard =28         # from enum EPcbDCHazardType
	epcbDCLengthSummaryHazard     =29         # from enum EPcbDCHazardType
	epcbDCMatchedDelayHazard      =30         # from enum EPcbDCHazardType
	epcbDCMatchedLengthHazard     =31         # from enum EPcbDCHazardType
	epcbDCMaximumDelayHazard      =32         # from enum EPcbDCHazardType
	epcbDCMaximumLenghtHazard     =33         # from enum EPcbDCHazardType
	epcbDCMinMaxDelayHazard       =32         # from enum EPcbDCHazardType
	epcbDCMinMaxLengthHazard      =33         # from enum EPcbDCHazardType
	epcbDCMinimumAnnularRingHazard=34         # from enum EPcbDCHazardType
	epcbDCMissingArcsHazard       =87         # from enum EPcbDCHazardType
	epcbDCMissingConductivePadsHazard=35         # from enum EPcbDCHazardType
	epcbDCMissingPastePadsHazard  =36         # from enum EPcbDCHazardType
	epcbDCMissingSoldermaskPadsHazard=37         # from enum EPcbDCHazardType
	epcbDCMultipleViaPadEntryHazard=86         # from enum EPcbDCHazardType
	epcbDCNetOpenCountsHazard     =38         # from enum EPcbDCHazardType
	epcbDCNetsNeedSimulationHazard=39         # from enum EPcbDCHazardType
	epcbDCNetsUnableSimulateHazard=40         # from enum EPcbDCHazardType
	epcbDCNodeEntryHazard         =85         # from enum EPcbDCHazardType
	epcbDCOpenFanoutsHazard       =41         # from enum EPcbDCHazardType
	epcbDCPadEntryHazard          =42         # from enum EPcbDCHazardType
	epcbDCParallelismHazard       =43         # from enum EPcbDCHazardType
	epcbDCPlacementGridHazard     =44         # from enum EPcbDCHazardType
	epcbDCPlacementRotationHazard =45         # from enum EPcbDCHazardType
	epcbDCPlaneViolationsHazard   =46         # from enum EPcbDCHazardType
	epcbDCProximityHazard         =47         # from enum EPcbDCHazardType
	epcbDCRouteGridHazard         =48         # from enum EPcbDCHazardType
	epcbDCRouteSLISummaryHazard   =84         # from enum EPcbDCHazardType
	epcbDCRouteSLIsHazard         =83         # from enum EPcbDCHazardType
	epcbDCRouteTargetsHazard      =82         # from enum EPcbDCHazardType
	epcbDCSinglePointNetsHazard   =49         # from enum EPcbDCHazardType
	epcbDCStubLengthHazard        =50         # from enum EPcbDCHazardType
	epcbDCTargetAreasHazard       =81         # from enum EPcbDCHazardType
	epcbDCTeardropsBreakoutsHazard=51         # from enum EPcbDCHazardType
	epcbDCTestPointCentersHazard  =52         # from enum EPcbDCHazardType
	epcbDCTestPointGridHazard     =53         # from enum EPcbDCHazardType
	epcbDCTraceLoopsHazard        =54         # from enum EPcbDCHazardType
	epcbDCTraceTJunctionsHazard   =89         # from enum EPcbDCHazardType
	epcbDCTraceWidthHazard        =55         # from enum EPcbDCHazardType
	epcbDCTraceWidthsHazard       =56         # from enum EPcbDCHazardType
	epcbDCUnplatedConnectedPinsHazard=57         # from enum EPcbDCHazardType
	epcbDCUnroutedPartialNetsHazard=58         # from enum EPcbDCHazardType
	epcbDCValorHazardSeverity0Hazard=59         # from enum EPcbDCHazardType
	epcbDCValorHazardSeverity1Hazard=60         # from enum EPcbDCHazardType
	epcbDCValorHazardSeverity2Hazard=61         # from enum EPcbDCHazardType
	epcbDCValorHazardSeverity3Hazard=62         # from enum EPcbDCHazardType
	epcbDCValorHazardSeverity4Hazard=63         # from enum EPcbDCHazardType
	epcbDCValorHazardSeverity5Hazard=64         # from enum EPcbDCHazardType
	epcbDCValorHazardSeverityAllHazard=65         # from enum EPcbDCHazardType
	epcbDCViaGridHazard           =66         # from enum EPcbDCHazardType
	epcbDCViasPerNetHazard        =67         # from enum EPcbDCHazardType
	epcbDCViasUnderPartsHazard    =68         # from enum EPcbDCHazardType
	epcbDCViasUnderSMDPadsHazard  =69         # from enum EPcbDCHazardType
	epcbDCViasUsageHazard         =70         # from enum EPcbDCHazardType
	epcbDCWRCCrossTalkHazard      =71         # from enum EPcbDCHazardType
	epcbDCWRCDelaySummaryHazard   =72         # from enum EPcbDCHazardType
	epcbDCWRCIncompleteHazard     =74         # from enum EPcbDCHazardType
	epcbDCWRCInvalidStateHazard   =73         # from enum EPcbDCHazardType
	epcbDCWRCNonmonotonicHazard   =75         # from enum EPcbDCHazardType
	epcbDCWRCOvershootHazard      =76         # from enum EPcbDCHazardType
	epcbDCWRCTOFDelayHazard       =77         # from enum EPcbDCHazardType
	epcbDCWRCUndershootHazard     =78         # from enum EPcbDCHazardType
	epcbDCWirebondAlign           =213        # from enum EPcbDCHazardType
	epcbDCWirebondAngle           =202        # from enum EPcbDCHazardType
	epcbDCWirebondBondPadstack    =214        # from enum EPcbDCHazardType
	epcbDCWirebondIncorrectlySynthesized=207        # from enum EPcbDCHazardType
	epcbDCWirebondMaxLength       =204        # from enum EPcbDCHazardType
	epcbDCWirebondMinLength       =203        # from enum EPcbDCHazardType
	epcbDCWirebondNotConnected    =208        # from enum EPcbDCHazardType
	epcbDCWirebondOffsetXEnd      =211        # from enum EPcbDCHazardType
	epcbDCWirebondOffsetXStart    =209        # from enum EPcbDCHazardType
	epcbDCWirebondOffsetYEnd      =212        # from enum EPcbDCHazardType
	epcbDCWirebondOffsetYStart    =210        # from enum EPcbDCHazardType
	epcbDCWirebondPadsCount       =215        # from enum EPcbDCHazardType
	epcbDCWirebondSiteMargin      =205        # from enum EPcbDCHazardType
	epcbDCWirebondWireModel       =206        # from enum EPcbDCHazardType
	epcbDCWirebondWiresCount      =216        # from enum EPcbDCHazardType
	epcbDCActiveLayerOnly         =0          # from enum EPcbDCMiscItemsType
	epcbDCBondPads                =27         # from enum EPcbDCMiscItemsType
	epcbDCBusPaths                =14         # from enum EPcbDCMiscItemsType
	epcbDCBusPathsActiveOnly      =15         # from enum EPcbDCMiscItemsType
	epcbDCClassLines              =1          # from enum EPcbDCMiscItemsType
	epcbDCDrawingGrid             =24         # from enum EPcbDCMiscItemsType
	epcbDCFillPatterns            =2          # from enum EPcbDCMiscItemsType
	epcbDCFillPlaceOutlines       =3          # from enum EPcbDCMiscItemsType
	epcbDCForceOutline            =4          # from enum EPcbDCMiscItemsType
	epcbDCForceSolid              =5          # from enum EPcbDCMiscItemsType
	epcbDCJumperGrid              =18         # from enum EPcbDCMiscItemsType
	epcbDCLegibleTextOnly         =6          # from enum EPcbDCMiscItemsType
	epcbDCMirrorView              =7          # from enum EPcbDCMiscItemsType
	epcbDCNetlineOpenMST          =8          # from enum EPcbDCMiscItemsType
	epcbDCNetlineOrderedOpen      =9          # from enum EPcbDCMiscItemsType
	epcbDCNetlineOrderedRouted    =10         # from enum EPcbDCMiscItemsType
	epcbDCPlace1Grid              =21         # from enum EPcbDCMiscItemsType
	epcbDCPlace2Grid              =20         # from enum EPcbDCMiscItemsType
	epcbDCRouteGrid               =22         # from enum EPcbDCMiscItemsType
	epcbDCRouteTargets            =17         # from enum EPcbDCMiscItemsType
	epcbDCTargetAreas             =16         # from enum EPcbDCMiscItemsType
	epcbDCTestPointGrid           =19         # from enum EPcbDCMiscItemsType
	epcbDCTestPointsBottom        =26         # from enum EPcbDCMiscItemsType
	epcbDCTestPointsTop           =25         # from enum EPcbDCMiscItemsType
	epcbDCThroughPads             =11         # from enum EPcbDCMiscItemsType
	epcbDCThroughVias             =12         # from enum EPcbDCMiscItemsType
	epcbDCViaGrid                 =23         # from enum EPcbDCMiscItemsType
	epcbDCViaSpanNumbers          =13         # from enum EPcbDCMiscItemsType
	epcbDCAssemblyOutlines        =0          # from enum EPcbDCPartItemsType
	epcbDCAssemblyPartNumbers     =1          # from enum EPcbDCPartItemsType
	epcbDCAssemblyRefDes          =2          # from enum EPcbDCPartItemsType
	epcbDCBondWireBoardLevel      =31         # from enum EPcbDCPartItemsType
	epcbDCBondWireStackLevel1     =32         # from enum EPcbDCPartItemsType
	epcbDCBondWireStackLevel2     =33         # from enum EPcbDCPartItemsType
	epcbDCBondWireStackLevel3     =34         # from enum EPcbDCPartItemsType
	epcbDCBondWireStackLevel4     =35         # from enum EPcbDCPartItemsType
	epcbDCBondWires               =25         # from enum EPcbDCPartItemsType
	epcbDCCellGlueSpots           =3          # from enum EPcbDCPartItemsType
	epcbDCCellOrigins             =4          # from enum EPcbDCPartItemsType
	epcbDCCluster                 =5          # from enum EPcbDCPartItemsType
	epcbDCClusterBothSides        =6          # from enum EPcbDCPartItemsType
	epcbDCClusterRefDes           =7          # from enum EPcbDCPartItemsType
	epcbDCDiePinBoardLevel        =26         # from enum EPcbDCPartItemsType
	epcbDCDiePinStackLevel1       =27         # from enum EPcbDCPartItemsType
	epcbDCDiePinStackLevel2       =28         # from enum EPcbDCPartItemsType
	epcbDCDiePinStackLevel3       =29         # from enum EPcbDCPartItemsType
	epcbDCDiePinStackLevel4       =30         # from enum EPcbDCPartItemsType
	epcbDCDiePins                 =24         # from enum EPcbDCPartItemsType
	epcbDCDistributedPart         =8          # from enum EPcbDCPartItemsType
	epcbDCInsertionOutlines       =9          # from enum EPcbDCPartItemsType
	epcbDCPartHazards             =10         # from enum EPcbDCPartItemsType
	epcbDCPinNumbers              =11         # from enum EPcbDCPartItemsType
	epcbDCPinTypes                =12         # from enum EPcbDCPartItemsType
	epcbDCPlaceObstructs          =14         # from enum EPcbDCPartItemsType
	epcbDCPlacementOutlines       =13         # from enum EPcbDCPartItemsType
	epcbDCRooms                   =15         # from enum EPcbDCPartItemsType
	epcbDCSilkscreenLayer         =16         # from enum EPcbDCPartItemsType
	epcbDCSilkscreenOutlines      =17         # from enum EPcbDCPartItemsType
	epcbDCSilkscreenPartNumbers   =18         # from enum EPcbDCPartItemsType
	epcbDCSilkscreenRefDes        =19         # from enum EPcbDCPartItemsType
	epcbDCTestPointAssemblyRefDes =20         # from enum EPcbDCPartItemsType
	epcbDCTestPointObstructs      =21         # from enum EPcbDCPartItemsType
	epcbDCTestPointPads           =22         # from enum EPcbDCPartItemsType
	epcbDCTestPointProbeGraphics  =36         # from enum EPcbDCPartItemsType
	epcbDCTestPointSilkscreenRefDes=23         # from enum EPcbDCPartItemsType
	epcbDCAllBottomSection        =0          # from enum EPcbDCSectionsType
	epcbDCAllTopSection           =1          # from enum EPcbDCSectionsType
	epcbDCAssyItemsBottomSection  =2          # from enum EPcbDCSectionsType
	epcbDCAssyItemsTopSection     =3          # from enum EPcbDCSectionsType
	epcbDCBoardItemsSection       =4          # from enum EPcbDCSectionsType
	epcbDCCellItemsBottomSection  =5          # from enum EPcbDCSectionsType
	epcbDCCellItemsTopSection     =6          # from enum EPcbDCSectionsType
	epcbDCCopperBalancingSection  =20         # from enum EPcbDCSectionsType
	epcbDCDetailedViewsSection    =21         # from enum EPcbDCSectionsType
	epcbDCDisplayPatternsSection  =7          # from enum EPcbDCSectionsType
	epcbDCFabricationSection      =8          # from enum EPcbDCSectionsType
	epcbDCGridSection             =26         # from enum EPcbDCSectionsType
	epcbDCMaterialsSection        =24         # from enum EPcbDCSectionsType
	epcbDCMultipleDesignersSection=23         # from enum EPcbDCSectionsType
	epcbDCNetlinesClassinesSection=9          # from enum EPcbDCSectionsType
	epcbDCPadsSection             =10         # from enum EPcbDCSectionsType
	epcbDCPanelItemsSection       =22         # from enum EPcbDCSectionsType
	epcbDCPartItemsBottomSection  =11         # from enum EPcbDCSectionsType
	epcbDCPartItemsTopSection     =12         # from enum EPcbDCSectionsType
	epcbDCPlanesSection           =13         # from enum EPcbDCSectionsType
	epcbDCRoutePlanningSection    =25         # from enum EPcbDCSectionsType
	epcbDCSheetItemsSection       =28         # from enum EPcbDCSectionsType
	epcbDCSilkItemsBottomSection  =14         # from enum EPcbDCSectionsType
	epcbDCSilkItemsTopSection     =15         # from enum EPcbDCSectionsType
	epcbDCSpacersSection          =27         # from enum EPcbDCSectionsType
	epcbDCTestPtItemsBottomSection=17         # from enum EPcbDCSectionsType
	epcbDCTestPtItemsTopSection   =18         # from enum EPcbDCSectionsType
	epcbDCTracesSection           =16         # from enum EPcbDCSectionsType
	epcbDCUserDraftLayersSection  =19         # from enum EPcbDCSectionsType
	epcbDCWireBondItemsBottomSection=30         # from enum EPcbDCSectionsType
	epcbDCWirebondItemsTopSection =29         # from enum EPcbDCSectionsType
	epcbDRCModeDRC                =1          # from enum EPcbDRCMode
	epcbDRCModeDRCOneAtATime      =4          # from enum EPcbDRCMode
	epcbDRCModeNone               =0          # from enum EPcbDRCMode
	epcbDRCModeNoneWithBatchQuery =8          # from enum EPcbDRCMode
	epcbDRCModeResolve            =2          # from enum EPcbDRCMode
	epcbDRCModifierGloss          =-2147483648 # from enum EPcbDRCMode
	epcbDRCModifierGlossLocal     =134217728  # from enum EPcbDRCMode
	epcbDRCModifierInteractive    =536870912  # from enum EPcbDRCMode
	epcbDRCModifierNoGloss        =268435456  # from enum EPcbDRCMode
	epcbDRCModifierShowHazardGraphics=1073741824 # from enum EPcbDRCMode
	epcbDRCModifierTrueDRC        =67108864   # from enum EPcbDRCMode
	epcbDRCTypePlane              =4          # from enum EPcbDRCType
	epcbDRCTypeSMDPad             =3          # from enum EPcbDRCType
	epcbDRCTypeThroughPinPad      =2          # from enum EPcbDRCType
	epcbDRCTypeTrace              =0          # from enum EPcbDRCType
	epcbDRCTypeUndefined          =-1         # from enum EPcbDRCType
	epcbDRCTypeViaPad             =1          # from enum EPcbDRCType
	epcbDXFImportModeAppendCell   =2          # from enum EPcbDXFImportMode
	epcbDXFImportModeNew          =1          # from enum EPcbDXFImportMode
	epcbDXFImportModeOverWriteCell=3          # from enum EPcbDXFImportMode
	epcbDXFImportModeOverWriteLayersOnly=4          # from enum EPcbDXFImportMode
	epcbDataManagementDumpPropertiesFilterAll=0          # from enum EPcbDataManagementDumpPropertiesFilter
	epcbDataManagementDumpPropertiesFilterCustom=2          # from enum EPcbDataManagementDumpPropertiesFilter
	epcbDataManagementDumpPropertiesFilterDefinedAsArgument=3          # from enum EPcbDataManagementDumpPropertiesFilter
	epcbDataManagementDumpPropertiesFilterVisible=1          # from enum EPcbDataManagementDumpPropertiesFilter
	ePcbDataManagementEntityAccessTypeNone=0          # from enum EPcbDataManagementEntityAccessType
	ePcbDataManagementEntityAccessTypeReadOnly=1          # from enum EPcbDataManagementEntityAccessType
	ePcbDataManagementEntityAccessTypeReadWrite=2          # from enum EPcbDataManagementEntityAccessType
	epcbDataManagementEntityTypePADSProDesignerSchematic=256        # from enum EPcbDataManagementEntityType
	epcbDataManagementEntityTypePADSProLayout=128        # from enum EPcbDataManagementEntityType
	epcbDataManagementEntityTypeXpeditionDesignerSchematic=2          # from enum EPcbDataManagementEntityType
	epcbDataManagementEntityTypeXpeditionDrawing=32         # from enum EPcbDataManagementEntityType
	epcbDataManagementEntityTypeXpeditionLayout=1          # from enum EPcbDataManagementEntityType
	epcbDataManagementEntityTypeXpeditionMultiBoardDrawing=64         # from enum EPcbDataManagementEntityType
	epcbDataManagementEntityTypeXpeditionMultiBoardPanel=16         # from enum EPcbDataManagementEntityType
	epcbDataManagementEntityTypeXpeditionSingleBoardPanel=8          # from enum EPcbDataManagementEntityType
	epcbDataManagementFeatureCustomConnectionDetails=1          # from enum EPcbDataManagementFeature
	epcbDataManagementFeatureOpenComponentView=2          # from enum EPcbDataManagementFeature
	epcbDataManagementFeatureOpenManagedBlockView=4          # from enum EPcbDataManagementFeature
	epcbDataManagementOperationAvailabilityEnabled=1          # from enum EPcbDataManagementOperationAvailability
	epcbDataManagementOperationAvailabilityHidden=2          # from enum EPcbDataManagementOperationAvailability
	epcbDimensionOrientParallel   =0          # from enum EPcbDimensionOrientationType
	epcbDimensionOrientPerpendicular=1          # from enum EPcbDimensionOrientationType
	epcbDimensionAngular          =7          # from enum EPcbDimensionType
	epcbDimensionDiameter         =6          # from enum EPcbDimensionType
	epcbDimensionEdge             =0          # from enum EPcbDimensionType
	epcbDimensionHorizontal       =1          # from enum EPcbDimensionType
	epcbDimensionOrdinateHoriz    =3          # from enum EPcbDimensionType
	epcbDimensionOrdinateVert     =4          # from enum EPcbDimensionType
	epcbDimensionRadial           =5          # from enum EPcbDimensionType
	epcbDimensionVertical         =2          # from enum EPcbDimensionType
	epcbDimensionXAngle           =8          # from enum EPcbDimensionType
	epcbDisplayConditionAnyMount  =1          # from enum EPcbDisplayCondition
	epcbDisplayConditionBottomMountOnly=3          # from enum EPcbDisplayCondition
	epcbDisplayConditionTopMountOnly=2          # from enum EPcbDisplayCondition
	epcbDisplayLevelNormal        =0          # from enum EPcbDisplayLevel
	epcbDisplayLevelTop           =1          # from enum EPcbDisplayLevel
	epcbAllSchemes                =0          # from enum EPcbDisplaySchemeType
	epcbLocalSchemes              =1          # from enum EPcbDisplaySchemeType
	epcbSystemSchemes             =2          # from enum EPcbDisplaySchemeType
	epcbUserSchemes               =3          # from enum EPcbDisplaySchemeType
	epcbEC3DDRCOff                =0          # from enum EPcbEC3DDRC
	epcbEC3DDRCPreventative       =2          # from enum EPcbEC3DDRC
	epcbEC3DDRCWarning            =1          # from enum EPcbEC3DDRC
	epcbECATAEffort               =2          # from enum EPcbECAutoTuneAuto
	epcbECATANetline              =3          # from enum EPcbECAutoTuneAuto
	epcbECATAOff                  =0          # from enum EPcbECAutoTuneAuto
	epcbECATAPass                 =1          # from enum EPcbECAutoTuneAuto
	epcbECRetuneOnly              =0          # from enum EPcbECAutoTuneEffort
	epcbECTuneAndRetune           =1          # from enum EPcbECAutoTuneEffort
	epcbECATIClicking             =3          # from enum EPcbECAutoTuneInter
	epcbECATIDrag                 =4          # from enum EPcbECAutoTuneInter
	epcbECATIIdle                 =1          # from enum EPcbECAutoTuneInter
	epcbECATINetline              =2          # from enum EPcbECAutoTuneInter
	epcbECATIOff                  =0          # from enum EPcbECAutoTuneInter
	epcbECBondWireDRC2DSameGuideWireCrossing=2          # from enum EPcbECBondWireDRC
	epcbECBondWireDRC2DWireCrossing=1          # from enum EPcbECBondWireDRC
	epcbECBondWireDRC3DDRC        =3          # from enum EPcbECBondWireDRC
	epcbECBondWireDRCOff          =0          # from enum EPcbECBondWireDRC
	epcbECCellRotAnyAngBothSide   =4          # from enum EPcbECCellRotation
	epcbECCellRotAnyAngBottomSide =3          # from enum EPcbECCellRotation
	epcbECCellRotAnyAngTopSide    =2          # from enum EPcbECCellRotation
	epcbECCellRotAnyAngle         =0          # from enum EPcbECCellRotation
	epcbECCellRotOrtho0BottomSide =6          # from enum EPcbECCellRotation
	epcbECCellRotOrtho0TopSide    =5          # from enum EPcbECCellRotation
	epcbECCellRotOrtho180BottomSide=10         # from enum EPcbECCellRotation
	epcbECCellRotOrtho180TopSide  =9          # from enum EPcbECCellRotation
	epcbECCellRotOrtho270BottomSide=12         # from enum EPcbECCellRotation
	epcbECCellRotOrtho270TopSide  =11         # from enum EPcbECCellRotation
	epcbECCellRotOrtho90BottomSide=8          # from enum EPcbECCellRotation
	epcbECCellRotOrtho90TopSide   =7          # from enum EPcbECCellRotation
	epcbECCellRotOrthogonal       =1          # from enum EPcbECCellRotation
	epcbECBiasHorizontal          =0          # from enum EPcbECDirBias
	epcbECBiasVertical            =1          # from enum EPcbECDirBias
	epcbECFilterClassTypeConstraint=1          # from enum EPcbECFilterDisplayClassTypes
	epcbECFilterClassTypeNet      =0          # from enum EPcbECFilterDisplayClassTypes
	epcbECGlossAroundDelTrcAndVia =2          # from enum EPcbECGlossOptions
	epcbECGlossJumpTraceOverPads  =0          # from enum EPcbECGlossOptions
	epcbECGlossMoveViaForTraceSegs=3          # from enum EPcbECGlossOptions
	epcbECGlossRemoveXSMeander    =1          # from enum EPcbECGlossOptions
	epcbECGlossSpreadNone         =2          # from enum EPcbECGlossSpreadOptions
	epcbECGlossSpreadOther        =1          # from enum EPcbECGlossSpreadOptions
	epcbECGlossSpreadPads         =0          # from enum EPcbECGlossSpreadOptions
	epcbECInterRouteMode_GeneralRouter=2          # from enum EPcbECInterRouteMode
	epcbECInterRouteMode_HugRouter=1          # from enum EPcbECInterRouteMode
	epcbECInterRouteMode_SketchRouter=0          # from enum EPcbECInterRouteMode
	epcbECRouteEffort             =0          # from enum EPcbECIntrRouteOptions
	epcbECRouteViaBias            =1          # from enum EPcbECIntrRouteOptions
	epcbECRouteViaCost            =2          # from enum EPcbECIntrRouteOptions
	epcbECJumperCreationDynamic   =1          # from enum EPcbECJumperCreation
	epcbECJumperCreationStaticCellData=2          # from enum EPcbECJumperCreation
	epcbECJumperGrid              =2          # from enum EPcbECJumperGraphicOptions
	epcbECJumperLineWidth         =0          # from enum EPcbECJumperGraphicOptions
	epcbECJumperPullBack          =1          # from enum EPcbECJumperGraphicOptions
	epcbECGlobalOptimization      =3          # from enum EPcbECNLOptMode
	epcbECLocalOptimization       =2          # from enum EPcbECNLOptMode
	epcbECMinimumOptimization     =1          # from enum EPcbECNLOptMode
	epcbECNoOptimization          =0          # from enum EPcbECNLOptMode
	epcbECDRCOff                  =0          # from enum EPcbECOnlineDRC
	epcbECDRCPreventiveNoShovePart=3          # from enum EPcbECOnlineDRC
	epcbECDRCPreventiveShovePart  =2          # from enum EPcbECOnlineDRC
	epcbECDRCWarning              =1          # from enum EPcbECOnlineDRC
	epcbECPadAdjacentCorner       =1          # from enum EPcbECPadsGlobalRules
	epcbECPadAdjacentLong         =0          # from enum EPcbECPadsGlobalRules
	epcbECPartAlignCentroid       =1          # from enum EPcbECPartAlignment
	epcbECPartAlignOrigin         =0          # from enum EPcbECPartAlignment
	epcbECPartAlignPinCenter      =2          # from enum EPcbECPartAlignment
	epcbECPartGridSnapCentroid    =1          # from enum EPcbECPartGridSnap
	epcbECPartGridSnapOrigin      =0          # from enum EPcbECPartGridSnap
	epcbECKeepSameRotation        =0          # from enum EPcbECPartNumRotations
	epcbECRotateWithPart          =1          # from enum EPcbECPartNumRotations
	epcbECPartRefHInvert          =1          # from enum EPcbECPartRefdesHRule
	epcbECPartRefHNormal          =0          # from enum EPcbECPartRefdesHRule
	epcbECPartRefVLeftUp          =0          # from enum EPcbECPartRefdesVRule
	epcbECPartRefVRightUp         =1          # from enum EPcbECPartRefdesVRule
	epcbECPlowAngle45             =2          # from enum EPcbECPlowAngle
	epcbECPlowAngle90             =1          # from enum EPcbECPlowAngle
	epcbECPlowAngleAny            =3          # from enum EPcbECPlowAngle
	epcbECPlowAngleShift          =4          # from enum EPcbECPlowAngle
	epcbECPlowStyleHockeyStickOnClick=3          # from enum EPcbECPlowStyle
	epcbECPlowStyleRealTraceDelayed=1          # from enum EPcbECPlowStyle
	epcbECPlowStyleRealTraceDynamic=2          # from enum EPcbECPlowStyle
	epcbECPlowStyleSegmentOnClick =4          # from enum EPcbECPlowStyle
	epcbECAllowOddAngleEscape     =5          # from enum EPcbECPushAndShove
	epcbECBondpadShoving          =6          # from enum EPcbECPushAndShove
	epcbECPadJumping              =3          # from enum EPcbECPushAndShove
	epcbECShovingOutsideView      =2          # from enum EPcbECPushAndShove
	epcbECTraceShoving            =0          # from enum EPcbECPushAndShove
	epcbECViaJumping              =4          # from enum EPcbECPushAndShove
	epcbECViaShoving              =1          # from enum EPcbECPushAndShove
	epcbECAllowNecessaryPairSplit =1          # from enum EPcbECRouteDiffPairBehavior
	epcbECIgnorePairRelationship  =0          # from enum EPcbECRouteDiffPairBehavior
	epcbECProhibitAddedPairSplit  =2          # from enum EPcbECRouteDiffPairBehavior
	epcbECProhibitExistingPairSplit=3          # from enum EPcbECRouteDiffPairBehavior
	epcbECEffortHigh              =2          # from enum EPcbECRouteLevel
	epcbECEffortLow               =0          # from enum EPcbECRouteLevel
	epcbECEffortMid               =1          # from enum EPcbECRouteLevel
	epcbECAuto                    =1          # from enum EPcbECRouteMode
	epcbECInteractive             =0          # from enum EPcbECRouteMode
	epcbECMaxDelaysAndLengths     =3          # from enum EPcbECRouteNetRules
	epcbECNetRulesLayerRestrictions=1          # from enum EPcbECRouteNetRules
	epcbECNetRulesStubLengths     =0          # from enum EPcbECRouteNetRules
	epcbECNetRulesViaRestrictions =2          # from enum EPcbECRouteNetRules
	epcbECAllow45DegCorners       =0          # from enum EPcbECRouteOptions
	epcbECAllowAnglePlow          =4          # from enum EPcbECRouteOptions
	epcbECAllowForcedPlow         =3          # from enum EPcbECRouteOptions
	epcbECAllowRoutePlow          =5          # from enum EPcbECRouteOptions
	epcbECPreventLoops            =1          # from enum EPcbECRouteOptions
	epcbECSemiFixNonStandardTraces=2          # from enum EPcbECRouteOptions
	epcbECMinDstAtPadEntryWidth   =0          # from enum EPcbECRoutePadWidths
	epcbECMinDstAtSameWidth       =1          # from enum EPcbECRoutePadWidths
	epcbECMaxDiffPairConvergence  =1          # from enum EPcbECRouteViasDiffPairParms
	epcbECMaxDiffPairConvergenceTol=2          # from enum EPcbECRouteViasDiffPairParms
	epcbECMaxDiffPairSeparationDist=3          # from enum EPcbECRouteViasDiffPairParms
	epcbECMinDiffPairLength       =0          # from enum EPcbECRouteViasDiffPairParms
	epcbECAllowAdditionalVia      =0          # from enum EPcbECRouteViasRules
	epcbECAutoTrimThroughVias     =3          # from enum EPcbECRouteViasRules
	epcbECSinglePinNetFanout      =2          # from enum EPcbECRouteViasRules
	epcbECUsePartOutlineAsViaObstructs=1          # from enum EPcbECRouteViasRules
	epcbECAllowOddAngle           =6          # from enum EPcbECSelPadsTracePosRules
	epcbECExtendedPadEntry        =5          # from enum EPcbECSelPadsTracePosRules
	epcbECPadTraceCorner          =4          # from enum EPcbECSelPadsTracePosRules
	epcbECPadTraceLongCtr         =2          # from enum EPcbECSelPadsTracePosRules
	epcbECPadTraceLongEdge        =3          # from enum EPcbECSelPadsTracePosRules
	epcbECPadTraceShortCtr        =0          # from enum EPcbECSelPadsTracePosRules
	epcbECPadTraceShortEdge       =1          # from enum EPcbECSelPadsTracePosRules
	epcbECAlignViaOnLongAxis      =2          # from enum EPcbECSelPadsViaPosRules
	epcbECAllowOffPadOrigin       =1          # from enum EPcbECSelPadsViaPosRules
	epcbECAllowViasUnderPad       =0          # from enum EPcbECSelPadsViaPosRules
	epcbECKeepViaCenterInsidePad  =4          # from enum EPcbECSelPadsViaPosRules
	epcbECKeepViaPadInsidePad     =5          # from enum EPcbECSelPadsViaPosRules
	epcbECLocateViaAtPadEdge      =3          # from enum EPcbECSelPadsViaPosRules
	epcbECAllow                   =0          # from enum EPcbECTunability
	epcbECPrefer                  =2          # from enum EPcbECTunability
	epcbECPrevent                 =1          # from enum EPcbECTunability
	epcbECAddLExhaustive          =4          # from enum EPcbECTuneAddLength
	epcbECAddLHigh                =3          # from enum EPcbECTuneAddLength
	epcbECAddLLow                 =1          # from enum EPcbECTuneAddLength
	epcbECAddLMedium              =2          # from enum EPcbECTuneAddLength
	epcbECAddLOff                 =0          # from enum EPcbECTuneAddLength
	epcbECRLHigh                  =3          # from enum EPcbECTuneReduceLength
	epcbECRLLow                   =1          # from enum EPcbECTuneReduceLength
	epcbECRLMedium                =2          # from enum EPcbECTuneReduceLength
	epcbECRLOff                   =0          # from enum EPcbECTuneReduceLength
	epcbECTuningMaxHeight         =3          # from enum EPcbECTuningPatternDist
	epcbECTuningMinHeight         =1          # from enum EPcbECTuningPatternDist
	epcbECTuningMinLength         =2          # from enum EPcbECTuningPatternDist
	epcbECTuningMinSpacing        =0          # from enum EPcbECTuningPatternDist
	epcbECTuningSawtoothHeight    =5          # from enum EPcbECTuningPatternDist
	epcbECTuningSawtoothSpacing   =4          # from enum EPcbECTuningPatternDist
	epcbECTuningIrregular         =2          # from enum EPcbECTuningPatterns
	epcbECTuningNonSerpentine     =3          # from enum EPcbECTuningPatterns
	epcbECTuningRegular           =0          # from enum EPcbECTuningPatterns
	epcbECTuningSemiRegular       =1          # from enum EPcbECTuningPatterns
	epcbECTuningTrombone          =4          # from enum EPcbECTuningPatterns
	epcbECDsplyLocalNetlines      =0          # from enum EPcbECWhileMovingParts
	epcbECDynNetlineOrdering      =1          # from enum EPcbECWhileMovingParts
	epcbEDMOutputGenerationMode_Auto=0          # from enum EPcbEDMOutputGenMode
	epcbEDMOutputGenerationMode_No=2          # from enum EPcbEDMOutputGenMode
	epcbeEDMOutputGenerationMode_Ask=1          # from enum EPcbEDMOutputGenMode
	EPcbEDMOutputGenerationResult_MissingBOMSetupFile=4          # from enum EPcbEDMOutputGenerationResult
	EPcbEDMOutputGenerationResult_MissingODBSetupFile=2          # from enum EPcbEDMOutputGenerationResult
	EPcbEDMOutputGenerationResult_MissingPDFSetupFile=1          # from enum EPcbEDMOutputGenerationResult
	EPcbEDMOutputGenerationResult_Ok=0          # from enum EPcbEDMOutputGenerationResult
	epcbEPCapacitorFormInterdigitated=2          # from enum EPcbEPCapacitorForm
	epcbEPCapacitorFormMezannine  =3          # from enum EPcbEPCapacitorForm
	epcbEPCapacitorFormScreen     =1          # from enum EPcbEPCapacitorForm
	epcbEPResistorFormDonut       =6          # from enum EPcbEPResistorForm
	epcbEPResistorFormFolded      =4          # from enum EPcbEPResistorForm
	epcbEPResistorFormRectangle   =1          # from enum EPcbEPResistorForm
	epcbEPResistorFormSerpentine  =2          # from enum EPcbEPResistorForm
	epcbEPResistorFormTophat      =3          # from enum EPcbEPResistorForm
	epcbEPResistorFormUshape      =5          # from enum EPcbEPResistorForm
	epcbEPShapeAll                =-1         # from enum EPcbEPShapeType
	epcbEPShapeBody               =1          # from enum EPcbEPShapeType
	epcbEPShapeConductive         =16         # from enum EPcbEPShapeType
	epcbEPShapeDielectric         =8          # from enum EPcbEPShapeType
	epcbEPShapeMask               =2          # from enum EPcbEPShapeType
	epcbEPShapeOverGlaze          =4          # from enum EPcbEPShapeType
	epcbEditorGeneral             =3          # from enum EPcbEditorType
	epcbEditorReusableBlock       =1          # from enum EPcbEditorType
	epcbEditorTemplate            =2          # from enum EPcbEditorType
	epcbEmbeddedPassiveCapacitor  =2          # from enum EPcbEmbeddedPassiveType
	epcbEmbeddedPassiveNone       =0          # from enum EPcbEmbeddedPassiveType
	epcbEmbeddedPassiveResistor   =1          # from enum EPcbEmbeddedPassiveType
	epcbErrCodeActiveClearancesMustHaveOpenGL=-2147220720 # from enum EPcbErrCode
	epcbErrCodeAdvancedPackagingLicenseNotEnabled=-2147220791 # from enum EPcbErrCode
	epcbErrCodeAllowOffPadOriginNotSet=-2147220834 # from enum EPcbErrCode
	epcbErrCodeAllowViaUnderPadNotSet=-2147220836 # from enum EPcbErrCode
	epcbErrCodeAssemblyOriginNotDefinedForCell=-2147220813 # from enum EPcbErrCode
	epcbErrCodeAutoRouteRunningCantCompile=-2147220972 # from enum EPcbErrCode
	epcbErrCodeAutomationDisabled =-2147220672 # from enum EPcbErrCode
	epcbErrCodeAutomationDisabledWhenVisible=-2147220674 # from enum EPcbErrCode
	epcbErrCodeAutomationNotEnabledForXPCB=-2147220951 # from enum EPcbErrCode
	epcbErrCodeAutomationProLicenseError=-2147220871 # from enum EPcbErrCode
	epcbErrCodeBAChangesDisabled  =-2147220721 # from enum EPcbErrCode
	epcbErrCodeBadObject          =-2147220986 # from enum EPcbErrCode
	epcbErrCodeBoardFileNotSet    =-2147220866 # from enum EPcbErrCode
	epcbErrCodeBoardOutlineNotFound=-2147220666 # from enum EPcbErrCode
	epcbErrCodeCallInvalidForNoniCDB=-2147220742 # from enum EPcbErrCode
	epcbErrCodeCannotAddConnectionsToSparePart=-2147220725 # from enum EPcbErrCode
	epcbErrCodeCannotAddObjectToConstraintNetClass=-2147220415 # from enum EPcbErrCode
	epcbErrCodeCannotAddObjectToNetGroup=-2147220416 # from enum EPcbErrCode
	epcbErrCodeCannotAddObjectTypeToGroup=-2147220718 # from enum EPcbErrCode
	epcbErrCodeCannotAddTextOnJumperTestPoint=-2147220807 # from enum EPcbErrCode
	epcbErrCodeCannotChangePinNet =-2147220677 # from enum EPcbErrCode
	epcbErrCodeCannotChangePropertyOnCavityInCellEditor=-2147220585 # from enum EPcbErrCode
	epcbErrCodeCannotChangeRAStateToDynamic=-2147220714 # from enum EPcbErrCode
	epcbErrCodeCannotChangeSandboxState=-2147220789 # from enum EPcbErrCode
	epcbErrCodeCannotChangeSupplyPinNet=-2147220724 # from enum EPcbErrCode
	epcbErrCodeCannotCreateCustomView=-2147220760 # from enum EPcbErrCode
	epcbErrCodeCannotCreateObjectOutsideEditableArea=-2147220652 # from enum EPcbErrCode
	epcbErrCodeCannotCreateShieldingGroup=-2147220678 # from enum EPcbErrCode
	epcbErrCodeCannotEditActiveSandbox=-2147220805 # from enum EPcbErrCode
	epcbErrCodeCannotEditCertifiedReuseArea=-2147220701 # from enum EPcbErrCode
	epcbErrCodeCannotEditObjectsInsideCertifiedReuseArea=-2147220702 # from enum EPcbErrCode
	epcbErrCodeCannotEditReuseAreaStateIfNoCL=-2147220700 # from enum EPcbErrCode
	epcbErrCodeCannotExecuteMethodOnAtomicFeature=-2147220615 # from enum EPcbErrCode
	epcbErrCodeCannotFindApplicationInAllottedTime=-2147220687 # from enum EPcbErrCode
	epcbErrCodeCannotFindComponentByRefDes=-2147220544 # from enum EPcbErrCode
	epcbErrCodeCannotGetCellPackageGroup=-2147220542 # from enum EPcbErrCode
	epcbErrCodeCannotLoadIcon     =-2147220758 # from enum EPcbErrCode
	epcbErrCodeCannotOpenReferenceApplication=-2147220688 # from enum EPcbErrCode
	epcbErrCodeCannotPutCellPackageGroup=-2147220538 # from enum EPcbErrCode
	epcbErrCodeCannotPutComponentOnInternalLayer=-2147220635 # from enum EPcbErrCode
	epcbErrCodeCannotPutPadOnRigidFlexLayer=-2147220637 # from enum EPcbErrCode
	epcbErrCodeCannotResetLicenseOption=-2147220673 # from enum EPcbErrCode
	epcbErrCodeCannotSwapPins     =-2147220695 # from enum EPcbErrCode
	epcbErrCodeCannotSwapPinsClearanceViolation=-2147220694 # from enum EPcbErrCode
	epcbErrCodeCannotSwapPinsNothingSwappable=-2147220693 # from enum EPcbErrCode
	epcbErrCodeCannotSwapPinsOnDifferentComponents=-2147220697 # from enum EPcbErrCode
	epcbErrCodeCannotSwapPinsOnRB =-2147220696 # from enum EPcbErrCode
	epcbErrCodeCannotUnlockDisplayControl=-2147220676 # from enum EPcbErrCode
	epcbErrCodeCannotUnplaceMeander=-2147220685 # from enum EPcbErrCode
	epcbErrCodeCantAcquireToCheckpoint=-2147220739 # from enum EPcbErrCode
	epcbErrCodeCantAddCurveTraceRadius=-2147220854 # from enum EPcbErrCode
	epcbErrCodeCantAddCutout      =-2147220910 # from enum EPcbErrCode
	epcbErrCodeCantAddCutout2     =-2147220909 # from enum EPcbErrCode
	epcbErrCodeCantAddCutout3     =-2147220908 # from enum EPcbErrCode
	epcbErrCodeCantAddCutout4     =-2147220907 # from enum EPcbErrCode
	epcbErrCodeCantCallForNonEP   =-2147220916 # from enum EPcbErrCode
	epcbErrCodeCantCallInTransaction=-2147220780 # from enum EPcbErrCode
	epcbErrCodeCantChangePinNet   =-2147220903 # from enum EPcbErrCode
	epcbErrCodeCantChangeType     =-2147220820 # from enum EPcbErrCode
	epcbErrCodeCantCheckoutFile   =-2147220846 # from enum EPcbErrCode
	epcbErrCodeCantCloseDocumentWhileDialogsRunning=-2147220643 # from enum EPcbErrCode
	epcbErrCodeCantCommitLDDUpdates=-2147220743 # from enum EPcbErrCode
	epcbErrCodeCantCreateDirectory=-2147220971 # from enum EPcbErrCode
	epcbErrCodeCantCreateSheetView=-2147220874 # from enum EPcbErrCode
	epcbErrCodeCantCreateUserLayer=-2147220952 # from enum EPcbErrCode
	epcbErrCodeCantDeleteBoardOutlineBorder=-2147220938 # from enum EPcbErrCode
	epcbErrCodeCantDeleteDefault  =-2147220918 # from enum EPcbErrCode
	epcbErrCodeCantDeleteObject   =-2147220897 # from enum EPcbErrCode
	epcbErrCodeCantDeleteOutline  =-2147220912 # from enum EPcbErrCode
	epcbErrCodeCantDeletePanelOutlineBorder=-2147220937 # from enum EPcbErrCode
	epcbErrCodeCantDeleteSchematicProperty=-2147220888 # from enum EPcbErrCode
	epcbErrCodeCantDeleteSheetView=-2147220873 # from enum EPcbErrCode
	epcbErrCodeCantDeleteSingleGeneratedData=-2147220936 # from enum EPcbErrCode
	epcbErrCodeCantDeleteUserLayer=-2147220801 # from enum EPcbErrCode
	epcbErrCodeCantFindExecutable =-2147220977 # from enum EPcbErrCode
	epcbErrCodeCantFindPId        =-2147220562 # from enum EPcbErrCode
	epcbErrCodeCantFindSplit      =-2147220722 # from enum EPcbErrCode
	epcbErrCodeCantGetPinLayer    =-2147220845 # from enum EPcbErrCode
	epcbErrCodeCantGetPinRotation =-2147220559 # from enum EPcbErrCode
	epcbErrCodeCantLoadCell       =-2147220946 # from enum EPcbErrCode
	epcbErrCodeCantLoadCellIntoLocalLib=-2147220819 # from enum EPcbErrCode
	epcbErrCodeCantLoadFile       =-2147220829 # from enum EPcbErrCode
	epcbErrCodeCantLoadPad        =-2147220924 # from enum EPcbErrCode
	epcbErrCodeCantLoadPadstack   =-2147220985 # from enum EPcbErrCode
	epcbErrCodeCantLoadPartIntoLocalLib=-2147220733 # from enum EPcbErrCode
	epcbErrCodeCantLockServer     =-2147220991 # from enum EPcbErrCode
	epcbErrCodeCantModify         =-2147220964 # from enum EPcbErrCode
	epcbErrCodeCantModifyAreaWidth=-2147220905 # from enum EPcbErrCode
	epcbErrCodeCantModifyDimension=-2147220895 # from enum EPcbErrCode
	epcbErrCodeCantModifyFiducial =-2147220773 # from enum EPcbErrCode
	epcbErrCodeCantModifyFillStyle=-2147220660 # from enum EPcbErrCode
	epcbErrCodeCantModifyGeometry =-2147220913 # from enum EPcbErrCode
	epcbErrCodeCantModifyInternalPads=-2147220921 # from enum EPcbErrCode
	epcbErrCodeCantModifyLayer    =-2147220906 # from enum EPcbErrCode
	epcbErrCodeCantModifyLineStyle=-2147220851 # from enum EPcbErrCode
	epcbErrCodeCantModifyMVOMember=-2147220894 # from enum EPcbErrCode
	epcbErrCodeCantModifyNet      =-2147220887 # from enum EPcbErrCode
	epcbErrCodeCantModifyObject   =-2147220915 # from enum EPcbErrCode
	epcbErrCodeCantModifyOppSidePads=-2147220920 # from enum EPcbErrCode
	epcbErrCodeCantModifyPlaneClass=-2147220852 # from enum EPcbErrCode
	epcbErrCodeCantModifyTextString=-2147220901 # from enum EPcbErrCode
	epcbErrCodeCantMoveBoard      =-2147220934 # from enum EPcbErrCode
	epcbErrCodeCantMovePanel      =-2147220884 # from enum EPcbErrCode
	epcbErrCodeCantMovePin        =-2147220904 # from enum EPcbErrCode
	epcbErrCodeCantMoveToCheckpoint=-2147220740 # from enum EPcbErrCode
	epcbErrCodeCantMultiThread    =-2147220958 # from enum EPcbErrCode
	epcbErrCodeCantOpenCentralLibrary=-2147220818 # from enum EPcbErrCode
	epcbErrCodeCantOpenDocument   =-2147220962 # from enum EPcbErrCode
	epcbErrCodeCantPlaceContour   =-2147220898 # from enum EPcbErrCode
	epcbErrCodeCantPlaceFabrication=-2147220965 # from enum EPcbErrCode
	epcbErrCodeCantPlaceJumper    =-2147220815 # from enum EPcbErrCode
	epcbErrCodeCantPlaceObstruct  =-2147220966 # from enum EPcbErrCode
	epcbErrCodeCantPutBondWireOnObject=-2147220794 # from enum EPcbErrCode
	epcbErrCodeCantPutOutline     =-2147220911 # from enum EPcbErrCode
	epcbErrCodeCantRemoveSMDPad   =-2147220922 # from enum EPcbErrCode
	epcbErrCodeCantRenameNet0     =-2147220735 # from enum EPcbErrCode
	epcbErrCodeCantRenamePhysicalReuseSource=-2147220419 # from enum EPcbErrCode
	epcbErrCodeCantRunExecutable  =-2147220975 # from enum EPcbErrCode
	epcbErrCodeCantSelectNotEnabled=-2147220826 # from enum EPcbErrCode
	epcbErrCodeCantSemiFixLock    =-2147220967 # from enum EPcbErrCode
	epcbErrCodeCantSetToEmptyString=-2147220902 # from enum EPcbErrCode
	epcbErrCodeCantSynthesizePad  =-2147220923 # from enum EPcbErrCode
	epcbErrCodeCantUseLocalRegenerate=-2147220828 # from enum EPcbErrCode
	epcbErrCodeCantUseSystemPropName=-2147220774 # from enum EPcbErrCode
	epcbErrCodeCavitiesNotSupported=-2147220616 # from enum EPcbErrCode
	epcbErrCodeCavitiesOnlyEnabledForBareDie=-2147220586 # from enum EPcbErrCode
	epcbErrCodeCavityHoleNotDefined=-2147220792 # from enum EPcbErrCode
	epcbErrCodeCavityNotAllowedWithDiePinInCellEditor=-2147220583 # from enum EPcbErrCode
	epcbErrCodeCellDatabaseOpenError=-2147220837 # from enum EPcbErrCode
	epcbErrCodeChangeWillCreateInvalidBendArea=-2147220668 # from enum EPcbErrCode
	epcbErrCodeCloseDocumentDisabledDuringReplay=-2147220699 # from enum EPcbErrCode
	epcbErrCodeCommandNotFound    =-2147220960 # from enum EPcbErrCode
	epcbErrCodeCommentTooBig      =-2147220589 # from enum EPcbErrCode
	epcbErrCodeComponentMemberofReuseBlock=-2147220776 # from enum EPcbErrCode
	epcbErrCodeConstraintClassNotDefinedAsBus=-2147220745 # from enum EPcbErrCode
	epcbErrCodeContourHoleNameNotSet=-2147220865 # from enum EPcbErrCode
	epcbErrCodeContourWithLayerSpanMustBePath=-2147220808 # from enum EPcbErrCode
	epcbErrCodeCoordinatesMustBeWithinPad=-2147220797 # from enum EPcbErrCode
	epcbErrCodeCopperBalDisabled  =-2147220886 # from enum EPcbErrCode
	epcbErrCodeCurveTraceMinRadiusTooSmall=-2147220855 # from enum EPcbErrCode
	epcbErrCodeCurveTraceRadiusTooSmall=-2147220856 # from enum EPcbErrCode
	epcbErrCodeDFFLicenseError    =-2147220870 # from enum EPcbErrCode
	epcbErrCodeDRCViolation       =-2147220989 # from enum EPcbErrCode
	epcbErrCodeDXFImportDisabled  =-2147220772 # from enum EPcbErrCode
	epcbErrCodeDXFImportFailed    =-2147220771 # from enum EPcbErrCode
	epcbErrCodeDataManagementAuthorizationFailed=-2147220614 # from enum EPcbErrCode
	epcbErrCodeDataManagementChangeServerWhileEditing=-2147220601 # from enum EPcbErrCode
	epcbErrCodeDataManagementEntityTypeProductMismatch=-2147220611 # from enum EPcbErrCode
	epcbErrCodeDataManagementInvalidDirectory=-2147220612 # from enum EPcbErrCode
	epcbErrCodeDataManagementInvalidServerAddressFormat=-2147220595 # from enum EPcbErrCode
	epcbErrCodeDataManagementNoWritePermission=-2147220602 # from enum EPcbErrCode
	epcbErrCodeDataManagementOtherError=-2147220599 # from enum EPcbErrCode
	epcbErrCodeDataManagementReadonlySetting=-2147220581 # from enum EPcbErrCode
	epcbErrCodeDataManagementServiceFailed=-2147220613 # from enum EPcbErrCode
	epcbErrCodeDataManagementServiceNotConnected=-2147220600 # from enum EPcbErrCode
	epcbErrCodeDataManagementUnknownSetting=-2147220597 # from enum EPcbErrCode
	epcbErrCodeDataManagementValueNotInRange=-2147220596 # from enum EPcbErrCode
	epcbErrCodeDeprecatedArgument =-2147220861 # from enum EPcbErrCode
	epcbErrCodeDisallowLDDWhenCmdActive=-2147220632 # from enum EPcbErrCode
	epcbErrCodeDocumentReadOnly   =-2147220782 # from enum EPcbErrCode
	epcbErrCodeDocumentSaveAndCheckInNotPossible=-2147220414 # from enum EPcbErrCode
	epcbErrCodeDrillTablePlaceDesignNotFound=-2147220882 # from enum EPcbErrCode
	epcbErrCodeDrillTablePlaceError=-2147220879 # from enum EPcbErrCode
	epcbErrCodeDrillTablePlaceNoCellDB=-2147220880 # from enum EPcbErrCode
	epcbErrCodeDrillTablePlaceNoDrillTable=-2147220881 # from enum EPcbErrCode
	epcbErrCodeEDXInternalError   =-2147220750 # from enum EPcbErrCode
	epcbErrCodeEDXInvalidFlow     =-2147220753 # from enum EPcbErrCode
	epcbErrCodeEDXLicenseNotAvailable=-2147220749 # from enum EPcbErrCode
	epcbErrCodeEDXMultiDesignsNotSupported=-2147220752 # from enum EPcbErrCode
	epcbErrCodeEDXNoSchemes       =-2147220751 # from enum EPcbErrCode
	epcbErrCodeEPInfoNotLoaded    =-2147220917 # from enum EPcbErrCode
	epcbErrCodeEPLicenseNotEnabled=-2147220838 # from enum EPcbErrCode
	epcbErrCodeEngineRunning      =-2147220959 # from enum EPcbErrCode
	epcbErrCodeErrorCannotCombineDifferentNet=-2147220736 # from enum EPcbErrCode
	epcbErrCodeErrorCannotCombineTraces=-2147220737 # from enum EPcbErrCode
	epcbErrCodeErrorCannotSplitTrace=-2147220738 # from enum EPcbErrCode
	epcbErrCodeErrorCreatingRBKFile=-2147220710 # from enum EPcbErrCode
	epcbErrCodeErrorDeletingDirectory=-2147220705 # from enum EPcbErrCode
	epcbErrCodeEventTypeNotSupported=-2147220822 # from enum EPcbErrCode
	epcbErrCodeFailedToAddCellGlueSpot=-2147220426 # from enum EPcbErrCode
	epcbErrCodeFailedToAddTrajectory=-2147220548 # from enum EPcbErrCode
	epcbErrCodeFailedToCreateSketchPlan=-2147220607 # from enum EPcbErrCode
	epcbErrCodeFailedToDeleteComponent=-2147220489 # from enum EPcbErrCode
	epcbErrCodeFailedToDeleteGeneralProperty=-2147220504 # from enum EPcbErrCode
	epcbErrCodeFailedToDeleteObject=-2147220574 # from enum EPcbErrCode
	epcbErrCodeFailedToDeleteRB   =-2147220689 # from enum EPcbErrCode
	epcbErrCodeFailedToDeleteRFSegment=-2147220497 # from enum EPcbErrCode
	epcbErrCodeFailedToExcludeThingFromGroup=-2147220449 # from enum EPcbErrCode
	epcbErrCodeFailedToFindObjectByPId=-2147220527 # from enum EPcbErrCode
	epcbErrCodeFailedToFixDirtyGroups=-2147220450 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaAllowCorners=-2147220467 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaAllowNonPerpendicular=-2147220465 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaAllowParts=-2147220462 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaAllowSolidFill=-2147220463 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaAllowVias=-2147220464 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaAllowWidthChanges=-2147220466 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaBindingLength=-2147220461 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaFirstCorner=-2147220469 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaIsDynamic=-2147220468 # from enum EPcbErrCode
	epcbErrCodeFailedToGetBendAreaOrder=-2147220470 # from enum EPcbErrCode
	epcbErrCodeFailedToGetClassOfThing=-2147220555 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentAreaActivation=-2147220496 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentByName=-2147220429 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentCell=-2147220553 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentCellName=-2147220552 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentCoordinates=-2147220492 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentInsertionSide=-2147220490 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentMirror=-2147220424 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentModified=-2147220427 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentPart=-2147220543 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentPartNumber=-2147220435 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentRefDes=-2147220446 # from enum EPcbErrCode
	epcbErrCodeFailedToGetComponentRotation=-2147220491 # from enum EPcbErrCode
	epcbErrCodeFailedToGetGlossMode=-2147220503 # from enum EPcbErrCode
	epcbErrCodeFailedToGetGroupHierarchicalName=-2147220439 # from enum EPcbErrCode
	epcbErrCodeFailedToGetGroupName=-2147220452 # from enum EPcbErrCode
	epcbErrCodeFailedToGetGroupPlannedState=-2147220440 # from enum EPcbErrCode
	epcbErrCodeFailedToGetGroupRefPoint=-2147220448 # from enum EPcbErrCode
	epcbErrCodeFailedToGetIsComponentEmbeddedDie=-2147220428 # from enum EPcbErrCode
	epcbErrCodeFailedToGetPadstackGenerationType=-2147220511 # from enum EPcbErrCode
	epcbErrCodeFailedToGetPadstackHolePlated=-2147220437 # from enum EPcbErrCode
	epcbErrCodeFailedToGetPadstackName=-2147220512 # from enum EPcbErrCode
	epcbErrCodeFailedToGetPathLayer=-2147220433 # from enum EPcbErrCode
	epcbErrCodeFailedToGetPinNumber=-2147220445 # from enum EPcbErrCode
	epcbErrCodeFailedToGetPlaneLayerSettings=-2147220518 # from enum EPcbErrCode
	epcbErrCodeFailedToGetRAStateInCL=-2147220704 # from enum EPcbErrCode
	epcbErrCodeFailedToGetRuleSchema=-2147220554 # from enum EPcbErrCode
	epcbErrCodeFailedToGetTextLocation=-2147220485 # from enum EPcbErrCode
	epcbErrCodeFailedToGetViewPortAttributes=-2147220551 # from enum EPcbErrCode
	epcbErrCodeFailedToMarkGroupDirty=-2147220451 # from enum EPcbErrCode
	epcbErrCodeFailedToModifyFixLock=-2147220564 # from enum EPcbErrCode
	epcbErrCodeFailedToPlacePhysicalReuseLibraryCircuits=-2147220420 # from enum EPcbErrCode
	epcbErrCodeFailedToPlaceVirtualPins=-2147220575 # from enum EPcbErrCode
	epcbErrCodeFailedToPublishPhysicalReuseCircuitSource=-2147220422 # from enum EPcbErrCode
	epcbErrCodeFailedToPutAreaTuningKeepout=-2147220567 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaAllowCorners=-2147220477 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaAllowNonPerpendicular=-2147220475 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaAllowParts=-2147220472 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaAllowSolidFill=-2147220473 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaAllowVias=-2147220474 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaAngle=-2147220458 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaBindingLength=-2147220471 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaFirstCorner=-2147220479 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaIsDynamic=-2147220478 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaLeftSlideDistance=-2147220454 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaLineCoords=-2147220460 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaOrder=-2147220480 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaOrigin=-2147220457 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaRadius=-2147220459 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaRightSlideDistance=-2147220453 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBendAreaTolerance=-2147220455 # from enum EPcbErrCode
	epcbErrCodeFailedToPutBoardOutlineProperties=-2147220505 # from enum EPcbErrCode
	epcbErrCodeFailedToPutCavityEndLayer=-2147220516 # from enum EPcbErrCode
	epcbErrCodeFailedToPutCavityHoleName=-2147220515 # from enum EPcbErrCode
	epcbErrCodeFailedToPutCavityStartLayer=-2147220517 # from enum EPcbErrCode
	epcbErrCodeFailedToPutCellAssemblyOrigin=-2147220425 # from enum EPcbErrCode
	epcbErrCodeFailedToPutCompMetalizationAreaActive=-2147220507 # from enum EPcbErrCode
	epcbErrCodeFailedToPutComponent=-2147220569 # from enum EPcbErrCode
	epcbErrCodeFailedToPutComponentAreaActivation=-2147220495 # from enum EPcbErrCode
	epcbErrCodeFailedToPutComponentCell=-2147220535 # from enum EPcbErrCode
	epcbErrCodeFailedToPutComponentClearanceType=-2147220430 # from enum EPcbErrCode
	epcbErrCodeFailedToPutComponentModified=-2147220568 # from enum EPcbErrCode
	epcbErrCodeFailedToPutComponentPart=-2147220534 # from enum EPcbErrCode
	epcbErrCodeFailedToPutComponentProperty=-2147220487 # from enum EPcbErrCode
	epcbErrCodeFailedToPutComponentToBoardGroupHolder=-2147220550 # from enum EPcbErrCode
	epcbErrCodeFailedToPutContour =-2147220566 # from enum EPcbErrCode
	epcbErrCodeFailedToPutDRCMode =-2147220501 # from enum EPcbErrCode
	epcbErrCodeFailedToPutDRCType =-2147220500 # from enum EPcbErrCode
	epcbErrCodeFailedToPutDisplayCondition=-2147220493 # from enum EPcbErrCode
	epcbErrCodeFailedToPutDynamicReuseName=-2147220510 # from enum EPcbErrCode
	epcbErrCodeFailedToPutDynamicReuseReadyFlag=-2147220509 # from enum EPcbErrCode
	epcbErrCodeFailedToPutFlexBendAreaAllowWidthChanges=-2147220476 # from enum EPcbErrCode
	epcbErrCodeFailedToPutGeneralProperty=-2147220563 # from enum EPcbErrCode
	epcbErrCodeFailedToPutGroupPlacementSide=-2147220438 # from enum EPcbErrCode
	epcbErrCodeFailedToPutGroupProperty=-2147220443 # from enum EPcbErrCode
	epcbErrCodeFailedToPutGroupRefLayer=-2147220442 # from enum EPcbErrCode
	epcbErrCodeFailedToPutGroupRefPoint=-2147220447 # from enum EPcbErrCode
	epcbErrCodeFailedToPutHatchAngle=-2147220565 # from enum EPcbErrCode
	epcbErrCodeFailedToPutNetClass=-2147220530 # from enum EPcbErrCode
	epcbErrCodeFailedToPutNetGroupShieldingEnabled=-2147220519 # from enum EPcbErrCode
	epcbErrCodeFailedToPutPadstackGenerationType=-2147220546 # from enum EPcbErrCode
	epcbErrCodeFailedToPutPadstackType=-2147220545 # from enum EPcbErrCode
	epcbErrCodeFailedToPutParentNetGroup=-2147220523 # from enum EPcbErrCode
	epcbErrCodeFailedToPutPath    =-2147220549 # from enum EPcbErrCode
	epcbErrCodeFailedToPutPin     =-2147220558 # from enum EPcbErrCode
	epcbErrCodeFailedToPutPinComponent=-2147220486 # from enum EPcbErrCode
	epcbErrCodeFailedToPutRFSegmentID=-2147220498 # from enum EPcbErrCode
	epcbErrCodeFailedToPutReuseAreaState=-2147220508 # from enum EPcbErrCode
	epcbErrCodeFailedToPutSetting =-2147220783 # from enum EPcbErrCode
	epcbErrCodeFailedToPutShieldingNet=-2147220522 # from enum EPcbErrCode
	epcbErrCodeFailedToPutShieldingNetClass=-2147220521 # from enum EPcbErrCode
	epcbErrCodeFailedToPutShieldingPerBit=-2147220520 # from enum EPcbErrCode
	epcbErrCodeFailedToPutTargetArea=-2147220526 # from enum EPcbErrCode
	epcbErrCodeFailedToPutTextDisplayCondition=-2147220481 # from enum EPcbErrCode
	epcbErrCodeFailedToPutTextLocation=-2147220484 # from enum EPcbErrCode
	epcbErrCodeFailedToPutTextString=-2147220483 # from enum EPcbErrCode
	epcbErrCodeFailedToPutTextType=-2147220482 # from enum EPcbErrCode
	epcbErrCodeFailedToPutWidth   =-2147220572 # from enum EPcbErrCode
	epcbErrCodeFailedToPutWireBondGuideNet=-2147220506 # from enum EPcbErrCode
	epcbErrCodeFailedToRemoveComponentAreaActivation=-2147220494 # from enum EPcbErrCode
	epcbErrCodeFailedToRemoveComponentProperty=-2147220488 # from enum EPcbErrCode
	epcbErrCodeFailedToRemoveGroupProperty=-2147220444 # from enum EPcbErrCode
	epcbErrCodeFailedToRemovePhysicalReuseCircuit=-2147220413 # from enum EPcbErrCode
	epcbErrCodeFailedToReplacePhysicalReuse=-2147220411 # from enum EPcbErrCode
	epcbErrCodeFailedToSaveSccz   =-2147220579 # from enum EPcbErrCode
	epcbErrCodeFailedToSetGlossMode=-2147220502 # from enum EPcbErrCode
	epcbErrCodeFailedToSetGroupPlannedState=-2147220441 # from enum EPcbErrCode
	epcbErrCodeFailedToSetObjectType=-2147220573 # from enum EPcbErrCode
	epcbErrCodeFailedToUpdatePhysicalReuse=-2147220418 # from enum EPcbErrCode
	epcbErrCodeFailedToUpdateRAStateInCL=-2147220715 # from enum EPcbErrCode
	epcbErrCodeFileNotFound       =-2147220978 # from enum EPcbErrCode
	epcbErrCodeFixedComponentMemberofReuseBlock=-2147220777 # from enum EPcbErrCode
	epcbErrCodeFixedLockedObject  =-2147220670 # from enum EPcbErrCode
	epcbErrCodeFlexLicenseNotEnabled=-2147220853 # from enum EPcbErrCode
	epcbErrCodeFlipNotAllowed     =-2147220410 # from enum EPcbErrCode
	epcbErrCodeFromObjectMustBePin=-2147220798 # from enum EPcbErrCode
	epcbErrCodeFrozenObject       =-2147220591 # from enum EPcbErrCode
	epcbErrCodeFunctionDisabledForCellWithPart=-2147220811 # from enum EPcbErrCode
	epcbErrCodeFunctionDisabledUndocked=-2147220781 # from enum EPcbErrCode
	epcbErrCodeFunctionNotAllowedWhilePlowIsActive=-2147220580 # from enum EPcbErrCode
	epcbErrCodeFunctionNotAvailableForThisObjectType=-2147220421 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupported=-2147220968 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedForDesignTechnology=-2147220639 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedForThisType=-2147220658 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedInCellEditor=-2147220812 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedInCurrentMode=-2147220499 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedInEDMFlow=-2147220686 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedInStudentEdition=-2147220576 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedInXtreme=-2147220827 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedInXtremeServer=-2147220747 # from enum EPcbErrCode
	epcbErrCodeFunctionNotSupportedWithSelectedLicenseConfiguration=-2147220412 # from enum EPcbErrCode
	epcbErrCodeFunctionNotValidForObject=-2147220784 # from enum EPcbErrCode
	epcbErrCodeFunctionNotValidForThisView=-2147220761 # from enum EPcbErrCode
	epcbErrCodeFunctionOnlySupportedInCellEditor=-2147220790 # from enum EPcbErrCode
	epcbErrCodeFunctionRequiresActiveDocument=-2147220577 # from enum EPcbErrCode
	epcbErrCodeFwdAnnoNotAllowedCantCompile=-2147220973 # from enum EPcbErrCode
	epcbErrCodeGetComponentLayerFailed=-2147220434 # from enum EPcbErrCode
	epcbErrCodeGetNetClassNameFailed=-2147220531 # from enum EPcbErrCode
	epcbErrCodeGetNetGroupsFailed =-2147220524 # from enum EPcbErrCode
	epcbErrCodeGetOriginFailed    =-2147220570 # from enum EPcbErrCode
	epcbErrCodeGetPlacementObstructHeightFailed=-2147220431 # from enum EPcbErrCode
	epcbErrCodeGetPlacementOutlineHeightFailed=-2147220432 # from enum EPcbErrCode
	epcbErrCodeGetTypeFailed      =-2147220571 # from enum EPcbErrCode
	epcbErrCodeGlueSpotNotDefinedForComp=-2147220919 # from enum EPcbErrCode
	epcbErrCodeGroupMustBeShieldingGroup=-2147220679 # from enum EPcbErrCode
	epcbErrCodeHKPCompileFailed   =-2147220974 # from enum EPcbErrCode
	epcbErrCodeHKPExportFailed    =-2147220970 # from enum EPcbErrCode
	epcbErrCodeHandleOnCellModifyConfirmation=-2147220748 # from enum EPcbErrCode
	epcbErrCodeHazardPositionInfoNotAvailable=-2147220779 # from enum EPcbErrCode
	epcbErrCodeHoleNeedsPadstackAssignement=-2147220864 # from enum EPcbErrCode
	epcbErrCodeHoleNotFound       =-2147220948 # from enum EPcbErrCode
	epcbErrCodeIDFImportDisabled  =-2147220869 # from enum EPcbErrCode
	epcbErrCodeIncConnUpdFailed   =-2147220661 # from enum EPcbErrCode
	epcbErrCodeIncFileNotFound    =-2147220662 # from enum EPcbErrCode
	epcbErrCodeIncorrectCellType  =-2147220935 # from enum EPcbErrCode
	epcbErrCodeIncorrectGeometryType=-2147220987 # from enum EPcbErrCode
	epcbErrCodeIncorrectNameForNewPadstack=-2147220793 # from enum EPcbErrCode
	epcbErrCodeInteractiveTransMustBeOuter=-2147220729 # from enum EPcbErrCode
	epcbErrCodeInternalError      =-2147220675 # from enum EPcbErrCode
	epcbErrCodeInterruptRejected  =-2147220746 # from enum EPcbErrCode
	epcbErrCodeInvalidArray       =-2147220711 # from enum EPcbErrCode
	epcbErrCodeInvalidAutomationLicense=-2147220963 # from enum EPcbErrCode
	epcbErrCodeInvalidBendRadius  =-2147220665 # from enum EPcbErrCode
	epcbErrCodeInvalidCheckpoint  =-2147220741 # from enum EPcbErrCode
	epcbErrCodeInvalidClearanceTypes=-2147220824 # from enum EPcbErrCode
	epcbErrCodeInvalidConstraintClass=-2147220684 # from enum EPcbErrCode
	epcbErrCodeInvalidDiffPairLicense=-2147220953 # from enum EPcbErrCode
	epcbErrCodeInvalidDirectory   =-2147220979 # from enum EPcbErrCode
	epcbErrCodeInvalidFablinkXELicense=-2147220939 # from enum EPcbErrCode
	epcbErrCodeInvalidFileExtension=-2147220847 # from enum EPcbErrCode
	epcbErrCodeInvalidFont        =-2147220983 # from enum EPcbErrCode
	epcbErrCodeInvalidLayer       =-2147220900 # from enum EPcbErrCode
	epcbErrCodeInvalidLayerRange  =-2147220692 # from enum EPcbErrCode
	epcbErrCodeInvalidMicroViaLicense=-2147220955 # from enum EPcbErrCode
	epcbErrCodeInvalidObjectTypeForFunction=-2147220423 # from enum EPcbErrCode
	epcbErrCodeInvalidOverrideMode=-2147220690 # from enum EPcbErrCode
	epcbErrCodeInvalidPadstack    =-2147220982 # from enum EPcbErrCode
	epcbErrCodeInvalidParameter   =-2147220992 # from enum EPcbErrCode
	epcbErrCodeInvalidPoint       =-2147220980 # from enum EPcbErrCode
	epcbErrCodeInvalidPointsArray =-2147220990 # from enum EPcbErrCode
	epcbErrCodeInvalidProject     =-2147220754 # from enum EPcbErrCode
	epcbErrCodeInvalidRigidFlexLayer=-2147220636 # from enum EPcbErrCode
	epcbErrCodeInvalidRoomName    =-2147220984 # from enum EPcbErrCode
	epcbErrCodeInvalidRouteItemLicense=-2147220956 # from enum EPcbErrCode
	epcbErrCodeInvalidRoutePassLicense=-2147220957 # from enum EPcbErrCode
	epcbErrCodeInvalidSchemeName  =-2147220825 # from enum EPcbErrCode
	epcbErrCodeInvalidTestPoint   =-2147220755 # from enum EPcbErrCode
	epcbErrCodeInvalidUnit        =-2147220914 # from enum EPcbErrCode
	epcbErrCodeItemReservedByAnotherClient=-2147220893 # from enum EPcbErrCode
	epcbErrCodeJumperNotAllowedOnNet=-2147220814 # from enum EPcbErrCode
	epcbErrCodeKeepViaCenterInsidePadNotSet=-2147220833 # from enum EPcbErrCode
	epcbErrCodeLDDOperationNotAllowed=-2147220633 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsDisabled=-2147220728 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsDisabledInXtreme=-2147220631 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToCreateExistingNet=-2147220618 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeleteBondPin=-2147220624 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeleteNetInBus=-2147220620 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeletePlaneNet=-2147220623 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeleteReusePinNet=-2147220617 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeleteSchematicTestPoint=-2147220619 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeleteShieldingNet=-2147220622 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeleteSketchBus=-2147220621 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeleteSystemNet=-2147220625 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToDeleteTearDropNet=-2147220592 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToPutPinOnFormulaNet=-2147220628 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToPutPinOnInvalidNet=-2147220630 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToPutReuseBlockPinOnNet=-2147220626 # from enum EPcbErrCode
	epcbErrCodeLDDOperationsFailedToPutVirtualPinOnNet=-2147220627 # from enum EPcbErrCode
	epcbErrCodeLayerObjectNotSpecifiedForFabricationType=-2147220656 # from enum EPcbErrCode
	epcbErrCodeLayerRangesDoNotOverlap=-2147220691 # from enum EPcbErrCode
	epcbErrCodeLayerStackupCannotAddLayer=-2147220638 # from enum EPcbErrCode
	epcbErrCodeLayerStackupCannotDeleteBottom=-2147220644 # from enum EPcbErrCode
	epcbErrCodeLayerStackupCannotDeleteLayer=-2147220649 # from enum EPcbErrCode
	epcbErrCodeLayerStackupCannotDeleteTop=-2147220645 # from enum EPcbErrCode
	epcbErrCodeLayerStackupDRCError=-2147220650 # from enum EPcbErrCode
	epcbErrCodeLayerStackupError  =-2147220651 # from enum EPcbErrCode
	epcbErrCodeLayerStackupSignalLayerAbove=-2147220648 # from enum EPcbErrCode
	epcbErrCodeLayerStackupSignalLayerBelow=-2147220647 # from enum EPcbErrCode
	epcbErrCodeLayerTypeMustMatchFabricationType=-2147220655 # from enum EPcbErrCode
	epcbErrCodeLicenseNotAcquired =-2147220858 # from enum EPcbErrCode
	epcbErrCodeLocalDesignLibrary =-2147220731 # from enum EPcbErrCode
	epcbErrCodeMethodPropertyNotAvailableInTransaction=-2147220727 # from enum EPcbErrCode
	epcbErrCodeModifySheetError   =-2147220872 # from enum EPcbErrCode
	epcbErrCodeMultipleCavitiesNotAllowedInCellEditor=-2147220584 # from enum EPcbErrCode
	epcbErrCodeMultipleRefDeses   =-2147220849 # from enum EPcbErrCode
	epcbErrCodeMustAcquireICXProVerifyLic=-2147220896 # from enum EPcbErrCode
	epcbErrCodeMustRemoveExisting =-2147220786 # from enum EPcbErrCode
	epcbErrCodeNameAlreadyExists  =-2147220926 # from enum EPcbErrCode
	epcbErrCodeNamedMultiBoardOutlineExists=-2147220659 # from enum EPcbErrCode
	epcbErrCodeNeedCustomTopologyNetForPutVirtualPins=-2147220578 # from enum EPcbErrCode
	epcbErrCodeNetAlreadySplit    =-2147220723 # from enum EPcbErrCode
	epcbErrCodeNetNotFound        =-2147220669 # from enum EPcbErrCode
	epcbErrCodeNoDragInProgress   =-2147220821 # from enum EPcbErrCode
	epcbErrCodeNoLocalLibMgr      =-2147220976 # from enum EPcbErrCode
	epcbErrCodeNoPartNameSpecifiedForCell=-2147220732 # from enum EPcbErrCode
	epcbErrCodeNoPartitionsFoundInLibrary=-2147220730 # from enum EPcbErrCode
	epcbErrCodeNoShieldingOnBus   =-2147220683 # from enum EPcbErrCode
	epcbErrCodeNoVariantDataFound =-2147220830 # from enum EPcbErrCode
	epcbErrCodeNoViaForLayerRange =-2147220800 # from enum EPcbErrCode
	epcbErrCodeNotInOptionalList  =-2147220867 # from enum EPcbErrCode
	epcbErrCodeNotNewPadstack     =-2147220796 # from enum EPcbErrCode
	epcbErrCodeNotThreadSafe      =-2147220850 # from enum EPcbErrCode
	epcbErrCodeNotValidForHazardType=-2147220778 # from enum EPcbErrCode
	epcbErrCodeNotValidForNetShort=-2147220671 # from enum EPcbErrCode
	epcbErrCodeNotValidForUnplacedObj=-2147220775 # from enum EPcbErrCode
	epcbErrCodeNothingNeedsAssignment=-2147220868 # from enum EPcbErrCode
	epcbErrCodeNotifyDisableCrossProbingPlaceFailed=-2147220528 # from enum EPcbErrCode
	epcbErrCodeNotifyEnableCrossProbingPlaceFailed=-2147220529 # from enum EPcbErrCode
	epcbErrCodeObjectCannotBeDeleted=-2147220988 # from enum EPcbErrCode
	epcbErrCodeObjectCantBeDimensioned=-2147220981 # from enum EPcbErrCode
	epcbErrCodeObjectIsAlreadyParented=-2147220891 # from enum EPcbErrCode
	epcbErrCodeObjectNotFound     =-2147220719 # from enum EPcbErrCode
	epcbErrCodeObjectNotGroupMember=-2147220890 # from enum EPcbErrCode
	epcbErrCodeOnlyAllowedForInstancePads=-2147220788 # from enum EPcbErrCode
	epcbErrCodeOnlySupportedInRigidFlexDesigns=-2147220646 # from enum EPcbErrCode
	epcbErrCodeOnlyValidForPinPadstacks=-2147220795 # from enum EPcbErrCode
	epcbErrCodeOpenJobPrefsFailed =-2147220799 # from enum EPcbErrCode
	epcbErrCodeOperationFailed    =-2147220734 # from enum EPcbErrCode
	epcbErrCodeOperationNotSupportedForUnplacedPin=-2147220810 # from enum EPcbErrCode
	epcbErrCodeOtherTeamcenterCommandInProgress=-2147220593 # from enum EPcbErrCode
	epcbErrCodePadAreaMustOverlapOrigin=-2147220787 # from enum EPcbErrCode
	epcbErrCodePadNameNotFound    =-2147220436 # from enum EPcbErrCode
	epcbErrCodePadstackInUse      =-2147220925 # from enum EPcbErrCode
	epcbErrCodeParamsWillCreateInvalidBendArea=-2147220667 # from enum EPcbErrCode
	epcbErrCodePinNotSchematicShort=-2147220598 # from enum EPcbErrCode
	epcbErrCodePinNumberNotFound  =-2147220560 # from enum EPcbErrCode
	epcbErrCodePlaceDesignCantLoadInstance=-2147220940 # from enum EPcbErrCode
	epcbErrCodePlaceDesignCantValidate=-2147220942 # from enum EPcbErrCode
	epcbErrCodePlaceDesignError   =-2147220883 # from enum EPcbErrCode
	epcbErrCodePlaceDesignInvalidDesign=-2147220943 # from enum EPcbErrCode
	epcbErrCodePlaceDesignNoPanelBorder=-2147220944 # from enum EPcbErrCode
	epcbErrCodePlaceDesignNoViewPortShape=-2147220941 # from enum EPcbErrCode
	epcbErrCodePlaceDesignStatusCantFlipBackDrillDataDesign=-2147220682 # from enum EPcbErrCode
	epcbErrCodePlaceDesignStatusCantFlipRigidFlexDesign=-2147220641 # from enum EPcbErrCode
	epcbErrCodePlaceDesignStatusCantPlaceNonUniqueRigidFlexDesign=-2147220640 # from enum EPcbErrCode
	epcbErrCodePlaceDesignWontFit =-2147220945 # from enum EPcbErrCode
	epcbErrCodePlaceRETstPtAlreadyPlaced=-2147220930 # from enum EPcbErrCode
	epcbErrCodePlaceRETstPtCantPlace=-2147220928 # from enum EPcbErrCode
	epcbErrCodePlaceRETstPtInvalidLayer=-2147220931 # from enum EPcbErrCode
	epcbErrCodePlaceRETstPtNoCellName=-2147220929 # from enum EPcbErrCode
	epcbErrCodePlaceRETstPtPinViaOnly=-2147220933 # from enum EPcbErrCode
	epcbErrCodePlaceRETstPtTstPtObstruct=-2147220927 # from enum EPcbErrCode
	epcbErrCodePlaceRETstPtUnassignedNet=-2147220932 # from enum EPcbErrCode
	epcbErrCodePropertyDeprecated =-2147220857 # from enum EPcbErrCode
	epcbErrCodePropertyUndefined  =-2147220835 # from enum EPcbErrCode
	epcbErrCodePutComponentPlacedFlagFailed=-2147220532 # from enum EPcbErrCode
	epcbErrCodePutConstraintClassNetClassNotAllowed=-2147220590 # from enum EPcbErrCode
	epcbErrCodePutNetCommentRequiresCES=-2147220588 # from enum EPcbErrCode
	epcbErrCodePutNetCommentSinglePinNet=-2147220587 # from enum EPcbErrCode
	epcbErrCodePutPartFailed      =-2147220525 # from enum EPcbErrCode
	epcbErrCodePutToCursorFailed  =-2147220726 # from enum EPcbErrCode
	epcbErrCodeRACertECOStateCanOnlyChangeToCertPending=-2147220708 # from enum EPcbErrCode
	epcbErrCodeRACertPendingStateCanOnlyChangeToCertECO=-2147220706 # from enum EPcbErrCode
	epcbErrCodeRACertPendingStateCanOnlyChangeToDynamic=-2147220707 # from enum EPcbErrCode
	epcbErrCodeRACertifiedStateCanOnlyChangeToCertECO=-2147220709 # from enum EPcbErrCode
	epcbErrCodeRADynamicStateCanOnlyChangeToCertPending=-2147220712 # from enum EPcbErrCode
	epcbErrCodeRAWithEmptyNameCannotBePublishable=-2147220716 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusCantFlipBackDrillDataDesign=-2147220681 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusCantFlipRigidFlexDesign=-2147220642 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusDesignAlreadyExists=-2147220765 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusNonConformingLayerStackup=-2147220766 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusNonSymmetricalViaSpan=-2147220764 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusOK=-2147220770 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusSrcDesignNotFound=-2147220762 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusValidationFailed=-2147220767 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusVariantDataGenerationRequired=-2147220768 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusVariantDataNotGenerated=-2147220769 # from enum EPcbErrCode
	epcbErrCodeReReferenceDesignStatusWarnings=-2147220763 # from enum EPcbErrCode
	epcbErrCodeRecordNumberNotFound=-2147220803 # from enum EPcbErrCode
	epcbErrCodeRefObjectAlreadyDefined=-2147220889 # from enum EPcbErrCode
	epcbErrCodeRejectedByServer   =-2147220892 # from enum EPcbErrCode
	epcbErrCodeReloadFailed       =-2147220862 # from enum EPcbErrCode
	epcbErrCodeRenameStackupSchemeNameAlreadyUsed=-2147220603 # from enum EPcbErrCode
	epcbErrCodeRenameStackupSchemeNameEmpty=-2147220605 # from enum EPcbErrCode
	epcbErrCodeRenameStackupSchemeNameInvalidChar=-2147220604 # from enum EPcbErrCode
	epcbErrCodeRenumberingDisabledWithCES=-2147220848 # from enum EPcbErrCode
	epcbErrCodeReplayAlreadyinProgress=-2147220698 # from enum EPcbErrCode
	epcbErrCodeReuseAreaIllegalName=-2147220717 # from enum EPcbErrCode
	epcbErrCodeReuseAreasCannotOverlap=-2147220713 # from enum EPcbErrCode
	epcbErrCodeReuseBlockLicenseRequired=-2147220703 # from enum EPcbErrCode
	epcbErrCodeRigidFlexLicenseNotEnabled=-2147220657 # from enum EPcbErrCode
	epcbErrCodeRouterFailedToRun  =-2147220954 # from enum EPcbErrCode
	epcbErrCodeSMDPinSideRequiresCavity=-2147220582 # from enum EPcbErrCode
	epcbErrCodeSandboxOwnedByOtherUser=-2147220806 # from enum EPcbErrCode
	epcbErrCodeSandboxWithNameAlreadyExists=-2147220804 # from enum EPcbErrCode
	epcbErrCodeSaveCustomEventTooLong=-2147220756 # from enum EPcbErrCode
	epcbErrCodeScriptFailed       =-2147220961 # from enum EPcbErrCode
	epcbErrCodeServerNotValidated =-2147220947 # from enum EPcbErrCode
	epcbErrCodeSheetCreateError   =-2147220842 # from enum EPcbErrCode
	epcbErrCodeSheetCreateInstanceNotFound=-2147220840 # from enum EPcbErrCode
	epcbErrCodeSheetDeleteError   =-2147220839 # from enum EPcbErrCode
	epcbErrCodeSheetInstanceNotFound=-2147220878 # from enum EPcbErrCode
	epcbErrCodeSheetInvalidArray  =-2147220875 # from enum EPcbErrCode
	epcbErrCodeSheetNameContainsInvalidChars=-2147220663 # from enum EPcbErrCode
	epcbErrCodeSheetNotFound      =-2147220843 # from enum EPcbErrCode
	epcbErrCodeSheetToCreateExists=-2147220841 # from enum EPcbErrCode
	epcbErrCodeSheetVwNotFound    =-2147220876 # from enum EPcbErrCode
	epcbErrCodeSheetVwViewExists  =-2147220877 # from enum EPcbErrCode
	epcbErrCodeShieldingNetClassMustBeSet=-2147220680 # from enum EPcbErrCode
	epcbErrCodeSketchPlanFromToFailed=-2147220609 # from enum EPcbErrCode
	epcbErrCodeSketchPlanFromToRemoveFailed=-2147220608 # from enum EPcbErrCode
	epcbErrCodeSketchPlanGraphicsUpdateFailed=-2147220610 # from enum EPcbErrCode
	epcbErrCodeSketchPlanInvalidSeeLog=-2147220606 # from enum EPcbErrCode
	epcbErrCodeSolderMaskLayerNotFound=-2147220654 # from enum EPcbErrCode
	epcbErrCodeSpecifyLayer       =-2147220844 # from enum EPcbErrCode
	epcbErrCodeStartLayerGreaterEqualEndLayer=-2147220809 # from enum EPcbErrCode
	epcbErrCodeStrokeTextOnTrueTypeFontNotSupported=-2147220634 # from enum EPcbErrCode
	epcbErrCodeTestPointCellNotFound=-2147220817 # from enum EPcbErrCode
	epcbErrCodeTestPointChangeDisabledWithCES=-2147220816 # from enum EPcbErrCode
	epcbErrCodeTestPointLimitReached=-2147220594 # from enum EPcbErrCode
	epcbErrCodeTextOnLayerNotCreated=-2147220653 # from enum EPcbErrCode
	epcbErrCodeTextStringLengthTooLong=-2147220417 # from enum EPcbErrCode
	epcbErrCodeTieLegNoPinOrVia   =-2147220859 # from enum EPcbErrCode
	epcbErrCodeTieLegNumberNotSet =-2147220860 # from enum EPcbErrCode
	epcbErrCodeTopologyPlannerLicenseError=-2147220744 # from enum EPcbErrCode
	epcbErrCodeTransactionNotStarted=-2147220899 # from enum EPcbErrCode
	epcbErrCodeUanbleToPutPlacementOutlineBottomHeight=-2147220513 # from enum EPcbErrCode
	epcbErrCodeUanbleToPutPlacementOutlineTopHeight=-2147220514 # from enum EPcbErrCode
	epcbErrCodeUnablePutCell      =-2147220539 # from enum EPcbErrCode
	epcbErrCodeUnableToCreateBendArea=-2147220664 # from enum EPcbErrCode
	epcbErrCodeUnableToGetCellMountType=-2147220541 # from enum EPcbErrCode
	epcbErrCodeUnableToGetCellType=-2147220540 # from enum EPcbErrCode
	epcbErrCodeUnableToGetComponentInsertionSide=-2147220557 # from enum EPcbErrCode
	epcbErrCodeUnableToGetFixLockFlag=-2147220556 # from enum EPcbErrCode
	epcbErrCodeUnableToMoveComponent=-2147220533 # from enum EPcbErrCode
	epcbErrCodeUnableToPutCellMountType=-2147220537 # from enum EPcbErrCode
	epcbErrCodeUnableToPutCellType=-2147220536 # from enum EPcbErrCode
	epcbErrCodeUnableToPutGetNetCommentInSolidEdgeDesign=-2147220561 # from enum EPcbErrCode
	epcbErrCodeUnableToPutPlanePriority=-2147220456 # from enum EPcbErrCode
	epcbErrCodeUnableToSaveDesign =-2147220863 # from enum EPcbErrCode
	epcbErrCodeUnknownProduct     =-2147220969 # from enum EPcbErrCode
	epcbErrCodeUnsupportedType    =-2147220802 # from enum EPcbErrCode
	epcbErrCodeUseCellLibrarySettingsEnabled=-2147220785 # from enum EPcbErrCode
	epcbErrCodeValidationFailed   =-2147220950 # from enum EPcbErrCode
	epcbErrCodeValidationUninitialized=-2147220949 # from enum EPcbErrCode
	epcbErrCodeVariantLicenseNotEnabled=-2147220831 # from enum EPcbErrCode
	epcbErrCodeViaSpanMustReachSurface=-2147220832 # from enum EPcbErrCode
	epcbErrCodeViewCannotRetrieveIDispatchInterface=-2147220757 # from enum EPcbErrCode
	epcbErrCodeViewDoesNotSupportParameters=-2147220759 # from enum EPcbErrCode
	epcbErrCodeZAxisClearanceNotSupported=-2147220823 # from enum EPcbErrCode
	epcbErrGetComponentPlacedFlagFailed=-2147220547 # from enum EPcbErrCode
	epcbErrValuesOutOfBounds      =2147483647 # from enum EPcbErrValues
	epcbError                     =1          # from enum EPcbErrorSeverity
	epcbFatalError                =2          # from enum EPcbErrorSeverity
	epcbWarning                   =0          # from enum EPcbErrorSeverity
	epcbEventCmdPostOnChar        =19         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnCommand     =24         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnEscape      =23         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnMouseBeginDrag=11         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnMouseCancelDrag=17         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnMouseClk    =7          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnMouseDblClk =9          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnMouseDown   =5          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnMouseDrag   =13         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnMouseEndDrag=15         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnMouseMove   =3          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnTerminate   =25         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPostOnVChar       =21         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnChar         =18         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnCommand      =1          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnEscape       =22         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnMouseBeginDrag=10         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnMouseCancelDrag=16         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnMouseClk     =6          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnMouseDblClk  =8          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnMouseDown    =4          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnMouseDrag    =12         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnMouseEndDrag =14         # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnMouseMove    =2          # from enum EPcbEventListenerTypeCmd
	epcbEventCmdPreOnVChar        =20         # from enum EPcbEventListenerTypeCmd
	epcbEventAppOnChangeTeamcenterBOMFile=11         # from enum EPcbEventTypeApp
	epcbEventAppOnDataManagementOperationFinished=12         # from enum EPcbEventTypeApp
	epcbEventAppOnEarlyDocumentLoading=13         # from enum EPcbEventTypeApp
	epcbEventAppOnIdle            =5          # from enum EPcbEventTypeApp
	epcbEventAppOnIdleExt         =8          # from enum EPcbEventTypeApp
	epcbEventAppOnOpenDocument    =6          # from enum EPcbEventTypeApp
	epcbEventAppOnOpenTeamcenterDocument=10         # from enum EPcbEventTypeApp
	epcbEventAppOnPreLaunchKeyinDlg=9          # from enum EPcbEventTypeApp
	epcbEventAppOnProcessKeyin    =7          # from enum EPcbEventTypeApp
	epcbEventAppOnReplayFinished  =3          # from enum EPcbEventTypeApp
	epcbEventAppOpenDocument      =1          # from enum EPcbEventTypeApp
	epcbEventAppPreOpenDocument   =4          # from enum EPcbEventTypeApp
	epcbEventAppQuit              =2          # from enum EPcbEventTypeApp
	epcbEventCmdOnChar            =10         # from enum EPcbEventTypeCmd
	epcbEventCmdOnLayerChanged    =12         # from enum EPcbEventTypeCmd
	epcbEventCmdOnMouseBeginDrag  =6          # from enum EPcbEventTypeCmd
	epcbEventCmdOnMouseCancelDrag =9          # from enum EPcbEventTypeCmd
	epcbEventCmdOnMouseClk        =4          # from enum EPcbEventTypeCmd
	epcbEventCmdOnMouseDblClk     =5          # from enum EPcbEventTypeCmd
	epcbEventCmdOnMouseDown       =3          # from enum EPcbEventTypeCmd
	epcbEventCmdOnMouseDrag       =7          # from enum EPcbEventTypeCmd
	epcbEventCmdOnMouseEndDrag    =8          # from enum EPcbEventTypeCmd
	epcbEventCmdOnMouseMove       =2          # from enum EPcbEventTypeCmd
	epcbEventCmdOnTerminate       =1          # from enum EPcbEventTypeCmd
	epcbEventCmdOnUndo            =13         # from enum EPcbEventTypeCmd
	epcbEventCmdOnVChar           =11         # from enum EPcbEventTypeCmd
	epcbEventDialogOnApply        =3          # from enum EPcbEventTypeDialog
	epcbEventDialogOnClosed       =1          # from enum EPcbEventTypeDialog
	epcbEventDialogOnOK           =2          # from enum EPcbEventTypeDialog
	epcbEventDocBeforeClose       =4          # from enum EPcbEventTypeDoc
	epcbEventDocChange            =3          # from enum EPcbEventTypeDoc
	epcbEventDocOn3DDrc           =41         # from enum EPcbEventTypeDoc
	epcbEventDocOnActivePlaceLayerChange=34         # from enum EPcbEventTypeDoc
	epcbEventDocOnActiveRouteLayerChange=33         # from enum EPcbEventTypeDoc
	epcbEventDocOnAutoRouteEnd    =61         # from enum EPcbEventTypeDoc
	epcbEventDocOnAutoRouteStart  =60         # from enum EPcbEventTypeDoc
	epcbEventDocOnBackAnnotation  =29         # from enum EPcbEventTypeDoc
	epcbEventDocOnBendRadiusLimitsChanged=71         # from enum EPcbEventTypeDoc
	epcbEventDocOnBoardOutlineStackupChanged=70         # from enum EPcbEventTypeDoc
	epcbEventDocOnCellDBChange    =47         # from enum EPcbEventTypeDoc
	epcbEventDocOnCellModifyConfirmation=48         # from enum EPcbEventTypeDoc
	epcbEventDocOnCellReplaceOrReset=74         # from enum EPcbEventTypeDoc
	epcbEventDocOnChange          =5          # from enum EPcbEventTypeDoc
	epcbEventDocOnChangeLocal     =24         # from enum EPcbEventTypeDoc
	epcbEventDocOnClosed          =7          # from enum EPcbEventTypeDoc
	epcbEventDocOnClosing         =31         # from enum EPcbEventTypeDoc
	epcbEventDocOnComponentUnPlaced=20         # from enum EPcbEventTypeDoc
	epcbEventDocOnConstraintsChange=39         # from enum EPcbEventTypeDoc
	epcbEventDocOnCreateBondWire  =42         # from enum EPcbEventTypeDoc
	epcbEventDocOnCreateComponentMotionGfx=11         # from enum EPcbEventTypeDoc
	epcbEventDocOnCreateMotionGfx =63         # from enum EPcbEventTypeDoc
	epcbEventDocOnDatabaseChanged =18         # from enum EPcbEventTypeDoc
	epcbEventDocOnDesignDataUploaded=58         # from enum EPcbEventTypeDoc
	epcbEventDocOnDesignTechnologyChanged=69         # from enum EPcbEventTypeDoc
	epcbEventDocOnDestroyComponentMotionGfx=12         # from enum EPcbEventTypeDoc
	epcbEventDocOnDestroyMotionGfx=64         # from enum EPcbEventTypeDoc
	epcbEventDocOnDisplayColorChange=21         # from enum EPcbEventTypeDoc
	epcbEventDocOnDisplayOnOffChange=23         # from enum EPcbEventTypeDoc
	epcbEventDocOnDisplaySchemeChange=35         # from enum EPcbEventTypeDoc
	epcbEventDocOnDisplaySchemeListChanged=62         # from enum EPcbEventTypeDoc
	epcbEventDocOnDynamicReuseBlockUnlocked=55         # from enum EPcbEventTypeDoc
	epcbEventDocOnEnterVariantView=44         # from enum EPcbEventTypeDoc
	epcbEventDocOnExitVariantView =45         # from enum EPcbEventTypeDoc
	epcbEventDocOnForwardAnnotation=26         # from enum EPcbEventTypeDoc
	epcbEventDocOnHighlightChange =65         # from enum EPcbEventTypeDoc
	epcbEventDocOnInterTool       =38         # from enum EPcbEventTypeDoc
	epcbEventDocOnLDDNetUpdate    =73         # from enum EPcbEventTypeDoc
	epcbEventDocOnLicenseChange   =49         # from enum EPcbEventTypeDoc
	epcbEventDocOnMarkedChange    =53         # from enum EPcbEventTypeDoc
	epcbEventDocOnNetFilterChanged=72         # from enum EPcbEventTypeDoc
	epcbEventDocOnNetlineOrderChanged=14         # from enum EPcbEventTypeDoc
	epcbEventDocOnNotify          =9          # from enum EPcbEventTypeDoc
	epcbEventDocOnOnDisplayViewExtentsChange=22         # from enum EPcbEventTypeDoc
	epcbEventDocOnPostBackAnnotate=30         # from enum EPcbEventTypeDoc
	epcbEventDocOnPostForwardAnnotate=27         # from enum EPcbEventTypeDoc
	epcbEventDocOnPostPublishDRB  =56         # from enum EPcbEventTypeDoc
	epcbEventDocOnPreBackAnnotate =28         # from enum EPcbEventTypeDoc
	epcbEventDocOnPreChange       =40         # from enum EPcbEventTypeDoc
	epcbEventDocOnPreClose        =8          # from enum EPcbEventTypeDoc
	epcbEventDocOnPreComponentPlace=13         # from enum EPcbEventTypeDoc
	epcbEventDocOnPreComponentsPlaced=68         # from enum EPcbEventTypeDoc
	epcbEventDocOnPreForwardAnnotate=25         # from enum EPcbEventTypeDoc
	epcbEventDocOnPrePublishDRB   =57         # from enum EPcbEventTypeDoc
	epcbEventDocOnPreSave         =17         # from enum EPcbEventTypeDoc
	epcbEventDocOnPreTempSave     =36         # from enum EPcbEventTypeDoc
	epcbEventDocOnProjectFileChanged=54         # from enum EPcbEventTypeDoc
	epcbEventDocOnPropertyChange  =16         # from enum EPcbEventTypeDoc
	epcbEventDocOnRButtonClk      =10         # from enum EPcbEventTypeDoc
	epcbEventDocOnSave            =1          # from enum EPcbEventTypeDoc
	epcbEventDocOnSelectionChange =6          # from enum EPcbEventTypeDoc
	epcbEventDocOnSessionCancel   =51         # from enum EPcbEventTypeDoc
	epcbEventDocOnSessionComplete =50         # from enum EPcbEventTypeDoc
	epcbEventDocOnSessionStart    =52         # from enum EPcbEventTypeDoc
	epcbEventDocOnSettingsChange  =46         # from enum EPcbEventTypeDoc
	epcbEventDocOnSimulationFinished=15         # from enum EPcbEventTypeDoc
	epcbEventDocOnTempSave        =37         # from enum EPcbEventTypeDoc
	epcbEventDocOnViewClose       =59         # from enum EPcbEventTypeDoc
	epcbEventDocOnWireBondBatchDRC=43         # from enum EPcbEventTypeDoc
	epcbEventDocOnWorkbenchToolRequested=19         # from enum EPcbEventTypeDoc
	epcbEventDocOnXtremeFileCheckin=32         # from enum EPcbEventTypeDoc
	epcbEventDocOnXtremeInterruptAccepted=66         # from enum EPcbEventTypeDoc
	epcbEventDocOnXtremeInterruptRequest=67         # from enum EPcbEventTypeDoc
	epcbEventDocSelectionChange   =2          # from enum EPcbEventTypeDoc
	epcbFabPadCoverLayer          =3          # from enum EPcbFabricationPadType
	epcbFabPadSoldermask          =2          # from enum EPcbFabricationPadType
	epcbFabPadSolderpaste         =1          # from enum EPcbFabricationPadType
	epcbFabPadStiffener           =4          # from enum EPcbFabricationPadType
	epcbFabAdhesive               =2048       # from enum EPcbFabricationType
	epcbFabAll                    =-1         # from enum EPcbFabricationType
	epcbFabAssembly               =1          # from enum EPcbFabricationType
	epcbFabCoverLayer             =1024       # from enum EPcbFabricationType
	epcbFabDocumentation          =512        # from enum EPcbFabricationType
	epcbFabDrillDrawing           =64         # from enum EPcbFabricationType
	epcbFabGeneratedSilkscreen    =4          # from enum EPcbFabricationType
	epcbFabRedline                =32         # from enum EPcbFabricationType
	epcbFabScoringLine            =256        # from enum EPcbFabricationType
	epcbFabShearingLine           =128        # from enum EPcbFabricationType
	epcbFabSilkscreen             =2          # from enum EPcbFabricationType
	epcbFabSoldermask             =16         # from enum EPcbFabricationType
	epcbFabSolderpaste            =8          # from enum EPcbFabricationType
	epcbFabStiffener              =4096       # from enum EPcbFabricationType
	epcbFacementBottom            =1          # from enum EPcbFacement
	epcbFacementTop               =0          # from enum EPcbFacement
	epcbFileBrowserFileMustExist  =4096       # from enum EPcbFileBrowserOptions
	epcbFileBrowserHideReadOnlyFlag=4          # from enum EPcbFileBrowserOptions
	epcbFileBrowserNoChangeDirectory=8          # from enum EPcbFileBrowserOptions
	epcbFileBrowserPromptForOverwrite=2          # from enum EPcbFileBrowserOptions
	epcbFileBrowserReadOnlyFlag   =1          # from enum EPcbFileBrowserOptions
	epcbFixLockFixed              =2          # from enum EPcbFixLockType
	epcbFixLockLocked             =3          # from enum EPcbFixLockType
	epcbFixLockNone               =0          # from enum EPcbFixLockType
	epcbFixLockSemiFixed          =1          # from enum EPcbFixLockType
	epcbFlowBSXE                  =3          # from enum EPcbFlowType
	epcbFlowDC                    =2          # from enum EPcbFlowType
	epcbFlowDxDesigner            =1          # from enum EPcbFlowType
	epcbFlowOther                 =4          # from enum EPcbFlowType
	epcbFromToAll                 =3          # from enum EPcbFromToType
	epcbFromToAllInclOrderOpen    =4          # from enum EPcbFromToType
	epcbFromToForcedOrder         =2          # from enum EPcbFromToType
	epcbFromToUnconnected         =1          # from enum EPcbFromToType
	epcbFromToUnconnectedInclOrderOpen=5          # from enum EPcbFromToType
	epcbFromToUnconnectedIncludingBundle=6          # from enum EPcbFromToType
	epcbGenClearanceBoardEdge     =8          # from enum EPcbGenClearanceObject
	epcbGenClearanceContour       =4          # from enum EPcbGenClearanceObject
	epcbGenClearanceMountingHole  =5          # from enum EPcbGenClearanceObject
	epcbGenClearanceNonPlaneConductor=6          # from enum EPcbGenClearanceObject
	epcbGenClearancePad           =11         # from enum EPcbGenClearanceObject
	epcbGenClearancePlacementObstruct=2          # from enum EPcbGenClearanceObject
	epcbGenClearancePlacementOutline=1          # from enum EPcbGenClearanceObject
	epcbGenClearancePlaneConductor=7          # from enum EPcbGenClearanceObject
	epcbGenClearanceResistor      =9          # from enum EPcbGenClearanceObject
	epcbGenClearanceTestPointCenter=3          # from enum EPcbGenClearanceObject
	epcbGenClearanceTrace         =10         # from enum EPcbGenClearanceObject
	epcbGlossModeLocal            =1          # from enum EPcbGlossMode
	epcbGlossModeOff              =0          # from enum EPcbGlossMode
	epcbGlossModeOn               =2          # from enum EPcbGlossMode
	epcbGraphicsFillBackSlashCoarse=5          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillBackSlashFine =4          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillDiagonalHatchCoarse=11         # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillDiagonalHatchFine=10         # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillForwardSlashCoarse=3          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillForwardSlashFine=2          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillHorizontalCoarse=7          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillHorizontalFine=6          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillNone          =0          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillSolid         =1          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillVerticalCoarse=9          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillVerticalFine  =8          # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillVerticalHatchCoarse=13         # from enum EPcbGraphicsFillStyle
	epcbGraphicsFillVerticalHatchFine=12         # from enum EPcbGraphicsFillStyle
	epcbGraphicsItemStateModifierIgnoreEnabled=134217728  # from enum EPcbGraphicsItemState
	epcbGraphicsItemStateModifierIgnoreOnOff=67108864   # from enum EPcbGraphicsItemState
	epcbGraphicsItemStateOffEnabled=0          # from enum EPcbGraphicsItemState
	epcbGraphicsItemStateOffNotEnabled=2          # from enum EPcbGraphicsItemState
	epcbGraphicsItemStateOnEnabled=1          # from enum EPcbGraphicsItemState
	epcbGraphicsItemStateOnNotEnabled=3          # from enum EPcbGraphicsItemState
	epcbGraphicsLineDash          =1          # from enum EPcbGraphicsLineType
	epcbGraphicsLineDashDot       =3          # from enum EPcbGraphicsLineType
	epcbGraphicsLineDashDotDot    =5          # from enum EPcbGraphicsLineType
	epcbGraphicsLineDot           =2          # from enum EPcbGraphicsLineType
	epcbGraphicsLineLongShort     =9          # from enum EPcbGraphicsLineType
	epcbGraphicsLineLongShortShort=10         # from enum EPcbGraphicsLineType
	epcbGraphicsLineShortDash     =8          # from enum EPcbGraphicsLineType
	epcbGraphicsLineSolid         =0          # from enum EPcbGraphicsLineType
	epcbGraphicsLineVeryLongLong  =11         # from enum EPcbGraphicsLineType
	epcbGridComponentPrimary      =0          # from enum EPcbGridType
	epcbGridComponentSecondary    =1          # from enum EPcbGridType
	epcbGridDrawing               =2          # from enum EPcbGridType
	epcbGridJumper                =3          # from enum EPcbGridType
	epcbGridPlacementOffsetX      =7          # from enum EPcbGridType
	epcbGridPlacementOffsetY      =8          # from enum EPcbGridType
	epcbGridRoute                 =4          # from enum EPcbGridType
	epcbGridRouteOffsetX          =9          # from enum EPcbGridType
	epcbGridRouteOffsetY          =10         # from enum EPcbGridType
	epcbGridTestPoint             =5          # from enum EPcbGridType
	epcbGridVia                   =6          # from enum EPcbGridType
	epcbGroupSortByAngle          =9          # from enum EPcbGroupSortKey
	epcbGroupSortByAssignedAreaName=14         # from enum EPcbGroupSortKey
	epcbGroupSortByCellName       =6          # from enum EPcbGroupSortKey
	epcbGroupSortByCircuit        =18         # from enum EPcbGroupSortKey
	epcbGroupSortByCompArea       =2          # from enum EPcbGroupSortKey
	epcbGroupSortByConnectionCount=11         # from enum EPcbGroupSortKey
	epcbGroupSortByDescription    =16         # from enum EPcbGroupSortKey
	epcbGroupSortByHeight         =17         # from enum EPcbGroupSortKey
	epcbGroupSortByLayer          =8          # from enum EPcbGroupSortKey
	epcbGroupSortByMarked         =4          # from enum EPcbGroupSortKey
	epcbGroupSortByMountType      =13         # from enum EPcbGroupSortKey
	epcbGroupSortByPackageType    =12         # from enum EPcbGroupSortKey
	epcbGroupSortByPartNumber     =7          # from enum EPcbGroupSortKey
	epcbGroupSortByPinCount       =1          # from enum EPcbGroupSortKey
	epcbGroupSortByRefDes         =3          # from enum EPcbGroupSortKey
	epcbGroupSortBySeedMark       =15         # from enum EPcbGroupSortKey
	epcbGroupSortBySheet          =10         # from enum EPcbGroupSortKey
	epcbGroupSortByState          =5          # from enum EPcbGroupSortKey
	epcbGroupSortByTimeStamp      =19         # from enum EPcbGroupSortKey
	epcbGroupSortNotDefined       =0          # from enum EPcbGroupSortKey
	epcbGroupPlaced               =2          # from enum EPcbGroupState
	epcbGroupPlanned              =1          # from enum EPcbGroupState
	epcbGroupUnplanned            =0          # from enum EPcbGroupState
	epcbComplexVia                =5          # from enum EPcbGroupType
	epcbGroupAll                  =-1         # from enum EPcbGroupType
	epcbGroupComponent            =2          # from enum EPcbGroupType
	epcbGroupPhysicalReuseInstance=6          # from enum EPcbGroupType
	epcbGroupPhysicalReuseSource  =7          # from enum EPcbGroupType
	epcbGroupRF                   =1          # from enum EPcbGroupType
	epcbGroupReUse                =4          # from enum EPcbGroupType
	epcbGroupUser                 =3          # from enum EPcbGroupType
	epcbHThingAll                 =0          # from enum EPcbHThingType
	epcbHThingBoard               =3          # from enum EPcbHThingType
	epcbHThingCluster             =2          # from enum EPcbHThingType
	epcbHThingComplexVia          =9          # from enum EPcbHThingType
	epcbHThingComponent           =1          # from enum EPcbHThingType
	epcbHThingGroup               =4          # from enum EPcbHThingType
	epcbHThingPhysicalReuse       =10         # from enum EPcbHThingType
	epcbHThingReusableBlock       =5          # from enum EPcbHThingType
	epcbHThingTargetArea          =7          # from enum EPcbHThingType
	epcbHThingVirtualPin          =6          # from enum EPcbHThingType
	epcbHThingWireBond            =8          # from enum EPcbHThingType
	epcbHardObsExpFull            =1          # from enum EPcbHardObstacleExpansionMode
	epcbHardObsExpLessSmallValue  =0          # from enum EPcbHardObstacleExpansionMode
	epcbHatchAnyAngleCrosshatch   =8          # from enum EPcbHatchType
	epcbHatchAnyAngleSlash        =7          # from enum EPcbHatchType
	epcbHatchCrosshatch           =5          # from enum EPcbHatchType
	epcbHatchCrosshatchDiagonal   =6          # from enum EPcbHatchType
	epcbHatchDefault              =0          # from enum EPcbHatchType
	epcbHatchDiagonalBackslash    =4          # from enum EPcbHatchType
	epcbHatchDiagonalSlash        =3          # from enum EPcbHatchType
	epcbHatchHorizontal           =2          # from enum EPcbHatchType
	epcbHatchVertical             =1          # from enum EPcbHatchType
	epcbHazardSeverityInfo        =5          # from enum EPcbHazardSeverity
	epcbHazardSeverityMaximum     =4          # from enum EPcbHazardSeverity
	epcbHazardSeverityMinimum     =3          # from enum EPcbHazardSeverity
	epcbHazardSeverityModerate    =1          # from enum EPcbHazardSeverity
	epcbHazardSeveritySevere      =0          # from enum EPcbHazardSeverity
	epcbHazardSeverityUndefined   =-1         # from enum EPcbHazardSeverity
	epcbHazardSeverityWarning     =2          # from enum EPcbHazardSeverity
	epcbHazardTypeADRCharacteristicImpedance=113        # from enum EPcbHazardType
	epcbHazardTypeADRCrossTalk    =111        # from enum EPcbHazardType
	epcbHazardTypeADRCrosstalkSummary=115        # from enum EPcbHazardType
	epcbHazardTypeADRDelay        =110        # from enum EPcbHazardType
	epcbHazardTypeADRDelayFormulas=116        # from enum EPcbHazardType
	epcbHazardTypeADRDelaySummary =114        # from enum EPcbHazardType
	epcbHazardTypeADRHighRingback =109        # from enum EPcbHazardType
	epcbHazardTypeADRLowRingback  =108        # from enum EPcbHazardType
	epcbHazardTypeADRNetsUnableSimulate=105        # from enum EPcbHazardType
	epcbHazardTypeADRNonmonotonic =112        # from enum EPcbHazardType
	epcbHazardTypeADROvershoot    =106        # from enum EPcbHazardType
	epcbHazardTypeADRSimulation   =6          # from enum EPcbHazardType
	epcbHazardTypeADRUndershoot   =107        # from enum EPcbHazardType
	epcbHazardTypeAll             =0          # from enum EPcbHazardType
	epcbHazardTypeBatch           =2          # from enum EPcbHazardType
	epcbHazardTypeBendArea        =202        # from enum EPcbHazardType
	epcbHazardTypeBendAreaBendVios=197        # from enum EPcbHazardType
	epcbHazardTypeBendAreaPartsHoles=195        # from enum EPcbHazardType
	epcbHazardTypeBendAreaPlaneVios=198        # from enum EPcbHazardType
	epcbHazardTypeBendAreaTraces  =196        # from enum EPcbHazardType
	epcbHazardTypeBoardOutlineIsolated=200        # from enum EPcbHazardType
	epcbHazardTypeBoardOutlineOverlapping=199        # from enum EPcbHazardType
	epcbHazardTypeBusBitWidth     =152        # from enum EPcbHazardType
	epcbHazardTypeBusMinLength    =161        # from enum EPcbHazardType
	epcbHazardTypeBusNetlineSpan  =43         # from enum EPcbHazardType
	epcbHazardTypeBusPinDistance  =160        # from enum EPcbHazardType
	epcbHazardTypeBusShielding    =162        # from enum EPcbHazardType
	epcbHazardTypeBusSpacing      =44         # from enum EPcbHazardType
	epcbHazardTypeBusUnpackedAreas=159        # from enum EPcbHazardType
	epcbHazardTypeCamAcutAngls    =59         # from enum EPcbHazardType
	epcbHazardTypeCamAcutAnglsPl  =60         # from enum EPcbHazardType
	epcbHazardTypeCamFirstCorns   =61         # from enum EPcbHazardType
	epcbHazardTypeCamFirstCornsPl =62         # from enum EPcbHazardType
	epcbHazardTypeCamPlaneGr1     =53         # from enum EPcbHazardType
	epcbHazardTypeCamPlaneGr2     =54         # from enum EPcbHazardType
	epcbHazardTypeCamPlaneGr3     =55         # from enum EPcbHazardType
	epcbHazardTypeCamSMaskSlivers =66         # from enum EPcbHazardType
	epcbHazardTypeCamSlivers      =48         # from enum EPcbHazardType
	epcbHazardTypeCamSliversGr1   =50         # from enum EPcbHazardType
	epcbHazardTypeCamSliversGr2   =51         # from enum EPcbHazardType
	epcbHazardTypeCamSliversGr3   =52         # from enum EPcbHazardType
	epcbHazardTypeCamSliversPl    =49         # from enum EPcbHazardType
	epcbHazardTypeCamSoldermaskGr1=56         # from enum EPcbHazardType
	epcbHazardTypeCamSoldermaskGr2=57         # from enum EPcbHazardType
	epcbHazardTypeCamSoldermaskGr3=58         # from enum EPcbHazardType
	epcbHazardTypeCamToe2Toes     =63         # from enum EPcbHazardType
	epcbHazardTypeCamToe2ToesPl   =64         # from enum EPcbHazardType
	epcbHazardTypeClearance       =45         # from enum EPcbHazardType
	epcbHazardTypeComponent       =11         # from enum EPcbHazardType
	epcbHazardTypeCrossTalk       =42         # from enum EPcbHazardType
	epcbHazardTypeDangling        =75         # from enum EPcbHazardType
	epcbHazardTypeDelaySummary    =34         # from enum EPcbHazardType
	epcbHazardTypeDffBatch        =3          # from enum EPcbHazardType
	epcbHazardTypeDffDrillHoleMissing=165        # from enum EPcbHazardType
	epcbHazardTypeDffDrillMinAnnRing=140        # from enum EPcbHazardType
	epcbHazardTypeDffDrillProximity=139        # from enum EPcbHazardType
	epcbHazardTypeDffExposureProximity=146        # from enum EPcbHazardType
	epcbHazardTypeDffHoleRegistration=142        # from enum EPcbHazardType
	epcbHazardTypeDffMinHoleSize  =141        # from enum EPcbHazardType
	epcbHazardTypeDffPlaneAcuteASliver=136        # from enum EPcbHazardType
	epcbHazardTypeDffPlanePad2PadSliver=138        # from enum EPcbHazardType
	epcbHazardTypeDffPlanePadEntrySliver=137        # from enum EPcbHazardType
	epcbHazardTypeDffPlaneProximity=133        # from enum EPcbHazardType
	epcbHazardTypeDffPlaneRatioSliver=135        # from enum EPcbHazardType
	epcbHazardTypeDffSignalAcuteASliver=130        # from enum EPcbHazardType
	epcbHazardTypeDffSignalPad2PadSliver=132        # from enum EPcbHazardType
	epcbHazardTypeDffSignalPadEntrySliver=131        # from enum EPcbHazardType
	epcbHazardTypeDffSignalProximity=124        # from enum EPcbHazardType
	epcbHazardTypeDffSignalRatioSliver=129        # from enum EPcbHazardType
	epcbHazardTypeDffSignalSizeTextStrokeWidth=128        # from enum EPcbHazardType
	epcbHazardTypeDffSignalSizeTraceLength=126        # from enum EPcbHazardType
	epcbHazardTypeDffSignalSizeTraceLengthWidthRatio=127        # from enum EPcbHazardType
	epcbHazardTypeDffSignalSizeTraceWidth=125        # from enum EPcbHazardType
	epcbHazardTypeDffSignalTracePadWidthRatio=164        # from enum EPcbHazardType
	epcbHazardTypeDffSilkScreenSize=149        # from enum EPcbHazardType
	epcbHazardTypeDffSilkscreenProximity=148        # from enum EPcbHazardType
	epcbHazardTypeDffSolderMaskMissing=166        # from enum EPcbHazardType
	epcbHazardTypeDffSolderMaskPartial=167        # from enum EPcbHazardType
	epcbHazardTypeDffSolderMaskRatioSliver=147        # from enum EPcbHazardType
	epcbHazardTypeDffSoldermaskClearance=144        # from enum EPcbHazardType
	epcbHazardTypeDffSoldermaskProximity=143        # from enum EPcbHazardType
	epcbHazardTypeDffSolderpasteEquivalent=169        # from enum EPcbHazardType
	epcbHazardTypeDffSolderpasteExtended=168        # from enum EPcbHazardType
	epcbHazardTypeDffSolderpasteInclusion=170        # from enum EPcbHazardType
	epcbHazardTypeDffSolderpasteMissing=171        # from enum EPcbHazardType
	epcbHazardTypeDffSolderpastePartial=172        # from enum EPcbHazardType
	epcbHazardTypeDffSolderpasteProximity=150        # from enum EPcbHazardType
	epcbHazardTypeDffSolkMaskCoverage=145        # from enum EPcbHazardType
	epcbHazardTypeDffThermalSpoke =134        # from enum EPcbHazardType
	epcbHazardTypeDpClearance     =38         # from enum EPcbHazardType
	epcbHazardTypeDpConvergence   =37         # from enum EPcbHazardType
	epcbHazardTypeDpConvergenceTol=41         # from enum EPcbHazardType
	epcbHazardTypeDpDelayTolerance=39         # from enum EPcbHazardType
	epcbHazardTypeDpLengthTolerance=40         # from enum EPcbHazardType
	epcbHazardTypeEPViolation     =72         # from enum EPcbHazardType
	epcbHazardTypeElecNetDelaySummary=47         # from enum EPcbHazardType
	epcbHazardTypeElecNetLengthSummary=46         # from enum EPcbHazardType
	epcbHazardTypeFormulas        =35         # from enum EPcbHazardType
	epcbHazardTypeGroupMatchDelay =33         # from enum EPcbHazardType
	epcbHazardTypeGroupMatchLength=30         # from enum EPcbHazardType
	epcbHazardTypeHPGRDfm         =9          # from enum EPcbHazardType
	epcbHazardTypeHPGRSum         =10         # from enum EPcbHazardType
	epcbHazardTypeHangers         =68         # from enum EPcbHazardType
	epcbHazardTypeIncompleteTraceConnection=193        # from enum EPcbHazardType
	epcbHazardTypeInvalidBendArea =194        # from enum EPcbHazardType
	epcbHazardTypeInvalidFlexObjects=201        # from enum EPcbHazardType
	epcbHazardTypeInvalidStackup  =203        # from enum EPcbHazardType
	epcbHazardTypeJumperGrid      =22         # from enum EPcbHazardType
	epcbHazardTypeLayerConstraints=16         # from enum EPcbHazardType
	epcbHazardTypeLengthSummary   =31         # from enum EPcbHazardType
	epcbHazardTypeMaxDelay        =32         # from enum EPcbHazardType
	epcbHazardTypeMaxLength       =29         # from enum EPcbHazardType
	epcbHazardTypeMinAnnularRing  =80         # from enum EPcbHazardType
	epcbHazardTypeMissingArcs     =163        # from enum EPcbHazardType
	epcbHazardTypeMissingCondPads =81         # from enum EPcbHazardType
	epcbHazardTypeMissingCoverPads=192        # from enum EPcbHazardType
	epcbHazardTypeMissingMaskPads =82         # from enum EPcbHazardType
	epcbHazardTypeMissingPastePads=83         # from enum EPcbHazardType
	epcbHazardTypeMissingUnplacedParts=84         # from enum EPcbHazardType
	epcbHazardTypeMultiViaPadEntry=151        # from enum EPcbHazardType
	epcbHazardTypeNetOpenCounts   =13         # from enum EPcbHazardType
	epcbHazardTypeNetsNeedSimulation=98         # from enum EPcbHazardType
	epcbHazardTypeNetsUnableSimulate=95         # from enum EPcbHazardType
	epcbHazardTypeNodeEntry       =157        # from enum EPcbHazardType
	epcbHazardTypeOnline          =1          # from enum EPcbHazardType
	epcbHazardTypeOpenFanouts     =12         # from enum EPcbHazardType
	epcbHazardTypePadEntry        =15         # from enum EPcbHazardType
	epcbHazardTypeParallelism     =36         # from enum EPcbHazardType
	epcbHazardTypePartialNets     =74         # from enum EPcbHazardType
	epcbHazardTypePlacementGrid   =24         # from enum EPcbHazardType
	epcbHazardTypePlacementRotation=25         # from enum EPcbHazardType
	epcbHazardTypePlaneIslands    =71         # from enum EPcbHazardType
	epcbHazardTypeProximity       =67         # from enum EPcbHazardType
	epcbHazardTypeRF              =177        # from enum EPcbHazardType
	epcbHazardTypeRouteGrid       =21         # from enum EPcbHazardType
	epcbHazardTypeRouteTargets    =154        # from enum EPcbHazardType
	epcbHazardTypeSLISummary      =156        # from enum EPcbHazardType
	epcbHazardTypeSLIs            =155        # from enum EPcbHazardType
	epcbHazardTypeSimulation      =4          # from enum EPcbHazardType
	epcbHazardTypeSinglePointNets =73         # from enum EPcbHazardType
	epcbHazardTypeStub            =26         # from enum EPcbHazardType
	epcbHazardTypeSumDfPairs      =65         # from enum EPcbHazardType
	epcbHazardTypeSummary         =7          # from enum EPcbHazardType
	epcbHazardTypeTJunction       =158        # from enum EPcbHazardType
	epcbHazardTypeTargetAreas     =153        # from enum EPcbHazardType
	epcbHazardTypeTeardrop        =19         # from enum EPcbHazardType
	epcbHazardTypeTestPointCenters=78         # from enum EPcbHazardType
	epcbHazardTypeTestPointGrid   =23         # from enum EPcbHazardType
	epcbHazardTypeTestProbeGrid   =178        # from enum EPcbHazardType
	epcbHazardTypeTestProbeMaximumHoleDiameter=180        # from enum EPcbHazardType
	epcbHazardTypeTestProbeMinimumPadSize=179        # from enum EPcbHazardType
	epcbHazardTypeTopologyBalancing=27         # from enum EPcbHazardType
	epcbHazardTypeTopologyMismatch=28         # from enum EPcbHazardType
	epcbHazardTypeTraceLoops      =69         # from enum EPcbHazardType
	epcbHazardTypeTraceWidth      =14         # from enum EPcbHazardType
	epcbHazardTypeTraceWidths     =70         # from enum EPcbHazardType
	epcbHazardTypeUnplatedConnectorPin=76         # from enum EPcbHazardType
	epcbHazardTypeValor           =8          # from enum EPcbHazardType
	epcbHazardTypeValorHazardSeverity0=117        # from enum EPcbHazardType
	epcbHazardTypeValorHazardSeverity1=118        # from enum EPcbHazardType
	epcbHazardTypeValorHazardSeverity2=119        # from enum EPcbHazardType
	epcbHazardTypeValorHazardSeverity3=120        # from enum EPcbHazardType
	epcbHazardTypeValorHazardSeverity4=121        # from enum EPcbHazardType
	epcbHazardTypeValorHazardSeverity5=122        # from enum EPcbHazardType
	epcbHazardTypeValorHazardSeverityAll=123        # from enum EPcbHazardType
	epcbHazardTypeVerify          =5          # from enum EPcbHazardType
	epcbHazardTypeVerifyCharacteristicImpedance=89         # from enum EPcbHazardType
	epcbHazardTypeVerifyMatchedSimDelays=91         # from enum EPcbHazardType
	epcbHazardTypeVerifyMaxMinSimDelays=90         # from enum EPcbHazardType
	epcbHazardTypeVerifyNonmonotonicEdge=88         # from enum EPcbHazardType
	epcbHazardTypeVerifyOvershoot =86         # from enum EPcbHazardType
	epcbHazardTypeVerifyRingback  =87         # from enum EPcbHazardType
	epcbHazardTypeVerifySimCrosstalk=92         # from enum EPcbHazardType
	epcbHazardTypeVerifySimCrosstalkSummary=94         # from enum EPcbHazardType
	epcbHazardTypeVerifySimDelaySummary=93         # from enum EPcbHazardType
	epcbHazardTypeVerifyUnableSimulate=85         # from enum EPcbHazardType
	epcbHazardTypeViaGrid         =20         # from enum EPcbHazardType
	epcbHazardTypeViaUsage        =18         # from enum EPcbHazardType
	epcbHazardTypeViasPerNet      =17         # from enum EPcbHazardType
	epcbHazardTypeViasUnderParts  =77         # from enum EPcbHazardType
	epcbHazardTypeViasUnderSMDPads=79         # from enum EPcbHazardType
	epcbHazardTypeWRCCrossTalk    =104        # from enum EPcbHazardType
	epcbHazardTypeWRCDelaySummary =102        # from enum EPcbHazardType
	epcbHazardTypeWRCIncomplete   =97         # from enum EPcbHazardType
	epcbHazardTypeWRCInvalidState =96         # from enum EPcbHazardType
	epcbHazardTypeWRCNonmonotonic =101        # from enum EPcbHazardType
	epcbHazardTypeWRCOvershoot    =99         # from enum EPcbHazardType
	epcbHazardTypeWRCTOFDelay     =103        # from enum EPcbHazardType
	epcbHazardTypeWRCUndershoot   =100        # from enum EPcbHazardType
	epcbHazardTypeWirebondsAlign  =188        # from enum EPcbHazardType
	epcbHazardTypeWirebondsAngle  =173        # from enum EPcbHazardType
	epcbHazardTypeWirebondsBondPadstack=189        # from enum EPcbHazardType
	epcbHazardTypeWirebondsIncorrectlySynthesized=182        # from enum EPcbHazardType
	epcbHazardTypeWirebondsMaxLength=175        # from enum EPcbHazardType
	epcbHazardTypeWirebondsMinLength=174        # from enum EPcbHazardType
	epcbHazardTypeWirebondsNotConnected=183        # from enum EPcbHazardType
	epcbHazardTypeWirebondsOffsetXEnd=186        # from enum EPcbHazardType
	epcbHazardTypeWirebondsOffsetXStart=184        # from enum EPcbHazardType
	epcbHazardTypeWirebondsOffsetYEnd=187        # from enum EPcbHazardType
	epcbHazardTypeWirebondsOffsetYStart=185        # from enum EPcbHazardType
	epcbHazardTypeWirebondsPadsCount=190        # from enum EPcbHazardType
	epcbHazardTypeWirebondsSiteMargin=176        # from enum EPcbHazardType
	epcbHazardTypeWirebondsWireModel=181        # from enum EPcbHazardType
	epcbHazardTypeWirebondsWiresCount=191        # from enum EPcbHazardType
	epcbJustifyHCenter            =0          # from enum EPcbHorizontalJustification
	epcbJustifyLeft               =-1         # from enum EPcbHorizontalJustification
	epcbJustifyRight              =1          # from enum EPcbHorizontalJustification
	epcbInsulationTypeAdhesive    =5          # from enum EPcbInsulationType
	epcbInsulationTypeCoverLayer  =4          # from enum EPcbInsulationType
	epcbInsulationTypeDielectric  =0          # from enum EPcbInsulationType
	epcbInsulationTypeFlexSubstrate=3          # from enum EPcbInsulationType
	epcbInsulationTypeRigidSubstrate=2          # from enum EPcbInsulationType
	epcbInsulationTypeSolderMask  =1          # from enum EPcbInsulationType
	epcbInsulationTypeStiffener   =6          # from enum EPcbInsulationType
	epcbInsulationTypeSubstrate   =0          # from enum EPcbInsulationType
	epcbInterToolAppIEC           =6          # from enum EPcbInterToolAppId
	epcbInterToolAppIdBondWire    =8          # from enum EPcbInterToolAppId
	epcbInterToolAppIdCES         =1          # from enum EPcbInterToolAppId
	epcbInterToolAppIdComponentExplorer=14         # from enum EPcbInterToolAppId
	epcbInterToolAppIdDebug       =7          # from enum EPcbInterToolAppId
	epcbInterToolAppIdDrwAutomation=12         # from enum EPcbInterToolAppId
	epcbInterToolAppIdEP          =3          # from enum EPcbInterToolAppId
	epcbInterToolAppIdExplorer    =2          # from enum EPcbInterToolAppId
	epcbInterToolAppIdHGP         =13         # from enum EPcbInterToolAppId
	epcbInterToolAppIdImportStackup=17         # from enum EPcbInterToolAppId
	epcbInterToolAppIdMotionGraphics=16         # from enum EPcbInterToolAppId
	epcbInterToolAppIdNetExplorer =15         # from enum EPcbInterToolAppId
	epcbInterToolAppIdRF          =18         # from enum EPcbInterToolAppId
	epcbInterToolAppIdVariant     =4          # from enum EPcbInterToolAppId
	epcbInterToolAppIdiCDB        =5          # from enum EPcbInterToolAppId
	epcbInterToolCrossProbe       =10         # from enum EPcbInterToolAppId
	epcbInterToolEventTest        =9          # from enum EPcbInterToolAppId
	epcbInterToolPlaneUpdate      =11         # from enum EPcbInterToolAppId
	epcbInterToolNotifyBondPadPlaceFinderReverseMode=45         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyBondPadPushControl=41         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyBondPadSnapControl=42         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyChangeLayerType=40         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyConnect    =11         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyDisableCrossProbingPlace=35         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyDisconnect =10         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyDisplayHelp=12         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyEnableCrossProbingPlace=38         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyEndPlaneDraft=28         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyFindBestPlaceForBondpad=47         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGet        =39         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetBAStatus=20         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetBusNameForNet=14         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetConstraintClassNameForNet=15         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetDumpClustersAndRoomsDialog=26         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetFAStatus=19         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetHelpId  =13         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetObjectsToDRC=16         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetPartListing=36         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetSchematicDesignBackAnno=21         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyGetUserPrefs=23         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyIDClearances=4          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyIDSetVariantMode=5          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyIdStart    =1          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyIdStarted  =2          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyIdStopped  =3          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyIsPartStackAllowed=33         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyNPNCClearPhysicalNetsCache=25         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyNPNCGetPhysicalNetFromFlatNet=24         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyNumDialogs =9          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyRFAreaSelect=50         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyRFClickSelect=48         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyRFDoubleClickSelect=49         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyRFGroupOP  =37         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyRedrawAllViewsAsNeeded=31         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyRefresh    =30         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyReload     =6          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyRequestPartStackToken=32         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyResetModSinceTempSave=43         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyRnPRecordPause=34         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifySaveStackDie=51         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifySetBAFlag  =8          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifySetHidden  =18         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifySetPlaneDraft=27         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifySetRouteBondpadShove=44         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifySetUserPrefs=22         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifySetVisible =17         # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyTempSave   =7          # from enum EPcbInterToolNotifyId
	epcbInterToolNotifyTxtPropNVUpdate=29         # from enum EPcbInterToolNotifyId
	epcbIntertoolNotifyBondWireDrcChange=46         # from enum EPcbInterToolNotifyId
	epcbInvokingAppExpeditionPCB  =1          # from enum EPcbInvokingApplication
	epcbInvokingAppLibraryManager =2          # from enum EPcbInvokingApplication
	epcbInvokingAppNotDefined     =0          # from enum EPcbInvokingApplication
	epcbKeyboardFlagsAltPressed   =1          # from enum EPcbKeyboardFlags
	epcbKeyboardFlagsCntrlPressed =2          # from enum EPcbKeyboardFlags
	epcbKeyboardFlagsNone         =0          # from enum EPcbKeyboardFlags
	epcbKeyboardFlagsShiftPressed =4          # from enum EPcbKeyboardFlags
	epcbLDDNetUpdateCreate        =0          # from enum EPcbLDDNetUpdateType
	epcbLDDNetUpdateDelete        =1          # from enum EPcbLDDNetUpdateType
	epcbLayerTypeConductor        =0          # from enum EPcbLayerType
	epcbLayerTypeFabrication      =1          # from enum EPcbLayerType
	epcbLayerTypeInsulation       =3          # from enum EPcbLayerType
	epcbLayerTypeUser             =2          # from enum EPcbLayerType
	epcbLayerUsageFloodedSignal   =4          # from enum EPcbLayerUsage
	epcbLayerUsagePlane           =2          # from enum EPcbLayerUsage
	epcbLayerUsagePlating         =5          # from enum EPcbLayerUsage
	epcbLayerUsageSignal          =1          # from enum EPcbLayerUsage
	epcbLayerUsageSplitMixed      =3          # from enum EPcbLayerUsage
	epcbLayerUsageUndefined       =0          # from enum EPcbLayerUsage
	epcbLicenseFeature3DLibrary   =33         # from enum EPcbLicenseFeature
	epcbLicenseFeature3DPDFOutput =34         # from enum EPcbLicenseFeature
	epcbLicenseFeature3DViewer    =24         # from enum EPcbLicenseFeature
	epcbLicenseFeatureATPAdvancePackaging=18         # from enum EPcbLicenseFeature
	epcbLicenseFeatureATPEmbeddedPassives=11         # from enum EPcbLicenseFeature
	epcbLicenseFeatureATPFlex     =10         # from enum EPcbLicenseFeature
	epcbLicenseFeatureATPRF       =12         # from enum EPcbLicenseFeature
	epcbLicenseFeatureAdvancedECO =21         # from enum EPcbLicenseFeature
	epcbLicenseFeatureAdvancedInterconnect=2          # from enum EPcbLicenseFeature
	epcbLicenseFeatureAdvancedTech=39         # from enum EPcbLicenseFeature
	epcbLicenseFeatureCavities    =43         # from enum EPcbLicenseFeature
	epcbLicenseFeatureDesignForFabrication=9          # from enum EPcbLicenseFeature
	epcbLicenseFeatureDesignForManufacture=0          # from enum EPcbLicenseFeature
	epcbLicenseFeatureEDMDCollaborator=25         # from enum EPcbLicenseFeature
	epcbLicenseFeatureEVM         =16         # from enum EPcbLicenseFeature
	epcbLicenseFeatureExpeditionPEAT=20         # from enum EPcbLicenseFeature
	epcbLicenseFeatureFablink     =40         # from enum EPcbLicenseFeature
	epcbLicenseFeatureFablinkXE   =6          # from enum EPcbLicenseFeature
	epcbLicenseFeatureFablinkXEPro=7          # from enum EPcbLicenseFeature
	epcbLicenseFeatureHighSpeed   =1          # from enum EPcbLicenseFeature
	epcbLicenseFeatureICXProVerify=8          # from enum EPcbLicenseFeature
	epcbLicenseFeatureIFFInterface=3          # from enum EPcbLicenseFeature
	epcbLicenseFeatureMECHInterface=15         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePackageLayout=45         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsPAdv3D  =35         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsPAdvAnalsys=29         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsPAdvDRC =31         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsPDCDrop =30         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsPFPGA   =32         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsPRF     =28         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsPSupport=26         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsPremium =27         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePadsStdPlus =37         # from enum EPcbLicenseFeature
	epcbLicenseFeaturePhySystemDesign=46         # from enum EPcbLicenseFeature
	epcbLicenseFeatureRF          =41         # from enum EPcbLicenseFeature
	epcbLicenseFeatureReusableBlock=4          # from enum EPcbLicenseFeature
	epcbLicenseFeatureRigidFlex   =38         # from enum EPcbLicenseFeature
	epcbLicenseFeatureSketchPlanner=36         # from enum EPcbLicenseFeature
	epcbLicenseFeatureTeamPCB     =5          # from enum EPcbLicenseFeature
	epcbLicenseFeatureTopologyPlanner=13         # from enum EPcbLicenseFeature
	epcbLicenseFeatureTopologyRouter=14         # from enum EPcbLicenseFeature
	epcbLicenseFeatureVariants    =42         # from enum EPcbLicenseFeature
	epcbLicenseFeatureViaModel    =44         # from enum EPcbLicenseFeature
	epcbLicenseFeatureXEPCBDFT    =17         # from enum EPcbLicenseFeature
	epcbLicenseFeatureXtremeDesignSession=19         # from enum EPcbLicenseFeature
	epcbLicenseAdvancedInterconnect=4          # from enum EPcbLicenseType
	epcbLicenseAll                =-1         # from enum EPcbLicenseType
	epcbLicenseDesignForFabrication=512        # from enum EPcbLicenseType
	epcbLicenseDesignForManufacture=1          # from enum EPcbLicenseType
	epcbLicenseFablinkXE          =64         # from enum EPcbLicenseType
	epcbLicenseFablinkXEPro       =128        # from enum EPcbLicenseType
	epcbLicenseHighSpeed          =2          # from enum EPcbLicenseType
	epcbLicenseICXProVerify       =256        # from enum EPcbLicenseType
	epcbLicenseIFFInterface       =8          # from enum EPcbLicenseType
	epcbLicenseReusableBlock      =16         # from enum EPcbLicenseType
	epcbLicenseTeamPCB            =32         # from enum EPcbLicenseType
	epcbLoadTypeALBridgeLayer     =71         # from enum EPcbLoadType
	epcbLoadTypeALDielectricLayer =68         # from enum EPcbLoadType
	epcbLoadTypeALPrePregLayer    =69         # from enum EPcbLoadType
	epcbLoadTypeALSubstrateLayer  =70         # from enum EPcbLoadType
	epcbLoadTypeAdhesiveObst      =86         # from enum EPcbLoadType
	epcbLoadTypeAdhesiveShape     =109        # from enum EPcbLoadType
	epcbLoadTypeAssemblyBottom    =16         # from enum EPcbLoadType
	epcbLoadTypeAssemblyTop       =15         # from enum EPcbLoadType
	epcbLoadTypeBendArea          =85         # from enum EPcbLoadType
	epcbLoadTypeBoardObstruct     =55         # from enum EPcbLoadType
	epcbLoadTypeBoardOutline      =6          # from enum EPcbLoadType
	epcbLoadTypeBondPad           =150        # from enum EPcbLoadType
	epcbLoadTypeBondWireGraphic   =95         # from enum EPcbLoadType
	epcbLoadTypeBundlePath        =104        # from enum EPcbLoadType
	epcbLoadTypeBundleVia         =103        # from enum EPcbLoadType
	epcbLoadTypeBuried            =135        # from enum EPcbLoadType
	epcbLoadTypeBusObstArea       =79         # from enum EPcbLoadType
	epcbLoadTypeBusPath           =66         # from enum EPcbLoadType
	epcbLoadTypeBusUnpackedArea   =67         # from enum EPcbLoadType
	epcbLoadTypeBusViaObstArea    =80         # from enum EPcbLoadType
	epcbLoadTypeCavity            =94         # from enum EPcbLoadType
	epcbLoadTypeCluster           =50         # from enum EPcbLoadType
	epcbLoadTypeClusterBottom     =52         # from enum EPcbLoadType
	epcbLoadTypeClusterTop        =51         # from enum EPcbLoadType
	epcbLoadTypeComponentOutline  =10         # from enum EPcbLoadType
	epcbLoadTypeConductiveShape   =46         # from enum EPcbLoadType
	epcbLoadTypeConnector         =128        # from enum EPcbLoadType
	epcbLoadTypeContour           =12         # from enum EPcbLoadType
	epcbLoadTypeCoverLayerBottomShape=111        # from enum EPcbLoadType
	epcbLoadTypeCoverLayerTopShape=110        # from enum EPcbLoadType
	epcbLoadTypeCoverLyrObst      =87         # from enum EPcbLoadType
	epcbLoadTypeDRCWindow         =42         # from enum EPcbLoadType
	epcbLoadTypeDesignRuleArea    =44         # from enum EPcbLoadType
	epcbLoadTypeDetailView        =64         # from enum EPcbLoadType
	epcbLoadTypeDiscrete_Axial    =129        # from enum EPcbLoadType
	epcbLoadTypeDiscrete_Chip     =130        # from enum EPcbLoadType
	epcbLoadTypeDiscrete_Other    =131        # from enum EPcbLoadType
	epcbLoadTypeDiscrete_Radial   =132        # from enum EPcbLoadType
	epcbLoadTypeDocumentation     =58         # from enum EPcbLoadType
	epcbLoadTypeDrawingBorder     =89         # from enum EPcbLoadType
	epcbLoadTypeDrawingCell       =116        # from enum EPcbLoadType
	epcbLoadTypeDrillDrawing      =41         # from enum EPcbLoadType
	epcbLoadTypeDynamicReuseArea  =102        # from enum EPcbLoadType
	epcbLoadTypeEPBody            =72         # from enum EPcbLoadType
	epcbLoadTypeEPConductive      =83         # from enum EPcbLoadType
	epcbLoadTypeEPDielectric      =82         # from enum EPcbLoadType
	epcbLoadTypeEPMask            =73         # from enum EPcbLoadType
	epcbLoadTypeEPOverGlaze       =81         # from enum EPcbLoadType
	epcbLoadTypeEdgeConnector     =138        # from enum EPcbLoadType
	epcbLoadTypeEmbeddedBondable  =146        # from enum EPcbLoadType
	epcbLoadTypeEmbeddedCap       =143        # from enum EPcbLoadType
	epcbLoadTypeEmbeddedFlip      =145        # from enum EPcbLoadType
	epcbLoadTypeEmbeddedInductor  =144        # from enum EPcbLoadType
	epcbLoadTypeEmbeddedOther     =147        # from enum EPcbLoadType
	epcbLoadTypeEmbeddedRes       =142        # from enum EPcbLoadType
	epcbLoadTypeFiducial          =34         # from enum EPcbLoadType
	epcbLoadTypeFirstCellType     =113        # from enum EPcbLoadType
	epcbLoadTypeFirstOtherType    =158        # from enum EPcbLoadType
	epcbLoadTypeFirstPackageType  =118        # from enum EPcbLoadType
	epcbLoadTypeFirstPadType      =151        # from enum EPcbLoadType
	epcbLoadTypeGeneral           =136        # from enum EPcbLoadType
	epcbLoadTypeGeneratedAPS      =74         # from enum EPcbLoadType
	epcbLoadTypeGeneratedPlane    =24         # from enum EPcbLoadType
	epcbLoadTypeGeneratedSilkscreenBottom=26         # from enum EPcbLoadType
	epcbLoadTypeGeneratedSilkscreenTop=25         # from enum EPcbLoadType
	epcbLoadTypeGeneratedTieLeg   =75         # from enum EPcbLoadType
	epcbLoadTypeHardFenceArea     =77         # from enum EPcbLoadType
	epcbLoadTypeHiddenBS          =99         # from enum EPcbLoadType
	epcbLoadTypeIC_BGA            =119        # from enum EPcbLoadType
	epcbLoadTypeIC_BareDie        =118        # from enum EPcbLoadType
	epcbLoadTypeIC_DIP            =120        # from enum EPcbLoadType
	epcbLoadTypeIC_FlipChip       =121        # from enum EPcbLoadType
	epcbLoadTypeIC_LCC            =122        # from enum EPcbLoadType
	epcbLoadTypeIC_Other          =124        # from enum EPcbLoadType
	epcbLoadTypeIC_PGA            =125        # from enum EPcbLoadType
	epcbLoadTypeIC_PLCC           =123        # from enum EPcbLoadType
	epcbLoadTypeIC_SIP            =126        # from enum EPcbLoadType
	epcbLoadTypeIC_SOIC           =127        # from enum EPcbLoadType
	epcbLoadTypeICoverLayerPad    =153        # from enum EPcbLoadType
	epcbLoadTypeIDiePad           =156        # from enum EPcbLoadType
	epcbLoadTypeIMetalPad         =151        # from enum EPcbLoadType
	epcbLoadTypeISolderPad        =152        # from enum EPcbLoadType
	epcbLoadTypeIStiffenerPad     =154        # from enum EPcbLoadType
	epcbLoadTypeIUnknownPadType   =157        # from enum EPcbLoadType
	epcbLoadTypeIUserPad          =155        # from enum EPcbLoadType
	epcbLoadTypeInsertionOutlineBottom=18         # from enum EPcbLoadType
	epcbLoadTypeInsertionOutlineTop=17         # from enum EPcbLoadType
	epcbLoadTypeJumper            =133        # from enum EPcbLoadType
	epcbLoadTypeJumperWireBottom  =14         # from enum EPcbLoadType
	epcbLoadTypeJumperWireTop     =13         # from enum EPcbLoadType
	epcbLoadTypeLastType          =158        # from enum EPcbLoadType
	epcbLoadTypeManufacturingOutline=49         # from enum EPcbLoadType
	epcbLoadTypeMechanicalCell    =115        # from enum EPcbLoadType
	epcbLoadTypeMountingHole      =35         # from enum EPcbLoadType
	epcbLoadTypeNoCell            =113        # from enum EPcbLoadType
	epcbLoadTypePackageCell       =114        # from enum EPcbLoadType
	epcbLoadTypePadKeepOut        =90         # from enum EPcbLoadType
	epcbLoadTypePanelBorder       =56         # from enum EPcbLoadType
	epcbLoadTypePanelCell         =117        # from enum EPcbLoadType
	epcbLoadTypePanelOutline      =57         # from enum EPcbLoadType
	epcbLoadTypePin               =0          # from enum EPcbLoadType
	epcbLoadTypePlacementObstructBottom=29         # from enum EPcbLoadType
	epcbLoadTypePlacementObstructTop=28         # from enum EPcbLoadType
	epcbLoadTypePlacementOutline  =11         # from enum EPcbLoadType
	epcbLoadTypePlacementOutlineBottom=20         # from enum EPcbLoadType
	epcbLoadTypePlacementOutlineTop=19         # from enum EPcbLoadType
	epcbLoadTypePlacementRoom     =31         # from enum EPcbLoadType
	epcbLoadTypePlacementRoomBottom=33         # from enum EPcbLoadType
	epcbLoadTypePlacementRoomTop  =32         # from enum EPcbLoadType
	epcbLoadTypePlaneEditingSketch=84         # from enum EPcbLoadType
	epcbLoadTypePlaneNoConnectArea=43         # from enum EPcbLoadType
	epcbLoadTypePlaneObstruct     =4          # from enum EPcbLoadType
	epcbLoadTypePlaneShape        =3          # from enum EPcbLoadType
	epcbLoadTypePushPartOutline   =91         # from enum EPcbLoadType
	epcbLoadTypeRFSegment         =105        # from enum EPcbLoadType
	epcbLoadTypeRFShape           =148        # from enum EPcbLoadType
	epcbLoadTypeRF_Circuit        =140        # from enum EPcbLoadType
	epcbLoadTypeRedLayer          =40         # from enum EPcbLoadType
	epcbLoadTypeResistorShape     =23         # from enum EPcbLoadType
	epcbLoadTypeReusable_Circuit  =141        # from enum EPcbLoadType
	epcbLoadTypeRouteBorder       =5          # from enum EPcbLoadType
	epcbLoadTypeRteTargetArea     =78         # from enum EPcbLoadType
	epcbLoadTypeSandbox           =97         # from enum EPcbLoadType
	epcbLoadTypeSandboxObstruct   =98         # from enum EPcbLoadType
	epcbLoadTypeScoringLine       =62         # from enum EPcbLoadType
	epcbLoadTypeSelectionOutline  =96         # from enum EPcbLoadType
	epcbLoadTypeShearingHole      =60         # from enum EPcbLoadType
	epcbLoadTypeShearingLine      =61         # from enum EPcbLoadType
	epcbLoadTypeSilkscreenBottom  =22         # from enum EPcbLoadType
	epcbLoadTypeSilkscreenTop     =21         # from enum EPcbLoadType
	epcbLoadTypeSketchPlan        =158        # from enum EPcbLoadType
	epcbLoadTypeSoftFenceArea     =76         # from enum EPcbLoadType
	epcbLoadTypeSolderMaskBottom  =39         # from enum EPcbLoadType
	epcbLoadTypeSolderMaskTop     =38         # from enum EPcbLoadType
	epcbLoadTypeSolderPasteBottom =37         # from enum EPcbLoadType
	epcbLoadTypeSolderPasteTop    =36         # from enum EPcbLoadType
	epcbLoadTypeStiffenerObst     =88         # from enum EPcbLoadType
	epcbLoadTypeStiffenerShape    =112        # from enum EPcbLoadType
	epcbLoadTypeTPCB1ReservedArea =53         # from enum EPcbLoadType
	epcbLoadTypeTarget_Area       =139        # from enum EPcbLoadType
	epcbLoadTypeTeardrop          =45         # from enum EPcbLoadType
	epcbLoadTypeTestFixtureOutline=101        # from enum EPcbLoadType
	epcbLoadTypeTestPoint         =134        # from enum EPcbLoadType
	epcbLoadTypeTestPointObstruct =30         # from enum EPcbLoadType
	epcbLoadTypeThievingData      =48         # from enum EPcbLoadType
	epcbLoadTypeThievingShape     =47         # from enum EPcbLoadType
	epcbLoadTypeToolingHole       =59         # from enum EPcbLoadType
	epcbLoadTypeTrace             =2          # from enum EPcbLoadType
	epcbLoadTypeTraceKeepOut      =8          # from enum EPcbLoadType
	epcbLoadTypeTraceTeardrop     =54         # from enum EPcbLoadType
	epcbLoadTypeTraceViaKeepOut   =9          # from enum EPcbLoadType
	epcbLoadTypeTuningAndViaKeepOut=106        # from enum EPcbLoadType
	epcbLoadTypeTuningKeepOut     =100        # from enum EPcbLoadType
	epcbLoadTypeUniGroupOutline   =92         # from enum EPcbLoadType
	epcbLoadTypeUpgSubshape       =93         # from enum EPcbLoadType
	epcbLoadTypeUserDefined       =27         # from enum EPcbLoadType
	epcbLoadTypeVia               =1          # from enum EPcbLoadType
	epcbLoadTypeViaKeepOut        =7          # from enum EPcbLoadType
	epcbLoadTypeViewPort          =63         # from enum EPcbLoadType
	epcbLoadTypeVirtual_Pin       =137        # from enum EPcbLoadType
	epcbLoadTypeWireBond          =149        # from enum EPcbLoadType
	epcbLoadTypeWireBondGuideBottom=108        # from enum EPcbLoadType
	epcbLoadTypeWireBondGuideTop  =107        # from enum EPcbLoadType
	epcbLoadTypeXProtectedArea    =65         # from enum EPcbLoadType
	epcbExclusiveLockAllLocalLibraries=42         # from enum EPcbLockType
	epcbExclusiveLockLocalLibraryCellDB=32         # from enum EPcbLockType
	epcbExclusiveLockLocalLibraryPadstackDB=8          # from enum EPcbLockType
	epcbExclusiveLockLocalLibraryPartDB=2          # from enum EPcbLockType
	epcbExclusiveLockTriggerForwardAnnotation=512        # from enum EPcbLockType
	epcbExclusiveLockTriggerReload=128        # from enum EPcbLockType
	epcbSharedLockAllLocalLibraries=21         # from enum EPcbLockType
	epcbSharedLockLocalLibraryCellDB=16         # from enum EPcbLockType
	epcbSharedLockLocalLibraryPadstackDB=4          # from enum EPcbLockType
	epcbSharedLockLocalLibraryPartDB=1          # from enum EPcbLockType
	epcbSharedLockTriggerForwardAnnotation=64         # from enum EPcbLockType
	epcbSharedLockTriggerReload   =256        # from enum EPcbLockType
	epcbMatchLengthNet            =1          # from enum EPcbMatchLengthType
	epcbMaterialTypeAll           =-1         # from enum EPcbMaterialType
	epcbMaterialTypeCapacitive    =2          # from enum EPcbMaterialType
	epcbMaterialTypeConductive    =4          # from enum EPcbMaterialType
	epcbMaterialTypeResistive     =1          # from enum EPcbMaterialType
	epcbMetalSideAuto             =0          # from enum EPcbMetalSideType
	epcbMetalSideLeft             =2          # from enum EPcbMetalSideType
	epcbMetalSideRight            =1          # from enum EPcbMetalSideType
	epcbModeDrawing               =2          # from enum EPcbMode
	epcbModeModeless              =4          # from enum EPcbMode
	epcbModePlace                 =0          # from enum EPcbMode
	epcbModeRF                    =3          # from enum EPcbMode
	epcbModeRoute                 =1          # from enum EPcbMode
	epcbMotionGfxPointMoveOrtho   =5          # from enum EPcbMotionGfxPointType
	epcbMotionGfxPointMoveX       =1          # from enum EPcbMotionGfxPointType
	epcbMotionGfxPointMoveXY      =3          # from enum EPcbMotionGfxPointType
	epcbMotionGfxPointMoveY       =2          # from enum EPcbMotionGfxPointType
	epcbMotionGfxPointNoMove      =16         # from enum EPcbMotionGfxPointType
	epcbMotionGfxPointStatic      =0          # from enum EPcbMotionGfxPointType
	epcbMountTypeMixed            =3          # from enum EPcbMountType
	epcbMountTypeSurface          =0          # from enum EPcbMountType
	epcbMountTypeThrough          =1          # from enum EPcbMountType
	epcbMouseButtonLeft           =1          # from enum EPcbMouseButton
	epcbMouseButtonMiddle         =2          # from enum EPcbMouseButton
	epcbMouseButtonRight          =4          # from enum EPcbMouseButton
	epcbMouseEventBeginDrag       =7          # from enum EPcbMouseEvent
	epcbMouseEventClick           =2          # from enum EPcbMouseEvent
	epcbMouseEventDoubleClick     =3          # from enum EPcbMouseEvent
	epcbMouseEventDrag            =8          # from enum EPcbMouseEvent
	epcbMouseEventEndDrag         =9          # from enum EPcbMouseEvent
	epcbMouseEventMove            =1          # from enum EPcbMouseEvent
	epcbMouseEventTripleClick     =4          # from enum EPcbMouseEvent
	epcbMouseEventWheelBackward   =6          # from enum EPcbMouseEvent
	epcbMouseEventWheelForward    =5          # from enum EPcbMouseEvent
	epcbMsgAnsCancel              =2          # from enum EPcbMsgBoxAnswer
	epcbMsgAnsNo                  =7          # from enum EPcbMsgBoxAnswer
	epcbMsgAnsOk                  =1          # from enum EPcbMsgBoxAnswer
	epcbMsgAnsYes                 =6          # from enum EPcbMsgBoxAnswer
	epcbMsgDefaultBtn1            =1          # from enum EPcbMsgBoxDefaultButton
	epcbMsgDefaultBtn2            =2          # from enum EPcbMsgBoxDefaultButton
	epcbMsgDefaultBtn3            =3          # from enum EPcbMsgBoxDefaultButton
	epcbMsgBoxIconExclamation     =3          # from enum EPcbMsgBoxIcon
	epcbMsgBoxIconInformation     =1          # from enum EPcbMsgBoxIcon
	epcbMsgBoxIconQuestion        =2          # from enum EPcbMsgBoxIcon
	epcbMsgBoxIconStop            =4          # from enum EPcbMsgBoxIcon
	epcbMsgBoxOk                  =1          # from enum EPcbMsgBoxType
	epcbMsgBoxOkCancel            =2          # from enum EPcbMsgBoxType
	epcbMsgBoxYesNo               =3          # from enum EPcbMsgBoxType
	epcbMsgBoxYesNoCancel         =4          # from enum EPcbMsgBoxType
	epcbMultiBoardOutlineTypeFlex =1          # from enum EPcbMultiBoardOutlineType
	epcbMultiBoardOutlineTypeRigid=0          # from enum EPcbMultiBoardOutlineType
	epcbNetTypeChained            =1          # from enum EPcbNetType
	epcbNetTypeComplex            =6          # from enum EPcbNetType
	epcbNetTypeForcedOrder        =2          # from enum EPcbNetType
	epcbNetTypeHTree              =3          # from enum EPcbNetType
	epcbNetTypeMST                =0          # from enum EPcbNetType
	epcbNetTypeStar               =5          # from enum EPcbNetType
	epcbNetTypeTShape             =4          # from enum EPcbNetType
	epcbObjectClassAll            =-1         # from enum EPcbObjectClassType
	epcbObjectClassBendArea       =262144     # from enum EPcbObjectClassType
	epcbObjectClassBoard          =4096       # from enum EPcbObjectClassType
	epcbObjectClassConductorLayerGfx=2          # from enum EPcbObjectClassType
	epcbObjectClassConductorLayerText=16         # from enum EPcbObjectClassType
	epcbObjectClassDetailedView   =2048       # from enum EPcbObjectClassType
	epcbObjectClassElecNet        =1024       # from enum EPcbObjectClassType
	epcbObjectClassFabricationLayerGfx=4          # from enum EPcbObjectClassType
	epcbObjectClassFabricationLayerText=32         # from enum EPcbObjectClassType
	epcbObjectClassFromTo         =128        # from enum EPcbObjectClassType
	epcbObjectClassHierarchicalThing=512        # from enum EPcbObjectClassType
	epcbObjectClassInvalid        =0          # from enum EPcbObjectClassType
	epcbObjectClassMarker         =32768      # from enum EPcbObjectClassType
	epcbObjectClassNet            =256        # from enum EPcbObjectClassType
	epcbObjectClassPadstackObject =1          # from enum EPcbObjectClassType
	epcbObjectClassPanel          =8192       # from enum EPcbObjectClassType
	epcbObjectClassSheet          =16384      # from enum EPcbObjectClassType
	epcbObjectClassSketchVia      =524288     # from enum EPcbObjectClassType
	epcbObjectClassStackupScheme  =1048576    # from enum EPcbObjectClassType
	epcbObjectClassUserLayerGfx   =8          # from enum EPcbObjectClassType
	epcbObjectClassUserLayerText  =64         # from enum EPcbObjectClassType
	epcbObjectClassWireBond       =65536      # from enum EPcbObjectClassType
	epcbObjectClassWireBondGuide  =131072     # from enum EPcbObjectClassType
	epcbObstructAll               =-1         # from enum EPcbObstructType
	epcbObstructPad               =128        # from enum EPcbObstructType
	epcbObstructPanel             =64         # from enum EPcbObstructType
	epcbObstructPlane             =1          # from enum EPcbObstructType
	epcbObstructPlaneNoConnect    =2          # from enum EPcbObstructType
	epcbObstructTestPoint         =4          # from enum EPcbObstructType
	epcbObstructTrace             =8          # from enum EPcbObstructType
	epcbObstructTraceVia          =16         # from enum EPcbObstructType
	epcbObstructTuningPattern     =256        # from enum EPcbObstructType
	epcbObstructVia               =32         # from enum EPcbObstructType
	epcbOnChangeComponent         =1          # from enum EPcbOnChangeType
	epcbOnChangeHazards           =8          # from enum EPcbOnChangeType
	epcbOnChangeNet               =2          # from enum EPcbOnChangeType
	epcbOnChangeSbx               =4          # from enum EPcbOnChangeType
	epcbOnChangeSomething         =-1         # from enum EPcbOnChangeType
	epcbOnHighlightComponent      =4          # from enum EPcbOnHighlightType
	epcbOnHighlightGfx            =64         # from enum EPcbOnHighlightType
	epcbOnHighlightNet            =1          # from enum EPcbOnHighlightType
	epcbOnHighlightPin            =16         # from enum EPcbOnHighlightType
	epcbOnHighlightSomething      =-1         # from enum EPcbOnHighlightType
	epcbOnUnhighlightComponent    =8          # from enum EPcbOnHighlightType
	epcbOnUnhighlightGfx          =128        # from enum EPcbOnHighlightType
	epcbOnUnhighlightNet          =2          # from enum EPcbOnHighlightType
	epcbOnUnhighlightPin          =32         # from enum EPcbOnHighlightType
	epcbOnNotifyActiveSheetChanged=1073741824 # from enum EPcbOnNotifyType
	epcbOnNotifyActiveViewChanged =524288     # from enum EPcbOnNotifyType
	epcbOnNotifyActiveViewChangedEx=268435456  # from enum EPcbOnNotifyType
	epcbOnNotifyCmpMoveAborted    =4          # from enum EPcbOnNotifyType
	epcbOnNotifyCmpMoveComplete   =2          # from enum EPcbOnNotifyType
	epcbOnNotifyCmpMoveStart      =1          # from enum EPcbOnNotifyType
	epcbOnNotifyCommandComplete   =512        # from enum EPcbOnNotifyType
	epcbOnNotifyCommandStart      =256        # from enum EPcbOnNotifyType
	epcbOnNotifyDeleteGeneratedDataStart=8192       # from enum EPcbOnNotifyType
	epcbOnNotifyEditorControlChanged=16         # from enum EPcbOnNotifyType
	epcbOnNotifyEngineComplete    =2097152    # from enum EPcbOnNotifyType
	epcbOnNotifyEngineStarted     =1048576    # from enum EPcbOnNotifyType
	epcbOnNotifyGeneratedDataChanged=4194304    # from enum EPcbOnNotifyType
	epcbOnNotifyGroupSortOrderChanged=-2147483648 # from enum EPcbOnNotifyType
	epcbOnNotifyInteractiveDRCChanged=8388608    # from enum EPcbOnNotifyType
	epcbOnNotifyModeChanged       =1024       # from enum EPcbOnNotifyType
	epcbOnNotifyNetClassChanged   =16777216   # from enum EPcbOnNotifyType
	epcbOnNotifyNetPropsChanged   =33554432   # from enum EPcbOnNotifyType
	epcbOnNotifyPadstackDBChanged =64         # from enum EPcbOnNotifyType
	epcbOnNotifyPcbViewClosed     =536870912  # from enum EPcbOnNotifyType
	epcbOnNotifyPrintComplete     =262144     # from enum EPcbOnNotifyType
	epcbOnNotifyPrintStart        =131072     # from enum EPcbOnNotifyType
	epcbOnNotifyRedoOccurred      =65536      # from enum EPcbOnNotifyType
	epcbOnNotifyReloadComplete    =4096       # from enum EPcbOnNotifyType
	epcbOnNotifyReloadStart       =2048       # from enum EPcbOnNotifyType
	epcbOnNotifySelectionFilterChanged=67108864   # from enum EPcbOnNotifyType
	epcbOnNotifySetupParamsChanged=8          # from enum EPcbOnNotifyType
	epcbOnNotifySiControlChanged  =32         # from enum EPcbOnNotifyType
	epcbOnNotifyUndoOccurred      =32768      # from enum EPcbOnNotifyType
	epcbOnNotifyUnitsPrecisionChanged=128        # from enum EPcbOnNotifyType
	epcbOnNotifyViewSettingsChanged=16384      # from enum EPcbOnNotifyType
	epcbOnNotifyVirtualViewSettingsChanged=134217728  # from enum EPcbOnNotifyType
	epcbOnOpenDocOpen             =1          # from enum EPcbOnOpenDocumentFlags
	epcbOnOpenDocReload           =2          # from enum EPcbOnOpenDocumentFlags
	epcbOnDeselectionComponent    =8          # from enum EPcbOnSelectionType
	epcbOnDeselectionGfx          =128        # from enum EPcbOnSelectionType
	epcbOnDeselectionNet          =2          # from enum EPcbOnSelectionType
	epcbOnDeselectionPin          =32         # from enum EPcbOnSelectionType
	epcbOnDeselectionText         =512        # from enum EPcbOnSelectionType
	epcbOnSelectionComponent      =4          # from enum EPcbOnSelectionType
	epcbOnSelectionGfx            =64         # from enum EPcbOnSelectionType
	epcbOnSelectionNet            =1          # from enum EPcbOnSelectionType
	epcbOnSelectionPin            =16         # from enum EPcbOnSelectionType
	epcbOnSelectionSomething      =-1         # from enum EPcbOnSelectionType
	epcbOnSelectionText           =256        # from enum EPcbOnSelectionType
	epcbOrientationHorizontal     =1          # from enum EPcbOrientationType
	epcbOrientationVertical       =0          # from enum EPcbOrientationType
	epcbOriginAssembly            =4          # from enum EPcbOriginType
	epcbOriginBoard               =0          # from enum EPcbOriginType
	epcbOriginCell                =5          # from enum EPcbOriginType
	epcbOriginDimension           =2          # from enum EPcbOriginType
	epcbOriginNC                  =1          # from enum EPcbOriginType
	epcbOriginPanel               =3          # from enum EPcbOriginType
	epcbOriginalLayerBottomSide   =4          # from enum EPcbOriginalLayerType
	epcbOriginalLayerMountSide    =1          # from enum EPcbOriginalLayerType
	epcbOriginalLayerOppositeSide =2          # from enum EPcbOriginalLayerType
	epcbOriginalLayerSpecifiedLayer=5          # from enum EPcbOriginalLayerType
	epcbOriginalLayerTopSide      =3          # from enum EPcbOriginalLayerType
	epcbPADSProFeatureTypeFull    =1          # from enum EPcbPADSProFeatureType
	epcbPADSProFeatureTypeLayout  =2          # from enum EPcbPADSProFeatureType
	epcbPADSProFeatureTypeNone    =0          # from enum EPcbPADSProFeatureType
	epcbPADSProFeatureTypeStudent =3          # from enum EPcbPADSProFeatureType
	epcbPackageBGA                =1          # from enum EPcbPackageGroup
	epcbPackageBareDie            =0          # from enum EPcbPackageGroup
	epcbPackageBuried             =17         # from enum EPcbPackageGroup
	epcbPackageConnector          =10         # from enum EPcbPackageGroup
	epcbPackageDIP                =2          # from enum EPcbPackageGroup
	epcbPackageDiscrete_Axial     =11         # from enum EPcbPackageGroup
	epcbPackageDiscrete_Chip      =12         # from enum EPcbPackageGroup
	epcbPackageDiscrete_Other     =13         # from enum EPcbPackageGroup
	epcbPackageDiscrete_Radial    =14         # from enum EPcbPackageGroup
	epcbPackageEdgeConnector      =20         # from enum EPcbPackageGroup
	epcbPackageEmbeddedCapacitor  =24         # from enum EPcbPackageGroup
	epcbPackageEmbeddedResistor   =23         # from enum EPcbPackageGroup
	epcbPackageFlipChip           =3          # from enum EPcbPackageGroup
	epcbPackageGeneral            =18         # from enum EPcbPackageGroup
	epcbPackageGroupAll           =-1         # from enum EPcbPackageGroup
	epcbPackageJumper             =15         # from enum EPcbPackageGroup
	epcbPackageLCC                =4          # from enum EPcbPackageGroup
	epcbPackageOther              =6          # from enum EPcbPackageGroup
	epcbPackagePGA                =7          # from enum EPcbPackageGroup
	epcbPackagePLCC               =5          # from enum EPcbPackageGroup
	epcbPackageRFCircuit          =21         # from enum EPcbPackageGroup
	epcbPackageRFShape            =29         # from enum EPcbPackageGroup
	epcbPackageReusableCircuit    =22         # from enum EPcbPackageGroup
	epcbPackageSIP                =8          # from enum EPcbPackageGroup
	epcbPackageSOIC               =9          # from enum EPcbPackageGroup
	epcbPackageTestPoint          =16         # from enum EPcbPackageGroup
	epcbCustomPad                 =4          # from enum EPcbPadShapes
	epcbOblongPad                 =1          # from enum EPcbPadShapes
	epcbRectPad                   =0          # from enum EPcbPadShapes
	epcbRoundPad                  =2          # from enum EPcbPadShapes
	epcbSquarePad                 =3          # from enum EPcbPadShapes
	epcbPadstackMirrorBottom      =2          # from enum EPcbPadstackMirrorType
	epcbPadstackMirrorInternal    =1          # from enum EPcbPadstackMirrorType
	epcbPadstackMirrorTop         =0          # from enum EPcbPadstackMirrorType
	epcbPadstackObjectAll         =-1         # from enum EPcbPadstackObjectType
	epcbPadstackObjectBondPad     =128        # from enum EPcbPadstackObjectType
	epcbPadstackObjectFiducial    =4          # from enum EPcbPadstackObjectType
	epcbPadstackObjectMountingHole=8          # from enum EPcbPadstackObjectType
	epcbPadstackObjectMultiVia    =64         # from enum EPcbPadstackObjectType
	epcbPadstackObjectPin         =1          # from enum EPcbPadstackObjectType
	epcbPadstackObjectShearingHole=32         # from enum EPcbPadstackObjectType
	epcbPadstackObjectToolingHole =16         # from enum EPcbPadstackObjectType
	epcbPadstackObjectVia         =2          # from enum EPcbPadstackObjectType
	epcbPanelGroupBadBoardIdentifier=2          # from enum EPcbPanelGroup
	epcbPanelGroupBreakAwayTab    =5          # from enum EPcbPanelGroup
	epcbPanelGroupElectricalTestIdentifier=3          # from enum EPcbPanelGroup
	epcbPanelGroupGeneralPanel    =0          # from enum EPcbPanelGroup
	epcbPanelGroupPanelIdentifier =4          # from enum EPcbPanelGroup
	epcbPanelGroupPanelStiffener  =1          # from enum EPcbPanelGroup
	epcbPanelGroupRegistrationPin =9          # from enum EPcbPanelGroup
	epcbPanelGroupSkyHook         =6          # from enum EPcbPanelGroup
	epcbPanelGroupSolderPalette   =7          # from enum EPcbPanelGroup
	epcbPanelGroupTestCoupon      =8          # from enum EPcbPanelGroup
	epcbPinClassAll               =-1         # from enum EPcbPinClassType
	epcbPinClassDie               =4          # from enum EPcbPinClassType
	epcbPinClassSMD               =2          # from enum EPcbPinClassType
	epcbPinClassThrough           =1          # from enum EPcbPinClassType
	epcbPinTypeChainedConnector   =3          # from enum EPcbPinTypeChained
	epcbPinTypeChainedGuidePin    =6          # from enum EPcbPinTypeChained
	epcbPinTypeChainedLoad        =1          # from enum EPcbPinTypeChained
	epcbPinTypeChainedSource      =0          # from enum EPcbPinTypeChained
	epcbPinTypeChainedTerminator  =2          # from enum EPcbPinTypeChained
	epcbPinTypeChainedTestPoint   =4          # from enum EPcbPinTypeChained
	epcbPinTypeChainedVirtualPin  =5          # from enum EPcbPinTypeChained
	epcbPlaceLayerAll             =0          # from enum EPcbPlaceLayer
	epcbPlaceLayerBottom          =512        # from enum EPcbPlaceLayer
	epcbPlaceLayerTop             =1          # from enum EPcbPlaceLayer
	epcbPlaceLayerTopAndBottom    =2048       # from enum EPcbPlaceLayer
	epcbPlaceLayerTopOrBottom     =1024       # from enum EPcbPlaceLayer
	epcbPlaneDataStateBatch       =4          # from enum EPcbPlaneDataState
	epcbPlaneDataStateDraft       =3          # from enum EPcbPlaneDataState
	epcbPlaneDataStateDynamic     =1          # from enum EPcbPlaneDataState
	epcbPlaneDataStateStatic      =2          # from enum EPcbPlaneDataState
	epcbPlaneTypeNegative         =1          # from enum EPcbPlaneType
	epcbPlaneTypePositive         =0          # from enum EPcbPlaneType
	epcbPlanningGroupsBubbleShapeRound=0          # from enum EPcbPlanningGroupsBubbleShape
	epcbPlanningGroupsBubbleShapeSquare=1          # from enum EPcbPlanningGroupsBubbleShape
	epcbProductLicenseLevelFablink201=6          # from enum EPcbProductLicenseLevel
	epcbProductLicenseLevelLayout101=1          # from enum EPcbProductLicenseLevel
	epcbProductLicenseLevelLayout151=2          # from enum EPcbProductLicenseLevel
	epcbProductLicenseLevelLayout201=3          # from enum EPcbProductLicenseLevel
	epcbProductLicenseLevelLayout251=4          # from enum EPcbProductLicenseLevel
	epcbProductLicenseLevelLayout301=5          # from enum EPcbProductLicenseLevel
	epcbProductLicenseLevelNone   =0          # from enum EPcbProductLicenseLevel
	epcbProductLicenseLevelXPD    =7          # from enum EPcbProductLicenseLevel
	epcbPushAndShoveDefault       =0          # from enum EPcbPushAndShoveMode
	epcbPushAndShoveDoNotPush     =2          # from enum EPcbPushAndShoveMode
	epcbPushAndShovePreserveGeometry=1          # from enum EPcbPushAndShoveMode
	epcbPushAndShovePreserveTopologyAndDoNotPush=3          # from enum EPcbPushAndShoveMode
	epcbRFGenerationErrorTypeConductorOverlap=19         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeConstraintViolated=15         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeDefaultSubstrateNotFound=4          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeFailedEvaluateParamBlock=20         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeFileLoadFailed=13         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeInvalidKeyWord=1          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeLibElemenNotFound=12         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeMissingScalar=5          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeMissingVariable=24         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeNoShapeGenerated=21         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeNotInitialized=0          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeNumericValueExpected=8          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeParamNotFound=9          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeParameterOutOfRange=2          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeParameterOutOfRange2=14         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeScalarMappingFailed=7          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeScalarNotValid=6          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeScalarsInconsistent=10         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeShapeFunctionNotFound=11         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeSubstrateNotFound=3          # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeTooManySegments=17         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeTooManyTurns=16         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeUnknownShape=22         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeValueInvalid=18         # from enum EPcbRFGenerationErrorType
	epcbRFGenerationErrorTypeWrongFormattedParam=23         # from enum EPcbRFGenerationErrorType
	epcbRFHazardTypeAutoGeneratedSubstrateUse=1          # from enum EPcbRFHazardType
	epcbRFHazardTypeAutomovedPinWarning=0          # from enum EPcbRFHazardType
	epcbRFHazardTypeParametricBlockGeneration=2          # from enum EPcbRFHazardType
	epcbRFHazardTypeRFGroupContainsADSAWRShapes=5          # from enum EPcbRFHazardType
	epcbRFHazardTypeRFShapeGenerationError=3          # from enum EPcbRFHazardType
	epcbRFHazardTypeRFShapeGenerationWarning=4          # from enum EPcbRFHazardType
	epcbRFHazardTypeUndefined     =-1         # from enum EPcbRFHazardType
	epcbRedrawMouseMove           =2          # from enum EPcbRedrawType
	epcbRedrawUserDrawn           =1          # from enum EPcbRedrawType
	epcbReloadConstraintsNetClass =1          # from enum EPcbReloadConstraints
	epcbReloadConstraintsNetProperties=2          # from enum EPcbReloadConstraints
	epcbReloadConstraintsPackagePinLengths=8          # from enum EPcbReloadConstraints
	epcbReloadConstraintsPackageTypeClearances=4          # from enum EPcbReloadConstraints
	epcbReloadConstraintsTechValues=16         # from enum EPcbReloadConstraints
	epcbReuseAreaAll              =0          # from enum EPcbReuseAreaPublishableStates
	epcbReuseAreaNotPublishable   =1          # from enum EPcbReuseAreaPublishableStates
	epcbReuseAreaPublishable      =2          # from enum EPcbReuseAreaPublishableStates
	epcbReuseAreaSelectAll        =0          # from enum EPcbReuseAreaSelectType
	epcbReuseAreaSelectInUse      =1          # from enum EPcbReuseAreaSelectType
	epcbReuseAreaSelectNotInUse   =2          # from enum EPcbReuseAreaSelectType
	epcbReuseAreaAllStates        =0          # from enum EPcbReuseAreaStateType
	epcbReuseAreaCertifiedECOState=3          # from enum EPcbReuseAreaStateType
	epcbReuseAreaCertifiedPendingState=4          # from enum EPcbReuseAreaStateType
	epcbReuseAreaCertifiedState   =2          # from enum EPcbReuseAreaStateType
	epcbReuseAreaDynamicState     =1          # from enum EPcbReuseAreaStateType
	epcbRotation0                 =1          # from enum EPcbRotationType
	epcbRotation135               =4          # from enum EPcbRotationType
	epcbRotation45                =2          # from enum EPcbRotationType
	epcbRotation90                =3          # from enum EPcbRotationType
	epcbRouteFenceTypeAll         =-1         # from enum EPcbRouteFenceType
	epcbRouteFenceTypeHard        =2          # from enum EPcbRouteFenceType
	epcbRouteFenceTypeSoft        =1          # from enum EPcbRouteFenceType
	epcbSandBoxActiveRealTime     =1          # from enum EPcbSandboxState
	epcbSandBoxInactive           =0          # from enum EPcbSandboxState
	epcbSchemeTypeLocal           =0          # from enum EPcbSchemeType
	epcbSchemeTypeSystem          =1          # from enum EPcbSchemeType
	epcbSchemeTypeUser            =2          # from enum EPcbSchemeType
	epcbSegmentArc                =1          # from enum EPcbSegmentType
	epcbSegmentCircle             =2          # from enum EPcbSegmentType
	epcbSegmentLine               =4          # from enum EPcbSegmentType
	epcbSegmentPoint              =3          # from enum EPcbSegmentType
	epcbSelectAll                 =0          # from enum EPcbSelectionType
	epcbSelectFixed               =128        # from enum EPcbSelectionType
	epcbSelectHighlighted         =8192       # from enum EPcbSelectionType
	epcbSelectJustModified        =2048       # from enum EPcbSelectionType
	epcbSelectLocked              =512        # from enum EPcbSelectionType
	epcbSelectMarked              =4096       # from enum EPcbSelectionType
	epcbSelectPlaced              =4          # from enum EPcbSelectionType
	epcbSelectSelected            =1          # from enum EPcbSelectionType
	epcbSelectUnfixed             =256        # from enum EPcbSelectionType
	epcbSelectUnhighlighted       =16384      # from enum EPcbSelectionType
	epcbSelectUnlocked            =1024       # from enum EPcbSelectionType
	epcbSelectUnplaced            =8          # from enum EPcbSelectionType
	epcbSelectUnselected          =2          # from enum EPcbSelectionType
	epcbSessionReadOnly           =8          # from enum EPcbSessionType
	epcbSessionRegular            =1          # from enum EPcbSessionType
	epcbSessionTeamPCB            =2          # from enum EPcbSessionType
	epcbSessionXtremePCB          =4          # from enum EPcbSessionType
	epcbSettingsDesign            =3          # from enum EPcbSettingsType
	epcbSettingsUserDesign        =2          # from enum EPcbSettingsType
	epcbSettingsUserDesignOnSave  =4          # from enum EPcbSettingsType
	epcbSettingsUserGlobal        =1          # from enum EPcbSettingsType
	epcbShapeAttrHasHoles         =64         # from enum EPcbShapeAttr
	epcbShapeAttrIsArced          =16         # from enum EPcbShapeAttr
	epcbShapeAttrIsCircle         =2          # from enum EPcbShapeAttr
	epcbShapeAttrIsClosed         =8          # from enum EPcbShapeAttr
	epcbShapeAttrIsFilled         =1          # from enum EPcbShapeAttr
	epcbShapeAttrIsPath           =32         # from enum EPcbShapeAttr
	epcbShapeAttrIsRect           =4          # from enum EPcbShapeAttr
	epcbShapeChamferedRectangle   =7          # from enum EPcbShapeType
	epcbShapeCustom               =12         # from enum EPcbShapeType
	epcbShapeOblong               =2          # from enum EPcbShapeType
	epcbShapeOctagon              =5          # from enum EPcbShapeType
	epcbShapeOctagonalFinger      =9          # from enum EPcbShapeType
	epcbShapeRadiusCornerRectangle=6          # from enum EPcbShapeType
	epcbShapeRectangle            =4          # from enum EPcbShapeType
	epcbShapeRound                =1          # from enum EPcbShapeType
	epcbShapeRoundFinger          =8          # from enum EPcbShapeType
	epcbShapeSlot                 =10         # from enum EPcbShapeType
	epcbShapeSquare               =3          # from enum EPcbShapeType
	epcbSideBottom                =512        # from enum EPcbSide
	epcbSideMount                 =513        # from enum EPcbSide
	epcbSideOpposite              =514        # from enum EPcbSide
	epcbSideTop                   =1          # from enum EPcbSide
	epcbSideTopOrBottom           =0          # from enum EPcbSide
	epcbSimulationTypeCrosstalk   =0          # from enum EPcbSimulationType
	epcbSimulationTypeTraceModeling=2          # from enum EPcbSimulationType
	epcbSimulationTypeWaveform    =1          # from enum EPcbSimulationType
	epcbStatusField1              =1          # from enum EPcbStatusField
	epcbStatusField2              =2          # from enum EPcbStatusField
	epcbStatusField3              =3          # from enum EPcbStatusField
	epcbStatusFieldError          =4          # from enum EPcbStatusField
	epcbStatusFieldPrompt         =0          # from enum EPcbStatusField
	epcbTerminatorClosed          =1          # from enum EPcbTerminatorType
	epcbTerminatorOpen            =2          # from enum EPcbTerminatorType
	epcbTerminatorSolid           =0          # from enum EPcbTerminatorType
	epcbStandardTestPointRules    =0          # from enum EPcbTestPointCheckingProcessType
	epcbTestProbeAndTestPointRules=1          # from enum EPcbTestPointCheckingProcessType
	epcbTestpointSideBoth         =2          # from enum EPcbTestpointSide
	epcbTestpointSideBottom       =1          # from enum EPcbTestpointSide
	epcbTestpointSideTop          =0          # from enum EPcbTestpointSide
	epcbTextAttrIsBold            =1          # from enum EPcbTextAttr
	epcbTextAttrIsItalic          =8          # from enum EPcbTextAttr
	epcbTextAttrIsMirrored        =4          # from enum EPcbTextAttr
	epcbTextAttrIsUnderlined      =2          # from enum EPcbTextAttr
	epcbTextAll                   =-1         # from enum EPcbTextType
	epcbTextGeneric               =2          # from enum EPcbTextType
	epcbTextPartNumber            =4          # from enum EPcbTextType
	epcbTextPartProperty          =64         # from enum EPcbTextType
	epcbTextPinLogical            =16         # from enum EPcbTextType
	epcbTextPinPhysical           =32         # from enum EPcbTextType
	epcbTextPinUserDefined        =8          # from enum EPcbTextType
	epcbTextRefDes                =1          # from enum EPcbTextType
	epcbTieLegRotationFixed0      =0          # from enum EPcbTieLegRotation
	epcbTieLegRotationFixed135    =3          # from enum EPcbTieLegRotation
	epcbTieLegRotationFixed45     =1          # from enum EPcbTieLegRotation
	epcbTieLegRotationFixed90     =2          # from enum EPcbTieLegRotation
	epcbTieLegRotationPreferred0  =4          # from enum EPcbTieLegRotation
	epcbTieLegRotationPreferred135=7          # from enum EPcbTieLegRotation
	epcbTieLegRotationPreferred45 =5          # from enum EPcbTieLegRotation
	epcbTieLegRotationPreferred90 =6          # from enum EPcbTieLegRotation
	epcbTieLegRotationUndefined   =-1         # from enum EPcbTieLegRotation
	epcbTieLegBuried              =4          # from enum EPcbTieLegType
	epcbTieLegEight               =3          # from enum EPcbTieLegType
	epcbTieLegFour                =2          # from enum EPcbTieLegType
	epcbTieLegNone                =0          # from enum EPcbTieLegType
	epcbTieLegTwo                 =1          # from enum EPcbTieLegType
	epcbTieLegUndefined           =-1         # from enum EPcbTieLegType
	epcbTraceExpCenterline        =1          # from enum EPcbTraceExpansionMode
	epcbTraceExpFull              =3          # from enum EPcbTraceExpansionMode
	epcbTraceExpNoTrace           =0          # from enum EPcbTraceExpansionMode
	epcbTraceExpWidth             =2          # from enum EPcbTraceExpansionMode
	epcbUnitCurrent               =0          # from enum EPcbUnit
	epcbUnitDatabase              =1          # from enum EPcbUnit
	epcbUnitInch                  =3          # from enum EPcbUnit
	epcbUnitMM                    =4          # from enum EPcbUnit
	epcbUnitMils                  =2          # from enum EPcbUnit
	epcbUnitUM                    =5          # from enum EPcbUnit
	epcbVariantDataTypeBE         =2          # from enum EPcbVariantDataType
	epcbVariantDataTypeFE         =1          # from enum EPcbVariantDataType
	epcbVariantDataTypeFXE        =4          # from enum EPcbVariantDataType
	epcbVariantDataTypeNone       =0          # from enum EPcbVariantDataType
	epcbVelocityUnitInchesPerns   =1          # from enum EPcbVelocityUnit
	epcbVelocityUnitMetersPerSec  =0          # from enum EPcbVelocityUnit
	epcbVelocityUnitPercentOfC    =2          # from enum EPcbVelocityUnit
	epcbJustifyBottom             =-1         # from enum EPcbVerticalJustification
	epcbJustifyTop                =1          # from enum EPcbVerticalJustification
	epcbJustifyVCenter            =0          # from enum EPcbVerticalJustification
	epcbCoincident                =4          # from enum EPcbViaClearanceMode
	epcbHoleEdgeAndCoincident     =7          # from enum EPcbViaClearanceMode
	epcbHoleEdgeToHoleEdge        =3          # from enum EPcbViaClearanceMode
	epcbNoViaClearanceOverride    =0          # from enum EPcbViaClearanceMode
	epcbPadEdgeAndCoincident      =6          # from enum EPcbViaClearanceMode
	epcbPadEdgeToPadEdge          =1          # from enum EPcbViaClearanceMode
	epcbPadstackOriginToPadstackOrigin=2          # from enum EPcbViaClearanceMode
	epcbPitchAndCoincident        =5          # from enum EPcbViaClearanceMode
	epcbViaExpFull                =3          # from enum EPcbViaExpansionMode
	epcbViaExpNoVia               =0          # from enum EPcbViaExpansionMode
	epcbViaExpPad                 =2          # from enum EPcbViaExpansionMode
	epcbViaExpPoint               =1          # from enum EPcbViaExpansionMode
	epcbViewAllViews              =0          # from enum EPcbViewType
	epcbViewCustomView            =8          # from enum EPcbViewType
	epcbViewDefaultView           =1          # from enum EPcbViewType
	epcbViewDrawingView           =2          # from enum EPcbViewType
	epcbViewPCBView               =1          # from enum EPcbViewType
	epcbViewUnknownView           =268435456  # from enum EPcbViewType
	epcpVieweDxDView              =4          # from enum EPcbViewType
	epcbWindowStateHide           =0          # from enum EPcbWindowState
	epcbWindowStateMinimize       =6          # from enum EPcbWindowState
	epcbWindowStateRestore        =9          # from enum EPcbWindowState
	epcbWindowStateRestoreNoFocusChange=4          # from enum EPcbWindowState
	epcbWindowStateShowMaximized  =3          # from enum EPcbWindowState
	epcbWindowStateShowMinimized  =2          # from enum EPcbWindowState
	epcbWindowStateShowMinimizedNoFocusChange=7          # from enum EPcbWindowState
	epcbWindowStateShowNoFocusChange=8          # from enum EPcbWindowState
	epcbWindowStateShowNormal     =1          # from enum EPcbWindowState
	epcbWriteAccessStatusAlreadyInUse=1          # from enum EPcbWriteAccessStatus
	epcbWriteAccessStatusGranted  =0          # from enum EPcbWriteAccessStatus
	epcbWriteAccessStatusPinGateSwapping=2          # from enum EPcbWriteAccessStatus
	epcbPinConnectAnalog          =23         # from enum EPinConnectType
	epcbPinConnectBidir           =4          # from enum EPinConnectType
	epcbPinConnectCap             =10         # from enum EPinConnectType
	epcbPinConnectConn            =20         # from enum EPinConnectType
	epcbPinConnectDigital         =22         # from enum EPinConnectType
	epcbPinConnectDiode           =13         # from enum EPinConnectType
	epcbPinConnectInd             =12         # from enum EPinConnectType
	epcbPinConnectInput           =0          # from enum EPinConnectType
	epcbPinConnectJumper          =16         # from enum EPinConnectType
	epcbPinConnectNoConnect       =17         # from enum EPinConnectType
	epcbPinConnectNoRoute         =18         # from enum EPinConnectType
	epcbPinConnectOc              =2          # from enum EPinConnectType
	epcbPinConnectOd              =5          # from enum EPinConnectType
	epcbPinConnectOe              =7          # from enum EPinConnectType
	epcbPinConnectOther           =24         # from enum EPinConnectType
	epcbPinConnectOutput          =1          # from enum EPinConnectType
	epcbPinConnectRC              =11         # from enum EPinConnectType
	epcbPinConnectRes             =9          # from enum EPinConnectType
	epcbPinConnectSchmitt         =6          # from enum EPinConnectType
	epcbPinConnectSupply          =21         # from enum EPinConnectType
	epcbPinConnectTerm            =15         # from enum EPinConnectType
	epcbPinConnectTestpt          =19         # from enum EPinConnectType
	epcbPinConnectTline           =14         # from enum EPinConnectType
	epcbPinConnectTris            =3          # from enum EPinConnectType
	epcbPinConnectVdiv            =8          # from enum EPinConnectType
	epcbDesignTechnologyPCB       =0          # from enum EpcbDesignTechnologyType
	epcbDesignTechnologyPackageDesign=1          # from enum EpcbDesignTechnologyType
	epcbDesignTechnologyRigidFlexDesign=2          # from enum EpcbDesignTechnologyType

from win32com.client import DispatchBaseClass
class IMGCPCBActiveClearanceEngine(DispatchBaseClass):
	CLSID = IID('{D650CB6A-FA51-4F22-9F2C-F7900A4B304C}')
	coclass_clsid = IID('{BB885650-D4A1-4724-89AB-4A6D83BD436B}')

	def Clear(self):
		'Clears the active object.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def Draw(self):
		'Draws the clearance graphics.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	# The method SetAreaDiameter is actually a property, but must be used as a method to correctly pass the arguments
	def SetAreaDiameter(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets the extrema size to generate the clearances in.  This is an offset from the current mouse position.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Enabled": (1, 2, (11, 0), (), "Enabled", None),
	}
	_prop_map_put_ = {
		"ActiveObject": ((2, LCID, 8, 0),()),
		"AreaDiameter": ((4, LCID, 4, 0),()),
		"Enabled": ((1, LCID, 4, 0),()),
		"RedrawMethod": ((5, LCID, 4, 0),()),
	}

	Enabled: str # read/write
	ActiveObject: str # write_only
	AreaDiameter: str # write_only
	RedrawMethod: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBActualPlaneShape(DispatchBaseClass):
	'MGCPCB Actual Plane Shape Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}')
	coclass_clsid = IID('{EDEDED93-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (43, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'GeneratedPlanes' returns object of type 'IMGCPCBGeneratedPlanes'
		"GeneratedPlanes": (49, 2, (9, 0), (), "GeneratedPlanes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (51, 2, (9, 0), (), "Parent", None),
		# Method 'PlaneShape' returns object of type 'IMGCPCBPlaneShape'
		"PlaneShape": (45, 2, (9, 0), (), "PlaneShape", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}'),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Subnet": (44, 2, (3, 0), (), "Subnet", None),
		# Method 'TieLegs' returns object of type 'IMGCPCBTieLegs'
		"TieLegs": (50, 2, (9, 0), (), "TieLegs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}'),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	GeneratedPlanes: str # IMGCPCBGeneratedPlanes; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	PlaneShape: str # IMGCPCBPlaneShape; read_only
	Properties: str # IMGCPCBProperties; read_only
	Selected: bool # read/write
	Subnet: str # read_only
	TieLegs: str # IMGCPCBTieLegs; read_only
	Type: str # read_only
	Type2: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBActualPlaneShapes(DispatchBaseClass):
	'MGCPCB Actual Plane Shapes collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')
	coclass_clsid = IID('{EDEDED94-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pActualPlaneShape=defaultNamedNotOptArg):
		'Adds an actual plane shape to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pActualPlaneShape
			)

	def Delete(self):
		'Delete all actual plane shapes in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBActualPlaneShape
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the actual plane shape of a given index in the actual plane shape collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort actual plane shapes in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the actual plane shape of a given index in the actual plane shape collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBApplication(DispatchBaseClass):
	'MGCPCB Application Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}')
	coclass_clsid = IID('{8B456EA8-6CF5-1014-857A-77B9EECCF0AC}')

	def AcquireLicense(self, eType=defaultNamedNotOptArg):
		"Attempt to acquire the specified licenses (items may be OR'ed together) (Deprecated).  Use AcquireLicenseEx"
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((3, 1),),eType
			)

	def AcquireLicenseEx(self, eType=defaultNamedNotOptArg):
		'Attempt to acquire the specified license feature'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (11, 0), ((3, 1),),eType
			)

	def AppClosing(self, eApp=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 0),),eApp
			)

	def AutomationInit(self, _arguments=defaultNamedNotOptArg, _dispPtr=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((12, 1), (9, 1)),_arguments
			, _dispPtr)

	def FindWritableWDIR(self):
		'Finds writable WDIR.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(52, LCID, 1, (8, 0), (),)

	def IsLicenseAcquired(self, eType=defaultNamedNotOptArg):
		'Check if the license specified has already been acquired in this session.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (11, 0), ((3, 1),),eType
			)

	def IsLicenseAvailable(self, eType=defaultNamedNotOptArg):
		'Check if the license specified is available on the license server.'
		return self._oleobj_.InvokeTypes(43, LCID, 1, (11, 0), ((3, 1),),eType
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), (),)

	def IsXtremeClient(self):
		'Returns true is this is an Xtreme client.'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsXtremeServer(self):
		'Returns true is this is an Xtreme server.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def LockServer(self, bReservedForFutureUse=False):
		"Locks the server to improve performance - calls to lock/unlock may be nested. Don't forget to call Unlock() when using Lock()."
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((11, 49),),bReservedForFutureUse
			)

	def NewProject(self):
		'Initiates new project creation.'
		return self._oleobj_.InvokeTypes(57, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBDocument
	def OpenDocument(self, filename=defaultNamedNotOptArg):
		'Opens (and returns) a new Document.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1),),filename
			)
		if ret is not None:
			ret = Dispatch(ret, 'OpenDocument', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')
		return ret

	# Result is of type IMGCPCBDocument
	def OpenDocumentMultiThreaded(self, filename=defaultNamedNotOptArg):
		'Opens a new Document.Internal usage only!  This will behave as File Open. May not return a new document.'
		ret = self._oleobj_.InvokeTypes(50, LCID, 1, (9, 0), ((8, 1),),filename
			)
		if ret is not None:
			ret = Dispatch(ret, 'OpenDocumentMultiThreaded', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')
		return ret

	# Result is of type IMGCPCBApplication
	def OpenReference(self, refDesign=defaultNamedNotOptArg):
		'Returns the Application object of the reference application. The input should be a string containing the full path to the reference design.'
		ret = self._oleobj_.InvokeTypes(42, LCID, 1, (9, 0), ((8, 1),),refDesign
			)
		if ret is not None:
			ret = Dispatch(ret, 'OpenReference', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}')
		return ret

	def ProcessScript(self, filename=defaultNamedNotOptArg, bSilent=defaultNamedNotOptArg):
		'Runs a script file. If in silent mode then no parse or run-time error messages are echoed.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((8, 1), (11, 1)),filename
			, bSilent)

	def ProcessScriptEx(self, Script=defaultNamedNotOptArg, isFile=True, ArgumentArray='', languageFileExtension='vbs'
			, bSilent=True):
		'Executes a script file or a script string. languageFileExtension param is ignored if isFile is true.  If in silent mode then no parse or run-time error messages are echoed. (Beta)'
		return self._ApplyTypes_(22, 1, (12, 32), ((8, 1), (11, 49), (12, 49), (8, 49), (11, 49)), 'ProcessScriptEx', None,Script
			, isFile, ArgumentArray, languageFileExtension, bSilent)

	def Quit(self):
		'Exits the Application and closes all open documents.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	def ReleaseLicense(self, eType=defaultNamedNotOptArg):
		'Release the specified license feature'
		return self._oleobj_.InvokeTypes(28, LCID, 1, (11, 0), ((3, 1),),eType
			)

	def RemoveAddinVersionInfo(self, AddinName=defaultNamedNotOptArg):
		'Removes add-in version information.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((8, 1),),AddinName
			)

	def SetAddinVersionInfo(self, AddinName=defaultNamedNotOptArg, VersionInformation=defaultNamedNotOptArg):
		'Set the add-in version information.  This information will be displayed in the about box.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((8, 1), (8, 1)),AddinName
			, VersionInformation)

	def UnlockServer(self, bReservedForFutureUse=True):
		"Unlocks the server - don't forget to call this if you use LockServer."
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((11, 49),),bReservedForFutureUse
			)

	_prop_map_get_ = {
		# Method 'ActiveDocument' returns object of type 'IMGCPCBDocument'
		"ActiveDocument": (2, 2, (9, 0), (), "ActiveDocument", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"Addins": (17, 2, (9, 0), (), "Addins", None),
		"AnalyticsParticipation": (55, 2, (11, 0), (), "AnalyticsParticipation", None),
		# Method 'DataManagement' returns object of type 'IMGCPCBDataManagement'
		"DataManagement": (45, 2, (9, 0), (), "DataManagement", '{E6C0D2B9-F966-4A54-AEB3-AFB0DBC97986}'),
		"DefaultFilePath": (3, 2, (8, 0), (), "DefaultFilePath", None),
		"DocumentOpenAllowed": (51, 2, (11, 0), (), "DocumentOpenAllowed", None),
		"EDXImport": (36, 2, (9, 0), (), "EDXImport", None),
		# Method 'EarlyLoadedActiveDocument' returns object of type 'IMGCPCBDocument'
		"EarlyLoadedActiveDocument": (54, 2, (9, 0), (), "EarlyLoadedActiveDocument", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"EditorType": (29, 2, (3, 0), (), "EditorType", None),
		"FullName": (4, 2, (8, 0), (), "FullName", None),
		"GlobalAnalyticsOptOutEnabled": (56, 2, (11, 0), (), "GlobalAnalyticsOptOutEnabled", None),
		# Method 'Gui' returns object of type 'IMGCPCBGui'
		"Gui": (12, 2, (9, 0), (), "Gui", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5B}'),
		"InstanceGuid": (20, 2, (8, 0), (), "InstanceGuid", None),
		"InvokingApplication": (39, 2, (3, 0), (), "InvokingApplication", None),
		"IsDBLocked": (35, 2, (11, 0), (), "IsDBLocked", None),
		"IsDocumentReady": (41, 2, (11, 0), (), "IsDocumentReady", None),
		"IsEngineThreadBusy": (44, 2, (11, 0), (), "IsEngineThreadBusy", None),
		"IsExitInProgress": (53, 2, (11, 0), (), "IsExitInProgress", None),
		"IsOpenGLOn": (37, 2, (11, 0), (), "IsOpenGLOn", None),
		"IsReferenceApplication": (40, 2, (11, 0), (), "IsReferenceApplication", None),
		"LockCount": (14, 2, (3, 0), (), "LockCount", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ProductBinDirectory": (24, 2, (8, 0), (), "ProductBinDirectory", None),
		"ProductConfigDirectory": (23, 2, (8, 0), (), "ProductConfigDirectory", None),
		"ProductHelpDirectory": (25, 2, (8, 0), (), "ProductHelpDirectory", None),
		"ProductStandardDirectory": (26, 2, (8, 0), (), "ProductStandardDirectory", None),
		"RecentFiles": (38, 2, (12, 0), (), "RecentFiles", None),
		"Type": (19, 2, (3, 0), (), "Type", None),
		"UserHandle": (34, 2, (8, 0), (), "UserHandle", None),
		"UsingEmbeddedDataManagement": (46, 2, (11, 0), (), "UsingEmbeddedDataManagement", None),
		"UsingTeamCenterDataManagement": (47, 2, (11, 0), (), "UsingTeamCenterDataManagement", None),
		"UsingTeamCenterDataManagementWithActiveWorkspace": (48, 2, (11, 0), (), "UsingTeamCenterDataManagementWithActiveWorkspace", None),
		# Method 'Utility' returns object of type 'IMGCPCBUtility'
		"Utility": (11, 2, (9, 0), (), "Utility", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4B}'),
		"Version": (1, 2, (8, 0), (), "Version", None),
		"Visible": (5, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"AnalyticsParticipation": ((55, LCID, 4, 0),()),
		"Visible": ((5, LCID, 4, 0),()),
	}

	ActiveDocument: str # IMGCPCBDocument; read_only
	Addins: str # read_only
	AnalyticsParticipation: str # read/write
	DataManagement: str # IMGCPCBDataManagement; read_only
	DefaultFilePath: str # read_only
	DocumentOpenAllowed: str # read_only
	EDXImport: str # read_only
	EarlyLoadedActiveDocument: str # IMGCPCBDocument; read_only
	EditorType: str # read_only
	FullName: str # read_only
	GlobalAnalyticsOptOutEnabled: str # read_only
	Gui: str # IMGCPCBGui; read_only
	InstanceGuid: str # read_only
	InvokingApplication: str # read_only
	IsDBLocked: str # read_only
	IsDocumentReady: str # read_only
	IsEngineThreadBusy: str # read_only
	IsExitInProgress: str # read_only
	IsOpenGLOn: str # read_only
	IsReferenceApplication: str # read_only
	LockCount: str # read_only
	Name: str # read_only
	ProductBinDirectory: str # read_only
	ProductConfigDirectory: str # read_only
	ProductHelpDirectory: str # read_only
	ProductStandardDirectory: str # read_only
	RecentFiles: str # read_only
	Type: str # read_only
	UserHandle: str # read_only
	UsingEmbeddedDataManagement: str # read_only
	UsingTeamCenterDataManagement: str # read_only
	UsingTeamCenterDataManagementWithActiveWorkspace: str # read_only
	Utility: str # IMGCPCBUtility; read_only
	Version: str # read_only
	Visible: bool # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBaseCollection(DispatchBaseClass):
	'MGCPCB Base Collection Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED62}')
	coclass_clsid = None

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBBaseGfx(DispatchBaseClass):
	'MGCPCB BaseGfx Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED40}')
	coclass_clsid = None

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Selected: bool # read/write
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBaseText(DispatchBaseClass):
	'MGCPCB Base Text Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED32}')
	coclass_clsid = None

	def Delete(self):
		'Deletes the Text object.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Returns the X position of the Text object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Returns the Y position of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the text to the specified location'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the text by the specified offset.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the X position of the Text object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the Y position of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (11, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (18, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (8, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Format' returns object of type 'IMGCPCBFormat'
		"Format": (9, 2, (9, 0), (), "Format", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ObjectClass": (14, 2, (3, 0), (), "ObjectClass", None),
		"PositionX": (3, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (4, 2, (5, 0), ((3, 49),), "PositionY", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"TextString": (2, 2, (8, 0), (), "TextString", None),
		"TextType": (6, 2, (3, 0), (), "TextType", None),
		"_Handle": (13, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"PositionX": ((3, LCID, 4, 0),()),
		"PositionY": ((4, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"TextString": ((2, LCID, 4, 0),()),
		"_Handle": ((13, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Format: str # IMGCPCBFormat; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Selected: bool # read/write
	TextString: str # read/write
	TextType: str # read_only
	_Handle: str # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBendArea(DispatchBaseClass):
	'MGCPCB BendArea Object.'
	CLSID = IID('{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}')
	coclass_clsid = IID('{F33247C1-FE50-4BBE-8A41-1EF349FCACA6}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetAreaTolerance is actually a property, but must be used as a method to correctly pass the arguments
	def GetAreaTolerance(self, eUnit=0):
		'Returns the area tolerance for this bend area.'
		return self._oleobj_.InvokeTypes(42, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetBendAngle is actually a property, but must be used as a method to correctly pass the arguments
	def GetBendAngle(self, eUnit=0):
		'Returns the bend angle for this bend area.'
		return self._oleobj_.InvokeTypes(57, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetBendRadius is actually a property, but must be used as a method to correctly pass the arguments
	def GetBendRadius(self, eUnit=0):
		'Returns the bend radius of this bend area.'
		return self._oleobj_.InvokeTypes(56, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetBindingLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetBindingLength(self, eUnit=0):
		'Sets or returns the binding length of this bend area.'
		return self._oleobj_.InvokeTypes(52, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetFirstCorner is actually a property, but must be used as a method to correctly pass the arguments
	def GetFirstCorner(self, eUnit=0):
		'Sets or returns the first corner distance for this bend area.'
		return self._oleobj_.InvokeTypes(43, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetLeftSlideDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetLeftSlideDistance(self, eUnit=0):
		'Returns the left slide distance of this bend area.'
		return self._oleobj_.InvokeTypes(50, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetRightSlideDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetRightSlideDistance(self, eUnit=0):
		'Returns the right slide distance of this bend area.'
		return self._oleobj_.InvokeTypes(51, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	# Result is of type IMGCPCBBendAreas
	def ModifyBendAreaLine(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg
			, dBendRadius=defaultNamedNotOptArg, BoardOutlineName='', dBendAngle=90.0, BendOrigin=0, dAreaTolerance=0.0
			, dLeftSlideDistance=0.0, dRightSlideDistance=0.0, eUnit=0, eAngleUnit=0):
		'Moves the bend area line to the specified coordinates and regenerates the bend areas using the new line geometry and specified property values.'
		return self._ApplyTypes_(53, 1, (9, 32), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (8, 49), (5, 49), (3, 49), (5, 49), (5, 49), (5, 49), (3, 49), (3, 49)), 'ModifyBendAreaLine', '{6B76C06F-2E50-491B-B845-D70A57247DB0}',X1
			, Y1, X2, Y2, dBendRadius, BoardOutlineName
			, dBendAngle, BendOrigin, dAreaTolerance, dLeftSlideDistance, dRightSlideDistance
			, eUnit, eAngleUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetBindingLength is actually a property, but must be used as a method to correctly pass the arguments
	def SetBindingLength(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the binding length of this bend area.'
		return self._oleobj_.InvokeTypes(52, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetFirstCorner is actually a property, but must be used as a method to correctly pass the arguments
	def SetFirstCorner(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the first corner distance for this bend area.'
		return self._oleobj_.InvokeTypes(43, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"AllowCorners": (44, 2, (11, 0), (), "AllowCorners", None),
		"AllowNonPerpendicular": (46, 2, (11, 0), (), "AllowNonPerpendicular", None),
		"AllowParts": (49, 2, (11, 0), (), "AllowParts", None),
		"AllowSolidFill": (48, 2, (11, 0), (), "AllowSolidFill", None),
		"AllowVias": (47, 2, (11, 0), (), "AllowVias", None),
		"AllowWidthChanges": (45, 2, (11, 0), (), "AllowWidthChanges", None),
		"AreaTolerance": (42, 2, (5, 0), ((3, 49),), "AreaTolerance", None),
		"BendAngle": (57, 2, (5, 0), ((3, 49),), "BendAngle", None),
		"BendLineGroupId": (59, 2, (8, 0), (), "BendLineGroupId", None),
		"BendOrder": (41, 2, (3, 0), (), "BendOrder", None),
		"BendOrigin": (58, 2, (3, 0), (), "BendOrigin", None),
		"BendRadius": (56, 2, (5, 0), ((3, 49),), "BendRadius", None),
		"BindingLength": (52, 2, (5, 0), ((3, 49),), "BindingLength", None),
		"BoardOutlineName": (55, 2, (8, 0), (), "BoardOutlineName", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"DynamicBend": (61, 2, (11, 0), (), "DynamicBend", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FirstCorner": (43, 2, (5, 0), ((3, 49),), "FirstCorner", None),
		"FixLock": (62, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"LeftSlideDistance": (50, 2, (5, 0), ((3, 49),), "LeftSlideDistance", None),
		# Method 'LineGeometry' returns object of type 'IMGCPCBGeometry'
		"LineGeometry": (40, 2, (9, 0), (), "LineGeometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (60, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"RightSlideDistance": (51, 2, (5, 0), ((3, 49),), "RightSlideDistance", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (54, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"AllowCorners": ((44, LCID, 4, 0),()),
		"AllowNonPerpendicular": ((46, LCID, 4, 0),()),
		"AllowParts": ((49, LCID, 4, 0),()),
		"AllowSolidFill": ((48, LCID, 4, 0),()),
		"AllowVias": ((47, LCID, 4, 0),()),
		"AllowWidthChanges": ((45, LCID, 4, 0),()),
		"BendOrder": ((41, LCID, 4, 0),()),
		"BindingLength": ((52, LCID, 4, 0),()),
		"DynamicBend": ((61, LCID, 4, 0),()),
		"FirstCorner": ((43, LCID, 4, 0),()),
		"FixLock": ((62, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	AllowCorners: str # read/write
	AllowNonPerpendicular: str # read/write
	AllowParts: str # read/write
	AllowSolidFill: str # read/write
	AllowVias: str # read/write
	AllowWidthChanges: str # read/write
	AreaTolerance: str # read_only
	BendAngle: str # read_only
	BendLineGroupId: str # read_only
	BendOrder: str # read/write
	BendOrigin: str # read_only
	BendRadius: str # read_only
	BindingLength: str # read/write
	BoardOutlineName: str # read_only
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	DynamicBend: str # read/write
	Extrema: str # IMGCPCBExtrema; read_only
	FirstCorner: str # read/write
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	LeftSlideDistance: str # read_only
	LineGeometry: str # IMGCPCBGeometry; read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	RightSlideDistance: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBendAreas(DispatchBaseClass):
	'MGCPCB bend area collection.'
	CLSID = IID('{6B76C06F-2E50-491B-B845-D70A57247DB0}')
	coclass_clsid = IID('{6B2ED012-98B6-4544-A4DA-58794B7ABECC}')

	def Add(self, pBendArea=defaultNamedNotOptArg):
		'Adds a bend area to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pBendArea
			)

	def Delete(self):
		'Delete all bend areas in the collection.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBBendArea
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the bend area of a given index in the bend area collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort bend areas in this collection by extrema.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the bend area of a given index in the bend area collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBBoard(DispatchBaseClass):
	'MGCPCB Board Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')
	coclass_clsid = IID('{EDEDED8B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def AssignVariant(self, variantName=defaultNamedNotOptArg):
		'Assigns variant for this board'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((8, 1),),variantName
			)

	def Delete(self):
		'Unplace this board from the panel. The board is still available for subsequent placement.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		"Sets or returns the Board's orientation."
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def GetOriginX(self, eUnit=0):
		"Returns the Board's X origin."
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def GetOriginY(self, eUnit=0):
		"Returns the Board's Y origin."
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid board.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Move(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Moves the board to given location.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def ReReferenceDesign(self, variantNewSrcDesignPath=defaultNamedNotOptArg, regenerateVariantData=False, replaceExistingDesigns=False):
		'Re-reference the source design for this board.'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), ((8, 1), (11, 49), (11, 49)),variantNewSrcDesignPath
			, regenerateVariantData, replaceExistingDesigns)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		"Sets or returns the Board's orientation."
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def TransformPointX(self, dBrdX=defaultNamedNotOptArg, dBrdY=defaultNamedNotOptArg, eUnit=0):
		'Returns x-coordinate on panel for given board coordinates.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (5, 0), ((5, 1), (5, 1), (3, 49)),dBrdX
			, dBrdY, eUnit)

	def TransformPointY(self, dBrdX=defaultNamedNotOptArg, dBrdY=defaultNamedNotOptArg, eUnit=0):
		'Returns y-coordinate on panel for given board coordinates.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (5, 0), ((5, 1), (5, 1), (3, 49)),dBrdX
			, dBrdY, eUnit)

	def TransformPointsArray(self, nPnts=defaultNamedNotOptArg, pBrdSafeArrayOfPnts=defaultNamedNotOptArg, eUnit=0):
		'Returns points array in panel coordinates for given points array in board coordinates.'
		return self._ApplyTypes_(14, 1, (12, 0), ((3, 1), (16396, 1), (3, 49)), 'TransformPointsArray', None,nPnts
			, pBrdSafeArrayOfPnts, eUnit)

	_prop_map_get_ = {
		"Anchor": (7, 2, (3, 0), (), "Anchor", None),
		"CurrentVariant": (24, 2, (8, 0), (), "CurrentVariant", None),
		"DimensionDesignWithInstanceOrigin": (18, 2, (11, 0), (), "DimensionDesignWithInstanceOrigin", None),
		# Method 'DisplayControl' returns object of type 'IMGCPCBDisplayControl'
		"DisplayControl": (16, 2, (9, 0), (), "DisplayControl", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (21, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (27, 2, (3, 0), (), "FixLock", None),
		"FullName": (6, 2, (8, 0), (), "FullName", None),
		"Highlighted": (10, 2, (11, 0), (), "Highlighted", None),
		"InstanceName": (0, 2, (8, 0), (), "InstanceName", None),
		"LocalName": (15, 2, (8, 0), (), "LocalName", None),
		"Mirrored": (4, 2, (11, 0), (), "Mirrored", None),
		"ObjectClass": (26, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (3, 2, (5, 0), ((3, 49),), "Orientation", None),
		"OriginX": (1, 2, (5, 0), ((3, 49),), "OriginX", None),
		"OriginY": (2, 2, (5, 0), ((3, 49),), "OriginY", None),
		"Parent": (28, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (22, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"RelativePath": (29, 2, (8, 0), (), "RelativePath", None),
		"Scale": (17, 2, (5, 0), (), "Scale", None),
		"Selected": (5, 2, (11, 0), (), "Selected", None),
		"UniqueId": (23, 2, (12, 0), (), "UniqueId", None),
		"VariantNames": (19, 2, (12, 0), (), "VariantNames", None),
	}
	_prop_map_put_ = {
		"Anchor": ((7, LCID, 4, 0),()),
		"DimensionDesignWithInstanceOrigin": ((18, LCID, 4, 0),()),
		"FixLock": ((27, LCID, 4, 0),()),
		"Highlighted": ((10, LCID, 4, 0),()),
		"Mirrored": ((4, LCID, 4, 0),()),
		"Orientation": ((3, LCID, 4, 0),()),
		"Scale": ((17, LCID, 4, 0),()),
		"Selected": ((5, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	CurrentVariant: str # read_only
	DimensionDesignWithInstanceOrigin: str # read/write
	DisplayControl: str # IMGCPCBDisplayControl; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	FullName: str # read_only
	Highlighted: bool # read/write
	InstanceName: str # read_only
	LocalName: str # read_only
	Mirrored: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginX: str # read_only
	OriginY: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	RelativePath: str # read_only
	Scale: str # read/write
	Selected: bool # read/write
	UniqueId: str # read_only
	VariantNames: str # read_only

	# Default property for this class is 'InstanceName'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "InstanceName", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBoardOutline(DispatchBaseClass):
	'MGCPCB Board Outline Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED33}')
	coclass_clsid = IID('{EDEDED36-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (43, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((43, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBoards(DispatchBaseClass):
	'MGCPCB board collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')
	coclass_clsid = IID('{EDEDED8C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pBoard=defaultNamedNotOptArg):
		'Adds a board to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pBoard
			)

	def Delete(self):
		'Delete all boards in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBBoard
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the board of a given index in the boards collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort boards in this collection by location.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the board of a given index in the boards collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBBondPad(DispatchBaseClass):
	'MGCPCB BondPad Object.'
	CLSID = IID('{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')
	coclass_clsid = IID('{A3124861-0E05-4372-9212-5BC14BF80705}')

	def AddShortedNets(self, nLayer=defaultNamedNotOptArg, shortedNets=defaultNamedNotOptArg):
		'Add shorted nets to a given layer.'
		return self._oleobj_.InvokeTypes(64, LCID, 1, (24, 0), ((3, 1), (12, 1)),nLayer
			, shortedNets)

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBBreakoutDefaults
	# The method GetBreakoutDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetBreakoutDefaults(self, nLayer=0):
		"Returns this bond pad's breakout defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(42, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBreakoutDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def GetShortedNets(self, nLayer=defaultNamedNotOptArg):
		'Returns an array of shorted nets on a given layer.'
		return self._ApplyTypes_(66, 1, (12, 0), ((3, 1),), 'GetShortedNets', None,nLayer
			)

	# Result is of type IMGCPCBTeardropDefaults
	# The method GetTeardropDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetTeardropDefaults(self, nLayer=0):
		"Returns this bond pad's teardrop defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(43, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetTeardropDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')
		return ret

	# Result is of type IMGCPCBUserPads
	# The method GetUserPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserPads(self, sLayerOnly='*'):
		'Returns the collection of user pads.'
		return self._ApplyTypes_(52, 2, (9, 32), ((8, 49),), 'GetUserPads', '{ACC37237-2F98-403B-8783-C21D7026F5B4}',sLayerOnly
			)

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveEx(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg, eUnit=0
			, eAngleUnit=0):
		'Move the bond pad object along with given rotation.'
		return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (3, 49), (3, 49)),dX
			, dY, dRotation, eUnit, eAngleUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def RemoveShortedNets(self, nLayer=defaultNamedNotOptArg, shortedNets=defaultNamedNotOptArg):
		'Remove shorted nets from a given layer.'
		return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((3, 1), (12, 1)),nLayer
			, shortedNets)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetTieLegClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegClearance(self, nLayer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Set or returns the tie leg width.'
		return self._oleobj_.InvokeTypes(56, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),nLayer
			, eUnit, arg2)

	# The method SetTieLegRotation is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegRotation(self, nLayer=0, arg1=1):
		'Set or returns the tie leg rotation.'
		return self._oleobj_.InvokeTypes(54, LCID, 4, (24, 0), ((3, 49), (3, 49)),nLayer
			, arg1)

	# The method SetTieLegType is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegType(self, nLayer=0, arg1=0):
		'Set or returns the tie leg type.'
		return self._oleobj_.InvokeTypes(53, LCID, 4, (24, 0), ((3, 49), (3, 49)),nLayer
			, arg1)

	# The method SetTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegWidth(self, nLayer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Set or returns the tie leg width.'
		return self._oleobj_.InvokeTypes(55, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),nLayer
			, eUnit, arg2)

	# The method SetUsePadstackThermalDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def SetUsePadstackThermalDefaults(self, nLayer=0, arg1=True):
		'Sets or returns the option of using the padstack thermal defaults for thermal ties.'
		return self._oleobj_.InvokeTypes(57, LCID, 4, (24, 0), ((3, 49), (11, 49)),nLayer
			, arg1)

	# The method TieLegClearance is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegClearance(self, nLayer=defaultNamedNotOptArg, eUnit=0):
		'Set or returns the tie leg width.'
		return self._oleobj_.InvokeTypes(56, LCID, 2, (5, 0), ((3, 1), (3, 49)),nLayer
			, eUnit)

	# The method TieLegRotation is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegRotation(self, nLayer=defaultNamedNotOptArg):
		'Set or returns the tie leg rotation.'
		return self._oleobj_.InvokeTypes(54, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method TieLegType is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegType(self, nLayer=defaultNamedNotOptArg):
		'Set or returns the tie leg type.'
		return self._oleobj_.InvokeTypes(53, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method TieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegWidth(self, nLayer=defaultNamedNotOptArg, eUnit=0):
		'Set or returns the tie leg width.'
		return self._oleobj_.InvokeTypes(55, LCID, 2, (5, 0), ((3, 1), (3, 49)),nLayer
			, eUnit)

	# The method UsePadstackThermalDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def UsePadstackThermalDefaults(self, nLayer=defaultNamedNotOptArg):
		'Sets or returns the option of using the padstack thermal defaults for thermal ties.'
		return self._oleobj_.InvokeTypes(57, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'BreakoutDefaults' returns object of type 'IMGCPCBBreakoutDefaults'
		"BreakoutDefaults": (42, 2, (9, 0), ((3, 49),), "BreakoutDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}'),
		# Method 'BreakoutTraces' returns object of type 'IMGCPCBBreakoutTraces'
		"BreakoutTraces": (45, 2, (9, 0), (), "BreakoutTraces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}'),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (46, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"FixLock": (61, 2, (3, 0), (), "FixLock", None),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		"Layer": (48, 2, (3, 0), (), "Layer", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (67, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parent": (50, 2, (9, 0), (), "Parent", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (59, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (60, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Subnet": (47, 2, (3, 0), (), "Subnet", None),
		# Method 'TeardropDefaults' returns object of type 'IMGCPCBTeardropDefaults'
		"TeardropDefaults": (43, 2, (9, 0), ((3, 49),), "TeardropDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}'),
		# Method 'Teardrops' returns object of type 'IMGCPCBTeardrops'
		"Teardrops": (44, 2, (9, 0), (), "Teardrops", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}'),
		# Method 'Tracedrops' returns object of type 'IMGCPCBTracedrops'
		"Tracedrops": (62, 2, (9, 0), (), "Tracedrops", '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}'),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"UniqueId": (58, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserPads' returns object of type 'IMGCPCBUserPads'
		"UserPads": (52, 2, (9, 32), ((8, 49),), "UserPads", '{ACC37237-2F98-403B-8783-C21D7026F5B4}'),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"FixLock": ((61, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"TieLegClearance": ((56, LCID, 4, 0),('0',)),
		"TieLegWidth": ((55, LCID, 4, 0),('0',)),
	}

	Anchor: str # read/write
	BreakoutDefaults: str # IMGCPCBBreakoutDefaults; read_only
	BreakoutTraces: str # IMGCPCBBreakoutTraces; read_only
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	FixLock: str # read/write
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	Layer: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Subnet: str # read_only
	TeardropDefaults: str # IMGCPCBTeardropDefaults; read_only
	Teardrops: str # IMGCPCBTeardrops; read_only
	Tracedrops: str # IMGCPCBTracedrops; read_only
	Type: str # read_only
	UniqueId: str # read_only
	UserPads: str # IMGCPCBUserPads; read_only
	_Handle: str # read_only
	TieLegClearance: str # write_only
	TieLegWidth: str # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBondPads(DispatchBaseClass):
	'MGCPCB bond pad collection.'
	CLSID = IID('{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}')
	coclass_clsid = IID('{809A1741-717F-40B3-A0BF-0A5C944F72F1}')

	def Add(self, pBondPad=defaultNamedNotOptArg):
		'Adds a bond pad to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pBondPad
			)

	def Delete(self):
		'Delete all bond pads in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBBondPad
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the bond pad of a given index in the bond pads collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')
		return ret

	def Move(self, MoveData=defaultNamedNotOptArg, eUnit=0, eAngleUnit=0):
		'Move - VARIANT data in format of PointsArray. number of points should match number of bondpads'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((16396, 1), (3, 49), (3, 49)),MoveData
			, eUnit, eAngleUnit)

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort bond pads in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the bond pad of a given index in the bond pads collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBBreakoutDefault(DispatchBaseClass):
	'MGCPCB Breakout Default Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}')
	coclass_clsid = IID('{EDEDED66-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Deletes this breakout default.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	# The method GetLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetLength(self, eUnit=0):
		'Returns the breakout length.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetWidth(self, eUnit=0):
		'Returns the breakout width.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"IncludeFixLockTraces": (3, 2, (11, 0), (), "IncludeFixLockTraces", None),
		"Layer": (5, 2, (3, 0), (), "Layer", None),
		"Length": (2, 2, (5, 0), ((3, 49),), "Length", None),
		"Width": (1, 2, (5, 0), ((3, 49),), "Width", None),
	}
	_prop_map_put_ = {
	}

	IncludeFixLockTraces: str # read_only
	Layer: str # read_only
	Length: int # read_only
	Width: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBreakoutDefaults(DispatchBaseClass):
	'MGCPCB Breakout Default collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')
	coclass_clsid = IID('{EDEDED67-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pBreakoutDefault=defaultNamedNotOptArg):
		'Adds a breakout default to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pBreakoutDefault
			)

	def Delete(self):
		'Delete breakout defaults in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBBreakoutDefault
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the breakout default of a given index in the breakout defaults collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort breakout defaults in this collection by parent position and layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the breakout default of a given index in the breakout defaults collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBBreakoutTrace(DispatchBaseClass):
	'MGCPCB BreakoutTrace Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}')
	coclass_clsid = IID('{EDEDED64-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"Anchor": (42, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (48, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (49, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'PadstackObjects' returns object of type 'IMGCPCBPadstackObjects'
		"PadstackObjects": (43, 2, (9, 0), (), "PadstackObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}'),
		"Parent": (44, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (46, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (47, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (45, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((42, LCID, 4, 0),()),
		"FixLock": ((48, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	PadstackObjects: str # IMGCPCBPadstackObjects; read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBreakoutTraces(DispatchBaseClass):
	'MGCPCB Breakout Trace Collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')
	coclass_clsid = IID('{EDEDED65-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pBreakoutTrace=defaultNamedNotOptArg):
		'Adds a breakout trace to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pBreakoutTrace
			)

	def Delete(self):
		'Delete all breakout traces in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBBreakoutTrace
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the breakout trace of a given index in the breakout trace collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort breakout traces in this collection by net and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the breakout trace of a given index in the breakout trace collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBBusPath(DispatchBaseClass):
	'MGCPCB Bus Path Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}')
	coclass_clsid = IID('{EDEDEDA5-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"BitWidth": (42, 2, (3, 0), (), "BitWidth", None),
		"BusName": (41, 2, (8, 0), (), "BusName", None),
		"BusShielding": (44, 2, (11, 0), (), "BusShielding", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConstraintClass' returns object of type 'IMGCPCBConstraintClass'
		"ConstraintClass": (51, 2, (9, 0), (), "ConstraintClass", '{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (54, 2, (3, 0), (), "FixLock", None),
		# Method 'FromTos' returns object of type 'IMGCPCBFromTos'
		"FromTos": (57, 2, (9, 0), (), "FromTos", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'Markers' returns object of type 'IMGCPCBMarkers'
		"Markers": (56, 2, (9, 0), (), "Markers", '{3CCA32E2-09D7-42AB-9D14-565025B422B2}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Nets' returns object of type 'IMGCPCBNets'
		"Nets": (52, 2, (9, 0), (), "Nets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Packed": (43, 2, (11, 0), (), "Packed", None),
		"Parent": (53, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (49, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (50, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		# Method 'ShieldGroup' returns object of type 'IMGCPCBNetGroup'
		"ShieldGroup": (55, 2, (9, 0), (), "ShieldGroup", '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}'),
		"ShieldingBits": (45, 2, (3, 0), (), "ShieldingBits", None),
		# Method 'ShieldingNet' returns object of type 'IMGCPCBNet'
		"ShieldingNet": (46, 2, (9, 0), (), "ShieldingNet", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		# Method 'ShieldingNetClass' returns object of type 'IMGCPCBNetClass'
		"ShieldingNetClass": (47, 2, (9, 0), (), "ShieldingNetClass", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}'),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (48, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((54, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"ShieldGroup": ((55, LCID, 8, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	BitWidth: str # read_only
	BusName: str # read_only
	BusShielding: str # read_only
	Component: str # IMGCPCBComponent; read_only
	ConstraintClass: str # IMGCPCBConstraintClass; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	FromTos: str # IMGCPCBFromTos; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Markers: str # IMGCPCBMarkers; read_only
	Name: str # read_only
	Nets: str # IMGCPCBNets; read_only
	ObjectClass: str # read_only
	Packed: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	ShieldGroup: str # read/write
	ShieldingBits: str # read_only
	ShieldingNet: str # IMGCPCBNet; read_only
	ShieldingNetClass: str # IMGCPCBNetClass; read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBBusPaths(DispatchBaseClass):
	'MGCPCB Bus Paths collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA6}')
	coclass_clsid = IID('{EDEDEDA6-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pBusPath=defaultNamedNotOptArg):
		'Adds a bus path to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pBusPath
			)

	def Delete(self):
		'Delete all bus paths in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBBusPath
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the bus path of a given index in the bus path collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort bus paths in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the bus path of a given index in the bus path collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBButton(DispatchBaseClass):
	'MGCPCB Dialog Button Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5D}')
	coclass_clsid = IID('{EDEDED5F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Click(self):
		'Click the button on the dialog.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), (),)

	def Click2(self, bWait=True):
		'Click the button on the dialog. If bWait is set to true allows user to wait until action is completed before continuing.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((11, 49),),bWait
			)

	def IsValid(self):
		'Returns true if this a valid button.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCavities(DispatchBaseClass):
	'MGCPCB Cavities collection.'
	CLSID = IID('{F6D6B8DF-76C9-425E-80A0-9DA8D54B1612}')
	coclass_clsid = IID('{039A55EC-D850-4645-AEF1-E5B0D8F4DE54}')

	def Add(self, pCavity=defaultNamedNotOptArg):
		'Adds a cavity to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pCavity
			)

	def Delete(self):
		'Delete all cavities in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBCavity
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the cavity of a given index in the cavity collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9826B261-A768-44F9-A0B9-1C289FB5D797}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort cavities in this collection by hole name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the cavity of a given index in the cavity collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9826B261-A768-44F9-A0B9-1C289FB5D797}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9826B261-A768-44F9-A0B9-1C289FB5D797}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBCavity(DispatchBaseClass):
	'MGCPCB Cavity Object.'
	CLSID = IID('{9826B261-A768-44F9-A0B9-1C289FB5D797}')
	coclass_clsid = IID('{F6E0FBD0-742B-407E-87C3-16A63F5545A4}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the graphics's X position."
		return self._oleobj_.InvokeTypes(52, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the graphics's Y position."
		return self._oleobj_.InvokeTypes(53, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"AllowMetalOnEndLayer": (44, 2, (3, 0), (), "AllowMetalOnEndLayer", None),
		"AllowMetalOnStartLayer": (43, 2, (3, 0), (), "AllowMetalOnStartLayer", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"EndLayer": (42, 2, (3, 0), (), "EndLayer", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (51, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		# Method 'Hole' returns object of type 'IMGCPCBHole'
		"Hole": (46, 2, (9, 0), (), "Hole", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}'),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Milled": (45, 2, (11, 0), (), "Milled", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (54, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (50, 2, (9, 0), (), "Parent", None),
		"PositionX": (52, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (53, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (48, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (49, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"StartLayer": (41, 2, (3, 0), (), "StartLayer", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (47, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"AllowMetalOnEndLayer": ((44, LCID, 4, 0),()),
		"AllowMetalOnStartLayer": ((43, LCID, 4, 0),()),
		"EndLayer": ((42, LCID, 4, 0),()),
		"FixLock": ((51, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Hole": ((46, LCID, 8, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"StartLayer": ((41, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	AllowMetalOnEndLayer: str # read/write
	AllowMetalOnStartLayer: str # read/write
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	EndLayer: str # read/write
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Hole: str # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Milled: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	StartLayer: str # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCell(DispatchBaseClass):
	'MGCPCB Cell Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')
	coclass_clsid = IID('{EDEDED1B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Celltype": (1, 2, (3, 0), (), "Celltype", None),
		"ClearanceType": (9, 2, (8, 0), (), "ClearanceType", None),
		# Method 'Components' returns object of type 'IMGCPCBComponents'
		"Components": (8, 2, (9, 0), (), "Components", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		"MountType": (4, 2, (3, 0), (), "MountType", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"PackageGroup": (3, 2, (3, 0), (), "PackageGroup", None),
		"PackageGroupName": (10, 2, (8, 0), (), "PackageGroupName", None),
		"PanelGroup": (7, 2, (3, 0), (), "PanelGroup", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((6, LCID, 4, 0),()),
		"Selected": ((5, LCID, 4, 0),()),
	}

	Celltype: str # read_only
	ClearanceType: str # read_only
	Components: str # IMGCPCBComponents; read_only
	MountType: str # read_only
	Name: str # read_only
	PackageGroup: str # read_only
	PackageGroupName: str # read_only
	PanelGroup: str # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCells(DispatchBaseClass):
	'MGCPCB cell collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED19}')
	coclass_clsid = IID('{EDEDED1C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pCell=defaultNamedNotOptArg):
		'Adds a cell to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pCell
			)

	# Result is of type IMGCPCBCell
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the cell of a given index in the cell collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort cells in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the cell of a given index in the cell collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBChangeData(DispatchBaseClass):
	'MGCPCB Change Lists Object.'
	CLSID = IID('{3637D13B-92C5-41E2-BC84-8B8815A8041C}')
	coclass_clsid = IID('{C7F1BAE9-76A9-44F5-A22A-A2984B43C2AB}')

	_prop_map_get_ = {
		"CreatedIds": (3, 2, (12, 0), (), "CreatedIds", None),
		"DeletedIds": (2, 2, (12, 0), (), "DeletedIds", None),
		"FromRecord": (5, 2, (12, 0), (), "FromRecord", None),
		"ModifiedIds": (1, 2, (12, 0), (), "ModifiedIds", None),
		# Method 'ObjectFilter' returns object of type 'IMGCPCBObjectFilter'
		"ObjectFilter": (4, 2, (9, 0), (), "ObjectFilter", '{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}'),
		"ToRecord": (6, 2, (12, 0), (), "ToRecord", None),
	}
	_prop_map_put_ = {
		"ObjectFilter": ((4, LCID, 8, 0),()),
	}

	CreatedIds: str # read_only
	DeletedIds: str # read_only
	FromRecord: str # read_only
	ModifiedIds: str # read_only
	ObjectFilter: str # read/write
	ToRecord: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCheckBox(DispatchBaseClass):
	'MGCPCB Dialog CheckBox Button Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED80}')
	coclass_clsid = IID('{EDEDED80-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def IsValid(self):
		'Returns true if this a valid checkbox button.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Checked": (1, 2, (11, 0), (), "Checked", None),
	}
	_prop_map_put_ = {
		"Checked": ((1, LCID, 4, 0),()),
	}

	Checked: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCheckpoint(DispatchBaseClass):
	'MGCPCB Checkpoint object.'
	CLSID = IID('{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}')
	coclass_clsid = None

	def IsValid(self):
		'Returns true if this is still a valid checkpoint.  Returns false otherwise.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBClearance(DispatchBaseClass):
	'MGCPCB Clearance Object.'
	CLSID = IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8B}')
	coclass_clsid = IID('{D9C635E1-8AE1-446D-ADD3-EFFC82AC9044}')

	def GetActualMinClearance(self, firstObject=defaultNamedNotOptArg, secondObject=defaultNamedNotOptArg, eUnit=0):
		'Returns the actual minimum clearance between two placed objects.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (5, 0), ((9, 1), (9, 1), (3, 49)),firstObject
			, secondObject, eUnit)

	def GetClearanceRule(self, firstObject=defaultNamedNotOptArg, secondObject=defaultNamedNotOptArg, firstObjectLayer=-1, secondObjectLayer=-1
			, eUnit=0):
		'Returns the clearance required between two placed objects.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (5, 0), ((9, 1), (9, 1), (3, 49), (3, 49), (3, 49)),firstObject
			, secondObject, firstObjectLayer, secondObjectLayer, eUnit)

	def GetComponentClearanceRuleByType(self, ClearanceType1=defaultNamedNotOptArg, ClearanceType2=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg, eAlignment=defaultNamedNotOptArg
			, eUnit=0):
		'Returns the component clearance rule.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (5, 0), ((8, 1), (8, 1), (3, 1), (3, 1), (3, 49)),ClearanceType1
			, ClearanceType2, eSide, eAlignment, eUnit)

	def GetGeneralClearanceRuleByType(self, Object1Type=defaultNamedNotOptArg, Object2Type=defaultNamedNotOptArg, eUnit=0):
		'Returns the general clearance rule between two objects.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (5, 0), ((3, 1), (3, 1), (3, 49)),Object1Type
			, Object2Type, eUnit)

	def GetNetClearanceRuleByType(self, Object1Type=defaultNamedNotOptArg, Object1=defaultNamedNotOptArg, Object1Layer=defaultNamedNotOptArg, Object2Type=defaultNamedNotOptArg
			, Object2=defaultNamedNotOptArg, Object2Layer=defaultNamedNotOptArg, Scheme='(Master)', eUnit=0):
		'Returns the clearance between two objects.'
		return self._ApplyTypes_(0, 1, (5, 32), ((3, 1), (9, 1), (3, 1), (3, 1), (9, 1), (3, 1), (8, 49), (3, 49)), 'GetNetClearanceRuleByType', None,Object1Type
			, Object1, Object1Layer, Object2Type, Object2, Object2Layer
			, Scheme, eUnit)

	# The method MVOInternalClearance is actually a property, but must be used as a method to correctly pass the arguments
	def MVOInternalClearance(self, pNet=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg, Scheme=defaultNamedNotOptArg, eUnit=0):
		'Returns the via to via internal MVO clearance'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((9, 1), (9, 1), (8, 1), (3, 49)),pNet
			, pPadstack, Scheme, eUnit)

	_prop_map_get_ = {
		"PackageClearanceTypes": (3, 2, (12, 0), (), "PackageClearanceTypes", None),
	}
	_prop_map_put_ = {
	}

	PackageClearanceTypes: str # read_only

	# Default method for this class is 'GetNetClearanceRuleByType'
	def __call__(self, Object1Type=defaultNamedNotOptArg, Object1=defaultNamedNotOptArg, Object1Layer=defaultNamedNotOptArg, Object2Type=defaultNamedNotOptArg
			, Object2=defaultNamedNotOptArg, Object2Layer=defaultNamedNotOptArg, Scheme='(Master)', eUnit=0):
		'Returns the clearance between two objects.'
		return self._ApplyTypes_(0, 1, (5, 32), ((3, 1), (9, 1), (3, 1), (3, 1), (9, 1), (3, 1), (8, 49), (3, 49)), '__call__', None,Object1Type
			, Object1, Object1Layer, Object2Type, Object2, Object2Layer
			, Scheme, eUnit)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCluster(DispatchBaseClass):
	'MGCPCB Cluster Object. (Deprecated)'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}')
	coclass_clsid = IID('{EDEDED77-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method IncludedComponent is actually a property, but must be used as a method to correctly pass the arguments
	def IncludedComponent(self, pComp=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Include or exclude the given component from the cluster.'
		return self._oleobj_.InvokeTypes(41, LCID, 4, (24, 0), ((9, 1), (11, 1)),pComp
			, arg1)

	def IsValid(self):
		'Returns true if this a valid object.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'IncludedComponents' returns object of type 'IMGCPCBComponents'
		"IncludedComponents": (42, 2, (9, 0), (), "IncludedComponents", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ObjectClass": (44, 2, (3, 0), (), "ObjectClass", None),
		"ObjectType": (45, 2, (3, 0), (), "ObjectType", None),
	}
	_prop_map_put_ = {
		"Name": ((0, LCID, 4, 0),()),
	}

	IncludedComponents: str # IMGCPCBComponents; read_only
	Name: str # read/write
	ObjectClass: str # read_only
	ObjectType: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBClusters(DispatchBaseClass):
	'MGCPCB Clusters collection. (Deprecated)'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED78}')
	coclass_clsid = IID('{EDEDED78-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pCluster=defaultNamedNotOptArg):
		'Adds a cluster to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pCluster
			)

	# Result is of type IMGCPCBCluster
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the object of a given index in the cluster collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort clusters in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the object of a given index in the cluster collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBColor(DispatchBaseClass):
	'MGCPCB Color Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')
	coclass_clsid = IID('{EDEDED72-D5F6-4B04-8FE7-EDEDEDEDED00}')

	_prop_map_get_ = {
		"Blue": (3, 2, (2, 0), (), "Blue", None),
		"Green": (2, 2, (2, 0), (), "Green", None),
		"Red": (1, 2, (2, 0), (), "Red", None),
	}
	_prop_map_put_ = {
		"Blue": ((3, LCID, 4, 0),()),
		"Green": ((2, LCID, 4, 0),()),
		"Red": ((1, LCID, 4, 0),()),
	}

	Blue: str # read/write
	Green: str # read/write
	Red: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBColorPattern(DispatchBaseClass):
	'MGCPCB Color Pattern Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
	coclass_clsid = IID('{EDEDED73-D5F6-4B04-8FE7-EDEDEDEDED00}')

	_prop_map_get_ = {
		"AlphaBlend": (7, 2, (3, 0), (), "AlphaBlend", None),
		"Blue": (5, 2, (2, 0), (), "Blue", None),
		"Green": (4, 2, (2, 0), (), "Green", None),
		"Index": (0, 2, (2, 0), (), "Index", None),
		"Outline": (1, 2, (11, 0), (), "Outline", None),
		"Red": (3, 2, (2, 0), (), "Red", None),
		"State": (6, 2, (2, 0), (), "State", None),
		"Transparent": (2, 2, (11, 0), (), "Transparent", None),
	}
	_prop_map_put_ = {
		"AlphaBlend": ((7, LCID, 4, 0),()),
		"Blue": ((5, LCID, 4, 0),()),
		"Green": ((4, LCID, 4, 0),()),
		"Index": ((0, LCID, 4, 0),()),
		"Outline": ((1, LCID, 4, 0),()),
		"Red": ((3, LCID, 4, 0),()),
		"State": ((6, LCID, 4, 0),()),
		"Transparent": ((2, LCID, 4, 0),()),
	}

	AlphaBlend: str # read/write
	Blue: str # read/write
	Green: str # read/write
	Index: str # read/write
	Outline: str # read/write
	Red: str # read/write
	State: str # read/write
	Transparent: str # read/write

	# Default property for this class is 'Index'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (2, 0), (), "Index", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCommand(DispatchBaseClass):
	'MGCPCB Command Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED30}')
	coclass_clsid = IID('{EDEDED33-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetAngleLock is actually a property, but must be used as a method to correctly pass the arguments
	def GetAngleLock(self, eAngleUnit=0):
		'Returns the angle lock setting. (Beta)'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eAngleUnit
			)

	# The method GetAngleLockOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def GetAngleLockOriginX(self, eUnit=0):
		'Returns the command angle lock origin y. (Beta)'
		return self._oleobj_.InvokeTypes(32, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetAngleLockOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def GetAngleLockOriginY(self, eUnit=0):
		'Returns the command angle lock origin x. (Beta)'
		return self._oleobj_.InvokeTypes(33, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetGrid is actually a property, but must be used as a method to correctly pass the arguments
	def GetGrid(self, eUnit=0):
		'Sets or returns the command grid units. (Beta)'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetGridOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def GetGridOriginX(self, eUnit=0):
		'Sets or returns the command grid origin y. (Beta)'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetGridOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def GetGridOriginY(self, eUnit=0):
		'Sets or returns the command grid origin x. (Beta)'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), (),)

	def PutAngleLock(self, dAngle=defaultNamedNotOptArg, dOriginX=defaultNamedNotOptArg, dOriginY=defaultNamedNotOptArg, eAngleUnit=0
			, eUnit=0):
		'Sets the command angle lock and origin. (Beta)'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (3, 49), (3, 49)),dAngle
			, dOriginX, dOriginY, eAngleUnit, eUnit)

	# The method SetGrid is actually a property, but must be used as a method to correctly pass the arguments
	def SetGrid(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the command grid units. (Beta)'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetGridOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def SetGridOriginX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the command grid origin y. (Beta)'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetGridOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def SetGridOriginY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the command grid origin x. (Beta)'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def ShowGrid(self, eType=defaultNamedNotOptArg):
		'Sets and shows the command grid of the specified type'
		return self._oleobj_.InvokeTypes(37, LCID, 1, (24, 0), ((3, 1),),eType
			)

	# The method SnapLocation is actually a property, but must be used as a method to correctly pass the arguments
	def SnapLocation(self, Event=defaultNamedNotOptArg, button=1, arg2=defaultUnnamedArg):
		'Snaps the location for the specified event when snapping is enabled. Only valid for the button down, button click, and mouse move events.'
		return self._oleobj_.InvokeTypes(36, LCID, 4, (24, 0), ((3, 1), (3, 49), (11, 1)),Event
			, button, arg2)

	_prop_map_get_ = {
		"AngleLock": (6, 2, (5, 0), ((3, 49),), "AngleLock", None),
		"AngleLockOriginX": (32, 2, (5, 0), ((3, 49),), "AngleLockOriginX", None),
		"AngleLockOriginY": (33, 2, (5, 0), ((3, 49),), "AngleLockOriginY", None),
		"Grid": (3, 2, (5, 0), ((3, 49),), "Grid", None),
		"GridOriginX": (4, 2, (5, 0), ((3, 49),), "GridOriginX", None),
		"GridOriginY": (5, 2, (5, 0), ((3, 49),), "GridOriginY", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Unit": (2, 2, (3, 0), (), "Unit", None),
	}
	_prop_map_put_ = {
		"Grid": ((3, LCID, 4, 0),()),
		"GridOriginX": ((4, LCID, 4, 0),()),
		"GridOriginY": ((5, LCID, 4, 0),()),
		"Unit": ((2, LCID, 4, 0),()),
	}

	AngleLock: str # read_only
	AngleLockOriginX: str # read_only
	AngleLockOriginY: str # read_only
	Grid: str # read/write
	GridOriginX: str # read/write
	GridOriginY: str # read/write
	Name: str # read_only
	Unit: str # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCommandListener(DispatchBaseClass):
	'MGCPCB Command Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA7}')
	coclass_clsid = IID('{EDEDEDA8-D5F6-4B04-8FE7-EDEDEDEDED00}')

	_prop_map_get_ = {
		"KeyboardFlags": (3, 2, (3, 0), (), "KeyboardFlags", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Unit": (2, 2, (3, 0), (), "Unit", None),
		"id": (1, 2, (3, 0), (), "id", None),
	}
	_prop_map_put_ = {
		"Unit": ((2, LCID, 4, 0),()),
	}

	KeyboardFlags: str # read_only
	Name: str # read_only
	Unit: str # read/write
	id: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBComplexVia(DispatchBaseClass):
	'MGCPCB Complex Via Object.'
	CLSID = IID('{DA0209B0-DA9A-4145-B0B5-8174B59835ED}')
	coclass_clsid = IID('{E4CF19CE-E948-4DE5-921F-069160EA465B}')

	def Add(self, pObj=defaultNamedNotOptArg):
		'Adds an object to the Complex Via.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((9, 1),),pObj
			)

	# Result is of type IMGCPCBObjects
	# The method ConnectionPoints is actually a property, but must be used as a method to correctly pass the arguments
	def ConnectionPoints(self, pNet=defaultNamedNotOptArg, FromLayer=defaultNamedNotOptArg, ToLayer=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg
			, pPointsArray=pythoncom.Missing):
		'Return the all connection points of this ComplexVia.'
		return self._ApplyTypes_(27, 2, (9, 0), ((9, 1), (3, 1), (3, 1), (3, 1), (16396, 2)), 'ConnectionPoints', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}',pNet
			, FromLayer, ToLayer, eUnit, pPointsArray)

	# Result is of type IMGCPCBObjects
	# The method ConnectionPointsOnLayer is actually a property, but must be used as a method to correctly pass the arguments
	def ConnectionPointsOnLayer(self, pNet=defaultNamedNotOptArg, Layer=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg, pPointsArray=pythoncom.Missing):
		'Return the all connection points of this ComplexVia on layer.'
		return self._ApplyTypes_(28, 2, (9, 0), ((9, 1), (3, 1), (3, 1), (16396, 2)), 'ConnectionPointsOnLayer', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}',pNet
			, Layer, eUnit, pPointsArray)

	def Delete(self):
		'Delete the Complex Via'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBObstructs
	# The method GetObstructs is actually a property, but must be used as a method to correctly pass the arguments
	def GetObstructs(self, eSelectType=-1):
		"Returns the ComplexVia's obstruct collection."
		ret = self._oleobj_.InvokeTypes(22, LCID, 2, (9, 0), ((3, 49),),eSelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetObstructs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of complex via.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the Complex Via's X position."
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the Complex Via's Y position."
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsDiffPairComplexVia(self):
		'Returns true if this a DiffPair Complex Via.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid Complex Via.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Moves the ComplexVia to given location.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of complex via.'
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# Result is of type IMGCPCBObjects
	# The method UserDefinedConnectionPoints is actually a property, but must be used as a method to correctly pass the arguments
	def UserDefinedConnectionPoints(self, pNet=defaultNamedNotOptArg, FromLayer=defaultNamedNotOptArg, ToLayer=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg
			, pPointsArray=pythoncom.Missing):
		'Return the user defined connection points of this ComplexVia.'
		return self._ApplyTypes_(29, 2, (9, 0), ((9, 1), (3, 1), (3, 1), (3, 1), (16396, 2)), 'UserDefinedConnectionPoints', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}',pNet
			, FromLayer, ToLayer, eUnit, pPointsArray)

	# Result is of type IMGCPCBObjects
	# The method UserDefinedConnectionPointsOnLayer is actually a property, but must be used as a method to correctly pass the arguments
	def UserDefinedConnectionPointsOnLayer(self, pNet=defaultNamedNotOptArg, Layer=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg, pPointsArray=pythoncom.Missing):
		'Return the user defined connection points of this ComplexVia on layer.'
		return self._ApplyTypes_(30, 2, (9, 0), ((9, 1), (3, 1), (3, 1), (16396, 2)), 'UserDefinedConnectionPointsOnLayer', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}',pNet
			, Layer, eUnit, pPointsArray)

	_prop_map_get_ = {
		"Anchor": (15, 2, (3, 0), (), "Anchor", None),
		# Method 'ConductiveAreas' returns object of type 'IMGCPCBConductiveAreas'
		"ConductiveAreas": (20, 2, (9, 0), (), "ConductiveAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (16, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		"EndLayer": (4, 2, (3, 0), (), "EndLayer", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (14, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"Frozen": (25, 2, (11, 0), (), "Frozen", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (13, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (7, 2, (3, 0), (), "ObjectClass", None),
		"ObjectType": (8, 2, (3, 0), (), "ObjectType", None),
		# Method 'Obstructs' returns object of type 'IMGCPCBObstructs'
		"Obstructs": (22, 2, (9, 0), ((3, 49),), "Obstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}'),
		"Orientation": (11, 2, (5, 0), ((3, 49),), "Orientation", None),
		"Parent": (26, 2, (9, 0), (), "Parent", None),
		# Method 'PlacementObstructs' returns object of type 'IMGCPCBPlacementObstructs'
		"PlacementObstructs": (23, 2, (9, 0), (), "PlacementObstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}'),
		# Method 'PlaneShapes' returns object of type 'IMGCPCBPlaneShapes'
		"PlaneShapes": (21, 2, (9, 0), (), "PlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}'),
		"PositionX": (1, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (2, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (24, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (32, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (33, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (5, 2, (11, 0), (), "Selected", None),
		# Method 'ShieldingNets' returns object of type 'IMGCPCBNets'
		"ShieldingNets": (34, 2, (9, 0), (), "ShieldingNets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		"StartLayer": (3, 2, (3, 0), (), "StartLayer", None),
		# Method 'Traces' returns object of type 'IMGCPCBTraces'
		"Traces": (19, 2, (9, 0), (), "Traces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}'),
		"UniqueId": (31, 2, (12, 0), (), "UniqueId", None),
		# Method 'Vias' returns object of type 'IMGCPCBVias'
		"Vias": (18, 2, (9, 0), (), "Vias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}'),
	}
	_prop_map_put_ = {
		"Anchor": ((15, LCID, 4, 0),()),
		"Frozen": ((25, LCID, 4, 0),()),
		"Net": ((13, LCID, 8, 0),()),
		"Orientation": ((11, LCID, 4, 0),()),
		"Selected": ((5, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	ConductiveAreas: str # IMGCPCBConductiveAreas; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	EndLayer: str # read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Frozen: str # read/write
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	ObjectType: str # read_only
	Obstructs: str # IMGCPCBObstructs; read_only
	Orientation: str # read/write
	Parent: str # read_only
	PlacementObstructs: str # IMGCPCBPlacementObstructs; read_only
	PlaneShapes: str # IMGCPCBPlaneShapes; read_only
	PositionX: str # read_only
	PositionY: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	ShieldingNets: str # IMGCPCBNets; read_only
	StartLayer: str # read_only
	Traces: str # IMGCPCBTraces; read_only
	UniqueId: str # read_only
	Vias: str # IMGCPCBVias; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBComplexViaPattern(DispatchBaseClass):
	'MGCPCB Complex Via Pattern Object.'
	CLSID = IID('{392E8A72-90FA-4B22-8214-7CEE80816541}')
	coclass_clsid = IID('{5EE8496D-7DDE-482A-B5B2-7F4756313DE4}')

	# Result is of type IMGCPCBGeometries
	# The method GeometriesByLayer is actually a property, but must be used as a method to correctly pass the arguments
	def GeometriesByLayer(self, nLayer=defaultNamedNotOptArg, eObjectClass=-1):
		'Returns the geometry collection for defined layer for this complex via pattern.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 2, (9, 0), ((3, 1), (3, 49)),nLayer
			, eObjectClass)
		if ret is not None:
			ret = Dispatch(ret, 'GeometriesByLayer', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')
		return ret

	def IsDiffPairPattern(self):
		'Returns true if this a DiffPair Complex Via pattern.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	# The method UserDefinedConnectionPointsForLayerRange is actually a property, but must be used as a method to correctly pass the arguments
	def UserDefinedConnectionPointsForLayerRange(self, nNetIdx=defaultNamedNotOptArg, LayerFrom=defaultNamedNotOptArg, LayerTo=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg):
		'Return the user defined connection points of this ComplexViaPattern for source layer range.'
		return self._ApplyTypes_(8, 2, (12, 0), ((3, 1), (3, 1), (3, 1), (3, 1)), 'UserDefinedConnectionPointsForLayerRange', None,nNetIdx
			, LayerFrom, LayerTo, eUnit)

	# The method UserDefinedConnectionPointsOnLayer is actually a property, but must be used as a method to correctly pass the arguments
	def UserDefinedConnectionPointsOnLayer(self, nNetIdx=defaultNamedNotOptArg, Layer=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg):
		'Return the user defined connection points of this ComplexViaPattern on layer.'
		return self._ApplyTypes_(7, 2, (12, 0), ((3, 1), (3, 1), (3, 1)), 'UserDefinedConnectionPointsOnLayer', None,nNetIdx
			, Layer, eUnit)

	_prop_map_get_ = {
		"EndLayer": (2, 2, (3, 0), (), "EndLayer", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (4, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometries' returns object of type 'IMGCPCBGeometries'
		"Geometries": (3, 2, (9, 0), (), "Geometries", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"StartLayer": (1, 2, (3, 0), (), "StartLayer", None),
	}
	_prop_map_put_ = {
	}

	EndLayer: str # read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Geometries: str # IMGCPCBGeometries; read_only
	Name: str # read_only
	StartLayer: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBComplexViaPatterns(DispatchBaseClass):
	'MGCPCB complex via pattern collection.'
	CLSID = IID('{FE804AAF-0865-4606-BD7C-E26536BD81F9}')
	coclass_clsid = IID('{8BFD00E4-8BDA-4061-B5F5-88117C47587F}')

	# Result is of type IMGCPCBComplexViaPattern
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the via pattern of a given index in the complex via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{392E8A72-90FA-4B22-8214-7CEE80816541}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort via patterns in this collection by padstack name, layer, and position.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the via pattern of a given index in the complex via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{392E8A72-90FA-4B22-8214-7CEE80816541}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{392E8A72-90FA-4B22-8214-7CEE80816541}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBComplexVias(DispatchBaseClass):
	'MGCPCB complex via collection.'
	CLSID = IID('{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}')
	coclass_clsid = IID('{5C2518D2-FB17-4F9B-9BA0-A30A7FDA06F0}')

	def Add(self, pVia=defaultNamedNotOptArg):
		'Adds a via to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pVia
			)

	def Delete(self):
		'Delete all vias in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBComplexVia
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the via of a given index in the complex via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{DA0209B0-DA9A-4145-B0B5-8174B59835ED}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort vias in this collection by padstack name, layer, and position.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the via of a given index in the complex via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{DA0209B0-DA9A-4145-B0B5-8174B59835ED}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{DA0209B0-DA9A-4145-B0B5-8174B59835ED}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBComponent(DispatchBaseClass):
	'MGCPCB Component Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
	coclass_clsid = IID('{EDEDED08-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# Result is of type IMGCPCBGlueSpot
	def AddGlueSpot(self, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg, eUnit=0):
		'Adds a glue spot to the cell.'
		ret = self._oleobj_.InvokeTypes(94, LCID, 1, (9, 0), ((5, 1), (5, 1), (3, 49)),PositionX
			, PositionY, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'AddGlueSpot', '{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}')
		return ret

	def ChangePropertyTextString(self, PropertyName=defaultNamedNotOptArg, TextString=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(115, LCID, 1, (24, 0), ((8, 0), (8, 0)),PropertyName
			, TextString)

	# Result is of type IMGCPCBMotionObject
	def CreateMotionGfx(self, motionType=3):
		'Puts the part into motion graphics. (Beta)'
		ret = self._oleobj_.InvokeTypes(101, LCID, 1, (9, 0), ((3, 49),),motionType
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateMotionGfx', '{892F84E5-2360-4C62-BA83-B10CFECE180F}')
		return ret

	def Delete(self):
		'Unplace this component from the board. The component is still available for subsequent placement.'
		return self._oleobj_.InvokeTypes(51, LCID, 1, (24, 0), (),)

	def DeleteAssemblyOrigin(self):
		'Deletes the assembly origin.'
		return self._oleobj_.InvokeTypes(98, LCID, 1, (24, 0), (),)

	def Destroy(self):
		'Removes the component from the design.  The component will no longer be available for placement.'
		return self._oleobj_.InvokeTypes(73, LCID, 1, (24, 0), (),)

	def EnableMarkedAllNets(self):
		'Returns true if Sets all nets of the component marked is enabled'
		return self._oleobj_.InvokeTypes(112, LCID, 1, (11, 0), (),)

	# Result is of type IMGCPCBPin
	def FindPin(self, strPinName=defaultNamedNotOptArg):
		'Find the pin with the specified name.'
		ret = self._oleobj_.InvokeTypes(52, LCID, 1, (9, 0), ((8, 1),),strPinName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindPin', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')
		return ret

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property, on this component, by name.'
		ret = self._oleobj_.InvokeTypes(58, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetAssemblyOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def GetAssemblyOriginX(self, eUnit=0):
		'Sets or returns the X coordinate of the assembly origin.'
		return self._oleobj_.InvokeTypes(63, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetAssemblyOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def GetAssemblyOriginY(self, eUnit=0):
		'Sets or returns the Y coordinate of the assembly origin.'
		return self._oleobj_.InvokeTypes(64, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetBottomHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetBottomHeight(self, eUnit=0):
		'Get the height available underneath the component instance.'
		return self._oleobj_.InvokeTypes(116, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetCenterX is actually a property, but must be used as a method to correctly pass the arguments
	def GetCenterX(self, eUnit=0):
		'Returns the X coord of the center of the component.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetCenterY is actually a property, but must be used as a method to correctly pass the arguments
	def GetCenterY(self, eUnit=0):
		'Returns the Y coord of the center of the component.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs(self, eSelectType=-1, eSelectOnly=0, nLayerOnly=0):
		"Returns the Component's board layer gfx collection. (Deprecated) Use ConductorLayerGfxs2."
		ret = self._oleobj_.InvokeTypes(42, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs2 is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs2(self, pArrayOfSelectType='', eSelectOnly=0, nLayerOnly=0):
		"Returns the Component's board layer gfx collection."
		return self._ApplyTypes_(72, 2, (9, 32), ((16396, 49), (3, 49), (3, 49)), 'GetConductorLayerGfxs2', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}',pArrayOfSelectType
			, eSelectOnly, nLayerOnly)

	# Result is of type IMGCPCBConductorLayerTexts
	# The method GetConductorLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerTexts(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the Component's board text collection."
		ret = self._oleobj_.InvokeTypes(45, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')
		return ret

	# Result is of type IMGCPCBEmbeddedPassiveShapes
	# The method GetEmbeddedPassiveShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetEmbeddedPassiveShapes(self, eSelectOnly=0, eType=-1, nLayerOnly=0):
		"Returns the component's collection of embedded passive shapes."
		ret = self._oleobj_.InvokeTypes(69, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectOnly
			, eType, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetEmbeddedPassiveShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')
		return ret

	# Result is of type IMGCPCBFabricationLayerGfxs
	# The method GetFabricationLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerGfxs(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0):
		"Returns the Component's fabrication layer graphics collection."
		ret = self._oleobj_.InvokeTypes(43, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, eLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')
		return ret

	# Result is of type IMGCPCBFabricationLayerTexts
	# The method GetFabricationLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerTexts(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0):
		"Returns the Component's fabrication text collection."
		ret = self._oleobj_.InvokeTypes(47, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, eLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')
		return ret

	# The method GetGlueSpotX is actually a property, but must be used as a method to correctly pass the arguments
	def GetGlueSpotX(self, eUnit=0):
		'Returns the X coordinate of the glue spot.'
		return self._oleobj_.InvokeTypes(61, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetGlueSpotY is actually a property, but must be used as a method to correctly pass the arguments
	def GetGlueSpotY(self, eUnit=0):
		'Returns the Y coordinate of the glue spot.'
		return self._oleobj_.InvokeTypes(62, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBObstructs
	# The method GetObstructs is actually a property, but must be used as a method to correctly pass the arguments
	def GetObstructs(self, eSelectType=-1):
		"Returns the Component's obstruct collection."
		ret = self._oleobj_.InvokeTypes(29, LCID, 2, (9, 0), ((3, 49),),eSelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetObstructs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		"Gets and sets the Component's orientation."
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPins
	# The method GetPins is actually a property, but must be used as a method to correctly pass the arguments
	def GetPins(self, Name='*'):
		"Returns the Component's pin collection."
		return self._ApplyTypes_(9, 2, (9, 32), ((8, 49),), 'GetPins', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}',Name
			)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the Component's X position."
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the Component's Y position."
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBUserLayerGfxs
	# The method GetUserLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerGfxs(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the Component's user layer gfx collection."
		return self._ApplyTypes_(44, 2, (9, 32), ((3, 49), (8, 49)), 'GetUserLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}',eSelectOnly
			, sLayerOnly)

	# Result is of type IMGCPCBUserLayerTexts
	# The method GetUserLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerTexts(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the Component's user text collection."
		return self._ApplyTypes_(48, 2, (9, 32), ((3, 49), (8, 49)), 'GetUserLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}',eSelectOnly
			, sLayerOnly)

	def IsAssemblyOriginPlaced(self):
		'Returns true if an assembly origin has been placed.'
		return self._oleobj_.InvokeTypes(99, LCID, 1, (11, 0), (),)

	def IsEmbeddedDie(self):
		'Returns true if this component instance is embedded die.'
		return self._oleobj_.InvokeTypes(123, LCID, 1, (11, 0), (),)

	def IsModified(self):
		'Returns true if this component instance has been modified from its original cell definition.'
		return self._oleobj_.InvokeTypes(88, LCID, 1, (11, 0), (),)

	# Result is of type IMGCPCBComponent
	def IsNested(self):
		'Return the parent component if this component is nested inside another.'
		ret = self._oleobj_.InvokeTypes(56, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'IsNested', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
		return ret

	def IsSMD(self):
		'Returns whether the Component is pure SMD or not.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def IsSchematicShort(self):
		'Returns true if this is a schematic short component.'
		return self._oleobj_.InvokeTypes(121, LCID, 1, (11, 0), (),)

	def IsSpare(self):
		'Returns true if this is a spare component.'
		return self._oleobj_.InvokeTypes(91, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid component.'
		return self._oleobj_.InvokeTypes(55, LCID, 1, (11, 0), (),)

	def Move(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Moves the Component to given location.'
		return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def MoveRelative(self, OffsetX=defaultNamedNotOptArg, OffsetY=defaultNamedNotOptArg, eUnit=0):
		'Move the Component by the given offset.'
		return self._oleobj_.InvokeTypes(70, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),OffsetX
			, OffsetY, eUnit)

	def OnCrossProbeSelection(self):
		'Performs cross probing actions after selecting the component in another tool or view.'
		return self._oleobj_.InvokeTypes(122, LCID, 1, (24, 0), (),)

	def Place(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dOrientation=defaultNamedNotOptArg, bTop=defaultNamedNotOptArg
			, eFixType=0, eUnit=0, eAngleUnit=0):
		'Places the component with all the specified attributes. If the component is already placed it will be ripped up and replaced.'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (11, 1), (3, 49), (3, 49), (3, 49)),dX
			, dY, dOrientation, bTop, eFixType, eUnit
			, eAngleUnit)

	def PlaceEx(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dOrientation=defaultNamedNotOptArg, Layer=defaultNamedNotOptArg
			, eFixType=0, eUnit=0, eAngleUnit=0):
		'Places the component with all the specified attributes. If the component is already placed it will be ripped up and replaced. Will return an error if layer is not valid in rigid flex designs.'
		return self._oleobj_.InvokeTypes(120, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (3, 1), (3, 49), (3, 49), (3, 49)),dX
			, dY, dOrientation, Layer, eFixType, eUnit
			, eAngleUnit)

	def PlaceExEx(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dOrientation=defaultNamedNotOptArg, Layer=defaultNamedNotOptArg
			, bTop=True, bFlip=False, eFixType=0, eUnit=0, eAngleUnit=0):
		'Places the component with all the specified attributes. If the component is already placed it will be ripped up and replaced.'
		return self._oleobj_.InvokeTypes(125, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (3, 1), (11, 49), (11, 49), (3, 49), (3, 49), (3, 49)),dX
			, dY, dOrientation, Layer, bTop, bFlip
			, eFixType, eUnit, eAngleUnit)

	def Push(self):
		'Pushes the part. (Beta)'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBPin
	def PutPin(self, sName=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg, dX=defaultNamedNotOptArg
			, dY=defaultNamedNotOptArg, dRotation=0.0, bMirror=False, eUnit=0, eAngleUnit=0):
		'Add a pin to a component. (Beta)'
		ret = self._oleobj_.InvokeTypes(60, LCID, 1, (9, 0), ((8, 1), (9, 1), (9, 1), (5, 1), (5, 1), (5, 49), (11, 49), (3, 49), (3, 49)),sName
			, pPadstack, pNet, dX, dY, dRotation
			, bMirror, eUnit, eAngleUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutPin', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')
		return ret

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this pin.'
		ret = self._oleobj_.InvokeTypes(59, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBProperty
	def PutPropertyEx(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg, sSource=defaultNamedNotOptArg):
		'Create a new property with source defined.'
		ret = self._oleobj_.InvokeTypes(100, LCID, 1, (9, 0), ((8, 1), (8, 1), (8, 1)),sName
			, sValue, sSource)
		if ret is not None:
			ret = Dispatch(ret, 'PutPropertyEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def ReplaceCell(self, pCell=defaultNamedNotOptArg):
		'Replaces the Cell for this Component.'
		return self._oleobj_.InvokeTypes(83, LCID, 1, (24, 0), ((12, 1),),pCell
			)

	def ResetCell(self):
		'Resets the Cell for this Component. (Deprecated)'
		return self._oleobj_.InvokeTypes(84, LCID, 1, (24, 0), (),)

	def ResetCellEx(self, KeepChangedText=False):
		'Resets the Cell for this Component.'
		return self._oleobj_.InvokeTypes(92, LCID, 1, (24, 0), ((11, 49),),KeepChangedText
			)

	# The method SetAssemblyOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssemblyOriginX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the X coordinate of the assembly origin.'
		return self._oleobj_.InvokeTypes(63, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetAssemblyOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssemblyOriginY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the Y coordinate of the assembly origin.'
		return self._oleobj_.InvokeTypes(64, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetGlueSpotX is actually a property, but must be used as a method to correctly pass the arguments
	def SetGlueSpotX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the X coordinate of the glue spot.'
		return self._oleobj_.InvokeTypes(61, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetGlueSpotY is actually a property, but must be used as a method to correctly pass the arguments
	def SetGlueSpotY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the Y coordinate of the glue spot.'
		return self._oleobj_.InvokeTypes(62, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		"Gets and sets the Component's orientation."
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def UnPlace(self):
		'Unplaces component.'
		return self._oleobj_.InvokeTypes(113, LCID, 1, (24, 0), (),)

	def Visible(self, Value=defaultNamedNotOptArg):
		'Change visibility of component during commands.'
		return self._oleobj_.InvokeTypes(119, LCID, 1, (24, 0), ((11, 1),),Value
			)

	_prop_map_get_ = {
		"Anchor": (14, 2, (3, 0), (), "Anchor", None),
		"AssemblyOriginX": (63, 2, (5, 0), ((3, 49),), "AssemblyOriginX", None),
		"AssemblyOriginY": (64, 2, (5, 0), ((3, 49),), "AssemblyOriginY", None),
		"BottomHeight": (116, 2, (5, 0), ((3, 49),), "BottomHeight", None),
		"BurnedByFilter": (107, 2, (11, 0), (), "BurnedByFilter", None),
		"CESheet": (110, 2, (8, 0), (), "CESheet", None),
		"CapacitorForm": (68, 2, (3, 0), (), "CapacitorForm", None),
		# Method 'Cell' returns object of type 'IMGCPCBCell'
		"Cell": (38, 2, (9, 0), (), "Cell", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}'),
		"CellName": (13, 2, (8, 0), (), "CellName", None),
		"Celltype": (12, 2, (3, 0), (), "Celltype", None),
		"CenterX": (16, 2, (5, 0), ((3, 49),), "CenterX", None),
		"CenterY": (17, 2, (5, 0), ((3, 49),), "CenterY", None),
		"ClearanceType": (85, 2, (8, 0), (), "ClearanceType", None),
		# Method 'ConductiveAreas' returns object of type 'IMGCPCBConductiveAreas'
		"ConductiveAreas": (34, 2, (9, 0), (), "ConductiveAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}'),
		# Method 'ConductorLayerGfxs' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs": (42, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "ConductorLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerGfxs2' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs2": (72, 2, (9, 32), ((16396, 49), (3, 49), (3, 49)), "ConductorLayerGfxs2", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerTexts' returns object of type 'IMGCPCBConductorLayerTexts'
		"ConductorLayerTexts": (45, 2, (9, 0), ((3, 49), (3, 49)), "ConductorLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}'),
		"ConnectionCount": (106, 2, (3, 0), (), "ConnectionCount", None),
		# Method 'Contours' returns object of type 'IMGCPCBContours'
		"Contours": (21, 2, (9, 0), (), "Contours", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}'),
		"Distributed": (65, 2, (11, 0), (), "Distributed", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (71, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'DrillDrawings' returns object of type 'IMGCPCBDrillDrawings'
		"DrillDrawings": (41, 2, (9, 0), (), "DrillDrawings", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}'),
		# Method 'EmbeddedPassiveShapes' returns object of type 'IMGCPCBEmbeddedPassiveShapes'
		"EmbeddedPassiveShapes": (69, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "EmbeddedPassiveShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}'),
		"EmbeddedPassiveType": (66, 2, (3, 0), (), "EmbeddedPassiveType", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (49, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationLayerGfxs' returns object of type 'IMGCPCBFabricationLayerGfxs'
		"FabricationLayerGfxs": (43, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "FabricationLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}'),
		# Method 'FabricationLayerTexts' returns object of type 'IMGCPCBFabricationLayerTexts'
		"FabricationLayerTexts": (47, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "FabricationLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}'),
		# Method 'Fiducials' returns object of type 'IMGCPCBFiducials'
		"Fiducials": (32, 2, (9, 0), (), "Fiducials", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}'),
		"FixLock": (108, 2, (3, 0), (), "FixLock", None),
		"GlueSpotX": (61, 2, (5, 0), ((3, 49),), "GlueSpotX", None),
		"GlueSpotY": (62, 2, (5, 0), ((3, 49),), "GlueSpotY", None),
		# Method 'GlueSpots' returns object of type 'IMGCPCBGlueSpots'
		"GlueSpots": (93, 2, (9, 0), (), "GlueSpots", '{EDAD6DA3-1AE5-4B8E-94F0-2A3F9B69553D}'),
		"HasPinsWithTargets": (114, 2, (11, 0), (), "HasPinsWithTargets", None),
		"Highlighted": (18, 2, (11, 0), (), "Highlighted", None),
		# Method 'InsertionOutlines' returns object of type 'IMGCPCBConductorLayerGfxs'
		"InsertionOutlines": (22, 2, (9, 0), (), "InsertionOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		"Layer": (8, 2, (3, 0), (), "Layer", None),
		"Level": (89, 2, (3, 0), (), "Level", None),
		"Marked": (103, 2, (11, 0), (), "Marked", None),
		# Method 'MetalizationAreas' returns object of type 'IMGCPCBMetalizationAreas'
		"MetalizationAreas": (80, 2, (9, 0), (), "MetalizationAreas", '{F48923B1-F092-42C5-8108-1256A55CDB86}'),
		"Mirrored": (57, 2, (11, 0), (), "Mirrored", None),
		"MirroredHV": (124, 2, (11, 0), (), "MirroredHV", None),
		# Method 'MountingHoles' returns object of type 'IMGCPCBMountingHoles'
		"MountingHoles": (33, 2, (9, 0), (), "MountingHoles", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}'),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (118, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'NestedCells' returns object of type 'IMGCPCBComponents'
		"NestedCells": (117, 2, (9, 0), (), "NestedCells", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		"ObjectClass": (78, 2, (3, 0), (), "ObjectClass", None),
		"ObjectType": (79, 2, (3, 0), (), "ObjectType", None),
		# Method 'Obstructs' returns object of type 'IMGCPCBObstructs'
		"Obstructs": (29, 2, (9, 0), ((3, 49),), "Obstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}'),
		"Orientation": (10, 2, (5, 0), ((3, 49),), "Orientation", None),
		"Parent": (76, 2, (9, 0), (), "Parent", None),
		"PartName": (7, 2, (8, 0), (), "PartName", None),
		"PartNumber": (81, 2, (8, 0), (), "PartNumber", None),
		"Path": (104, 2, (8, 0), (), "Path", None),
		# Method 'Pins' returns object of type 'IMGCPCBPins'
		"Pins": (9, 2, (9, 32), ((8, 49),), "Pins", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}'),
		"Placed": (15, 2, (11, 0), (), "Placed", None),
		# Method 'PlacementObstructs' returns object of type 'IMGCPCBPlacementObstructs'
		"PlacementObstructs": (26, 2, (9, 0), (), "PlacementObstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}'),
		# Method 'PlacementOutlines' returns object of type 'IMGCPCBPlacementOutlines'
		"PlacementOutlines": (28, 2, (9, 0), (), "PlacementOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}'),
		# Method 'PlaneShapes' returns object of type 'IMGCPCBPlaneShapes'
		"PlaneShapes": (36, 2, (9, 0), (), "PlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}'),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (39, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"RefDes": (86, 2, (8, 0), (), "RefDes", None),
		"ReplacementCells": (82, 2, (12, 0), (), "ReplacementCells", None),
		"Reserved": (96, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (97, 2, (8, 0), (), "ReservedBy", None),
		"ResistorForm": (67, 2, (3, 0), (), "ResistorForm", None),
		# Method 'ResistorShapes' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ResistorShapes": (23, 2, (9, 0), (), "ResistorShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		"ReuseAreaName": (109, 2, (8, 0), (), "ReuseAreaName", None),
		"ReuseBlockName": (95, 2, (8, 0), (), "ReuseBlockName", None),
		# Method 'Room' returns object of type 'IMGCPCBRoom'
		"Room": (19, 2, (9, 0), (), "Room", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}'),
		# Method 'RuleAreas' returns object of type 'IMGCPCBConductorLayerGfxs'
		"RuleAreas": (77, 2, (9, 0), (), "RuleAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		"Selected": (4, 2, (11, 0), (), "Selected", None),
		"Sheet": (105, 2, (8, 0), (), "Sheet", None),
		"Side": (53, 2, (3, 0), (), "Side", None),
		# Method 'Traces' returns object of type 'IMGCPCBTraces'
		"Traces": (35, 2, (9, 0), (), "Traces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}'),
		"Type": (54, 2, (3, 0), (), "Type", None),
		"UniqueId": (87, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayerGfxs' returns object of type 'IMGCPCBUserLayerGfxs'
		"UserLayerGfxs": (44, 2, (9, 32), ((3, 49), (8, 49)), "UserLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}'),
		# Method 'UserLayerTexts' returns object of type 'IMGCPCBUserLayerTexts'
		"UserLayerTexts": (48, 2, (9, 32), ((3, 49), (8, 49)), "UserLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}'),
		# Method 'VariantInfo' returns object of type 'IMGCPCBVariantInfo'
		"VariantInfo": (75, 2, (9, 0), (), "VariantInfo", '{75404CBD-630D-4F46-A588-6251B8FE7514}'),
		# Method 'Vias' returns object of type 'IMGCPCBVias'
		"Vias": (37, 2, (9, 0), (), "Vias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}'),
		# Method 'WireGraphic' returns object of type 'IMGCPCBConductorLayerGfx'
		"WireGraphic": (90, 2, (9, 0), (), "WireGraphic", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}'),
	}
	_prop_map_put_ = {
		"Anchor": ((14, LCID, 4, 0),()),
		"AssemblyOriginX": ((63, LCID, 4, 0),()),
		"AssemblyOriginY": ((64, LCID, 4, 0),()),
		"BurnedByFilter": ((107, LCID, 4, 0),()),
		"ClearanceType": ((85, LCID, 4, 0),()),
		"FixLock": ((108, LCID, 4, 0),()),
		"GlueSpotX": ((61, LCID, 4, 0),()),
		"GlueSpotY": ((62, LCID, 4, 0),()),
		"Highlighted": ((18, LCID, 4, 0),()),
		"Level": ((89, LCID, 4, 0),()),
		"Marked": ((103, LCID, 4, 0),()),
		"MarkedAllNets": ((111, LCID, 4, 0),()),
		"MirroredHV": ((124, LCID, 4, 0),()),
		"Orientation": ((10, LCID, 4, 0),()),
		"PartNumber": ((81, LCID, 4, 0),()),
		"RefDes": ((86, LCID, 4, 0),()),
		"Selected": ((4, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	AssemblyOriginX: str # read/write
	AssemblyOriginY: str # read/write
	BottomHeight: str # read_only
	BurnedByFilter: str # read/write
	CESheet: str # read_only
	CapacitorForm: str # read_only
	Cell: str # IMGCPCBCell; read_only
	CellName: str # read_only
	Celltype: str # read_only
	CenterX: str # read_only
	CenterY: str # read_only
	ClearanceType: str # read/write
	ConductiveAreas: str # IMGCPCBConductiveAreas; read_only
	ConductorLayerGfxs: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerGfxs2: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerTexts: str # IMGCPCBConductorLayerTexts; read_only
	ConnectionCount: str # read_only
	Contours: str # IMGCPCBContours; read_only
	Distributed: str # read_only
	Document: str # IMGCPCBDocument; read_only
	DrillDrawings: str # IMGCPCBDrillDrawings; read_only
	EmbeddedPassiveShapes: str # IMGCPCBEmbeddedPassiveShapes; read_only
	EmbeddedPassiveType: str # read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationLayerGfxs: str # IMGCPCBFabricationLayerGfxs; read_only
	FabricationLayerTexts: str # IMGCPCBFabricationLayerTexts; read_only
	Fiducials: str # IMGCPCBFiducials; read_only
	FixLock: str # read/write
	GlueSpotX: str # read/write
	GlueSpotY: str # read/write
	GlueSpots: str # IMGCPCBGlueSpots; read_only
	HasPinsWithTargets: str # read_only
	Highlighted: bool # read/write
	InsertionOutlines: str # IMGCPCBConductorLayerGfxs; read_only
	Layer: str # read_only
	Level: str # read/write
	Marked: str # read/write
	MetalizationAreas: str # IMGCPCBMetalizationAreas; read_only
	Mirrored: str # read_only
	MirroredHV: str # read/write
	MountingHoles: str # IMGCPCBMountingHoles; read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	NestedCells: str # IMGCPCBComponents; read_only
	ObjectClass: str # read_only
	ObjectType: str # read_only
	Obstructs: str # IMGCPCBObstructs; read_only
	Orientation: str # read/write
	Parent: str # read_only
	PartName: str # read_only
	PartNumber: str # read/write
	Path: str # read_only
	Pins: str # IMGCPCBPins; read_only
	Placed: str # read_only
	PlacementObstructs: str # IMGCPCBPlacementObstructs; read_only
	PlacementOutlines: str # IMGCPCBPlacementOutlines; read_only
	PlaneShapes: str # IMGCPCBPlaneShapes; read_only
	PositionX: str # read_only
	PositionY: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	RefDes: str # read/write
	ReplacementCells: str # read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	ResistorForm: str # read_only
	ResistorShapes: str # IMGCPCBConductorLayerGfxs; read_only
	ReuseAreaName: str # read_only
	ReuseBlockName: str # read_only
	Room: str # IMGCPCBRoom; read_only
	RuleAreas: str # IMGCPCBConductorLayerGfxs; read_only
	Selected: bool # read/write
	Sheet: str # read_only
	Side: str # read_only
	Traces: str # IMGCPCBTraces; read_only
	Type: str # read_only
	UniqueId: str # read_only
	UserLayerGfxs: str # IMGCPCBUserLayerGfxs; read_only
	UserLayerTexts: str # IMGCPCBUserLayerTexts; read_only
	VariantInfo: str # IMGCPCBVariantInfo; read_only
	Vias: str # IMGCPCBVias; read_only
	WireGraphic: str # IMGCPCBConductorLayerGfx; read_only
	MarkedAllNets: str # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBComponents(DispatchBaseClass):
	'MGCPCB component collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')
	coclass_clsid = IID('{EDEDED07-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pCmp=defaultNamedNotOptArg):
		'Adds a component to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pCmp
			)

	def Delete(self):
		'Delete all components in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBComponent
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the cmp of a given index in the components collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
		return ret

	def Place(self, eMethod=0):
		'Place all parts in the collection according to the specified method.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((3, 49),),eMethod
			)

	def PlaceAutoArrange(self):
		'Place all parts in the collection by automatically arranging.'
		return self._oleobj_.InvokeTypes(37, LCID, 1, (24, 0), (),)

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort components in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Marked": ((36, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Marked: str # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the cmp of a given index in the components collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBConductiveArea(DispatchBaseClass):
	'MGCPCB Conductive Area Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}')
	coclass_clsid = IID('{EDEDED27-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def DeleteSegmentID(self, id=defaultNamedNotOptArg):
		'Removes a segment id. (Beta)'
		return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((3, 1),),id
			)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the graphics's X position."
		return self._oleobj_.InvokeTypes(56, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the graphics's Y position."
		return self._oleobj_.InvokeTypes(57, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsMultiViaMember(self):
		'Returns true if this is a member of a multi via.'
		return self._oleobj_.InvokeTypes(45, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def PutSegmentID(self, id=defaultNamedNotOptArg):
		'Adds a segment id. (Beta)'
		return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), ((3, 1),),id
			)

	_prop_map_get_ = {
		"Anchor": (42, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (43, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		"DRCType": (60, 2, (3, 0), (), "DRCType", None),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (51, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (55, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (59, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (52, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (49, 2, (9, 0), (), "Parent", None),
		"Placed": (58, 2, (11, 0), (), "Placed", None),
		"PositionX": (56, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (57, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (53, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (54, 2, (8, 0), (), "ReservedBy", None),
		"SegmentIDs": (47, 2, (12, 0), (), "SegmentIDs", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Subnet": (44, 2, (3, 0), (), "Subnet", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (50, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((42, LCID, 4, 0),()),
		"DRCType": ((60, LCID, 4, 0),()),
		"DisplayCondition": ((51, LCID, 4, 0),()),
		"FixLock": ((55, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Net": ((41, LCID, 8, 0),()),
		"OriginalLayer": ((52, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	DRCType: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	Placed: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	SegmentIDs: str # read_only
	Selected: bool # read/write
	Subnet: str # read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBConductiveAreas(DispatchBaseClass):
	'MGCPCB Conductive Areas collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')
	coclass_clsid = IID('{EDEDED28-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pConductiveArea=defaultNamedNotOptArg):
		'Adds an conductive area to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pConductiveArea
			)

	def Delete(self):
		'Delete all conductive areas in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBConductiveArea
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the conductive area of a given index in the conductive area collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort conductive areas in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the conductive area of a given index in the conductive area collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBConductorLayerGfx(DispatchBaseClass):
	'MGCPCB Conductor Layer Gfx Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')
	coclass_clsid = IID('{EDEDED23-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBConductorLayerGfxs(DispatchBaseClass):
	'MGCPCB Conductor Layer Gfx collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')
	coclass_clsid = IID('{EDEDED24-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pGfx=defaultNamedNotOptArg):
		'Adds a gfx to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pGfx
			)

	def Delete(self):
		'Delete all conductor layer gfx in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBConductorLayerGfx
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the gfx of a given index in the gfx collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort gfx in this collection by type and extrema.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the gfx of a given index in the gfx collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBConductorLayerText(DispatchBaseClass):
	'MGCPCB Board Text Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')
	coclass_clsid = IID('{EDEDED59-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Deletes the Text object.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property, on the text object, by name.'
		ret = self._oleobj_.InvokeTypes(37, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Returns the X position of the Text object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Returns the Y position of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsFlexTextValid(self):
		'Determine if the text is on a layer thats valid.'
		return self._oleobj_.InvokeTypes(44, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the text to the specified location'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the text by the specified offset.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this textobject .'
		ret = self._oleobj_.InvokeTypes(38, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the X position of the Text object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the Y position of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def SetTextType(self, pType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((3, 1),),pType
			)

	def StrokeText(self, units=0):
		'Returns array containing centerline points of given text.'
		return self._ApplyTypes_(45, 1, (12, 0), ((3, 49),), 'StrokeText', None,units
			)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (11, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		"DisplayCondition": (35, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (18, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (8, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (42, 2, (3, 0), (), "FixLock", None),
		# Method 'Format' returns object of type 'IMGCPCBFormat'
		"Format": (9, 2, (9, 0), (), "Format", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}'),
		"Layer": (30, 2, (3, 0), (), "Layer", None),
		"LayerName": (31, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (43, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ObjectClass": (14, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (36, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (34, 2, (9, 0), (), "Parent", None),
		"PositionX": (3, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (4, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (39, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (40, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (41, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"TextString": (2, 2, (8, 0), (), "TextString", None),
		"TextType": (6, 2, (3, 0), (), "TextType", None),
		"UniqueId": (33, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (13, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DisplayCondition": ((35, LCID, 4, 0),()),
		"FixLock": ((42, LCID, 4, 0),()),
		"Layer": ((30, LCID, 4, 0),()),
		"OriginalLayer": ((36, LCID, 4, 0),()),
		"PositionX": ((3, LCID, 4, 0),()),
		"PositionY": ((4, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"TextString": ((2, LCID, 4, 0),()),
		"_Handle": ((13, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Format: str # IMGCPCBFormat; read_only
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	TextString: str # read/write
	TextType: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBConductorLayerTexts(DispatchBaseClass):
	'MGCPCB Board Text collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')
	coclass_clsid = IID('{EDEDED5A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pText=defaultNamedNotOptArg):
		'Adds a text to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pText
			)

	def Delete(self):
		'Delete all conductor layer text in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBConductorLayerText
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the text of a given index in the text collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort text in this collection by text string and location.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the text of a given index in the text collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBConstraint(DispatchBaseClass):
	'MGCPCB Constraint Object.'
	CLSID = IID('{EAFAC376-315E-407D-A294-7DB8A2222C40}')
	coclass_clsid = IID('{7F9D3438-714B-4F63-BFB0-C261254D1556}')

	# The method GetMaxLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxLength(self, Unit=0):
		'Returns the maximum length.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),Unit
			)

	# The method GetMinLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetMinLength(self, Unit=0):
		'Returns the minimum length.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),Unit
			)

	_prop_map_get_ = {
		"DelayFormula": (5, 2, (8, 0), (), "DelayFormula", None),
		"MaxLength": (2, 2, (5, 0), ((3, 49),), "MaxLength", None),
		"MaxNumberOfVias": (0, 2, (3, 0), (), "MaxNumberOfVias", None),
		"MaxTOF": (4, 2, (5, 0), (), "MaxTOF", None),
		"MinLength": (1, 2, (5, 0), ((3, 49),), "MinLength", None),
		"MinTOF": (3, 2, (5, 0), (), "MinTOF", None),
	}
	_prop_map_put_ = {
	}

	DelayFormula: str # read_only
	MaxLength: str # read_only
	MaxNumberOfVias: str # read_only
	MaxTOF: str # read_only
	MinLength: str # read_only
	MinTOF: str # read_only

	# Default property for this class is 'MaxNumberOfVias'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "MaxNumberOfVias", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBConstraintClass(DispatchBaseClass):
	'MGCPCB Constraint Class Object.'
	CLSID = IID('{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}')
	coclass_clsid = IID('{8D428186-DE3C-49F3-A8D0-F14DC5037D49}')

	def IsBus(self):
		'returns if the constraint class is a bus.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid group.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"BusName": (5, 2, (8, 0), (), "BusName", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Nets' returns object of type 'IMGCPCBNets'
		"Nets": (2, 2, (9, 0), (), "Nets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
	}
	_prop_map_put_ = {
	}

	BusName: str # read_only
	Name: str # read_only
	Nets: str # IMGCPCBNets; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBConstraintClasses(DispatchBaseClass):
	'MGCPCB Constraint Class collection.'
	CLSID = IID('{AEDD489A-9A64-4842-ADF9-72F22B82C33C}')
	coclass_clsid = IID('{DA99EC4C-6A6D-4B0E-AB92-281FB592D296}')

	def Add(self, ppConstraintClass=defaultNamedNotOptArg):
		'Adds a net group to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),ppConstraintClass
			)

	# Result is of type IMGCPCBConstraintClass
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the net group of a given index in the net group collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the net group of a given index in the net group collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBConstructionLine(DispatchBaseClass):
	'MGCPCB Construction Line Object.'
	CLSID = IID('{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')
	coclass_clsid = IID('{C0D2A601-EBA5-47D3-98B0-83FD262FB6CB}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetAngle is actually a property, but must be used as a method to correctly pass the arguments
	def GetAngle(self, eAngleUnit=0):
		'Returns the angle of the construction line.'
		return self._oleobj_.InvokeTypes(41, LCID, 2, (5, 0), ((3, 49),),eAngleUnit
			)

	def IsConstructionElement(self):
		'Determines if this is a construction element.'
		return self._oleobj_.InvokeTypes(38, LCID, 1, (11, 0), (),)

	def IsDimensionGfx(self):
		'Determines if this graphics item is dimension graphics.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"Angle": (41, 2, (5, 0), ((3, 49),), "Angle", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (45, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Infinite": (40, 2, (11, 0), (), "Infinite", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (37, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (43, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (44, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"UniqueId": (42, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayer' returns object of type 'IMGCPCBUserLayer'
		"UserLayer": (36, 2, (9, 0), (), "UserLayer", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}'),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((45, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"UserLayer": ((36, LCID, 8, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Angle: str # read_only
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Infinite: str # read_only
	Layer: str # read_only
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	UniqueId: str # read_only
	UserLayer: str # read/write
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBConstructionLines(DispatchBaseClass):
	'MGCPCB Construction Lines collection.'
	CLSID = IID('{9F40B36F-3CB4-48B6-AC53-8F42E432C5C5}')
	coclass_clsid = IID('{54FA30B2-0D79-4F3B-BA78-77622DC51F7C}')

	def Add(self, pConstructionLine=defaultNamedNotOptArg):
		'Adds an Construction Line to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pConstructionLine
			)

	# Result is of type IMGCPCBConstructionLine
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the Construction Line of a given index in the Construction Line collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort Construction Lines in this collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the Construction Line of a given index in the Construction Line collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBConstructionPoint(DispatchBaseClass):
	'MGCPCB Construction Point Object.'
	CLSID = IID('{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}')
	coclass_clsid = IID('{2C80B0ED-1ED8-41C9-87E7-0735F2178A4B}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets or returns the X postion.'
		return self._oleobj_.InvokeTypes(40, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets or returns the Y postion.'
		return self._oleobj_.InvokeTypes(41, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetRadius is actually a property, but must be used as a method to correctly pass the arguments
	def GetRadius(self, eUnit=0):
		'Sets or returns the radius.'
		return self._oleobj_.InvokeTypes(42, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsConstructionElement(self):
		'Determines if this is a construction element.'
		return self._oleobj_.InvokeTypes(38, LCID, 1, (11, 0), (),)

	def IsDimensionGfx(self):
		'Determines if this graphics item is dimension graphics.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the X postion.'
		return self._oleobj_.InvokeTypes(40, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the Y postion.'
		return self._oleobj_.InvokeTypes(41, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetRadius(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the radius.'
		return self._oleobj_.InvokeTypes(42, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (46, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (37, 2, (9, 0), (), "Parent", None),
		"PositionX": (40, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (41, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Radius": (42, 2, (5, 0), ((3, 49),), "Radius", None),
		"Reserved": (44, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (45, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"UniqueId": (43, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayer' returns object of type 'IMGCPCBUserLayer'
		"UserLayer": (36, 2, (9, 0), (), "UserLayer", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}'),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((46, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"PositionX": ((40, LCID, 4, 0),()),
		"PositionY": ((41, LCID, 4, 0),()),
		"Radius": ((42, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"UserLayer": ((36, LCID, 8, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read_only
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Radius: str # read/write
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	UniqueId: str # read_only
	UserLayer: str # read/write
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBConstructionPoints(DispatchBaseClass):
	'MGCPCB Construction Points collection.'
	CLSID = IID('{70468F79-8CB4-4E7B-B6AE-9B167F349DC3}')
	coclass_clsid = IID('{7CBEF113-44DD-4D31-A205-8D2FF6B252F8}')

	def Add(self, pConstructionPoint=defaultNamedNotOptArg):
		'Adds an Construction Point to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pConstructionPoint
			)

	# Result is of type IMGCPCBConstructionPoint
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the Construction Point of a given index in the Construction Point collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort Construction Points in this collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the Construction Point of a given index in the Construction Point collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBContour(DispatchBaseClass):
	'MGCPCB Contour Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')
	coclass_clsid = IID('{EDEDED21-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"Compensation": (41, 2, (3, 0), (), "Compensation", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		"ContourType": (43, 2, (3, 0), (), "ContourType", None),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"EndLayer": (47, 2, (3, 0), (), "EndLayer", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (51, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		# Method 'Hole' returns object of type 'IMGCPCBHole'
		"Hole": (44, 2, (9, 0), (), "Hole", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}'),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (58, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (48, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (49, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (50, 2, (8, 0), (), "ReservedBy", None),
		"ReverseDirection": (42, 2, (11, 0), (), "ReverseDirection", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"StartLayer": (46, 2, (3, 0), (), "StartLayer", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (45, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Compensation": ((41, LCID, 4, 0),()),
		"ContourType": ((43, LCID, 4, 0),()),
		"EndLayer": ((47, LCID, 4, 0),()),
		"FixLock": ((51, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"ReverseDirection": ((42, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"StartLayer": ((46, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Compensation: str # read/write
	Component: str # IMGCPCBComponent; read_only
	ContourType: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	EndLayer: str # read/write
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Hole: str # IMGCPCBHole; read_only
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	ReverseDirection: str # read/write
	Selected: bool # read/write
	StartLayer: str # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBContours(DispatchBaseClass):
	'MGCPCB contour collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')
	coclass_clsid = IID('{EDEDED22-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pContour=defaultNamedNotOptArg):
		'Adds a contour to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pContour
			)

	def Delete(self):
		'Delete all contours in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBContour
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the contour of a given index in the contour collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort contours in this collection by hole name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the contour of a given index in the contour collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBCopperBalancing(DispatchBaseClass):
	'Copper Balancing Engine object'
	CLSID = IID('{9028C42A-551A-40C4-A596-C7A7058DC671}')
	coclass_clsid = IID('{2664BBAB-8FFE-42A4-A2C2-326AC42C265C}')

	# The method AdditionalClearance is actually a property, but must be used as a method to correctly pass the arguments
	def AdditionalClearance(self, eType=defaultNamedNotOptArg, eUnit=0, arg2=defaultUnnamedArg):
		'Sets the additional clearance.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (3, 49), (5, 1)),eType
			, eUnit, arg2)

	def Delete(self, Layer=0):
		'Delete copper balancing data.'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((3, 49),),Layer
			)

	def Go(self):
		'Generate copper balancing data'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), (),)

	# The method SetAutoBalance is actually a property, but must be used as a method to correctly pass the arguments
	def SetAutoBalance(self, Layer=0, arg1=defaultUnnamedArg):
		'Sets the flag for auto balancing.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((3, 49), (11, 1)),Layer
			, arg1)

	# The method SetClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetClearance(self, Layer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Sets the clearance.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),Layer
			, eUnit, arg2)

	# The method SetDiscardAreaX is actually a property, but must be used as a method to correctly pass the arguments
	def SetDiscardAreaX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets the discard width.  Set to 0 to process all areas.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDiscardAreaY is actually a property, but must be used as a method to correctly pass the arguments
	def SetDiscardAreaY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets the discard height.  Set to 0 to process all areas.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDistance is actually a property, but must be used as a method to correctly pass the arguments
	def SetDistance(self, Layer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Sets the distance.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),Layer
			, eUnit, arg2)

	# The method SetFillNonSquareHatch is actually a property, but must be used as a method to correctly pass the arguments
	def SetFillNonSquareHatch(self, Layer=0, arg1=defaultUnnamedArg):
		'Sets the flag for filling non-square hatch areas.'
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 49), (11, 1)),Layer
			, arg1)

	# The method SetMetalPercentage is actually a property, but must be used as a method to correctly pass the arguments
	def SetMetalPercentage(self, Layer=0, arg1=defaultUnnamedArg):
		'Sets the metal percentage.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 49), (3, 1)),Layer
			, arg1)

	# The method SetOffsetX is actually a property, but must be used as a method to correctly pass the arguments
	def SetOffsetX(self, Layer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Sets the X offset.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),Layer
			, eUnit, arg2)

	# The method SetOffsetY is actually a property, but must be used as a method to correctly pass the arguments
	def SetOffsetY(self, Layer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Sets the Y offset.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),Layer
			, eUnit, arg2)

	# The method SetPattern is actually a property, but must be used as a method to correctly pass the arguments
	def SetPattern(self, Layer=0, arg1=defaultUnnamedArg):
		'Sets the pattern.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (3, 1)),Layer
			, arg1)

	# The method SetProcessLayer is actually a property, but must be used as a method to correctly pass the arguments
	def SetProcessLayer(self, Layer=0, arg1=defaultUnnamedArg):
		'Sets the flag to process shapes on the specified layer.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 49), (11, 1)),Layer
			, arg1)

	# The method SetRestrictToOrthogonal is actually a property, but must be used as a method to correctly pass the arguments
	def SetRestrictToOrthogonal(self, Layer=0, arg1=defaultUnnamedArg):
		'Sets the flag to restrict the balancing to orthogonal patterns.'
		return self._oleobj_.InvokeTypes(20, LCID, 4, (24, 0), ((3, 49), (11, 1)),Layer
			, arg1)

	# The method SetSnapToHatchGrid is actually a property, but must be used as a method to correctly pass the arguments
	def SetSnapToHatchGrid(self, Layer=0, arg1=defaultUnnamedArg):
		'Sets the flag for snapping to hatch grid.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((3, 49), (11, 1)),Layer
			, arg1)

	# The method SetWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetWidth(self, Layer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Sets the width.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),Layer
			, eUnit, arg2)

	def WriteSetupFile(self):
		'Write out the setup file(s) used by the engine. (Not implemented)'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Errors' returns object of type 'IMGCPCBErrors'
		"Errors": (19, 2, (9, 0), (), "Errors", '{E7852DF4-9F9F-456E-8861-17AF75A62595}'),
	}
	_prop_map_put_ = {
		"AutoBalance": ((13, LCID, 4, 0),()),
		"Clearance": ((5, LCID, 4, 0),('0',)),
		"DiscardAreaX": ((15, LCID, 4, 0),()),
		"DiscardAreaY": ((16, LCID, 4, 0),()),
		"Distance": ((9, LCID, 4, 0),('0',)),
		"FillNonSquareHatch": ((11, LCID, 4, 0),()),
		"LocalRegenerate": ((21, LCID, 4, 0),()),
		"MetalPercentage": ((10, LCID, 4, 0),()),
		"OffsetX": ((6, LCID, 4, 0),('0',)),
		"OffsetY": ((7, LCID, 4, 0),('0',)),
		"Pattern": ((4, LCID, 4, 0),()),
		"ProcessLayer": ((17, LCID, 4, 0),()),
		"RestrictToOrthogonal": ((20, LCID, 4, 0),()),
		"SetupFileName": ((1, LCID, 4, 0),()),
		"SnapToHatchGrid": ((12, LCID, 4, 0),()),
		"Width": ((8, LCID, 4, 0),('0',)),
	}

	Errors: str # IMGCPCBErrors; read_only
	AutoBalance: str # write_only
	Clearance: str # write_only
	DiscardAreaX: str # write_only
	DiscardAreaY: str # write_only
	Distance: int # write_only
	FillNonSquareHatch: str # write_only
	LocalRegenerate: str # write_only
	MetalPercentage: str # write_only
	OffsetX: str # write_only
	OffsetY: str # write_only
	Pattern: str # write_only
	ProcessLayer: str # write_only
	RestrictToOrthogonal: str # write_only
	SetupFileName: str # write_only
	SnapToHatchGrid: str # write_only
	Width: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCopperBalancingData(DispatchBaseClass):
	'MGCPCB Copper Balancing Data Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}')
	coclass_clsid = IID('{EDEDED89-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (43, 2, (9, 0), (), "Parent", None),
		"Pattern": (4, 2, (3, 0), (), "Pattern", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Pattern: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCopperBalancingDatas(DispatchBaseClass):
	'MGCPCB Copper Balancing Data collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8A}')
	coclass_clsid = IID('{EDEDED8A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pCopperBalancingData=defaultNamedNotOptArg):
		'Adds a copper balancing data to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pCopperBalancingData
			)

	# Result is of type IMGCPCBCopperBalancingData
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the copper balancing data of a given index in the copper balancing data collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort copper balancing data in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the copper balancing data of a given index in the copper balancing data collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBCopperBalancingShape(DispatchBaseClass):
	'MGCPCB CopperBalancingShape Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}')
	coclass_clsid = IID('{EDEDED87-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (44, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (45, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (43, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((44, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBCopperBalancingShapes(DispatchBaseClass):
	'MGCPCB CopperBalancingShape collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED88}')
	coclass_clsid = IID('{EDEDED88-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pCopperBalancingShape=defaultNamedNotOptArg):
		'Adds a copper balancing shape to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pCopperBalancingShape
			)

	def Delete(self):
		'Delete all copper balancing shapes in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBCopperBalancingShape
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the copper balancing shape of a given index in the copper balancing shape collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort copper balancing shapes in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the copper balancing shape of a given index in the copper balancing shape collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBDFFSliverAnalysis(DispatchBaseClass):
	'DFF Sliver analysis engine object'
	CLSID = IID('{CCFAFD52-099E-4BD6-B0DE-BC496050ED45}')
	coclass_clsid = IID('{BF402A9A-D287-49EE-A88E-2FB4C3CED2A6}')

	def Go(self):
		'Run the sliver analysis'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Errors' returns object of type 'IMGCPCBErrors'
		"Errors": (4, 2, (9, 0), (), "Errors", '{E7852DF4-9F9F-456E-8861-17AF75A62595}'),
	}
	_prop_map_put_ = {
		"SetupFileName": ((1, LCID, 4, 0),()),
	}

	Errors: str # IMGCPCBErrors; read_only
	SetupFileName: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDRCWindow(DispatchBaseClass):
	'MGCPCB DRC Window Object.'
	CLSID = IID('{B73D0A93-E85F-4B22-9CA8-E59101A04DC0}')
	coclass_clsid = None

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (44, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (42, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (43, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (41, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((44, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDXFImport(DispatchBaseClass):
	'MGCPCB DXF Import engine object'
	CLSID = IID('{E9B3363C-F1A7-4947-ABF3-3FE59EFFD055}')
	coclass_clsid = IID('{4793EAF3-C6B3-4118-9155-C3F3961FA25D}')

	def FindDXFMappedTrueTypeFontName(self, sDXFFontName=defaultNamedNotOptArg):
		'Get true type font name from Map by DXF font name.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(14, LCID, 1, (8, 0), ((8, 1),),sDXFFontName
			)

	def FindDXFMappedUserLayer(self, sDXFLayerName=defaultNamedNotOptArg):
		'Get user layer from Map by DXF layer.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(13, LCID, 1, (8, 0), ((8, 1),),sDXFLayerName
			)

	def Go(self):
		'Import selected IDF file.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), (),)

	def MapDXFFontNameToTrueTypeFontName(self, sDXFFontName=defaultNamedNotOptArg, sTrueTypeFontName=defaultNamedNotOptArg):
		'Map DXF font style to user font name.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((8, 1), (8, 1)),sDXFFontName
			, sTrueTypeFontName)

	def MapDXFLayerNameToUserLayer(self, sDXFLayerName=defaultNamedNotOptArg, sUserLayer=defaultNamedNotOptArg):
		'Map DXF layer names to user layer.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((8, 1), (8, 1)),sDXFLayerName
			, sUserLayer)

	# The method SetScale is actually a property, but must be used as a method to correctly pass the arguments
	def SetScale(self, eUnit=0, arg1=defaultUnnamedArg):
		'Set scale used in DXF .'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetScheme is actually a property, but must be used as a method to correctly pass the arguments
	def SetScheme(self, eSchemeType=0, arg1=defaultUnnamedArg):
		'Set the file and path for the DXF scheme.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (8, 1)),eSchemeType
			, arg1)

	_prop_map_get_ = {
		"DXFFontNames": (10, 2, (12, 0), (), "DXFFontNames", None),
		"DXFLayerNames": (9, 2, (12, 0), (), "DXFLayerNames", None),
		# Method 'Errors' returns object of type 'IMGCPCBErrors'
		"Errors": (2, 2, (9, 0), (), "Errors", '{E7852DF4-9F9F-456E-8861-17AF75A62595}'),
	}
	_prop_map_put_ = {
		"CellName": ((5, LCID, 4, 0),()),
		"ImportFileName": ((3, LCID, 4, 0),()),
		"ImportMode": ((8, LCID, 4, 0),()),
		"Scale": ((7, LCID, 4, 0),()),
		"Scheme": ((4, LCID, 4, 0),()),
		"units": ((6, LCID, 4, 0),()),
	}

	DXFFontNames: str # read_only
	DXFLayerNames: str # read_only
	Errors: str # IMGCPCBErrors; read_only
	CellName: str # write_only
	ImportFileName: str # write_only
	ImportMode: str # write_only
	Scale: str # write_only
	Scheme: str # write_only
	units: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDataManagement(DispatchBaseClass):
	'MGCPCB Data Managment Object.'
	CLSID = IID('{E6C0D2B9-F966-4A54-AEB3-AFB0DBC97986}')
	coclass_clsid = IID('{31E57DFC-2D52-4BB2-B49D-263545035B14}')

	# Result is of type IMGCPCBDataManagementAdditionalProperties
	# The method AdditionalProperties is actually a property, but must be used as a method to correctly pass the arguments
	def AdditionalProperties(self, types=defaultNamedNotOptArg):
		'Find additional properties available for entities of given types.'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1),),types
			)
		if ret is not None:
			ret = Dispatch(ret, 'AdditionalProperties', '{1B2EFA70-4BC4-4F20-BB58-77E7FC2CDEEC}')
		return ret

	# Result is of type IMGCPCBDataManagementEntities
	# The method CachedEntities is actually a property, but must be used as a method to correctly pass the arguments
	def CachedEntities(self, types=defaultNamedNotOptArg):
		'Find all entities and return them with cached property values.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((3, 1),),types
			)
		if ret is not None:
			ret = Dispatch(ret, 'CachedEntities', '{B6B6919E-4B12-4132-8866-FB68697C6CD6}')
		return ret

	def Connect(self, server_address=defaultNamedNotOptArg):
		'Connect to a Data Management server.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((8, 1),),server_address
			)

	# The method FeatureAvailability is actually a property, but must be used as a method to correctly pass the arguments
	def FeatureAvailability(self, feature=defaultNamedNotOptArg):
		'Return data management feature availability.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (11, 0), ((3, 1),),feature
			)

	# Result is of type IMGCPCBDataManagementEntity
	def FindCachedEntityByPath(self, Path=defaultNamedNotOptArg, AdditionalProperties=defaultNamedNotOptArg):
		'Find entity by path and return it with cached property values.'
		ret = self._oleobj_.InvokeTypes(12, LCID, 1, (9, 0), ((8, 1), (9, 0)),Path
			, AdditionalProperties)
		if ret is not None:
			ret = Dispatch(ret, 'FindCachedEntityByPath', '{52D5D12D-8051-483C-8BDD-E9B195CE294D}')
		return ret

	# Result is of type IMGCPCBDataManagementEntity
	def FindEntityByPath(self, Path=defaultNamedNotOptArg):
		'Find entity by path.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((8, 1),),Path
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindEntityByPath', '{52D5D12D-8051-483C-8BDD-E9B195CE294D}')
		return ret

	# Result is of type IMGCPCBDataManagementEntity
	def FindEntityByPathAndVersion(self, Path=defaultNamedNotOptArg, Version=defaultNamedNotOptArg):
		'Find entity by path and version.'
		ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((8, 1), (8, 1)),Path
			, Version)
		if ret is not None:
			ret = Dispatch(ret, 'FindEntityByPathAndVersion', '{52D5D12D-8051-483C-8BDD-E9B195CE294D}')
		return ret

	def OpenComponentView(self, PartNumber=defaultNamedNotOptArg):
		'Open component view.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((8, 1),),PartNumber
			)

	def OpenManagedBlockView(self, Name=defaultNamedNotOptArg, Version=defaultNamedNotOptArg):
		'Open managed block view.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((8, 1), (8, 1)),Name
			, Version)

	# The method Option is actually a property, but must be used as a method to correctly pass the arguments
	def Option(self, Name=defaultNamedNotOptArg):
		'Control data management related options.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(5, LCID, 2, (8, 0), ((8, 1),),Name
			)

	# The method OptionIsReadonly is actually a property, but must be used as a method to correctly pass the arguments
	def OptionIsReadonly(self, Name=defaultNamedNotOptArg):
		'Check if a given data management related option is readonly.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (11, 0), ((8, 1),),Name
			)

	# The method SetOption is actually a property, but must be used as a method to correctly pass the arguments
	def SetOption(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Control data management related options.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((8, 1), (8, 0)),Name
			, arg1)

	# Result is of type IMGCPCBDataManagementEntities
	# The method entities is actually a property, but must be used as a method to correctly pass the arguments
	def entities(self, types=defaultNamedNotOptArg):
		'Find all entities.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),types
			)
		if ret is not None:
			ret = Dispatch(ret, 'entities', '{B6B6919E-4B12-4132-8866-FB68697C6CD6}')
		return ret

	_prop_map_get_ = {
		# Method 'CachedRecentEntities' returns object of type 'IMGCPCBDataManagementEntities'
		"CachedRecentEntities": (3, 2, (9, 0), (), "CachedRecentEntities", '{B6B6919E-4B12-4132-8866-FB68697C6CD6}'),
		"IsConnected": (7, 2, (11, 0), (), "IsConnected", None),
		"LastErrorMessage": (9, 2, (8, 0), (), "LastErrorMessage", None),
		# Method 'RecentEntities' returns object of type 'IMGCPCBDataManagementEntities'
		"RecentEntities": (1, 2, (9, 0), (), "RecentEntities", '{B6B6919E-4B12-4132-8866-FB68697C6CD6}'),
		"ServerAddress": (8, 2, (8, 0), (), "ServerAddress", None),
		"ValidEntityTypes": (10, 2, (3, 0), (), "ValidEntityTypes", None),
	}
	_prop_map_put_ = {
	}

	CachedRecentEntities: str # IMGCPCBDataManagementEntities; read_only
	IsConnected: str # read_only
	LastErrorMessage: str # read_only
	RecentEntities: str # IMGCPCBDataManagementEntities; read_only
	ServerAddress: str # read_only
	ValidEntityTypes: str # read_only

	# Default method for this class is 'entities'
	def __call__(self, types=defaultNamedNotOptArg):
		'Find all entities.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),types
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{B6B6919E-4B12-4132-8866-FB68697C6CD6}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDataManagementAdditionalProperties(DispatchBaseClass):
	'MGCPCB Data Management Additional Properties Collection.'
	CLSID = IID('{1B2EFA70-4BC4-4F20-BB58-77E7FC2CDEEC}')
	coclass_clsid = IID('{8BF7551C-1117-4231-A247-D5739B12B8F4}')

	# Result is of type IMGCPCBDataManagementAdditionalProperty
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the additional property of a given index in the entities collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{862C7303-2D1E-44EF-8B42-02192C0307B8}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the additional property of a given index in the entities collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{862C7303-2D1E-44EF-8B42-02192C0307B8}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{862C7303-2D1E-44EF-8B42-02192C0307B8}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBDataManagementAdditionalProperty(DispatchBaseClass):
	'MGCPCB Data Management Additional Property Object.'
	CLSID = IID('{862C7303-2D1E-44EF-8B42-02192C0307B8}')
	coclass_clsid = IID('{B70B652C-4484-48E5-BCA9-62CE39087DC1}')

	_prop_map_get_ = {
		"Label": (1, 2, (8, 0), (), "Label", None),
		"id": (0, 2, (8, 0), (), "id", None),
	}
	_prop_map_put_ = {
	}

	Label: str # read_only
	id: str # read_only

	# Default property for this class is 'id'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "id", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDataManagementEntities(DispatchBaseClass):
	'MGCPCB Data Management Entities Collection.'
	CLSID = IID('{B6B6919E-4B12-4132-8866-FB68697C6CD6}')
	coclass_clsid = IID('{3100EEB6-0071-40A4-9D53-BABA18027081}')

	# Result is of type IMGCPCBDataManagementEntity
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the entity of a given index in the entities collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{52D5D12D-8051-483C-8BDD-E9B195CE294D}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def SortByPath(self):
		'Sort entities in this collection by path.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), (),)

	def SortByProjectAndName(self):
		'Sort entities in this collection by project and name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the entity of a given index in the entities collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{52D5D12D-8051-483C-8BDD-E9B195CE294D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{52D5D12D-8051-483C-8BDD-E9B195CE294D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBDataManagementEntity(DispatchBaseClass):
	'MGCPCB Data Management Entity Object.'
	CLSID = IID('{52D5D12D-8051-483C-8BDD-E9B195CE294D}')
	coclass_clsid = IID('{D3329B2A-F69B-4204-B3F2-1DBA963E1388}')

	# The method AdditionalPropertyValue is actually a property, but must be used as a method to correctly pass the arguments
	def AdditionalPropertyValue(self, property=defaultNamedNotOptArg):
		'Returns the value of an additional property available on the entity'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(17, LCID, 2, (8, 0), ((9, 1),),property
			)

	def CancelEditing(self):
		'Cancels Editing of Entity.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	def CheckIn(self, Comment=defaultNamedNotOptArg):
		'Checks in a checked out entity. The entity cannot be actively edited'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((16392, 1),),Comment
			)

	def CheckInWithDialog(self):
		'Displays a CheckIn dialog for the entity. The entity cannot be actively edited'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), (),)

	def DumpProperties(self, outputDirectory=defaultNamedNotOptArg, filter=0, includeParents=False):
		'Dumps entity properties to output json file.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(30, LCID, 1, (8, 0), ((8, 1), (3, 49), (11, 49)),outputDirectory
			, filter, includeParents)

	# Result is of type IMGCPCBDocument
	def EditExclusive(self):
		'Opens Entity for Edit Exclusive.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'EditExclusive', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')
		return ret

	def EditShared(self):
		'Opens Entity for Edit Shared.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	def Export(self, destination=defaultNamedNotOptArg):
		'Exports Entity to passed destination.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((16392, 1),),destination
			)

	def LaunchWebView(self):
		'Launches a web view for the entity'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def OpenReference(self):
		'Opens Reference of Entity.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), (),)

	# The method PropertyValueById is actually a property, but must be used as a method to correctly pass the arguments
	def PropertyValueById(self, id=defaultNamedNotOptArg):
		'Returns the value of a property with given id available on the entity'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(33, LCID, 2, (8, 0), ((8, 1),),id
			)

	# Result is of type IMGCPCBDataManagementEntities
	# The method RelatedEntities is actually a property, but must be used as a method to correctly pass the arguments
	def RelatedEntities(self, types=defaultNamedNotOptArg):
		'Find all related entities.'
		ret = self._oleobj_.InvokeTypes(19, LCID, 2, (9, 0), ((3, 1),),types
			)
		if ret is not None:
			ret = Dispatch(ret, 'RelatedEntities', '{B6B6919E-4B12-4132-8866-FB68697C6CD6}')
		return ret

	def RunConfigurationRules(self, detailsFilePath=defaultNamedNotOptArg):
		'Runs entity configuration rules.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), ((8, 1),),detailsFilePath
			)

	def Unlock(self):
		'Unlocks Entity.'
		return self._oleobj_.InvokeTypes(29, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBDocument
	def View(self):
		'Opens Entity for View.'
		ret = self._oleobj_.InvokeTypes(13, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'View', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')
		return ret

	# Result is of type IMGCPCBDocument
	def ViewForOutputsGeneration(self):
		'Opens entity for view and outputs generation.'
		ret = self._oleobj_.InvokeTypes(32, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'ViewForOutputsGeneration', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')
		return ret

	_prop_map_get_ = {
		"AccessType": (4, 2, (3, 0), (), "AccessType", None),
		"CancelEditingAvailability": (25, 2, (3, 0), (), "CancelEditingAvailability", None),
		"CheckedInDate": (8, 2, (8, 0), (), "CheckedInDate", None),
		"EditExclusiveAvailability": (21, 2, (3, 0), (), "EditExclusiveAvailability", None),
		"EditSharedAvailability": (22, 2, (3, 0), (), "EditSharedAvailability", None),
		"ExportAvailability": (26, 2, (3, 0), (), "ExportAvailability", None),
		"LocalPath": (20, 2, (8, 0), (), "LocalPath", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"OpenReferenceAvailability": (27, 2, (3, 0), (), "OpenReferenceAvailability", None),
		"Path": (0, 2, (8, 0), (), "Path", None),
		"ProjectName": (2, 2, (8, 0), (), "ProjectName", None),
		"Status": (5, 2, (8, 0), (), "Status", None),
		"Type": (3, 2, (3, 0), (), "Type", None),
		"UnlockAvailability": (28, 2, (3, 0), (), "UnlockAvailability", None),
		"Users": (6, 2, (8, 0), (), "Users", None),
		"Version": (7, 2, (8, 0), (), "Version", None),
		"ViewAvailability": (23, 2, (3, 0), (), "ViewAvailability", None),
		"WebViewAvailability": (24, 2, (3, 0), (), "WebViewAvailability", None),
	}
	_prop_map_put_ = {
	}

	AccessType: str # read_only
	CancelEditingAvailability: str # read_only
	CheckedInDate: str # read_only
	EditExclusiveAvailability: str # read_only
	EditSharedAvailability: str # read_only
	ExportAvailability: str # read_only
	LocalPath: str # read_only
	Name: str # read_only
	OpenReferenceAvailability: str # read_only
	Path: str # read_only
	ProjectName: str # read_only
	Status: str # read_only
	Type: str # read_only
	UnlockAvailability: str # read_only
	Users: str # read_only
	Version: str # read_only
	ViewAvailability: str # read_only
	WebViewAvailability: str # read_only

	# Default property for this class is 'Path'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Path", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDetailedView(DispatchBaseClass):
	'MGCPCB DetailedView Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}')
	coclass_clsid = IID('{EDEDED8F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete the detailed view'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), (),)

	# The method GetBorderWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetBorderWidth(self, eUnit=0):
		"Returns the detailed view's border width."
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetNameHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetNameHeight(self, eUnit=0):
		"Returns the detailed view's name height."
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		"Returns the detailed view's active angle."
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetWorkSurfaceOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def GetWorkSurfaceOriginX(self, eUnit=0):
		'Returns the x coordinate of origin of the detailed view work surface'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetWorkSurfaceOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def GetWorkSurfaceOriginY(self, eUnit=0):
		'Returns the y coordinate of origin of the detailed view work surface'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid detailed view.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"BorderWidth": (7, 2, (5, 0), ((3, 49),), "BorderWidth", None),
		"DisplayBorder": (6, 2, (11, 0), (), "DisplayBorder", None),
		# Method 'DisplayControl' returns object of type 'IMGCPCBDisplayControl'
		"DisplayControl": (1, 2, (9, 0), (), "DisplayControl", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (17, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (2, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Mirrored": (9, 2, (11, 0), (), "Mirrored", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"NameFont": (4, 2, (8, 0), (), "NameFont", None),
		"NameHeight": (5, 2, (5, 0), ((3, 49),), "NameHeight", None),
		"ObjectClass": (20, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (10, 2, (5, 0), ((3, 49),), "Orientation", None),
		"Scale": (8, 2, (5, 0), (), "Scale", None),
		"Selected": (16, 2, (11, 0), (), "Selected", None),
		# Method 'SourceExtrema' returns object of type 'IMGCPCBExtrema'
		"SourceExtrema": (18, 2, (9, 0), (), "SourceExtrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"UniqueId": (19, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayer' returns object of type 'IMGCPCBUserLayer'
		"UserLayer": (3, 2, (9, 0), (), "UserLayer", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}'),
		"WorkSurfaceExpansionFactor": (13, 2, (5, 0), (), "WorkSurfaceExpansionFactor", None),
		"WorkSurfaceOriginX": (11, 2, (5, 0), ((3, 49),), "WorkSurfaceOriginX", None),
		"WorkSurfaceOriginY": (12, 2, (5, 0), ((3, 49),), "WorkSurfaceOriginY", None),
	}
	_prop_map_put_ = {
		"Selected": ((16, LCID, 4, 0),()),
	}

	BorderWidth: str # read_only
	DisplayBorder: str # read_only
	DisplayControl: str # IMGCPCBDisplayControl; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Mirrored: str # read_only
	Name: str # read_only
	NameFont: str # read_only
	NameHeight: str # read_only
	ObjectClass: str # read_only
	Orientation: str # read_only
	Scale: str # read_only
	Selected: bool # read/write
	SourceExtrema: str # IMGCPCBExtrema; read_only
	UniqueId: str # read_only
	UserLayer: str # IMGCPCBUserLayer; read_only
	WorkSurfaceExpansionFactor: str # read_only
	WorkSurfaceOriginX: str # read_only
	WorkSurfaceOriginY: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDetailedViews(DispatchBaseClass):
	'MGCPCB DetailedView collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}')
	coclass_clsid = IID('{EDEDED90-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pDetailedView=defaultNamedNotOptArg):
		'Adds a detailed view to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pDetailedView
			)

	def Delete(self):
		'Delete all detailed views in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBDetailedView
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'Returns the detailed view of a given index in the detailed view collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort detailed views in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'Returns the detailed view of a given index in the detailed view collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBDialog(DispatchBaseClass):
	'MGCPCB Dialog Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5C}')
	coclass_clsid = IID('{EDEDED5E-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# Result is of type IMGCPCBButton
	def FindButton(self, vButton=defaultNamedNotOptArg):
		'Find the specified button on this dialog.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1),),vButton
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindButton', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5D}')
		return ret

	# Result is of type IMGCPCBCheckBox
	def FindCheckBox(self, vButton=defaultNamedNotOptArg):
		'Find the specified button on this dialog.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((12, 1),),vButton
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindCheckBox', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED80}')
		return ret

	# Result is of type IMGCPCBEditBox
	def FindEditBox(self, vEditBox=defaultNamedNotOptArg):
		'Find the specified edit box on this dialog. (Beta)'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((12, 1),),vEditBox
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindEditBox', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9A}')
		return ret

	def IsValid(self):
		'Returns true if this a valid dialog.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	def LoadRouteScheme(self, schemeName=defaultNamedNotOptArg):
		'Load the route scheme. (Beta)'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((8, 1),),schemeName
			)

	def ProcessCommand(self, vCommand=defaultNamedNotOptArg):
		'Start this command on the menu bound to this dialog. Returns FALSE if the command cannot be started.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((12, 1),),vCommand
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDifferentialPair(DispatchBaseClass):
	'MGCPCB DifferentialPair Object.'
	CLSID = IID('{9A2E2DB0-60CA-45A0-8788-43D139963F55}')
	coclass_clsid = IID('{23D9A7BD-4B0A-49FB-AA5F-EEFB91E477D6}')

	# The method GetLengthTolerance is actually a property, but must be used as a method to correctly pass the arguments
	def GetLengthTolerance(self, eUnit=0):
		'Returns the length tolerance of the differential pair.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMaxConvergenceTolerance is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxConvergenceTolerance(self, eUnit=0):
		'Returns the maximum convergence tolerance of the differential pair.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMaxDistanceToConvergence is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxDistanceToConvergence(self, eUnit=0):
		'Returns the distance to convergence of the differential pair.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMaxSeparationDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxSeparationDistance(self, eUnit=0):
		'Returns the separation distance of the differential pair.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	_prop_map_get_ = {
		"DelayTolerance": (4, 2, (5, 0), (), "DelayTolerance", None),
		# Method 'FirstNet' returns object of type 'IMGCPCBNet'
		"FirstNet": (1, 2, (9, 0), (), "FirstNet", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"LengthTolerance": (3, 2, (5, 0), ((3, 49),), "LengthTolerance", None),
		"MaxConvergenceTolerance": (5, 2, (5, 0), ((3, 49),), "MaxConvergenceTolerance", None),
		"MaxDistanceToConvergence": (6, 2, (5, 0), ((3, 49),), "MaxDistanceToConvergence", None),
		"MaxSeparationDistance": (7, 2, (5, 0), ((3, 49),), "MaxSeparationDistance", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'SecondNet' returns object of type 'IMGCPCBNet'
		"SecondNet": (2, 2, (9, 0), (), "SecondNet", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
	}
	_prop_map_put_ = {
	}

	DelayTolerance: str # read_only
	FirstNet: str # IMGCPCBNet; read_only
	LengthTolerance: str # read_only
	MaxConvergenceTolerance: str # read_only
	MaxDistanceToConvergence: str # read_only
	MaxSeparationDistance: str # read_only
	Name: str # read_only
	SecondNet: str # IMGCPCBNet; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDifferentialPairs(DispatchBaseClass):
	'MGCPCB Differential Pair collection.'
	CLSID = IID('{B7CBBAF8-984C-4358-998E-F3FD7C2F761D}')
	coclass_clsid = IID('{0D3F7906-B221-42A5-9D68-3DEC3EF8072A}')

	def Add(self, pDiffPair=defaultNamedNotOptArg):
		'Adds a differential pair to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pDiffPair
			)

	# Result is of type IMGCPCBDifferentialPair
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the differential pair of a given index in the differential pair collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9A2E2DB0-60CA-45A0-8788-43D139963F55}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort differential pairs in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the differential pair of a given index in the differential pair collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9A2E2DB0-60CA-45A0-8788-43D139963F55}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9A2E2DB0-60CA-45A0-8788-43D139963F55}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBDimension(DispatchBaseClass):
	'MGCPCB Dimension Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
	coclass_clsid = IID('{EDEDED48-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete all the Dimension in the collection.'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (24, 0), (),)

	# The method GetOffset is actually a property, but must be used as a method to correctly pass the arguments
	def GetOffset(self, eUnit=0):
		'Returns the offset of the dimension.'
		return self._oleobj_.InvokeTypes(24, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsFabricationLayer(self):
		'Returns true if this is a dimension is on a fabrication layer.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def IsUserLayer(self):
		'Returns true if this dimension is on a user layer.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"DimensionID": (26, 2, (12, 0), (), "DimensionID", None),
		# Method 'DimensionScheme' returns object of type 'IMGCPCBDimensionScheme'
		"DimensionScheme": (4, 2, (9, 0), (), "DimensionScheme", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}'),
		"FabricationType": (9, 2, (3, 0), (), "FabricationType", None),
		# Method 'FromObject' returns object of type 'IMGCPCBDimensionedObject'
		"FromObject": (15, 2, (9, 0), (), "FromObject", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7E}'),
		# Method 'Geometries' returns object of type 'IMGCPCBGeometries'
		"Geometries": (14, 2, (9, 0), (), "Geometries", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}'),
		# Method 'LayerObject' returns object of type 'IMGCPCBLayerObject'
		"LayerObject": (25, 2, (9, 0), (), "LayerObject", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Offset": (24, 2, (5, 0), ((3, 49),), "Offset", None),
		"Selected": (2, 2, (11, 0), (), "Selected", None),
		"Side": (8, 2, (3, 0), (), "Side", None),
		"Text": (13, 2, (9, 0), (), "Text", None),
		# Method 'ToObject' returns object of type 'IMGCPCBDimensionedObject'
		"ToObject": (16, 2, (9, 0), (), "ToObject", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7E}'),
		"Type": (3, 2, (3, 0), (), "Type", None),
		"UserLayer": (10, 2, (3, 0), (), "UserLayer", None),
		"UserLayerName": (11, 2, (8, 0), (), "UserLayerName", None),
	}
	_prop_map_put_ = {
		"LayerObject": ((25, LCID, 8, 0),()),
		"Selected": ((2, LCID, 4, 0),()),
	}

	DimensionID: str # read_only
	DimensionScheme: str # IMGCPCBDimensionScheme; read_only
	FabricationType: str # read_only
	FromObject: str # IMGCPCBDimensionedObject; read_only
	Geometries: str # IMGCPCBGeometries; read_only
	LayerObject: str # read/write
	Name: str # read_only
	Offset: str # read_only
	Selected: bool # read/write
	Side: str # read_only
	Text: str # read_only
	ToObject: str # IMGCPCBDimensionedObject; read_only
	Type: str # read_only
	UserLayer: str # read_only
	UserLayerName: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDimensionScheme(DispatchBaseClass):
	'MGCPCB DimensionScheme Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')
	coclass_clsid = IID('{EDEDED4A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetArrowHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetArrowHeight(self, eUnit=0):
		'Sets or returns the dimension scheme arrow height.'
		return self._oleobj_.InvokeTypes(19, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetArrowWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetArrowWidth(self, eUnit=0):
		'Sets or returns the dimension scheme arrow width.'
		return self._oleobj_.InvokeTypes(20, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetExtensionGap is actually a property, but must be used as a method to correctly pass the arguments
	def GetExtensionGap(self, eUnit=0):
		'Sets or returns the dimension scheme extension gap.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetLineWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetLineWidth(self, eUnit=0):
		'Sets or returns the dimension scheme line width.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetStackedTextDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetStackedTextDistance(self, eUnit=0):
		'Sets or returns the dimension scheme stakced text distance.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetTextHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetTextHeight(self, eUnit=0):
		'Sets or returns the dimension scheme text height.'
		return self._oleobj_.InvokeTypes(22, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetTextPenWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetTextPenWidth(self, eUnit=0):
		'Sets or returns the dimension scheme text pen width.'
		return self._oleobj_.InvokeTypes(21, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Save(self, Name='', bLocal=False):
		'Saves the dimension scheme.'
		return self._ApplyTypes_(25, 1, (24, 32), ((8, 49), (11, 49)), 'Save', None,Name
			, bLocal)

	# The method SetArrowHeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetArrowHeight(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the dimension scheme arrow height.'
		return self._oleobj_.InvokeTypes(19, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetArrowWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetArrowWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the dimension scheme arrow width.'
		return self._oleobj_.InvokeTypes(20, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetExtensionGap is actually a property, but must be used as a method to correctly pass the arguments
	def SetExtensionGap(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the dimension scheme extension gap.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetLineWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the dimension scheme line width.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetStackedTextDistance is actually a property, but must be used as a method to correctly pass the arguments
	def SetStackedTextDistance(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the dimension scheme stakced text distance.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetTextHeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextHeight(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the dimension scheme text height.'
		return self._oleobj_.InvokeTypes(22, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetTextPenWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextPenWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the dimension scheme text pen width.'
		return self._oleobj_.InvokeTypes(21, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"ArrowHeight": (19, 2, (5, 0), ((3, 49),), "ArrowHeight", None),
		"ArrowWidth": (20, 2, (5, 0), ((3, 49),), "ArrowWidth", None),
		"CommaForDecimal": (10, 2, (11, 0), (), "CommaForDecimal", None),
		"DiameterPrefix": (6, 2, (8, 0), (), "DiameterPrefix", None),
		"DimensionOrientation": (18, 2, (3, 0), (), "DimensionOrientation", None),
		"ExtensionGap": (17, 2, (5, 0), ((3, 49),), "ExtensionGap", None),
		"IncludeUnit": (11, 2, (11, 0), (), "IncludeUnit", None),
		"LeadingZero": (8, 2, (11, 0), (), "LeadingZero", None),
		"LineStyle": (12, 2, (3, 0), (), "LineStyle", None),
		"LineWidth": (13, 2, (5, 0), ((3, 49),), "LineWidth", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"NegativeTolerance": (5, 2, (5, 0), (), "NegativeTolerance", None),
		"PositiveTolerance": (4, 2, (5, 0), (), "PositiveTolerance", None),
		"Precision": (3, 2, (3, 0), (), "Precision", None),
		"RadiusPrefix": (7, 2, (8, 0), (), "RadiusPrefix", None),
		"SpaceBetweenValueAndUnit": (26, 2, (11, 0), (), "SpaceBetweenValueAndUnit", None),
		"StackedTextDistance": (16, 2, (5, 0), ((3, 49),), "StackedTextDistance", None),
		"TerminatorStyle": (14, 2, (3, 0), (), "TerminatorStyle", None),
		"TextFont": (23, 2, (8, 0), (), "TextFont", None),
		"TextHeight": (22, 2, (5, 0), ((3, 49),), "TextHeight", None),
		"TextJustification": (15, 2, (3, 0), (), "TextJustification", None),
		"TextPenWidth": (21, 2, (5, 0), ((3, 49),), "TextPenWidth", None),
		"TrailingZeros": (9, 2, (11, 0), (), "TrailingZeros", None),
		"Unit": (2, 2, (3, 0), (), "Unit", None),
	}
	_prop_map_put_ = {
		"ArrowHeight": ((19, LCID, 4, 0),()),
		"ArrowWidth": ((20, LCID, 4, 0),()),
		"CommaForDecimal": ((10, LCID, 4, 0),()),
		"DiameterPrefix": ((6, LCID, 4, 0),()),
		"DimensionOrientation": ((18, LCID, 4, 0),()),
		"ExtensionGap": ((17, LCID, 4, 0),()),
		"IncludeUnit": ((11, LCID, 4, 0),()),
		"LeadingZero": ((8, LCID, 4, 0),()),
		"LineStyle": ((12, LCID, 4, 0),()),
		"LineWidth": ((13, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"NegativeTolerance": ((5, LCID, 4, 0),()),
		"PositiveTolerance": ((4, LCID, 4, 0),()),
		"Precision": ((3, LCID, 4, 0),()),
		"RadiusPrefix": ((7, LCID, 4, 0),()),
		"SpaceBetweenValueAndUnit": ((26, LCID, 4, 0),()),
		"StackedTextDistance": ((16, LCID, 4, 0),()),
		"TerminatorStyle": ((14, LCID, 4, 0),()),
		"TextFont": ((23, LCID, 4, 0),()),
		"TextHeight": ((22, LCID, 4, 0),()),
		"TextJustification": ((15, LCID, 4, 0),()),
		"TextPenWidth": ((21, LCID, 4, 0),()),
		"TrailingZeros": ((9, LCID, 4, 0),()),
		"Unit": ((2, LCID, 4, 0),()),
	}

	ArrowHeight: str # read/write
	ArrowWidth: str # read/write
	CommaForDecimal: str # read/write
	DiameterPrefix: str # read/write
	DimensionOrientation: str # read/write
	ExtensionGap: str # read/write
	IncludeUnit: str # read/write
	LeadingZero: str # read/write
	LineStyle: str # read/write
	LineWidth: str # read/write
	Name: str # read/write
	NegativeTolerance: str # read/write
	PositiveTolerance: str # read/write
	Precision: str # read/write
	RadiusPrefix: str # read/write
	SpaceBetweenValueAndUnit: str # read/write
	StackedTextDistance: str # read/write
	TerminatorStyle: str # read/write
	TextFont: str # read/write
	TextHeight: str # read/write
	TextJustification: str # read/write
	TextPenWidth: str # read/write
	TrailingZeros: str # read/write
	Unit: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDimensionSchemes(DispatchBaseClass):
	'MGCPCB Dimension Scheme collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4A}')
	coclass_clsid = IID('{EDEDED4B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pDimensionScheme=defaultNamedNotOptArg):
		'Adds a dimension scheme to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pDimensionScheme
			)

	# Result is of type IMGCPCBDimensionScheme
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the dimension scheme of a given index in the dimension schemes collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort dimension schemes in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the dimension scheme of a given index in the dimension schemes collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBDimensionedObject(DispatchBaseClass):
	'MGCPCB DimensionedObject object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7E}')
	coclass_clsid = IID('{EDEDED7E-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetDimensionPointX is actually a property, but must be used as a method to correctly pass the arguments
	def GetDimensionPointX(self, eUnit=0):
		'Returns the X point that is dimensioned to or from.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDimensionPointY is actually a property, but must be used as a method to correctly pass the arguments
	def GetDimensionPointY(self, eUnit=0):
		'Returns the Y point that is dimensioned to or from.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSegmentCenterX is actually a property, but must be used as a method to correctly pass the arguments
	def GetSegmentCenterX(self, eUnit=0):
		'Returns the X center point of an arc or circle segment type and the X point of a point segment type.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSegmentCenterY is actually a property, but must be used as a method to correctly pass the arguments
	def GetSegmentCenterY(self, eUnit=0):
		'Returns the Y center point of an arc or circle segment type and the Y point of a point segment type.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSegmentEndX is actually a property, but must be used as a method to correctly pass the arguments
	def GetSegmentEndX(self, eUnit=0):
		'Returns the X end point of the arc or line.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSegmentEndY is actually a property, but must be used as a method to correctly pass the arguments
	def GetSegmentEndY(self, eUnit=0):
		'Returns the Y end point of the arc or line.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSegmentStartX is actually a property, but must be used as a method to correctly pass the arguments
	def GetSegmentStartX(self, eUnit=0):
		'Returns the X start point of the arc or line.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSegmentStartY is actually a property, but must be used as a method to correctly pass the arguments
	def GetSegmentStartY(self, eUnit=0):
		'Returns the Y start point of the arc or line.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsBoardOrigin(self):
		'Returns true if this is the board origin. There is no object associated with the board origin.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), (),)

	def IsToObject(self):
		'Returns true for a To object and false for a From object.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this is a valid object.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"DimensionPointX": (13, 2, (5, 0), ((3, 49),), "DimensionPointX", None),
		"DimensionPointY": (14, 2, (5, 0), ((3, 49),), "DimensionPointY", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Object": (3, 2, (9, 0), (), "Object", None),
		"ObjectClass": (4, 2, (3, 0), (), "ObjectClass", None),
		"SegmentCenterX": (11, 2, (5, 0), ((3, 49),), "SegmentCenterX", None),
		"SegmentCenterY": (12, 2, (5, 0), ((3, 49),), "SegmentCenterY", None),
		"SegmentEndX": (9, 2, (5, 0), ((3, 49),), "SegmentEndX", None),
		"SegmentEndY": (10, 2, (5, 0), ((3, 49),), "SegmentEndY", None),
		"SegmentStartX": (7, 2, (5, 0), ((3, 49),), "SegmentStartX", None),
		"SegmentStartY": (8, 2, (5, 0), ((3, 49),), "SegmentStartY", None),
		"SegmentType": (6, 2, (3, 0), (), "SegmentType", None),
	}
	_prop_map_put_ = {
	}

	DimensionPointX: str # read_only
	DimensionPointY: str # read_only
	Name: str # read_only
	Object: str # read_only
	ObjectClass: str # read_only
	SegmentCenterX: str # read_only
	SegmentCenterY: str # read_only
	SegmentEndX: str # read_only
	SegmentEndY: str # read_only
	SegmentStartX: str # read_only
	SegmentStartY: str # read_only
	SegmentType: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDimensions(DispatchBaseClass):
	'MGCPCB Dimension collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}')
	coclass_clsid = IID('{EDEDED49-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pDimension=defaultNamedNotOptArg):
		'Adds a dimension to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pDimension
			)

	def Delete(self):
		'Delete all dimensions in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBDimension
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the dimension of a given index in the dimensions collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort dimensions in this collection by type and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the dimension of a given index in the dimensions collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBDisplayControl(DispatchBaseClass):
	'MGCPCB Display Control Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}')
	coclass_clsid = IID('{EDEDED74-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method ConductorLayer is actually a property, but must be used as a method to correctly pass the arguments
	def ConductorLayer(self, nLayer=defaultNamedNotOptArg, eType=defaultNamedNotOptArg):
		'This property sets or returns the on/off setting of a particular layer.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (11, 0), ((2, 1), (3, 1)),nLayer
			, eType)

	def DeleteScheme(self, sSchemeName=defaultNamedNotOptArg):
		'deletes the active display scheme.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	def DeleteSelectionScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Deletes the specified selection scheme.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	# The method DetailedView is actually a property, but must be used as a method to correctly pass the arguments
	def DetailedView(self, Name=defaultNamedNotOptArg):
		'This property sets or returns the on/off settings of detailed view.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (11, 0), ((8, 1),),Name
			)

	# The method GeneralItems is actually a property, but must be used as a method to correctly pass the arguments
	def GeneralItems(self, eType=defaultNamedNotOptArg):
		'This property sets or returns the on/off settings of general items.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (11, 0), ((3, 1),),eType
			)

	def IsItemAvailable(self, itemName=defaultNamedNotOptArg):
		'Returns true if item is defined and available based on licensing.'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((8, 1),),itemName
			)

	def IsOptionDefined(self, itemName=defaultNamedNotOptArg):
		'Returns true if option is defined.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((8, 1),),itemName
			)

	def IsStringOptionDefined(self, itemName=defaultNamedNotOptArg):
		'Returns true if string option is defined.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (11, 0), ((8, 1),),itemName
			)

	def LoadScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Loads the specified display scheme.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	def LoadSelectionScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Loads the specified selection scheme.'
		return self._oleobj_.InvokeTypes(28, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	def LoadUserScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Loads the specified user defined display scheme.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	def LoadUserSelectionScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Loads the specified user defined selection scheme.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	def Lock(self):
		'Locks the DisplayControl settings to allow multiple changes with a single graphics refresh after they are done.'
		return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), (),)

	# The method Material is actually a property, but must be used as a method to correctly pass the arguments
	def Material(self, Name=defaultNamedNotOptArg):
		'This property sets or returns the on/off settings of material.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (11, 0), ((8, 1),),Name
			)

	# The method MiscItems is actually a property, but must be used as a method to correctly pass the arguments
	def MiscItems(self, eType=defaultNamedNotOptArg):
		'This property sets or returns the on/off settings of misc items.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (11, 0), ((3, 1),),eType
			)

	# The method Option is actually a property, but must be used as a method to correctly pass the arguments
	def Option(self, itemName=defaultNamedNotOptArg):
		'Change the display control options.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (3, 0), ((8, 1),),itemName
			)

	# The method PartItems is actually a property, but must be used as a method to correctly pass the arguments
	def PartItems(self, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg):
		'This property sets or returns the on/off settings of part items.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (11, 0), ((3, 1), (3, 1)),eType
			, eSide)

	def SaveScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Saves the active display scheme.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	def SaveSchemeEx(self, sSchemeName=defaultNamedNotOptArg, bSaveToolbarState=False):
		'Saves the active display scheme and, optionally, toolbar state as well.'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (11, 0), ((8, 1), (11, 49)),sSchemeName
			, bSaveToolbarState)

	def SaveSelectionScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Saves the active selection scheme.'
		return self._oleobj_.InvokeTypes(29, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	def SaveUserScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Saves the active user defined display scheme.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	def SaveUserSchemeEx(self, sSchemeName=defaultNamedNotOptArg, bSaveToolbarState=False):
		'Saves the active user defined display scheme and, optionally, toolbar state as well.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), ((8, 1), (11, 49)),sSchemeName
			, bSaveToolbarState)

	def SaveUserSelectionScheme(self, sSchemeName=defaultNamedNotOptArg):
		'Saves the active user defined selection scheme.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (11, 0), ((8, 1),),sSchemeName
			)

	# The method Section is actually a property, but must be used as a method to correctly pass the arguments
	def Section(self, eType=defaultNamedNotOptArg):
		'Sets or returns the on/off setting of Display Control section only.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (11, 0), ((3, 1),),eType
			)

	# The method Selectable is actually a property, but must be used as a method to correctly pass the arguments
	def Selectable(self, itemName=defaultNamedNotOptArg):
		'Change the selectability of the named item.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (3, 0), ((8, 1),),itemName
			)

	# The method SetConductorLayer is actually a property, but must be used as a method to correctly pass the arguments
	def SetConductorLayer(self, nLayer=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'This property sets or returns the on/off setting of a particular layer.'
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((2, 1), (3, 1), (11, 1)),nLayer
			, eType, arg2)

	# The method SetDetailedView is actually a property, but must be used as a method to correctly pass the arguments
	def SetDetailedView(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns the on/off settings of detailed view.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((8, 1), (11, 1)),Name
			, arg1)

	# The method SetEnableSection is actually a property, but must be used as a method to correctly pass the arguments
	def SetEnableSection(self, eType=defaultNamedNotOptArg, arg1=True):
		'Enable/Disable Display Control section, including all section items.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (11, 49)),eType
			, arg1)

	# The method SetGeneralItems is actually a property, but must be used as a method to correctly pass the arguments
	def SetGeneralItems(self, eType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns the on/off settings of general items.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 1), (11, 1)),eType
			, arg1)

	# The method SetMaterial is actually a property, but must be used as a method to correctly pass the arguments
	def SetMaterial(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns the on/off settings of material.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((8, 1), (11, 1)),Name
			, arg1)

	# The method SetMiscItems is actually a property, but must be used as a method to correctly pass the arguments
	def SetMiscItems(self, eType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns the on/off settings of misc items.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (11, 1)),eType
			, arg1)

	# The method SetOption is actually a property, but must be used as a method to correctly pass the arguments
	def SetOption(self, itemName=defaultNamedNotOptArg, arg1=1):
		'Change the display control options.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((8, 1), (3, 49)),itemName
			, arg1)

	def SetParentChild(self, parentName=defaultNamedNotOptArg, childName=defaultNamedNotOptArg):
		'Connect two virtual GFX nodes as a parent and a child.'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((8, 1), (8, 1)),parentName
			, childName)

	# The method SetPartItems is actually a property, but must be used as a method to correctly pass the arguments
	def SetPartItems(self, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'This property sets or returns the on/off settings of part items.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (3, 1), (11, 1)),eType
			, eSide, arg2)

	# The method SetSection is actually a property, but must be used as a method to correctly pass the arguments
	def SetSection(self, eType=defaultNamedNotOptArg, arg1=True):
		'Sets or returns the on/off setting of Display Control section only.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (11, 49)),eType
			, arg1)

	# The method SetSelectable is actually a property, but must be used as a method to correctly pass the arguments
	def SetSelectable(self, itemName=defaultNamedNotOptArg, arg1=1):
		'Change the selectability of the named item.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((8, 1), (3, 49)),itemName
			, arg1)

	# The method SetStringOption is actually a property, but must be used as a method to correctly pass the arguments
	def SetStringOption(self, itemName=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Change the display control string options.'
		return self._oleobj_.InvokeTypes(18, LCID, 4, (24, 0), ((8, 1), (8, 1)),itemName
			, arg1)

	# The method SetUserLayer is actually a property, but must be used as a method to correctly pass the arguments
	def SetUserLayer(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns the on/off settings of user layer.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((8, 1), (11, 1)),Name
			, arg1)

	# The method SetVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetVisible(self, itemName=defaultNamedNotOptArg, arg1=1):
		'Change the visibility of the named item.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((8, 1), (3, 49)),itemName
			, arg1)

	# The method StringOption is actually a property, but must be used as a method to correctly pass the arguments
	def StringOption(self, itemName=defaultNamedNotOptArg):
		'Change the display control string options.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(18, LCID, 2, (8, 0), ((8, 1),),itemName
			)

	def Unlock(self):
		'Unlocks the DisplayControl settings and allows graphics refreshes.'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (24, 0), (),)

	# The method UserLayer is actually a property, but must be used as a method to correctly pass the arguments
	def UserLayer(self, Name=defaultNamedNotOptArg):
		'This property sets or returns the on/off settings of user layer.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (11, 0), ((8, 1),),Name
			)

	# The method Visible is actually a property, but must be used as a method to correctly pass the arguments
	def Visible(self, itemName=defaultNamedNotOptArg):
		'Change the visibility of the named item.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (3, 0), ((8, 1),),itemName
			)

	_prop_map_get_ = {
		# Method 'Global' returns object of type 'IMGCPCBGlobalDisplayControl'
		"Global": (0, 2, (9, 0), (), "Global", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED74}'),
		"Name": (15, 2, (8, 0), (), "Name", None),
	}
	_prop_map_put_ = {
		"EnableSection": ((6, LCID, 4, 0),('True',)),
		"Option": ((14, LCID, 4, 0),('1',)),
		"Section": ((8, LCID, 4, 0),('True',)),
		"Selectable": ((12, LCID, 4, 0),('1',)),
		"Visible": ((13, LCID, 4, 0),('1',)),
	}

	Global: str # IMGCPCBGlobalDisplayControl; read_only
	Name: str # read_only
	EnableSection: str # write_only
	Option: str # write_only
	Section: str # write_only
	Selectable: str # write_only
	Visible: bool # write_only

	# Default property for this class is 'Global'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "Global", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED74}'))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDocument(DispatchBaseClass):
	'MGCPCB Document Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')
	coclass_clsid = IID('{EDEDED04-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def AcquireLocks(self, lockMask=defaultNamedNotOptArg):
		'Acquire given locks as defined in EPcbLockType'
		return self._oleobj_.InvokeTypes(378, LCID, 1, (24, 0), ((3, 1),),lockMask
			)

	def AcquireToCheckpoint(self, Checkpoint=defaultNamedNotOptArg):
		'Acquires all changes back to the specified checkpoint.'
		return self._oleobj_.InvokeTypes(288, LCID, 1, (24, 0), ((9, 1),),Checkpoint
			)

	# The method AddViaSchemePath is actually a property, but must be used as a method to correctly pass the arguments
	def AddViaSchemePath(self, Scheme=defaultNamedNotOptArg):
		'Returns full path of Add Via scheme.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(392, LCID, 2, (8, 0), ((8, 1),),Scheme
			)

	# The method AddinControl is actually a property, but must be used as a method to correctly pass the arguments
	def AddinControl(self, sAddinName=defaultNamedNotOptArg):
		'Returns the validated Addin control named in the first parameter.'
		ret = self._oleobj_.InvokeTypes(388, LCID, 2, (9, 0), ((8, 1),),sAddinName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddinControl', None)
		return ret

	def AreLocksAvailable(self, lockMask=defaultNamedNotOptArg):
		'Checks availability of given locks as defined in EPcbLockType'
		return self._oleobj_.InvokeTypes(377, LCID, 1, (11, 0), ((3, 1),),lockMask
			)

	def CanDeleteLayer(self, nLayerNdx=defaultNamedNotOptArg):
		'Return whether a layer can be deleted or not based on board outline stackup.'
		return self._oleobj_.InvokeTypes(363, LCID, 1, (3, 0), ((3, 1),),nLayerNdx
			)

	# The method Checksum is actually a property, but must be used as a method to correctly pass the arguments
	def Checksum(self, Type=defaultNamedNotOptArg):
		'0=local, 1=global, 2=session'
		return self._oleobj_.InvokeTypes(113, LCID, 2, (3, 0), ((3, 1),),Type
			)

	def ClearUndoStack(self):
		'Clears the undo stack. (Internal use only.)'
		return self._oleobj_.InvokeTypes(174, LCID, 1, (24, 0), (),)

	def Close(self, bSave=True):
		'Close the document and optionally save it.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((11, 49),),bSave
			)

	# Result is of type IMGCPCBSheets
	def CopySheet(self, sheetName=defaultNamedNotOptArg, copySheetName=defaultNamedNotOptArg, numberOfCopies=defaultNamedNotOptArg):
		'Copy a Sheet in the Drawing Editor'
		ret = self._oleobj_.InvokeTypes(343, LCID, 1, (9, 0), ((8, 1), (8, 1), (3, 1)),sheetName
			, copySheetName, numberOfCopies)
		if ret is not None:
			ret = Dispatch(ret, 'CopySheet', '{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}')
		return ret

	# Result is of type IMGCPCBComponent
	def CreateComponent(self, PartName=defaultNamedNotOptArg, CellName=defaultNamedNotOptArg, RefDes=defaultNamedNotOptArg, bSearchCentralLibrary=True):
		'Creates a new component in the design and flags the changes as needing to be propagated to the front end. If part not found in design, will search central library based on flag.'
		ret = self._oleobj_.InvokeTypes(286, LCID, 1, (9, 0), ((8, 1), (8, 1), (8, 1), (11, 49)),PartName
			, CellName, RefDes, bSearchCentralLibrary)
		if ret is not None:
			ret = Dispatch(ret, 'CreateComponent', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
		return ret

	# Result is of type IMGCPCBView
	def CreateCustomView(self, _ocxId=defaultNamedNotOptArg):
		'Creates custom view.'
		ret = self._oleobj_.InvokeTypes(278, LCID, 1, (9, 0), ((12, 1),),_ocxId
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateCustomView', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')
		return ret

	# Result is of type IMGCPCBGroup
	def CreateDefaultRFGroup(self):
		'Create new RF Default Group.'
		ret = self._oleobj_.InvokeTypes(311, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CreateDefaultRFGroup', '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
		return ret

	def CreateSortChannel(self):
		'Create a new Sort Channel.'
		return self._oleobj_.InvokeTypes(307, LCID, 1, (3, 0), (),)

	def CustomProperties(self, Type=defaultNamedNotOptArg, userData=defaultNamedNotOptArg, eSelectOnly=0, eUnit=0):
		"Returns the document's custom properties."
		return self._ApplyTypes_(130, 1, (12, 0), ((3, 1), (12, 1), (3, 49), (3, 49)), 'CustomProperties', None,Type
			, userData, eSelectOnly, eUnit)

	# The method DBCached is actually a property, but must be used as a method to correctly pass the arguments
	def DBCached(self, _db=defaultNamedNotOptArg):
		'property DBCached'
		return self._oleobj_.InvokeTypes(303, LCID, 2, (11, 0), ((3, 1),),_db
			)

	# Result is of type IMGCPCBPadstack
	# The method DefaultViaPadstack is actually a property, but must be used as a method to correctly pass the arguments
	def DefaultViaPadstack(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, FromLayer=defaultNamedNotOptArg, ToLayer=defaultNamedNotOptArg
			, ppNet=defaultNamedNotOptArg, eUnit=0):
		'Returns the default via Padstack.'
		ret = self._oleobj_.InvokeTypes(183, LCID, 2, (9, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (9, 1), (3, 49)),x
			, y, FromLayer, ToLayer, ppNet, eUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'DefaultViaPadstack', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')
		return ret

	def ExportAscii(self, sDestinationDir=defaultNamedNotOptArg, eHKPType=defaultNamedNotOptArg, sLogFile=''):
		'Exports ASCII file(s) to the specified directory.'
		return self._ApplyTypes_(111, 1, (24, 32), ((8, 1), (3, 1), (8, 49)), 'ExportAscii', None,sDestinationDir
			, eHKPType, sLogFile)

	def ExportHypRefFile(self):
		'Runs Export to hyperlynx to output ref file (Deprecated). Use ExportHypRefFileEx instead.'
		return self._oleobj_.InvokeTypes(339, LCID, 1, (24, 0), (),)

	def ExportHypRefFileEx(self):
		'Runs Export to hyperlynx to output ref file.'
		return self._oleobj_.InvokeTypes(404, LCID, 1, (24, 0), (),)

	def ExportSccz(self, sDestinationDir=defaultNamedNotOptArg, sLogFile='exportSccz'):
		'Exports SCCZ file(s) to the specified directory.'
		return self._ApplyTypes_(403, 1, (24, 32), ((8, 1), (8, 49)), 'ExportSccz', None,sDestinationDir
			, sLogFile)

	# Result is of type IMGCPCBCell
	def FindCell(self, Cell=defaultNamedNotOptArg):
		'Find a Cell with the specified name.'
		ret = self._oleobj_.InvokeTypes(177, LCID, 1, (9, 0), ((8, 1),),Cell
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindCell', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')
		return ret

	# Result is of type IMGCPCBComponent
	def FindComponent(self, BRefDes=defaultNamedNotOptArg):
		'Find the component with the specified reference designator.'
		ret = self._oleobj_.InvokeTypes(51, LCID, 1, (9, 0), ((8, 1),),BRefDes
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindComponent', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
		return ret

	# Result is of type IMGCPCBGroup
	def FindGroup(self, Name=defaultNamedNotOptArg):
		'Find the group with the specified name.'
		ret = self._oleobj_.InvokeTypes(175, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindGroup', '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
		return ret

	# Result is of type IMGCPCBGroup
	def FindGroupByHierarchicalName(self, Name=defaultNamedNotOptArg):
		'Find the hierarchical group with the specified name.'
		ret = self._oleobj_.InvokeTypes(302, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindGroupByHierarchicalName', '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
		return ret

	# Result is of type IMGCPCBGroups
	def FindGroupsByManagedBlockName(self, ManagedBlockName=defaultNamedNotOptArg, bReturnAllInstances=False):
		'Find collection of groups with the specified managed block name. By default will return only 1 instance in the collection. To return all instances, set flag to true.'
		ret = self._oleobj_.InvokeTypes(414, LCID, 1, (9, 0), ((8, 1), (11, 49)),ManagedBlockName
			, bReturnAllInstances)
		if ret is not None:
			ret = Dispatch(ret, 'FindGroupsByManagedBlockName', '{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')
		return ret

	# Result is of type IMGCPCBLayerObject
	def FindLayerById(self, layerUniqueId=defaultNamedNotOptArg):
		'Get layer by unique id'
		ret = self._oleobj_.InvokeTypes(361, LCID, 1, (9, 0), ((12, 1),),layerUniqueId
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindLayerById', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')
		return ret

	# Result is of type IMGCPCBMultiBoardOutline
	def FindMultiBoardOutlineByName(self, BoardOutlineName=defaultNamedNotOptArg):
		'Find Board Outline with specified name.'
		ret = self._oleobj_.InvokeTypes(359, LCID, 1, (9, 0), ((8, 1),),BoardOutlineName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindMultiBoardOutlineByName', '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')
		return ret

	# Result is of type IMGCPCBNet
	def FindNet(self, BNetName=defaultNamedNotOptArg):
		'Find the net with the specified net name.'
		ret = self._oleobj_.InvokeTypes(52, LCID, 1, (9, 0), ((8, 1),),BNetName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindNet', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')
		return ret

	# Result is of type IMGCPCBNet
	def FindNetByID(self, UniqueNumber=defaultNamedNotOptArg):
		"Finds an net by it's unique ID."
		ret = self._oleobj_.InvokeTypes(275, LCID, 1, (9, 0), ((12, 1),),UniqueNumber
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindNetByID', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')
		return ret

	# Result is of type IMGCPCBNetGroup
	def FindNetGroup(self, Name=defaultNamedNotOptArg):
		'Find the net group with the specified name.'
		ret = self._oleobj_.InvokeTypes(296, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindNetGroup', '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')
		return ret

	# Result is of type IMGCPCBNetGroup
	def FindNetGroupByHierarchicalName(self, Name=defaultNamedNotOptArg):
		'Find the hierarchical net group with the specified name.'
		ret = self._oleobj_.InvokeTypes(315, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindNetGroupByHierarchicalName', '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')
		return ret

	def FindObjectById(self, UniqueId=defaultNamedNotOptArg):
		"Finds an object by it's unique id."
		ret = self._oleobj_.InvokeTypes(241, LCID, 1, (9, 0), ((12, 1),),UniqueId
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindObjectById', None)
		return ret

	# Result is of type IMGCPCBPart
	def FindPart(self, Part=defaultNamedNotOptArg):
		'Find a part with the specified name.'
		ret = self._oleobj_.InvokeTypes(176, LCID, 1, (9, 0), ((8, 1),),Part
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindPart', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}')
		return ret

	# Result is of type IMGCPCBPhysicalReuseLibraryCircuit
	def FindPhysicalReuseLibraryCircuit(self, pName=defaultNamedNotOptArg):
		'Find the physical reuse library circuit with the specified name.'
		ret = self._oleobj_.InvokeTypes(409, LCID, 1, (9, 0), ((8, 1),),pName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindPhysicalReuseLibraryCircuit', '{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}')
		return ret

	# Result is of type IMGCPCBPlaneAssignment
	def FindPlaneAssignment(self, nLayer=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg):
		'Find the plane assignment for the specific net and layer.'
		ret = self._oleobj_.InvokeTypes(204, LCID, 1, (9, 0), ((3, 1), (9, 1)),nLayer
			, pNet)
		if ret is not None:
			ret = Dispatch(ret, 'FindPlaneAssignment', '{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}')
		return ret

	# Result is of type IMGCPCBPlaneClass
	def FindPlaneClass(self, sName=defaultNamedNotOptArg):
		'Find the plane class with the specified name.'
		ret = self._oleobj_.InvokeTypes(202, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindPlaneClass', '{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')
		return ret

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find design the property by name.'
		ret = self._oleobj_.InvokeTypes(155, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBUserLayer
	def FindUserLayer(self, BUserLayerName=defaultNamedNotOptArg):
		'Find the user layer object with the specified name.'
		ret = self._oleobj_.InvokeTypes(88, LCID, 1, (9, 0), ((8, 1),),BUserLayerName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindUserLayer', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')
		return ret

	def GenerateEDMOutputs(self):
		'Generates EDM Outputs as defined in EDM Output settings. The generation result may contain a bitwise mask of results indicating various error conditions.'
		return self._oleobj_.InvokeTypes(398, LCID, 1, (3, 0), (),)

	def GetActualMinClearance(self, firstObject=defaultNamedNotOptArg, secondObject=defaultNamedNotOptArg, eUnit=0):
		'Returns the actual minimum clearance between two placed objects.'
		return self._oleobj_.InvokeTypes(217, LCID, 1, (5, 0), ((9, 1), (9, 1), (3, 49)),firstObject
			, secondObject, eUnit)

	# Result is of type IMGCPCBActualPlaneShapes
	# The method GetActualPlaneShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetActualPlaneShapes(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's actual plane shape collection."
		ret = self._oleobj_.InvokeTypes(153, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetActualPlaneShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')
		return ret

	# Result is of type IMGCPCBBendAreas
	# The method GetBendAreas is actually a property, but must be used as a method to correctly pass the arguments
	def GetBendAreas(self, eSelectOnly=0):
		"Returns the document's collection of bend areas."
		ret = self._oleobj_.InvokeTypes(349, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBendAreas', '{6B76C06F-2E50-491B-B845-D70A57247DB0}')
		return ret

	# Result is of type IMGCPCBBoards
	# The method GetBoards is actually a property, but must be used as a method to correctly pass the arguments
	def GetBoards(self, eSelectOnly=0):
		"Returns the document's collection of boards."
		ret = self._oleobj_.InvokeTypes(134, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBoards', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')
		return ret

	# Result is of type IMGCPCBBondPads
	# The method GetBondPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetBondPads(self, SelectType=0):
		"Returns the Document's collection of bond pads that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(256, LCID, 2, (9, 0), ((3, 49),),SelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBondPads', '{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}')
		return ret

	# Result is of type IMGCPCBObjects
	# The method GetBondWires is actually a property, but must be used as a method to correctly pass the arguments
	def GetBondWires(self, SelectType=0):
		"Returns the Document's collection of bond wires that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(255, LCID, 2, (9, 0), ((3, 49),),SelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBondWires', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')
		return ret

	# Result is of type IMGCPCBBreakoutTraces
	# The method GetBreakoutTraces is actually a property, but must be used as a method to correctly pass the arguments
	def GetBreakoutTraces(self, eSelectOnly=0, nLayerOnly=0):
		'Get the collection of breakout traces in the document.'
		ret = self._oleobj_.InvokeTypes(80, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetBreakoutTraces', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')
		return ret

	# Result is of type IMGCPCBNets
	# The method GetBusNets is actually a property, but must be used as a method to correctly pass the arguments
	def GetBusNets(self, eSelectOnly=0):
		"Returns the Document's collection of Bus nets that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(300, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBusNets', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')
		return ret

	# Result is of type IMGCPCBBusPaths
	# The method GetBusPaths is actually a property, but must be used as a method to correctly pass the arguments
	def GetBusPaths(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's bus path collection."
		ret = self._oleobj_.InvokeTypes(169, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetBusPaths', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA6}')
		return ret

	# Result is of type IMGCPCBCavities
	# The method GetCavities is actually a property, but must be used as a method to correctly pass the arguments
	def GetCavities(self, SelectType=0):
		"Returns the Document's collection  of Cavities that match the supplied criteria.."
		ret = self._oleobj_.InvokeTypes(260, LCID, 2, (9, 0), ((3, 49),),SelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetCavities', '{F6D6B8DF-76C9-425E-80A0-9DA8D54B1612}')
		return ret

	# The method GetCellNames is actually a property, but must be used as a method to correctly pass the arguments
	def GetCellNames(self, Celltype=-1, PkgGrpType=-1, NameRegularExpression='*', bReservedForFutureUse=False):
		'Returns a filtered array of cell names from the library.'
		return self._ApplyTypes_(220, 2, (12, 32), ((3, 49), (3, 49), (8, 49), (11, 49)), 'GetCellNames', None,Celltype
			, PkgGrpType, NameRegularExpression, bReservedForFutureUse)

	# Result is of type IMGCPCBCells
	# The method GetCells is actually a property, but must be used as a method to correctly pass the arguments
	def GetCells(self, CellName='*'):
		"Returns the Document's collection of cells."
		return self._ApplyTypes_(30, 2, (9, 32), ((8, 49),), 'GetCells', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED19}',CellName
			)

	# Result is of type IMGCPCBChangeData
	# The method GetChangeData is actually a property, but must be used as a method to correctly pass the arguments
	def GetChangeData(self, FromRecord=-1.0, ToRecord=-1.0):
		'Returns the change lists for the specified record span.'
		ret = self._oleobj_.InvokeTypes(248, LCID, 2, (9, 0), ((12, 49), (12, 49)),FromRecord
			, ToRecord)
		if ret is not None:
			ret = Dispatch(ret, 'GetChangeData', '{3637D13B-92C5-41E2-BC84-8B8815A8041C}')
		return ret

	def GetClearanceRule(self, firstObject=defaultNamedNotOptArg, secondObject=defaultNamedNotOptArg, firstObjectLayer=-1, secondObjectLayer=-1
			, eUnit=0):
		'Returns the clearance required between two placed objects.'
		return self._oleobj_.InvokeTypes(216, LCID, 1, (5, 0), ((9, 1), (9, 1), (3, 49), (3, 49), (3, 49)),firstObject
			, secondObject, firstObjectLayer, secondObjectLayer, eUnit)

	# Result is of type IMGCPCBComplexVias
	# The method GetComplexVias is actually a property, but must be used as a method to correctly pass the arguments
	def GetComplexVias(self, eSelectOnly=0):
		"Returns the Document's collection of complex vias."
		ret = self._oleobj_.InvokeTypes(386, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetComplexVias', '{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}')
		return ret

	# Result is of type IMGCPCBComponents
	# The method GetComponents is actually a property, but must be used as a method to correctly pass the arguments
	def GetComponents(self, eSelectOnly=0, eCompType=-1, eCelltype=4, sRefDes='*'):
		"Returns the Document's collection of components that match the supplied criteria. The refDes may contain the '*' and '?' wildcards."
		return self._ApplyTypes_(22, 2, (9, 32), ((3, 49), (3, 49), (3, 49), (8, 49)), 'GetComponents', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}',eSelectOnly
			, eCompType, eCelltype, sRefDes)

	# Result is of type IMGCPCBConductiveAreas
	# The method GetConductiveAreas is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductiveAreas(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's collection conductive areas"
		ret = self._oleobj_.InvokeTypes(44, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductiveAreas', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs(self, eSelectType=-1, eSelectOnly=0, nLayerOnly=0, bIncludeComponentGfx=True):
		"Returns the Document's collection of board layer graphics that match the supplied criteria.  These are non-user and non-fabrication graphics. (Deprecated)"
		ret = self._oleobj_.InvokeTypes(35, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49), (11, 49)),eSelectType
			, eSelectOnly, nLayerOnly, bIncludeComponentGfx)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs2 is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs2(self, pArrayOfSelectType='', eSelectOnly=0, nLayerOnly=0, bIncludeComponentGfx=True):
		"Returns the document's collection of board layer graphics that match the supplied criteria.  These are non-user and non-fabrication graphics."
		return self._ApplyTypes_(163, 2, (9, 32), ((16396, 49), (3, 49), (3, 49), (11, 49)), 'GetConductorLayerGfxs2', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}',pArrayOfSelectType
			, eSelectOnly, nLayerOnly, bIncludeComponentGfx)

	# Result is of type IMGCPCBConductorLayerTexts
	# The method GetConductorLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerTexts(self, eSelectOnly=0, nLayerOnly=0, bIncludeComponentText=True):
		"Returns the Document's collection of board texts that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(71, LCID, 2, (9, 0), ((3, 49), (3, 49), (11, 49)),eSelectOnly
			, nLayerOnly, bIncludeComponentText)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')
		return ret

	# The method GetConnectionCountOption is actually a property, but must be used as a method to correctly pass the arguments
	def GetConnectionCountOption(self, sortChannelIndex=0):
		"Sets or returns the Document's Connection Count Options."
		return self._oleobj_.InvokeTypes(301, LCID, 2, (3, 0), ((3, 49),),sortChannelIndex
			)

	# Result is of type IMGCPCBConstraintClasses
	# The method GetConstraintClasses is actually a property, but must be used as a method to correctly pass the arguments
	def GetConstraintClasses(self, Name='*'):
		"Returns the Document's collection of constraint classes that match the supplied criteria."
		return self._ApplyTypes_(284, 2, (9, 32), ((8, 49),), 'GetConstraintClasses', '{AEDD489A-9A64-4842-ADF9-72F22B82C33C}',Name
			)

	# Result is of type IMGCPCBConstructionLines
	# The method GetConstructionLines is actually a property, but must be used as a method to correctly pass the arguments
	def GetConstructionLines(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the Document's collection of construction lines that match the supplied criteria."
		return self._ApplyTypes_(212, 2, (9, 32), ((3, 49), (8, 49)), 'GetConstructionLines', '{9F40B36F-3CB4-48B6-AC53-8F42E432C5C5}',eSelectOnly
			, sLayerOnly)

	# Result is of type IMGCPCBConstructionPoints
	# The method GetConstructionPoints is actually a property, but must be used as a method to correctly pass the arguments
	def GetConstructionPoints(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the Document's collection of construction points that match the supplied criteria."
		return self._ApplyTypes_(205, 2, (9, 32), ((3, 49), (8, 49)), 'GetConstructionPoints', '{70468F79-8CB4-4E7B-B6AE-9B167F349DC3}',eSelectOnly
			, sLayerOnly)

	# Result is of type IMGCPCBContours
	# The method GetContours is actually a property, but must be used as a method to correctly pass the arguments
	def GetContours(self, eSelectOnly=0):
		"Returns the document's contour collection."
		ret = self._oleobj_.InvokeTypes(42, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetContours', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')
		return ret

	# Result is of type IMGCPCBCopperBalancingDatas
	# The method GetCopperBalancingDatas is actually a property, but must be used as a method to correctly pass the arguments
	def GetCopperBalancingDatas(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's copper balancing data collection."
		ret = self._oleobj_.InvokeTypes(133, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetCopperBalancingDatas', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8A}')
		return ret

	# Result is of type IMGCPCBCopperBalancingShapes
	# The method GetCopperBalancingShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetCopperBalancingShapes(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's copper balancing shape collection."
		ret = self._oleobj_.InvokeTypes(132, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetCopperBalancingShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED88}')
		return ret

	# Result is of type IMGCPCBDetailedViews
	# The method GetDetailedViews is actually a property, but must be used as a method to correctly pass the arguments
	def GetDetailedViews(self, eSelectOnly=0):
		"Returns the document's collection of detailed views."
		ret = self._oleobj_.InvokeTypes(135, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDetailedViews', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}')
		return ret

	# Result is of type IMGCPCBDifferentialPairs
	# The method GetDifferentialPairs is actually a property, but must be used as a method to correctly pass the arguments
	def GetDifferentialPairs(self, eSelectOnly=0):
		'Returns the collection of differential pairs.'
		ret = self._oleobj_.InvokeTypes(224, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDifferentialPairs', '{B7CBBAF8-984C-4358-998E-F3FD7C2F761D}')
		return ret

	# Result is of type IMGCPCBDimensionScheme
	def GetDimensionScheme(self, sSchemeName='', bLocal=False):
		'Loads and returns the Dimension Scheme object with scheme SchemeName.  If SchemeName is undefined the system defaults are returned.'
		return self._ApplyTypes_(68, 1, (9, 32), ((8, 49), (11, 49)), 'GetDimensionScheme', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}',sSchemeName
			, bLocal)

	# Result is of type IMGCPCBDimensions
	# The method GetDimensions is actually a property, but must be used as a method to correctly pass the arguments
	def GetDimensions(self, eSelectOnly=0):
		'Returns documents collection of associative dimensions matching selection criteria'
		ret = self._oleobj_.InvokeTypes(66, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDimensions', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}')
		return ret

	# The method GetDisplaySchemes is actually a property, but must be used as a method to correctly pass the arguments
	def GetDisplaySchemes(self, eSchemeType=0):
		'Returns list of scheme names available based on selection.'
		return self._ApplyTypes_(195, 2, (12, 0), ((3, 49),), 'GetDisplaySchemes', None,eSchemeType
			)

	# Result is of type IMGCPCBDrillDrawings
	# The method GetDrillDrawings is actually a property, but must be used as a method to correctly pass the arguments
	def GetDrillDrawings(self, eSelectOnly=0):
		"Returns the document's drill drawing collection."
		ret = self._oleobj_.InvokeTypes(61, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDrillDrawings', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')
		return ret

	# Result is of type IMGCPCBDrillTables
	# The method GetDrillTables is actually a property, but must be used as a method to correctly pass the arguments
	def GetDrillTables(self, eSelectOnly=0):
		'Returns the collection of DrillTables associated with the drawing file designs'
		ret = self._oleobj_.InvokeTypes(194, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDrillTables', '{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}')
		return ret

	# Result is of type IMGCPCBEmbeddedPassiveShapes
	# The method GetEmbeddedPassiveShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetEmbeddedPassiveShapes(self, eSelectOnly=0, eType=-1, nLayerOnly=0):
		"Returns the document's collection of embedded passive shapes."
		ret = self._oleobj_.InvokeTypes(158, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectOnly
			, eType, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetEmbeddedPassiveShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')
		return ret

	# Result is of type IMGCPCBFabricationLayerGfxs
	# The method GetFabricationLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerGfxs(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0, bIncludeComponentGfx=True):
		"Returns the Document's collection of fabrication layer graphics that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(69, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49), (11, 49)),eSelectType
			, eSelectOnly, eLayerOnly, bIncludeComponentGfx)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')
		return ret

	# Result is of type IMGCPCBFabricationLayerTexts
	# The method GetFabricationLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerTexts(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0, bIncludeComponentText=True):
		"Returns the Document's collection of fabrication texts that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(72, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49), (11, 49)),eSelectType
			, eSelectOnly, eLayerOnly, bIncludeComponentText)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')
		return ret

	# Result is of type IMGCPCBFiducials
	# The method GetFiducials is actually a property, but must be used as a method to correctly pass the arguments
	def GetFiducials(self, eSelectOnly=0):
		"Returns the Document's collection of fiducials."
		ret = self._oleobj_.InvokeTypes(31, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFiducials', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}')
		return ret

	# Result is of type IMGCPCBFromTos
	# The method GetFromTos is actually a property, but must be used as a method to correctly pass the arguments
	def GetFromTos(self, eSelectOnly=0, eFromToType=1):
		"Returns the Document's collection of fromtos."
		ret = self._oleobj_.InvokeTypes(29, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, eFromToType)
		if ret is not None:
			ret = Dispatch(ret, 'GetFromTos', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')
		return ret

	# Result is of type IMGCPCBGeneratedPlanes
	# The method GetGeneratedPlaneOutlines is actually a property, but must be used as a method to correctly pass the arguments
	def GetGeneratedPlaneOutlines(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's generated plane outline collection."
		ret = self._oleobj_.InvokeTypes(178, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetGeneratedPlaneOutlines', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')
		return ret

	# Result is of type IMGCPCBGeneratedPlanes
	# The method GetGeneratedPlanes is actually a property, but must be used as a method to correctly pass the arguments
	def GetGeneratedPlanes(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's generated plane collection."
		ret = self._oleobj_.InvokeTypes(49, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetGeneratedPlanes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')
		return ret

	def GetGroupSortInfo(self, key=pythoncom.Missing, ascending=pythoncom.Missing):
		'Get the group sort key and sort order.'
		return self._ApplyTypes_(297, 1, (24, 0), ((16387, 2), (16395, 2)), 'GetGroupSortInfo', None,key
			, ascending)

	# Result is of type IMGCPCBGroups
	# The method GetGroups is actually a property, but must be used as a method to correctly pass the arguments
	def GetGroups(self, eSelectOnly=0, eGroupType=-1, bRootGroupsOnly=True):
		"Returns the Document's collection of groups that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(172, LCID, 2, (9, 0), ((3, 49), (3, 49), (11, 49)),eSelectOnly
			, eGroupType, bRootGroupsOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetGroups', '{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')
		return ret

	# Result is of type IMGCPCBHazards
	# The method GetHazards is actually a property, but must be used as a method to correctly pass the arguments
	def GetHazards(self, eType=''):
		"Returns the document's collection of hazards"
		return self._ApplyTypes_(165, 2, (9, 32), ((16396, 49),), 'GetHazards', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}',eType
			)

	# Result is of type IMGCPCBHazards
	# The method GetHazardsEx is actually a property, but must be used as a method to correctly pass the arguments
	def GetHazardsEx(self, eType='', eAcceptType=0):
		"Returns the document's hazards collection for the specified AcceptType."
		return self._ApplyTypes_(251, 2, (9, 32), ((16396, 49), (3, 49)), 'GetHazardsEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}',eType
			, eAcceptType)

	# The method GetHoleNames is actually a property, but must be used as a method to correctly pass the arguments
	def GetHoleNames(self, NameRegularExpression='*', FromCentralLib=False):
		'Returns a filtered array of hole names.'
		return self._ApplyTypes_(228, 2, (12, 32), ((8, 49), (11, 49)), 'GetHoleNames', None,NameRegularExpression
			, FromCentralLib)

	# Result is of type IMGCPCBHoles
	# The method GetHoles is actually a property, but must be used as a method to correctly pass the arguments
	def GetHoles(self, sHoleName='*'):
		"Returns the document's collection of holes that match the supplied criteria. The hole name may contain wildcards"
		return self._ApplyTypes_(37, 2, (9, 32), ((8, 49),), 'GetHoles', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}',sHoleName
			)

	# Result is of type IMGCPCBImages
	# The method GetImages is actually a property, but must be used as a method to correctly pass the arguments
	def GetImages(self, eSelectOnly=0):
		"Returns the document's collection of images."
		ret = self._oleobj_.InvokeTypes(380, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetImages', '{E35CE437-C28B-4021-85A6-EEB20664B18B}')
		return ret

	# Result is of type IMGCPCBInsertionOutlines
	# The method GetInsertionOutlines is actually a property, but must be used as a method to correctly pass the arguments
	def GetInsertionOutlines(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's insertion outline collection."
		ret = self._oleobj_.InvokeTypes(235, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetInsertionOutlines', '{B9781283-DCA6-44C7-975D-DB76652A3391}')
		return ret

	# Result is of type IMGCPCBLayerObjects
	# The method GetLayerStack is actually a property, but must be used as a method to correctly pass the arguments
	def GetLayerStack(self, bIncludeInsulationLayer=True):
		'Returns the layer stackup as a collection of layer objects.'
		ret = self._oleobj_.InvokeTypes(157, LCID, 2, (9, 0), ((11, 49),),bIncludeInsulationLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetLayerStack', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')
		return ret

	def GetLayerStackupLayerType(self):
		'Get the Layer type values for layer stackup from JobPrefDB'
		return self._ApplyTypes_(328, 1, (12, 0), (), 'GetLayerStackupLayerType', None,)

	# Result is of type IMGCPCBMatchLengthGroups
	# The method GetMatchLengthGroups is actually a property, but must be used as a method to correctly pass the arguments
	def GetMatchLengthGroups(self, eMatchType=1):
		'Returns the collection of match length groups.(deprecated)'
		ret = self._oleobj_.InvokeTypes(225, LCID, 2, (9, 0), ((3, 49),),eMatchType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMatchLengthGroups', '{62A90059-38AB-4024-8A7C-0829DE185371}')
		return ret

	# Result is of type IMGCPCBMaterials
	# The method GetMaterials is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaterials(self, eMaterialType=-1):
		'Find all the material objects.'
		ret = self._oleobj_.InvokeTypes(305, LCID, 2, (9, 0), ((3, 49),),eMaterialType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMaterials', '{427B888F-9F9E-4408-B28C-8ECD4A5B696C}')
		return ret

	# Result is of type IMGCPCBMetalizationAreas
	# The method GetMetalizationAreas is actually a property, but must be used as a method to correctly pass the arguments
	def GetMetalizationAreas(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's collection metalization areas"
		ret = self._oleobj_.InvokeTypes(198, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetMetalizationAreas', '{F48923B1-F092-42C5-8108-1256A55CDB86}')
		return ret

	# Result is of type IMGCPCBMountingHoles
	# The method GetMountingHoles is actually a property, but must be used as a method to correctly pass the arguments
	def GetMountingHoles(self, eSelectOnly=0):
		"Returns the Document's mounting hole collection."
		ret = self._oleobj_.InvokeTypes(45, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMountingHoles', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')
		return ret

	# Result is of type IMGCPCBMultiBoardOutlines
	# The method GetMultiBoardOutlines is actually a property, but must be used as a method to correctly pass the arguments
	def GetMultiBoardOutlines(self, eSelectOnly=0, BoardOutlineName='*'):
		'Returns the board outlines(multi board outlines) associated with rigid/flex design.  '
		return self._ApplyTypes_(357, 2, (9, 32), ((3, 49), (8, 49)), 'GetMultiBoardOutlines', '{D69EB1A8-F5FC-4897-AD3C-676C50CF60AC}',eSelectOnly
			, BoardOutlineName)

	# Result is of type IMGCPCBMultiVias
	# The method GetMultiVias is actually a property, but must be used as a method to correctly pass the arguments
	def GetMultiVias(self, eSelectOnly=0):
		"Returns the document's multi via collection."
		ret = self._oleobj_.InvokeTypes(166, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMultiVias', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}')
		return ret

	# Result is of type IMGCPCBNetClasses
	# The method GetNetClasses is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetClasses(self, sNetClassName='*'):
		"Returns the Document's collection of netsclasses that match the supplied criteria. The refDes may contain the '*' and '?' wildcards."
		return self._ApplyTypes_(24, 2, (9, 32), ((8, 49),), 'GetNetClasses', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED11}',sNetClassName
			)

	# Result is of type IMGCPCBNetGroups
	# The method GetNetGroups is actually a property, but must be used as a method to correctly pass the arguments
	def GetNetGroups(self, eSelectOnly=0, eGroupType=-1, bRootGroupsOnly=True):
		"Returns the Document's collection of net groups that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(294, LCID, 2, (9, 0), ((3, 49), (3, 49), (11, 49)),eSelectOnly
			, eGroupType, bRootGroupsOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetNetGroups', '{DF8FC11D-AFBD-41A9-AF29-8821B9164732}')
		return ret

	def GetNetclassNameForNet(self, sNetName=defaultNamedNotOptArg):
		'Return the Netclass name for a given Net name.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(324, LCID, 1, (8, 0), ((8, 1),),sNetName
			)

	# Result is of type IMGCPCBNets
	# The method GetNets is actually a property, but must be used as a method to correctly pass the arguments
	def GetNets(self, eSelectOnly=0, bIncludeNetsForUnconnectedPins=False, sNetName='*'):
		"Returns the Document's collection of nets that match the supplied criteria. The refDes may contain the '*' and '?' wildcards."
		return self._ApplyTypes_(23, 2, (9, 32), ((3, 49), (11, 49), (8, 49)), 'GetNets', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}',eSelectOnly
			, bIncludeNetsForUnconnectedPins, sNetName)

	def GetObjectClass(self, vObject=defaultNamedNotOptArg):
		"Given an object or unique id, the object's class will be returned."
		return self._oleobj_.InvokeTypes(263, LCID, 1, (3, 0), ((12, 1),),vObject
			)

	def GetObjectType(self, vObject=defaultNamedNotOptArg):
		"Given an object or unique id, the object's type will be returned."
		return self._oleobj_.InvokeTypes(264, LCID, 1, (3, 0), ((12, 1),),vObject
			)

	# Result is of type IMGCPCBObstructs
	# The method GetObstructs is actually a property, but must be used as a method to correctly pass the arguments
	def GetObstructs(self, eSelectType=-1, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's obstruct collection."
		ret = self._oleobj_.InvokeTypes(41, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetObstructs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')
		return ret

	# The method GetPadstackNames is actually a property, but must be used as a method to correctly pass the arguments
	def GetPadstackNames(self, SelectPadstackType=-1, SelectPinClassType=-1, NameRegularExpression='*', FromCentralLib=False):
		'Returns a filtered array of padstack names. PinClassType is only used when EPcbPadstackObjectPin.'
		return self._ApplyTypes_(227, 2, (12, 32), ((3, 49), (3, 49), (8, 49), (11, 49)), 'GetPadstackNames', None,SelectPadstackType
			, SelectPinClassType, NameRegularExpression, FromCentralLib)

	# Result is of type IMGCPCBPadstackObjects
	# The method GetPadstackObjects is actually a property, but must be used as a method to correctly pass the arguments
	def GetPadstackObjects(self, eSelectType=-1, eSelectOnly=0):
		'Get the collection of padstack objects in the document'
		ret = self._oleobj_.InvokeTypes(82, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectType
			, eSelectOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetPadstackObjects', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')
		return ret

	# Result is of type IMGCPCBPadstacks
	# The method GetPadstacks is actually a property, but must be used as a method to correctly pass the arguments
	def GetPadstacks(self, sPadstackName='*'):
		"Returns the document's collection of padstacks the match the supplied criteria. The padstack name may contain wildcards"
		return self._ApplyTypes_(36, 2, (9, 32), ((8, 49),), 'GetPadstacks', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}',sPadstackName
			)

	# Result is of type IMGCPCBPanels
	# The method GetPanels is actually a property, but must be used as a method to correctly pass the arguments
	def GetPanels(self, eSelectOnly=0):
		'Returns the collection of Panels associated with this document'
		ret = self._oleobj_.InvokeTypes(184, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPanels', '{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')
		return ret

	# The method GetPartNames is actually a property, but must be used as a method to correctly pass the arguments
	def GetPartNames(self, NameRegularExpression='*', bReservedForFutureUse=False):
		'Returns a filtered array of part names from the library.'
		return self._ApplyTypes_(347, 2, (12, 32), ((8, 49), (11, 49)), 'GetPartNames', None,NameRegularExpression
			, bReservedForFutureUse)

	# Result is of type IMGCPCBParts
	# The method GetParts is actually a property, but must be used as a method to correctly pass the arguments
	def GetParts(self, sPartName='*'):
		"Returns the Document's collection of parts with matching criteria."
		return self._ApplyTypes_(25, 2, (9, 32), ((8, 49),), 'GetParts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED20}',sPartName
			)

	# Result is of type IMGCPCBPins
	# The method GetPins is actually a property, but must be used as a method to correctly pass the arguments
	def GetPins(self, eSelectOnly=0):
		"Returns the Document's collection of pins."
		ret = self._oleobj_.InvokeTypes(26, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPins', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')
		return ret

	# Result is of type IMGCPCBPlacementObstructs
	# The method GetPlacementObstructs is actually a property, but must be used as a method to correctly pass the arguments
	def GetPlacementObstructs(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's placement obstruct collection."
		ret = self._oleobj_.InvokeTypes(40, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetPlacementObstructs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}')
		return ret

	# Result is of type IMGCPCBPlacementOutlines
	# The method GetPlacementOutlines is actually a property, but must be used as a method to correctly pass the arguments
	def GetPlacementOutlines(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's placement outline collection."
		ret = self._oleobj_.InvokeTypes(48, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetPlacementOutlines', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}')
		return ret

	# Result is of type IMGCPCBPlaneAssignments
	# The method GetPlaneAssignments is actually a property, but must be used as a method to correctly pass the arguments
	def GetPlaneAssignments(self, nLayerOnly=0):
		'Returns the collection of plane assignments.'
		ret = self._oleobj_.InvokeTypes(203, LCID, 2, (9, 0), ((3, 49),),nLayerOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPlaneAssignments', '{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}')
		return ret

	# Result is of type IMGCPCBPlaneEditingSketches
	# The method GetPlaneEditingSketches is actually a property, but must be used as a method to correctly pass the arguments
	def GetPlaneEditingSketches(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's plane editing sketch collection."
		ret = self._oleobj_.InvokeTypes(179, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetPlaneEditingSketches', '{6C221751-C228-4D62-9393-F0E4A5169EFB}')
		return ret

	# Result is of type IMGCPCBPlaneShapes
	# The method GetPlaneShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetPlaneShapes(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's plane shape collection."
		ret = self._oleobj_.InvokeTypes(47, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetPlaneShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')
		return ret

	# Result is of type IMGCPCBReservedAreas
	# The method GetReservedAreas is actually a property, but must be used as a method to correctly pass the arguments
	def GetReservedAreas(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's reserved area collection."
		ret = self._oleobj_.InvokeTypes(310, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetReservedAreas', '{9C207921-4551-473E-94BC-1C7EDB8B5A1B}')
		return ret

	# Result is of type IMGCPCBResistorShapes
	# The method GetResistorShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetResistorShapes(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's resistor shape collection."
		ret = self._oleobj_.InvokeTypes(265, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetResistorShapes', '{DC0CD70D-0F4E-4DB7-9D0B-6AD595D27C1F}')
		return ret

	# The method GetReuseAreaBlocks is actually a property, but must be used as a method to correctly pass the arguments
	def GetReuseAreaBlocks(self, eSelectionType=0):
		'Returns the names of Reuse Area(Managed Block area) blocks.'
		return self._ApplyTypes_(321, 2, (12, 0), ((3, 49),), 'GetReuseAreaBlocks', None,eSelectionType
			)

	# Result is of type IMGCPCBReuseAreas
	# The method GetReuseAreas is actually a property, but must be used as a method to correctly pass the arguments
	def GetReuseAreas(self, eSelectOnly=0, ePublishableState=0, eReuseAreaState=0):
		"Returns the document's Reuse Area(Managed Block area) collection."
		ret = self._oleobj_.InvokeTypes(320, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectOnly
			, ePublishableState, eReuseAreaState)
		if ret is not None:
			ret = Dispatch(ret, 'GetReuseAreas', '{3575F847-F278-44C6-BBC8-F79FA9E37CDB}')
		return ret

	# The method GetReuseBlockNames is actually a property, but must be used as a method to correctly pass the arguments
	def GetReuseBlockNames(self, includeFlattenedBlocks=False):
		'Return an array of Managed Block names.  if IncludeFlattened blocks i'
		return self._ApplyTypes_(364, 2, (12, 0), ((11, 49),), 'GetReuseBlockNames', None,includeFlattenedBlocks
			)

	# Result is of type IMGCPCBRooms
	# The method GetRooms is actually a property, but must be used as a method to correctly pass the arguments
	def GetRooms(self, eSelectOnly=0, eLayerOnly=0):
		"Returns the document's room collection."
		ret = self._oleobj_.InvokeTypes(46, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, eLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetRooms', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}')
		return ret

	# Result is of type IMGCPCBRouteFences
	# The method GetRouteFences is actually a property, but must be used as a method to correctly pass the arguments
	def GetRouteFences(self, eType=-1, eSelectOnly=0):
		"Returns the document's collection of route fences."
		ret = self._oleobj_.InvokeTypes(162, LCID, 2, (9, 0), ((3, 49), (3, 49)),eType
			, eSelectOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetRouteFences', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9C}')
		return ret

	# Result is of type IMGCPCBRuleAreas
	# The method GetRuleAreas is actually a property, but must be used as a method to correctly pass the arguments
	def GetRuleAreas(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's rule area collection."
		ret = self._oleobj_.InvokeTypes(43, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetRuleAreas', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1B}')
		return ret

	# Result is of type IMGCPCBSandboxes
	# The method GetSandboxes is actually a property, but must be used as a method to correctly pass the arguments
	def GetSandboxes(self, sSandboxName='*', eSelectOnly=0):
		"Returns the document's sandbox collection."
		return self._ApplyTypes_(246, 2, (9, 32), ((8, 49), (3, 49)), 'GetSandboxes', '{BD848A19-1634-4C73-BADF-459C5B94BA4C}',sSandboxName
			, eSelectOnly)

	# Result is of type IMGCPCBShearingHoles
	# The method GetShearingHoles is actually a property, but must be used as a method to correctly pass the arguments
	def GetShearingHoles(self, SelectOnly=0):
		"Returns the document's shearing hole collection."
		ret = self._oleobj_.InvokeTypes(131, LCID, 2, (9, 0), ((3, 49),),SelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetShearingHoles', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8E}')
		return ret

	# Result is of type IMGCPCBSheets
	# The method GetSheets is actually a property, but must be used as a method to correctly pass the arguments
	def GetSheets(self, sheetName='*'):
		'Returns the collection for sheets associated with the current drawing editor design. (VALID ONLY IN DRAWING EDITOR)'
		return self._ApplyTypes_(218, 2, (9, 32), ((8, 49),), 'GetSheets', '{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}',sheetName
			)

	# Result is of type IMGCPCBNetGroups
	# The method GetShieldingGroups is actually a property, but must be used as a method to correctly pass the arguments
	def GetShieldingGroups(self, ShieldingGroupName='*'):
		"Returns the document's shielding net Group collection.('Shielding Rules' returns empty collection if topology planner license is not acquired."
		return self._ApplyTypes_(342, 2, (9, 32), ((8, 49),), 'GetShieldingGroups', '{DF8FC11D-AFBD-41A9-AF29-8821B9164732}',ShieldingGroupName
			)

	# Result is of type IMGCPCBSketchPlanVias
	# The method GetSketchPlanVias is actually a property, but must be used as a method to correctly pass the arguments
	def GetSketchPlanVias(self, eSelectOnly=0):
		"Returns the document's sketch plan via collection."
		ret = self._oleobj_.InvokeTypes(389, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetSketchPlanVias', '{DFE5ADA4-8560-4DCB-B850-D84BBEF0562B}')
		return ret

	# Result is of type IMGCPCBSketchPlans
	# The method GetSketchPlans is actually a property, but must be used as a method to correctly pass the arguments
	def GetSketchPlans(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's sketch pathcollection."
		ret = self._oleobj_.InvokeTypes(376, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetSketchPlans', '{2F037114-93ED-4C02-B835-6EC2ECD32E3C}')
		return ret

	# Result is of type IMGCPCBTargetAreas
	# The method GetTargetAreas is actually a property, but must be used as a method to correctly pass the arguments
	def GetTargetAreas(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's target area collection."
		ret = self._oleobj_.InvokeTypes(168, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetTargetAreas', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA2}')
		return ret

	# Result is of type IMGCPCBTeardrops
	# The method GetTeardrops is actually a property, but must be used as a method to correctly pass the arguments
	def GetTeardrops(self, eSelectOnly=0, nLayerOnly=0):
		'Get the collection of teardrops in the document.'
		ret = self._oleobj_.InvokeTypes(81, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetTeardrops', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')
		return ret

	# Result is of type IMGCPCBTieLegs
	# The method GetTieLegs is actually a property, but must be used as a method to correctly pass the arguments
	def GetTieLegs(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the document's tie leg collection."
		ret = self._oleobj_.InvokeTypes(154, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetTieLegs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')
		return ret

	# Result is of type IMGCPCBTiebars
	# The method GetTiebars is actually a property, but must be used as a method to correctly pass the arguments
	def GetTiebars(self, eSelectOnly=0):
		"Returns the Document's collection of tiebars."
		ret = self._oleobj_.InvokeTypes(415, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetTiebars', '{0B2A45D4-326B-493F-A476-16B04123A8CB}')
		return ret

	# Result is of type IMGCPCBToolingHoles
	# The method GetToolingHoles is actually a property, but must be used as a method to correctly pass the arguments
	def GetToolingHoles(self, SelectOnly=0):
		"Returns the document's tooling hole collection."
		ret = self._oleobj_.InvokeTypes(129, LCID, 2, (9, 0), ((3, 49),),SelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetToolingHoles', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED86}')
		return ret

	# Result is of type IMGCPCBTracedrops
	# The method GetTracedrops is actually a property, but must be used as a method to correctly pass the arguments
	def GetTracedrops(self, eSelectOnly=0, nLayerOnly=0):
		'Get the collection of tracedrops in the document.'
		ret = self._oleobj_.InvokeTypes(325, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetTracedrops', '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')
		return ret

	# Result is of type IMGCPCBTraces
	# The method GetTraces is actually a property, but must be used as a method to correctly pass the arguments
	def GetTraces(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the Document's collection of traces."
		ret = self._oleobj_.InvokeTypes(27, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetTraces', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')
		return ret

	# Result is of type IMGCPCBUserLayerGfxs
	# The method GetUserLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerGfxs(self, eSelectOnly=0, sLayerOnly='*', bIncludeComponentGfx=True):
		"Returns the Document's collection of user layer graphics that match the supplied criteria."
		return self._ApplyTypes_(70, 2, (9, 32), ((3, 49), (8, 49), (11, 49)), 'GetUserLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}',eSelectOnly
			, sLayerOnly, bIncludeComponentGfx)

	# Result is of type IMGCPCBUserLayerTexts
	# The method GetUserLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerTexts(self, eSelectOnly=0, sLayerOnly='*', bIncludeComponentText=True):
		"Returns the Document's collection of user texts that match the supplied criteria.  LayerOnly can be a regular expression."
		return self._ApplyTypes_(73, 2, (9, 32), ((3, 49), (8, 49), (11, 49)), 'GetUserLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}',eSelectOnly
			, sLayerOnly, bIncludeComponentText)

	# Result is of type IMGCPCBVias
	# The method GetVias is actually a property, but must be used as a method to correctly pass the arguments
	def GetVias(self, eSelectOnly=0):
		"Returns the Document's collection of vias."
		ret = self._oleobj_.InvokeTypes(28, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetVias', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')
		return ret

	# Result is of type IMGCPCBViews
	# The method GetViews is actually a property, but must be used as a method to correctly pass the arguments
	def GetViews(self, eViewSelect=0, viewName='*'):
		'Returns the collection of views associated with the design(eViewSelect unused parameter). (Deprecated). Use ViewsEx instead.'
		return self._ApplyTypes_(192, 2, (9, 32), ((3, 49), (8, 49)), 'GetViews', '{05700A92-D895-44BB-96C1-9D5BCCAE050F}',eViewSelect
			, viewName)

	# Result is of type IMGCPCBViews
	# The method GetViewsEx is actually a property, but must be used as a method to correctly pass the arguments
	def GetViewsEx(self, eViewSelect=0, viewName='*'):
		'Returns the collection of views associated with the design(eViewSelect unused parameter)'
		return self._ApplyTypes_(280, 2, (9, 32), ((3, 49), (8, 49)), 'GetViewsEx', '{05700A92-D895-44BB-96C1-9D5BCCAE050F}',eViewSelect
			, viewName)

	# Result is of type IMGCPCBWireBondGuides
	# The method GetWireBondGuides is actually a property, but must be used as a method to correctly pass the arguments
	def GetWireBondGuides(self, eSelectOnly=0):
		"Returns the Document's collection of bondwire guides."
		ret = self._oleobj_.InvokeTypes(345, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetWireBondGuides', '{405FFFFA-4B23-4032-AC7F-4170EE726100}')
		return ret

	def ImportAscii(self, sSourceDir=defaultNamedNotOptArg, eHKPType=defaultNamedNotOptArg, sLogFile=''):
		'Imports ASCII file(s) from the specified directory.'
		return self._ApplyTypes_(110, 1, (24, 32), ((8, 1), (3, 1), (8, 49)), 'ImportAscii', None,sSourceDir
			, eHKPType, sLogFile)

	def ImportComplexViaUpdates(self):
		'Imports any complex via updates.'
		return self._oleobj_.InvokeTypes(405, LCID, 1, (24, 0), (),)

	def InterTool(self, nApplication=defaultNamedNotOptArg, nNotifyCode=defaultNamedNotOptArg, vInfo=defaultNamedNotOptArg):
		'Internal use only.'
		return self._ApplyTypes_(152, 1, (12, 0), ((3, 1), (3, 1), (12, 1)), 'InterTool', None,nApplication
			, nNotifyCode, vInfo)

	def InterruptXtremeSession(self, nReason=defaultNamedNotOptArg, sMessage=defaultNamedNotOptArg, bBegin=defaultNamedNotOptArg):
		'Interrupts an Xtreme session.  Internal use only.'
		return self._oleobj_.InvokeTypes(149, LCID, 1, (11, 0), ((3, 1), (8, 1), (11, 1)),nReason
			, sMessage, bBegin)

	def IsModifiable(self, pObj=defaultNamedNotOptArg):
		'Checks if passed object is modifiable.'
		return self._oleobj_.InvokeTypes(365, LCID, 1, (11, 0), ((9, 1),),pObj
			)

	# The method IsObjectLoaded is actually a property, but must be used as a method to correctly pass the arguments
	def IsObjectLoaded(self, ObjectClass=defaultNamedNotOptArg):
		'Returns true if object of this type has been loaded.'
		return self._oleobj_.InvokeTypes(399, LCID, 2, (11, 0), ((3, 1),),ObjectClass
			)

	def IsSaved(self):
		'Returns whether or not the Document has been saved.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(91, LCID, 1, (11, 0), (),)

	def IsVariantMode(self):
		'Returns true if product is currently in variant mode.'
		return self._oleobj_.InvokeTypes(247, LCID, 1, (11, 0), (),)

	def LoadPhysicalReuseLibraryCircuit(self, pPath=defaultNamedNotOptArg):
		'Load physical reuse library circuit.'
		return self._oleobj_.InvokeTypes(413, LCID, 1, (24, 0), ((8, 1),),pPath
			)

	def LocateCheckpoint(self, Checkpoint=defaultNamedNotOptArg):
		'Returns the location of the checkpoint relative to the current database state.'
		return self._oleobj_.InvokeTypes(290, LCID, 1, (3, 0), ((9, 1),),Checkpoint
			)

	def LogAnalyticsEvent(self, sEventName=defaultNamedNotOptArg, eventProperties=defaultNamedNotOptArg):
		'Internal use only. Logs software analytics events with or without event property pairs.'
		return self._oleobj_.InvokeTypes(407, LCID, 1, (24, 0), ((8, 1), (16396, 1)),sEventName
			, eventProperties)

	# Result is of type IMGCPCBComponent
	def NewComponent(self, sCellname=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, ePackageGroup=defaultNamedNotOptArg, eMountType=defaultNamedNotOptArg
			, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg, sRefDes='', sPartName=''
			, nLayer=1, bMirror=False, eFixType=0, eUnit=0, eAngleUnit=0):
		'Add a new (empty) component to the design. (Beta)'
		return self._ApplyTypes_(146, 1, (9, 32), ((8, 1), (3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (5, 1), (8, 49), (8, 49), (3, 49), (11, 49), (3, 49), (3, 49), (3, 49)), 'NewComponent', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}',sCellname
			, eType, ePackageGroup, eMountType, dX, dY
			, dRotation, sRefDes, sPartName, nLayer, bMirror
			, eFixType, eUnit, eAngleUnit)

	# Result is of type IMGCPCBNet
	def NewNet(self, sNetName=defaultNamedNotOptArg, pNetClass=defaultNamedNotOptArg):
		'Add a new (empty) net to the design.'
		ret = self._oleobj_.InvokeTypes(147, LCID, 1, (9, 0), ((8, 1), (9, 1)),sNetName
			, pNetClass)
		if ret is not None:
			ret = Dispatch(ret, 'NewNet', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')
		return ret

	# Result is of type IMGCPCBPadstack
	def NewPadstack(self, sPadstackName=defaultNamedNotOptArg, eType=defaultNamedNotOptArg):
		'Add a new (empty) padstack object to the design. (Beta)'
		ret = self._oleobj_.InvokeTypes(145, LCID, 1, (9, 0), ((8, 1), (3, 1)),sPadstackName
			, eType)
		if ret is not None:
			ret = Dispatch(ret, 'NewPadstack', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')
		return ret

	# Result is of type IMGCPCBPin
	def NewPin(self, sPinName=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg):
		'Creates a new unplaced pin for the cell.'
		ret = self._oleobj_.InvokeTypes(236, LCID, 1, (9, 0), ((8, 1), (12, 1)),sPinName
			, pPadstack)
		if ret is not None:
			ret = Dispatch(ret, 'NewPin', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')
		return ret

	# Result is of type IMGCPCBRoutePass
	def NewRoutePass(self):
		'Creates and returns a single Route Pass object.'
		ret = self._oleobj_.InvokeTypes(107, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewRoutePass', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7F}')
		return ret

	# The method NextRefDes is actually a property, but must be used as a method to correctly pass the arguments
	def NextRefDes(self, prefix=defaultNamedNotOptArg):
		'Returns the next refdes for the specified prefix'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(250, LCID, 2, (8, 0), ((8, 1),),prefix
			)

	# Result is of type IMGCPCBObjects
	def ObjectsInBetween(self, pObject1=defaultNamedNotOptArg, pObject2=defaultNamedNotOptArg):
		'Get the list of objects connected between two objects. e.g. all the things in between two pins. Will return an empty collection if there is no connection between these two things.'
		ret = self._oleobj_.InvokeTypes(119, LCID, 1, (9, 0), ((9, 1), (9, 1)),pObject1
			, pObject2)
		if ret is not None:
			ret = Dispatch(ret, 'ObjectsInBetween', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')
		return ret

	# The method OriginX is actually a property, but must be used as a method to correctly pass the arguments
	def OriginX(self, eType=defaultNamedNotOptArg, eUnit=0):
		"Gets or sets the Document's X origin for the specified Origin type."
		return self._oleobj_.InvokeTypes(8, LCID, 2, (5, 0), ((3, 1), (3, 49)),eType
			, eUnit)

	# The method OriginY is actually a property, but must be used as a method to correctly pass the arguments
	def OriginY(self, eType=defaultNamedNotOptArg, eUnit=0):
		"Gets or sets the Document's Y origin for the specified Origin type."
		return self._oleobj_.InvokeTypes(9, LCID, 2, (5, 0), ((3, 1), (3, 49)),eType
			, eUnit)

	# Result is of type IMGCPCBObjects
	def Pick(self, dXMin=defaultNamedNotOptArg, dYMin=defaultNamedNotOptArg, dXMax=defaultNamedNotOptArg, dYMax=defaultNamedNotOptArg
			, eObjectClass=-1, pLayerObjects=0, bDisplayedObjectsOnly=False, bIncludeComponentData=True, eUnit=0):
		"Pick objects in a region - used to locate objects in a specified rectangular region of the board. The ObjectClass lets different types of objects be returned, the values may be OR'ed together."
		ret = self._oleobj_.InvokeTypes(76, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (3, 49), (9, 49), (11, 49), (11, 49), (3, 49)),dXMin
			, dYMin, dXMax, dYMax, eObjectClass, pLayerObjects
			, bDisplayedObjectsOnly, bIncludeComponentData, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'Pick', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')
		return ret

	# Result is of type IMGCPCBComponents
	def PickComponents(self, dXMin=defaultNamedNotOptArg, dYMin=defaultNamedNotOptArg, dXMax=defaultNamedNotOptArg, dYMax=defaultNamedNotOptArg
			, eCompType=-1, eCelltype=-1, nLayerOnly=0, bDisplayedObjectsOnly=False, eUnit=0):
		'Pick component in a region on a specified layer (0=all layers).'
		ret = self._oleobj_.InvokeTypes(121, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (3, 49), (3, 49), (3, 49), (11, 49), (3, 49)),dXMin
			, dYMin, dXMax, dYMax, eCompType, eCelltype
			, nLayerOnly, bDisplayedObjectsOnly, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PickComponents', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')
		return ret

	def PickScheme(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, Layer=defaultNamedNotOptArg, ToLayer=-1
			, Unit=0):
		'Returns the scheme to use at the specified location.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(223, LCID, 1, (8, 0), ((5, 1), (5, 1), (3, 1), (3, 49), (3, 49)),x
			, y, Layer, ToLayer, Unit)

	# The method PlaceLayerEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def PlaceLayerEnabled(self, eLayer=defaultNamedNotOptArg):
		'Is layer enabled for placement? (Deprecated)'
		return self._oleobj_.InvokeTypes(74, LCID, 2, (11, 0), ((3, 1),),eLayer
			)

	def Print(self):
		'Print the Document.'
		return self._oleobj_.InvokeTypes(58, LCID, 1, (11, 0), (),)

	def PutAddViaUserScheme(self, filename=defaultNamedNotOptArg):
		'Adds a user scheme to the Add Via schemes list.'
		return self._oleobj_.InvokeTypes(391, LCID, 1, (24, 0), ((8, 1),),filename
			)

	# Result is of type IMGCPCBDimension
	def PutAngularDimension(self, pFromObj=defaultNamedNotOptArg, dFromX1=defaultNamedNotOptArg, dFromY1=defaultNamedNotOptArg, dFromX2=defaultNamedNotOptArg
			, dFromY2=defaultNamedNotOptArg, pToObj=defaultNamedNotOptArg, dToX1=defaultNamedNotOptArg, dToY1=defaultNamedNotOptArg, dToX2=defaultNamedNotOptArg
			, dToY2=defaultNamedNotOptArg, dOffset=0.0, pLayerObject=0, pScheme=0, eUnit=0):
		'Places an angular dimension between two linear elements.'
		ret = self._oleobj_.InvokeTypes(105, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (5, 1), (5, 1), (9, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 49), (9, 49), (9, 49), (3, 49)),pFromObj
			, dFromX1, dFromY1, dFromX2, dFromY2, pToObj
			, dToX1, dToY1, dToX2, dToY2, dOffset
			, pLayerObject, pScheme, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutAngularDimension', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
		return ret

	# Result is of type IMGCPCBFabricationLayerText
	def PutAssemblyPartNumber(self, dPositionX=defaultNamedNotOptArg, dPositionY=defaultNamedNotOptArg, eUnit=0):
		'Places an Assembly part number at the specified location.'
		ret = self._oleobj_.InvokeTypes(231, LCID, 1, (9, 0), ((5, 1), (5, 1), (3, 49)),dPositionX
			, dPositionY, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutAssemblyPartNumber', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	# Result is of type IMGCPCBFabricationLayerText
	def PutAssemblyRefDes(self, dPositionX=defaultNamedNotOptArg, dPositionY=defaultNamedNotOptArg, eUnit=0):
		'Places an Assembly RefDes at the specified location.'
		ret = self._oleobj_.InvokeTypes(229, LCID, 1, (9, 0), ((5, 1), (5, 1), (3, 49)),dPositionX
			, dPositionY, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutAssemblyRefDes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	# Result is of type IMGCPCBBendAreas
	def PutBendArea(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg
			, dBendRadius=defaultNamedNotOptArg, BoardOutlineName='', dBendAngle=90.0, BendOrigin=0, dAreaTolerance=0.0
			, dLeftSlideDistance=0.0, dRightSlideDistance=0.0, eUnit=0, eAngleUnit=0):
		'Add one or more bend areas.'
		return self._ApplyTypes_(350, 1, (9, 32), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (8, 49), (5, 49), (3, 49), (5, 49), (5, 49), (5, 49), (3, 49), (3, 49)), 'PutBendArea', '{6B76C06F-2E50-491B-B845-D70A57247DB0}',X1
			, Y1, X2, Y2, dBendRadius, BoardOutlineName
			, dBendAngle, BendOrigin, dAreaTolerance, dLeftSlideDistance, dRightSlideDistance
			, eUnit, eAngleUnit)

	# Result is of type IMGCPCBBoard
	def PutBoard(self, sOriginalDesignName=defaultNamedNotOptArg, dXLoc=defaultNamedNotOptArg, dYLoc=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg
			, bFlip=False, eAttachPt=0, eBrdContent=-1, eUnit=0, eAngleUnit=0):
		'Add a new board to panel.'
		ret = self._oleobj_.InvokeTypes(136, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (5, 1), (11, 49), (3, 49), (3, 49), (3, 49), (3, 49)),sOriginalDesignName
			, dXLoc, dYLoc, dRotation, bFlip, eAttachPt
			, eBrdContent, eUnit, eAngleUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutBoard', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')
		return ret

	# Result is of type IMGCPCBBoards
	def PutBoardArray(self, sOriginalDesignName=defaultNamedNotOptArg, dXLoc=defaultNamedNotOptArg, dYLoc=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg
			, bFlip=False, eAttachPt=0, eBrdContent=-1, dScale=1.0, bCenter=False
			, bDimensionDesignWithInstanceOrigin=False, nArrayRows=0, nArrayCols=0, dRowClearance=0.0, dColClearance=0.0
			, eUnit=0, eAngleUnit=0):
		'Add a board array'
		ret = self._oleobj_.InvokeTypes(190, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (5, 1), (11, 49), (3, 49), (3, 49), (5, 49), (11, 49), (11, 49), (3, 49), (3, 49), (5, 49), (5, 49), (3, 49), (3, 49)),sOriginalDesignName
			, dXLoc, dYLoc, dRotation, bFlip, eAttachPt
			, eBrdContent, dScale, bCenter, bDimensionDesignWithInstanceOrigin, nArrayRows
			, nArrayCols, dRowClearance, dColClearance, eUnit, eAngleUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutBoardArray', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')
		return ret

	# Result is of type IMGCPCBBoard
	def PutBoardOnSheet(self, sOriginalDesignName=defaultNamedNotOptArg, dXLoc=defaultNamedNotOptArg, dYLoc=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg
			, bFlip=False, eAttachPt=0, eBrdContent=-1, dScale=1.0, bCenter=False
			, bDimensionDesignWithInstanceOrigin=False, eUnit=0, eAngleUnit=0):
		'Add a board on sheet view'
		ret = self._oleobj_.InvokeTypes(188, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (5, 1), (11, 49), (3, 49), (3, 49), (5, 49), (11, 49), (11, 49), (3, 49), (3, 49)),sOriginalDesignName
			, dXLoc, dYLoc, dRotation, bFlip, eAttachPt
			, eBrdContent, dScale, bCenter, bDimensionDesignWithInstanceOrigin, eUnit
			, eAngleUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutBoardOnSheet', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')
		return ret

	# Result is of type IMGCPCBBoardOutline
	def PutBoardOutline(self, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, eUnit=0):
		'Adds or replaces the board outline.'
		ret = self._oleobj_.InvokeTypes(63, LCID, 1, (9, 0), ((3, 1), (16396, 1), (5, 1), (3, 49)),nPnts
			, pSafeArrayOfPnts, dGraphicsWidth, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutBoardOutline', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED33}')
		return ret

	# Result is of type IMGCPCBBondPad
	def PutBondPad(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, Padstack=defaultNamedNotOptArg, Net=defaultNamedNotOptArg
			, Side=1, FixLock=0, Unit=0):
		'Puts a bond pad on the board.'
		ret = self._oleobj_.InvokeTypes(254, LCID, 1, (9, 0), ((5, 1), (5, 1), (9, 1), (9, 1), (3, 49), (3, 49), (3, 49)),x
			, y, Padstack, Net, Side, FixLock
			, Unit)
		if ret is not None:
			ret = Dispatch(ret, 'PutBondPad', '{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')
		return ret

	# Result is of type IMGCPCBBondPad
	def PutBondPadEx(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg, Padstack=defaultNamedNotOptArg
			, Net=defaultNamedNotOptArg, Side=1, FixLock=0, Unit=0, eAngleUnit=0):
		'Puts a bond pad on the board with given rotation.'
		ret = self._oleobj_.InvokeTypes(340, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (9, 1), (9, 1), (3, 49), (3, 49), (3, 49), (3, 49)),x
			, y, dRotation, Padstack, Net, Side
			, FixLock, Unit, eAngleUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutBondPadEx', '{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')
		return ret

	def PutBondWire(self, FromObject=defaultNamedNotOptArg, XFrom=defaultNamedNotOptArg, YFrom=defaultNamedNotOptArg, ToObject=defaultNamedNotOptArg
			, XTo=defaultNamedNotOptArg, YTo=defaultNamedNotOptArg, Unit=0):
		'Puts a bond wire between the two objects.'
		ret = self._oleobj_.InvokeTypes(253, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (9, 1), (5, 1), (5, 1), (3, 49)),FromObject
			, XFrom, YFrom, ToObject, XTo, YTo
			, Unit)
		if ret is not None:
			ret = Dispatch(ret, 'PutBondWire', None)
		return ret

	# Result is of type IMGCPCBBusPath
	def PutBusPath(self, nLayer=defaultNamedNotOptArg, pConstraintClass=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg
			, busPathCreationData=defaultNamedNotOptArg, Packed=False, eUnit=0):
		'Put bus path using contstraints class, points array and busPathCreationData'
		ret = self._oleobj_.InvokeTypes(285, LCID, 1, (9, 0), ((3, 1), (9, 1), (3, 1), (16396, 1), (12, 1), (11, 49), (3, 49)),nLayer
			, pConstraintClass, nPnts, safeArrayOfPnts, busPathCreationData, Packed
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutBusPath', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}')
		return ret

	# Result is of type IMGCPCBCavity
	def PutCavity(self, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, StartLayer=defaultNamedNotOptArg, EndLayer=defaultNamedNotOptArg
			, eAllowMetalOnStartLayer=0, eAllowMetalOnEndLayer=0, bMilled=False, pHole=0, eUnit=0):
		'Adds a Cavity to the document.'
		ret = self._oleobj_.InvokeTypes(259, LCID, 1, (9, 0), ((3, 1), (16396, 1), (3, 1), (3, 1), (3, 49), (3, 49), (11, 49), (9, 49), (3, 49)),nPnts
			, pSafeArrayOfPnts, StartLayer, EndLayer, eAllowMetalOnStartLayer, eAllowMetalOnEndLayer
			, bMilled, pHole, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutCavity', '{9826B261-A768-44F9-A0B9-1C289FB5D797}')
		return ret

	# Result is of type IMGCPCBComplexVia
	def PutComplexVia(self, sTemplName=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dAngle=defaultNamedNotOptArg
			, pNet=0, eUnit=0, eAngleUnit=0):
		'Creates a new ComplexVia.'
		ret = self._oleobj_.InvokeTypes(387, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (5, 1), (9, 49), (3, 49), (3, 49)),sTemplName
			, dX, dY, dAngle, pNet, eUnit
			, eAngleUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutComplexVia', '{DA0209B0-DA9A-4145-B0B5-8174B59835ED}')
		return ret

	# Result is of type IMGCPCBComponent
	def PutComponent(self, sCellname=defaultNamedNotOptArg, bFromCentralLib=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg
			, dRotation=defaultNamedNotOptArg, sRefDes='', sPartName='', nLayer=1, bMirror=False
			, eFixType=0, eUnit=0, eAngleUnit=0):
		'Place a spare component from the local or central (not implemented) library.'
		return self._ApplyTypes_(123, 1, (9, 32), ((8, 1), (11, 1), (5, 1), (5, 1), (5, 1), (8, 49), (8, 49), (3, 49), (11, 49), (3, 49), (3, 49), (3, 49)), 'PutComponent', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}',sCellname
			, bFromCentralLib, dX, dY, dRotation, sRefDes
			, sPartName, nLayer, bMirror, eFixType, eUnit
			, eAngleUnit)

	# Result is of type IMGCPCBComponent
	def PutComponentEx(self, sCellname=defaultNamedNotOptArg, bFromCentralLib=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg
			, dRotation=defaultNamedNotOptArg, sRefDes='', sPartName='', nLayer=1, bMirror=False
			, eFixType=0, eUnit=0, eAngleUnit=0):
		'Place a spare component from the local or central (not implemented) library.'
		return self._ApplyTypes_(366, 1, (9, 32), ((8, 1), (11, 1), (5, 1), (5, 1), (5, 1), (8, 49), (8, 49), (3, 49), (11, 49), (3, 49), (3, 49), (3, 49)), 'PutComponentEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}',sCellname
			, bFromCentralLib, dX, dY, dRotation, sRefDes
			, sPartName, nLayer, bMirror, eFixType, eUnit
			, eAngleUnit)

	# Result is of type IMGCPCBConductiveArea
	def PutConductiveArea(self, nLayer=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg
			, pComponent=0, eFixType=0, eUnit=0):
		'Add a new conductive area.'
		ret = self._oleobj_.InvokeTypes(57, LCID, 1, (9, 0), ((3, 1), (9, 1), (3, 1), (16396, 1), (9, 49), (3, 49), (3, 49)),nLayer
			, pNet, nPnts, pSafeArrayOfPnts, pComponent, eFixType
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutConductiveArea', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}')
		return ret

	# Result is of type IMGCPCBConductorLayerText
	def PutConductorLayerText(self, sString=defaultNamedNotOptArg, dPositionX=defaultNamedNotOptArg, dPositionY=defaultNamedNotOptArg, nLayer=defaultNamedNotOptArg
			, dHeight=80.0, dRotation=0.0, dPenWidth=10.0, sFont='VeriBest Gerber 0', eAttr=0
			, eHoriz=0, eVert=0, pComponent=0, eUnit=0, eAngleUnit=0):
		'Places a Conductor Layer Text on the board.'
		return self._ApplyTypes_(95, 1, (9, 32), ((8, 1), (5, 1), (5, 1), (3, 1), (5, 49), (5, 49), (5, 49), (8, 49), (3, 49), (3, 49), (3, 49), (9, 49), (3, 49), (3, 49)), 'PutConductorLayerText', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}',sString
			, dPositionX, dPositionY, nLayer, dHeight, dRotation
			, dPenWidth, sFont, eAttr, eHoriz, eVert
			, pComponent, eUnit, eAngleUnit)

	# Result is of type IMGCPCBConductorLayerText
	def PutConductorLayerTextEx(self, sString=defaultNamedNotOptArg, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg, eTextType=defaultNamedNotOptArg
			, nLayer=defaultNamedNotOptArg, pComponent=defaultNamedNotOptArg, eUnit=0):
		'Adds text to the board.'
		ret = self._oleobj_.InvokeTypes(273, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (3, 1), (3, 1), (9, 1), (3, 49)),sString
			, PositionX, PositionY, eTextType, nLayer, pComponent
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutConductorLayerTextEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')
		return ret

	# Result is of type IMGCPCBConstructionLine
	def PutConstructionLine(self, pUserlayer=defaultNamedNotOptArg, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg
			, Y2=defaultNamedNotOptArg, Infinite=False, eUnit=0):
		'Add a construction line.'
		ret = self._oleobj_.InvokeTypes(214, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 49), (3, 49)),pUserlayer
			, X1, Y1, X2, Y2, Infinite
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutConstructionLine', '{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')
		return ret

	# Result is of type IMGCPCBConstructionPoint
	def PutConstructionPoint(self, pUserlayer=defaultNamedNotOptArg, XPosition=defaultNamedNotOptArg, YPosition=defaultNamedNotOptArg, Diameter=defaultNamedNotOptArg
			, eUnit=0):
		'Add a construction point.'
		ret = self._oleobj_.InvokeTypes(206, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (5, 1), (3, 49)),pUserlayer
			, XPosition, YPosition, Diameter, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutConstructionPoint', '{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}')
		return ret

	# Result is of type IMGCPCBContour
	def PutContour(self, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, pHole=defaultNamedNotOptArg, eCompensation=defaultNamedNotOptArg
			, eType=defaultNamedNotOptArg, bReverse=False, pComponent=0, eUnit=0):
		'Adds a contour to the document.(deprecated)'
		ret = self._oleobj_.InvokeTypes(78, LCID, 1, (9, 0), ((3, 1), (16396, 1), (9, 1), (3, 1), (3, 1), (11, 49), (9, 49), (3, 49)),nPnts
			, pSafeArrayOfPnts, pHole, eCompensation, eType, bReverse
			, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutContour', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')
		return ret

	# Result is of type IMGCPCBContour
	def PutContourEx(self, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, StartLayer=defaultNamedNotOptArg, EndLayer=defaultNamedNotOptArg
			, pHole=defaultNamedNotOptArg, eCompensation=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, bReverse=False, pComponent=0
			, eUnit=0):
		'Adds a contour to the document.'
		ret = self._oleobj_.InvokeTypes(242, LCID, 1, (9, 0), ((3, 1), (16396, 1), (3, 1), (3, 1), (9, 1), (3, 1), (3, 1), (11, 49), (9, 49), (3, 49)),nPnts
			, pSafeArrayOfPnts, StartLayer, EndLayer, pHole, eCompensation
			, eType, bReverse, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutContourEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')
		return ret

	# Result is of type IMGCPCBCopperBalancingShape
	def PutCopperBalancingShape(self, nLayer=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, eUnit=0):
		'Places a copper balancing shape on the board.'
		ret = self._oleobj_.InvokeTypes(142, LCID, 1, (9, 0), ((3, 1), (3, 1), (16396, 1), (3, 49)),nLayer
			, nPnts, safeArrayOfPnts, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutCopperBalancingShape', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfx
	def PutDRCWindow(self, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, eUnit=0):
		'Places a DRC window on the board.'
		ret = self._oleobj_.InvokeTypes(182, LCID, 1, (9, 0), ((5, 1), (3, 1), (16396, 1), (3, 49)),dGraphicsWidth
			, nPnts, safeArrayOfPnts, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutDRCWindow', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')
		return ret

	# Result is of type IMGCPCBDetailedView
	def PutDetailedView(self, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, sName=defaultNamedNotOptArg, pUserlayer=defaultNamedNotOptArg
			, dWorkSurfaceOriginX=defaultNamedNotOptArg, dWorkSurfaceOriginY=defaultNamedNotOptArg, dScale=1.0, dWorkSurfaceExpansionFactor=0.10000000149011612, dRotation=0.0
			, bMirror=False, sNameFont='Courier New', nNameHeight=50.0, bDisplayBorder=True, dBorderWidth=0.0
			, eUnit=0, eAngleUnit=0):
		'Add a new detailed view.'
		return self._ApplyTypes_(137, 1, (9, 32), ((3, 1), (16396, 1), (8, 1), (9, 1), (5, 1), (5, 1), (5, 49), (5, 49), (5, 49), (11, 49), (8, 49), (5, 49), (11, 49), (5, 49), (3, 49), (3, 49)), 'PutDetailedView', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}',nPnts
			, safeArrayOfPnts, sName, pUserlayer, dWorkSurfaceOriginX, dWorkSurfaceOriginY
			, dScale, dWorkSurfaceExpansionFactor, dRotation, bMirror, sNameFont
			, nNameHeight, bDisplayBorder, dBorderWidth, eUnit, eAngleUnit
			)

	# Result is of type IMGCPCBDrillTables
	def PutDrillTable(self, pObj=defaultNamedNotOptArg, dXLoc=defaultNamedNotOptArg, dYLoc=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg
			, bTop=True, eFixed=0, eUnit=0, eAngleUnit=0):
		'Add drill table(s) to document. The panel or board object is passed as the first parameter.'
		ret = self._oleobj_.InvokeTypes(191, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (5, 1), (11, 49), (3, 49), (3, 49), (3, 49)),pObj
			, dXLoc, dYLoc, dRotation, bTop, eFixed
			, eUnit, eAngleUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutDrillTable', '{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}')
		return ret

	# Result is of type IMGCPCBFabricationLayerGfx
	def PutFabricationLayerGfx(self, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg
			, safeArrayOfPnts=defaultNamedNotOptArg, bFilled=False, pComponent=0, eUnit=0):
		'Places a Fabrication Layer Gfx on the board.'
		ret = self._oleobj_.InvokeTypes(97, LCID, 1, (9, 0), ((3, 1), (3, 1), (5, 1), (3, 1), (16396, 1), (11, 49), (9, 49), (3, 49)),eType
			, eSide, dGraphicsWidth, nPnts, safeArrayOfPnts, bFilled
			, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutFabricationLayerGfx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')
		return ret

	# Result is of type IMGCPCBFabricationLayerGfx
	def PutFabricationLayerGfxEx(self, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg
			, safeArrayOfPnts=defaultNamedNotOptArg, bFilled=False, pLayerObject=0, pComponent=0, eUnit=0):
		'Places a Fabrication Layer Gfx on the board using type/side/layer.'
		ret = self._oleobj_.InvokeTypes(360, LCID, 1, (9, 0), ((3, 1), (3, 1), (5, 1), (3, 1), (16396, 1), (11, 49), (9, 49), (9, 49), (3, 49)),eType
			, eSide, dGraphicsWidth, nPnts, safeArrayOfPnts, bFilled
			, pLayerObject, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutFabricationLayerGfxEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')
		return ret

	# Result is of type IMGCPCBFabricationLayerText
	def PutFabricationLayerText(self, sString=defaultNamedNotOptArg, dPositionX=defaultNamedNotOptArg, dPositionY=defaultNamedNotOptArg, eType=defaultNamedNotOptArg
			, eSide=defaultNamedNotOptArg, dHeight=80.0, dRotation=0.0, dPenWidth=10.0, sFont='VeriBest Gerber 0'
			, eAttr=0, eHoriz=0, eVert=0, pComponent=0, eUnit=0
			, eAngleUnit=0):
		'Places a Fabrication Layer Text on the board.'
		return self._ApplyTypes_(94, 1, (9, 32), ((8, 1), (5, 1), (5, 1), (3, 1), (3, 1), (5, 49), (5, 49), (5, 49), (8, 49), (3, 49), (3, 49), (3, 49), (9, 49), (3, 49), (3, 49)), 'PutFabricationLayerText', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}',sString
			, dPositionX, dPositionY, eType, eSide, dHeight
			, dRotation, dPenWidth, sFont, eAttr, eHoriz
			, eVert, pComponent, eUnit, eAngleUnit)

	# Result is of type IMGCPCBFabricationLayerText
	def PutFabricationLayerTextEx(self, sString=defaultNamedNotOptArg, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg, eTextType=defaultNamedNotOptArg
			, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg, pComponent=defaultNamedNotOptArg, eUnit=0):
		'Adds text to the board.'
		ret = self._oleobj_.InvokeTypes(272, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (9, 1), (3, 49)),sString
			, PositionX, PositionY, eTextType, eType, eSide
			, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutFabricationLayerTextEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	# Result is of type IMGCPCBFabricationLayerText
	def PutFabricationLayerTextOnLayer(self, sString=defaultNamedNotOptArg, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg, eTextType=defaultNamedNotOptArg
			, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg, pLayerObject=0, pComponent=0, eUnit=0):
		'Adds fabrication text to the board on named layer.(Layer parameter is only used for flex designs and soldermask text.  It will be ignored if used for other types.)'
		ret = self._oleobj_.InvokeTypes(362, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (9, 49), (9, 49), (3, 49)),sString
			, PositionX, PositionY, eTextType, eType, eSide
			, pLayerObject, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutFabricationLayerTextOnLayer', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	# Result is of type IMGCPCBFiducial
	def PutFiducial(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg, pNet=0
			, pComponent=0, eFixed=0, eUnit=0):
		'Places a Fiducial on the board.'
		ret = self._oleobj_.InvokeTypes(101, LCID, 1, (9, 0), ((5, 1), (5, 1), (9, 1), (9, 49), (9, 49), (3, 49), (3, 49)),dX
			, dY, pPadstack, pNet, pComponent, eFixed
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutFiducial', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}')
		return ret

	# Result is of type IMGCPCBFromTo
	def PutFromTo(self, pObject1=defaultNamedNotOptArg, pObject2=defaultNamedNotOptArg):
		'Add netline between two objects that are on same net.'
		ret = self._oleobj_.InvokeTypes(291, LCID, 1, (9, 0), ((9, 1), (9, 1)),pObject1
			, pObject2)
		if ret is not None:
			ret = Dispatch(ret, 'PutFromTo', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')
		return ret

	# Result is of type IMGCPCBGroup
	def PutGroup(self, eGroupType=defaultNamedNotOptArg, sGroupName=defaultNamedNotOptArg):
		'Creates a new Group.'
		ret = self._oleobj_.InvokeTypes(173, LCID, 1, (9, 0), ((3, 1), (8, 1)),eGroupType
			, sGroupName)
		if ret is not None:
			ret = Dispatch(ret, 'PutGroup', '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
		return ret

	# Result is of type IMGCPCBHole
	def PutHole(self, sHoleName=defaultNamedNotOptArg):
		'Put a hole from the local or central libriaries.'
		ret = self._oleobj_.InvokeTypes(122, LCID, 1, (9, 0), ((8, 1),),sHoleName
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutHole', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')
		return ret

	# Result is of type IMGCPCBImage
	def PutImage(self, sImagePath=defaultNamedNotOptArg, pLayerObject=defaultNamedNotOptArg, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg
			, eUnit=0):
		'Add a new image.'
		ret = self._oleobj_.InvokeTypes(381, LCID, 1, (9, 0), ((8, 1), (9, 1), (5, 1), (5, 1), (3, 49)),sImagePath
			, pLayerObject, PositionX, PositionY, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutImage', '{33704F23-0EB7-47D7-AB6F-F4337D5F823F}')
		return ret

	# Result is of type IMGCPCBConstructionLine
	def PutInfiniteConstructionLine(self, pUserlayer=defaultNamedNotOptArg, XPosition=defaultNamedNotOptArg, YPosition=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg
			, eUnit=0, eAngleUnit=0):
		'Add an infinite construction line.'
		ret = self._oleobj_.InvokeTypes(213, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (5, 1), (3, 49), (3, 49)),pUserlayer
			, XPosition, YPosition, Angle, eUnit, eAngleUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutInfiniteConstructionLine', '{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')
		return ret

	# Result is of type IMGCPCBInsertionOutline
	def PutInsertionOutline(self, nLayer=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, pComponent=0
			, eUnit=0):
		'Places an insertion outline at the specified location.'
		ret = self._oleobj_.InvokeTypes(234, LCID, 1, (9, 0), ((3, 1), (3, 1), (16396, 1), (9, 49), (3, 49)),nLayer
			, nPnts, pSafeArrayOfPnts, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutInsertionOutline', '{045F3585-5036-40BA-97E0-EB9EF5098737}')
		return ret

	# Result is of type IMGCPCBComponent
	def PutJumper(self, sCellname=defaultNamedNotOptArg, bFromCentralLib=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg
			, dRotation=defaultNamedNotOptArg, Length=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg, sRefDes='', sPartName=''
			, eSide=1, eFixType=0, eUnit=0, eAngleUnit=0):
		'Place a new jumper from the local or central (not implemented) library. (Beta)'
		return self._ApplyTypes_(144, 1, (9, 32), ((8, 1), (11, 1), (5, 1), (5, 1), (5, 1), (5, 1), (9, 1), (8, 49), (8, 49), (3, 49), (3, 49), (3, 49), (3, 49)), 'PutJumper', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}',sCellname
			, bFromCentralLib, dX, dY, dRotation, Length
			, pNet, sRefDes, sPartName, eSide, eFixType
			, eUnit, eAngleUnit)

	# Result is of type IMGCPCBDimension
	def PutLinearDimension(self, pObj=defaultNamedNotOptArg, dFromX=defaultNamedNotOptArg, dFromY=defaultNamedNotOptArg, dToX=defaultNamedNotOptArg
			, dToY=defaultNamedNotOptArg, dOffset=0.0, pLayerObject=0, pScheme=0, eUnit=0):
		'Places a linear dimension along a linear element.'
		ret = self._oleobj_.InvokeTypes(104, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 49), (9, 49), (9, 49), (3, 49)),pObj
			, dFromX, dFromY, dToX, dToY, dOffset
			, pLayerObject, pScheme, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutLinearDimension', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
		return ret

	# Result is of type IMGCPCBManufacturingOutline
	def PutManufacturingOutline(self, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, eUnit=0):
		'Adds or replaces the board manufacturing outline.'
		ret = self._oleobj_.InvokeTypes(141, LCID, 1, (9, 0), ((3, 1), (16396, 1), (3, 49)),nPnts
			, safeArrayOfPnts, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutManufacturingOutline', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED91}')
		return ret

	# Result is of type IMGCPCBMarker
	def PutMarker(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, Layer=defaultNamedNotOptArg, pNet=0
			, Unit=0):
		'Adds a marker to the design. (Internal)'
		ret = self._oleobj_.InvokeTypes(292, LCID, 1, (9, 0), ((5, 1), (5, 1), (3, 1), (9, 49), (3, 49)),x
			, y, Layer, pNet, Unit)
		if ret is not None:
			ret = Dispatch(ret, 'PutMarker', '{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')
		return ret

	# Result is of type IMGCPCBMetalizationArea
	def PutMetalizationArea(self, nLayer=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg, nNumPnts=defaultNamedNotOptArg, pPointsArray=defaultNamedNotOptArg
			, pComponent=0, eUnit=0):
		'Creates a metalization area according to the specified parameters'
		ret = self._oleobj_.InvokeTypes(238, LCID, 1, (9, 0), ((3, 1), (9, 1), (3, 1), (16396, 1), (9, 49), (3, 49)),nLayer
			, pNet, nNumPnts, pPointsArray, pComponent, eUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutMetalizationArea', '{315D2489-54AB-4C47-9927-5D1EB59FC6E7}')
		return ret

	# Result is of type IMGCPCBMountingHole
	def PutMountingHole(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg, pNet=0
			, pComponent=0, eFixed=0, eUnit=0):
		'Places a Mounting Hole on the board.'
		ret = self._oleobj_.InvokeTypes(102, LCID, 1, (9, 0), ((5, 1), (5, 1), (9, 1), (9, 49), (9, 49), (3, 49), (3, 49)),dX
			, dY, pPadstack, pNet, pComponent, eFixed
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutMountingHole', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')
		return ret

	# Result is of type IMGCPCBMountingHole
	def PutMountingHoleEx(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, sPadstackName=defaultNamedNotOptArg, bFromCentralLib=False
			, nDepth=0, bMirrored=False, pNet=0, pComponent=0, eFixed=0
			, eUnit=0):
		'Places a Mounting Hole on the board using pad stack name and layer depth. If the depth is equal to zero a through Mounting Hole is created.'
		ret = self._oleobj_.InvokeTypes(382, LCID, 1, (9, 0), ((5, 1), (5, 1), (8, 1), (11, 49), (3, 49), (11, 49), (9, 49), (9, 49), (3, 49), (3, 49)),dX
			, dY, sPadstackName, bFromCentralLib, nDepth, bMirrored
			, pNet, pComponent, eFixed, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutMountingHoleEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')
		return ret

	# Result is of type IMGCPCBMultiBoardOutline
	def PutMultiBoardOutline(self, Name=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, graphicsWidth=defaultNamedNotOptArg
			, eMultiBoardOutlineType=0, pLayerObjects=0, eUnit=0):
		'Put Board outline for rigid/flex design type implementation.  Returns MultiBoardOutline object.'
		ret = self._oleobj_.InvokeTypes(358, LCID, 1, (9, 0), ((8, 1), (3, 1), (16396, 1), (5, 1), (3, 49), (9, 49), (3, 49)),Name
			, nPnts, pSafeArrayOfPnts, graphicsWidth, eMultiBoardOutlineType, pLayerObjects
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutMultiBoardOutline', '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')
		return ret

	# Result is of type IMGCPCBMultiVia
	def PutMultiVia(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, nRowCount=defaultNamedNotOptArg, nColumnCount=defaultNamedNotOptArg
			, dRotation=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg, pNet=0, pComponent=0, eFixed=0
			, eUnit=0, eAngleUnit=0):
		'Adds a multi via to the document.'
		ret = self._oleobj_.InvokeTypes(167, LCID, 1, (9, 0), ((5, 1), (5, 1), (3, 1), (3, 1), (5, 1), (9, 1), (9, 49), (9, 49), (3, 49), (3, 49), (3, 49)),x
			, y, nRowCount, nColumnCount, dRotation, pPadstack
			, pNet, pComponent, eFixed, eUnit, eAngleUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutMultiVia', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}')
		return ret

	# Result is of type IMGCPCBNetGroup
	def PutNetGroup(self, eGroupType=defaultNamedNotOptArg, sGroupName=defaultNamedNotOptArg):
		'Creates a new net Group.'
		ret = self._oleobj_.InvokeTypes(295, LCID, 1, (9, 0), ((3, 1), (8, 1)),eGroupType
			, sGroupName)
		if ret is not None:
			ret = Dispatch(ret, 'PutNetGroup', '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')
		return ret

	# Result is of type IMGCPCBObstruct
	def PutObstruct(self, nLayer=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg
			, eType=defaultNamedNotOptArg, bFilled=False, pComponent=0, eUnit=0):
		'Adds an obstruct to the document.'
		ret = self._oleobj_.InvokeTypes(77, LCID, 1, (9, 0), ((3, 1), (5, 1), (3, 1), (16396, 1), (3, 1), (11, 49), (9, 49), (3, 49)),nLayer
			, dGraphicsWidth, nPnts, pSafeArrayOfPnts, eType, bFilled
			, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutObstruct', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}')
		return ret

	# Result is of type IMGCPCBDimension
	def PutOrdinateDimension(self, pObj=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dOffset=0.0
			, eDimensionDirection=1, pLayerObject=0, pScheme=0, eUnit=0):
		'Adds an ordinate dimension to a point X,Y on the object.'
		ret = self._oleobj_.InvokeTypes(67, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (5, 49), (3, 49), (9, 49), (9, 49), (3, 49)),pObj
			, dX, dY, dOffset, eDimensionDirection, pLayerObject
			, pScheme, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutOrdinateDimension', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
		return ret

	# Result is of type IMGCPCBPadstack
	def PutPadstack(self, nFrom=defaultNamedNotOptArg, nTo=defaultNamedNotOptArg, sPadstackName=defaultNamedNotOptArg, bMirrored=False
			, bFromCentralLib=False):
		'Pulls in the specified padstacks and returns the new padstack object.'
		ret = self._oleobj_.InvokeTypes(92, LCID, 1, (9, 0), ((3, 1), (3, 1), (8, 1), (11, 49), (11, 49)),nFrom
			, nTo, sPadstackName, bMirrored, bFromCentralLib)
		if ret is not None:
			ret = Dispatch(ret, 'PutPadstack', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')
		return ret

	# Result is of type IMGCPCBPadstacks
	def PutPadstacksInXtreme(self, nFrom=defaultNamedNotOptArg, nTo=defaultNamedNotOptArg, padstackName=defaultNamedNotOptArg, bMirrored=False
			, bFromCentralLib=False):
		'Pulls in the specified padstacks and returns the new padstack object(s).'
		ret = self._oleobj_.InvokeTypes(283, LCID, 1, (9, 0), ((3, 1), (3, 1), (12, 1), (11, 49), (11, 49)),nFrom
			, nTo, padstackName, bMirrored, bFromCentralLib)
		if ret is not None:
			ret = Dispatch(ret, 'PutPadstacksInXtreme', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}')
		return ret

	# Result is of type IMGCPCBPanel
	def PutPanel(self, sOriginalDesignName=defaultNamedNotOptArg, dXLoc=defaultNamedNotOptArg, dYLoc=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg
			, bFlip=False, eAttachPt=0, dScale=1.0, bCenter=False, bDimensionPanelWithInstanceOrigin=False
			, eUnit=0, eAngleUnit=0):
		'Add a new panel.'
		ret = self._oleobj_.InvokeTypes(187, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (5, 1), (11, 49), (3, 49), (5, 49), (11, 49), (11, 49), (3, 49), (3, 49)),sOriginalDesignName
			, dXLoc, dYLoc, dRotation, bFlip, eAttachPt
			, dScale, bCenter, bDimensionPanelWithInstanceOrigin, eUnit, eAngleUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutPanel', '{6B941F88-756B-4734-B3B2-EAB2861ECB7C}')
		return ret

	# Result is of type IMGCPCBPanels
	def PutPanelArray(self, sOriginalDesignName=defaultNamedNotOptArg, dXLoc=defaultNamedNotOptArg, dYLoc=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg
			, bFlip=False, eAttachPt=0, dScale=1.0, bCenter=False, bDimensionPanelWithInstanceOrigin=False
			, nArrayRows=0, nArrayCols=0, dRowClearance=0.0, dColClearance=0.0, eUnit=0
			, eAngleUnit=0):
		'Add a panel array'
		ret = self._oleobj_.InvokeTypes(189, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (5, 1), (11, 49), (3, 49), (5, 49), (11, 49), (11, 49), (3, 49), (3, 49), (5, 49), (5, 49), (3, 49), (3, 49)),sOriginalDesignName
			, dXLoc, dYLoc, dRotation, bFlip, eAttachPt
			, dScale, bCenter, bDimensionPanelWithInstanceOrigin, nArrayRows, nArrayCols
			, dRowClearance, dColClearance, eUnit, eAngleUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutPanelArray', '{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')
		return ret

	# Result is of type IMGCPCBPanelBorder
	def PutPanelBorder(self, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, graphicsWidth=defaultNamedNotOptArg, eUnit=0):
		'Adds or replaces the panel border.'
		ret = self._oleobj_.InvokeTypes(127, LCID, 1, (9, 0), ((3, 1), (16396, 1), (5, 1), (3, 49)),nPnts
			, safeArrayOfPnts, graphicsWidth, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutPanelBorder', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED84}')
		return ret

	# Result is of type IMGCPCBPanelOutline
	def PutPanelOutline(self, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, graphicsWidth=defaultNamedNotOptArg, eUnit=0):
		'Adds or replaces the panel outline.'
		ret = self._oleobj_.InvokeTypes(125, LCID, 1, (9, 0), ((3, 1), (16396, 1), (5, 1), (3, 49)),nPnts
			, safeArrayOfPnts, graphicsWidth, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutPanelOutline', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED83}')
		return ret

	# Result is of type IMGCPCBPlacementObstruct
	def PutPlacementObstruct(self, nLayer=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg
			, dHeight=defaultNamedNotOptArg, pComponent=0, eUnit=0):
		'Adds a placement obstruct to the document.'
		ret = self._oleobj_.InvokeTypes(79, LCID, 1, (9, 0), ((3, 1), (5, 1), (3, 1), (16396, 1), (5, 1), (9, 49), (3, 49)),nLayer
			, dGraphicsWidth, nPnts, pSafeArrayOfPnts, dHeight, pComponent
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutPlacementObstruct', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}')
		return ret

	# Result is of type IMGCPCBPlacementOutline
	def PutPlacementOutline(self, nLayer=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, dHeight=0.0
			, dUndersideSpace=0.0, pComponent=0, eUnit=0):
		'Places a placement outline at the specified location.'
		ret = self._oleobj_.InvokeTypes(233, LCID, 1, (9, 0), ((3, 1), (3, 1), (16396, 1), (5, 49), (5, 49), (9, 49), (3, 49)),nLayer
			, nPnts, pSafeArrayOfPnts, dHeight, dUndersideSpace, pComponent
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutPlacementOutline', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}')
		return ret

	# Result is of type IMGCPCBPlaneEditingSketch
	def PutPlaneEditingSketch(self, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, nLayer=defaultNamedNotOptArg, eMetalSide=0
			, eUnit=0):
		'Adds a plane editing sketch to the document.'
		ret = self._oleobj_.InvokeTypes(180, LCID, 1, (9, 0), ((3, 1), (16396, 1), (3, 1), (3, 49), (3, 49)),nPnts
			, pSafeArrayOfPnts, nLayer, eMetalSide, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutPlaneEditingSketch', '{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}')
		return ret

	# Result is of type IMGCPCBPlaneShape
	def PutPlaneShape(self, nLayer=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, pNet=0
			, bRouteObstruct=True, eHatchPattern=0, dHatchWidth=0.0, dHatchDistance=0.0, pComponent=0
			, eUnit=0):
		'Places a Plane Shape on the board.'
		ret = self._oleobj_.InvokeTypes(98, LCID, 1, (9, 0), ((3, 1), (3, 1), (16396, 1), (9, 49), (11, 49), (3, 49), (5, 49), (5, 49), (9, 49), (3, 49)),nLayer
			, nPnts, safeArrayOfPnts, pNet, bRouteObstruct, eHatchPattern
			, dHatchWidth, dHatchDistance, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutPlaneShape', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')
		return ret

	# Result is of type IMGCPCBPlaneShape
	def PutPlaneShapeAnyAngle(self, nLayer=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, pNet=0
			, bRouteObstruct=True, eHatchPattern=0, dHatchWidth=0.0, dHatchDistance=0.0, dHatchAngle=0.0
			, pComponent=0, eUnit=0):
		'Places a Plane Shape on the board, any angle allowed.'
		ret = self._oleobj_.InvokeTypes(353, LCID, 1, (9, 0), ((3, 1), (3, 1), (16396, 1), (9, 49), (11, 49), (3, 49), (5, 49), (5, 49), (5, 49), (9, 49), (3, 49)),nLayer
			, nPnts, safeArrayOfPnts, pNet, bRouteObstruct, eHatchPattern
			, dHatchWidth, dHatchDistance, dHatchAngle, pComponent, eUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutPlaneShapeAnyAngle', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')
		return ret

	# Result is of type IMGCPCBDimension
	def PutPointToPointDimension(self, pFromObj=defaultNamedNotOptArg, dFromX=defaultNamedNotOptArg, dFromY=defaultNamedNotOptArg, pToObj=None
			, dToX=0.0, dToY=0.0, dOffset=0.0, eOrientation=1, pLayerObject=0
			, pScheme=0, eUnit=0):
		'Places a point to point dimension between two objects.  Pass null for one of the objects to use the board origin.'
		ret = self._oleobj_.InvokeTypes(103, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (9, 49), (5, 49), (5, 49), (5, 49), (3, 49), (9, 49), (9, 49), (3, 49)),pFromObj
			, dFromX, dFromY, pToObj, dToX, dToY
			, dOffset, eOrientation, pLayerObject, pScheme, eUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutPointToPointDimension', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
		return ret

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property on the design.'
		ret = self._oleobj_.InvokeTypes(124, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfx
	def PutReservedArea(self, nLayer=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, bUserName=defaultNamedNotOptArg
			, eUnit=0):
		'Add a reserved area for a user - used by TeamPCB or XtremePCB.'
		ret = self._oleobj_.InvokeTypes(116, LCID, 1, (9, 0), ((3, 1), (3, 1), (16396, 1), (8, 1), (3, 49)),nLayer
			, nPnts, safeArrayOfPnts, bUserName, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutReservedArea', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfx
	def PutResistorShape(self, nLayer=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, pComponent=defaultNamedNotOptArg
			, eUnit=0):
		'Add a resistor shape on the specified layer to the specified component.'
		ret = self._oleobj_.InvokeTypes(115, LCID, 1, (9, 0), ((3, 1), (3, 1), (16396, 1), (9, 1), (3, 49)),nLayer
			, nPnts, safeArrayOfPnts, pComponent, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutResistorShape', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')
		return ret

	# Result is of type IMGCPCBReuseArea
	def PutReuseArea(self, sName=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg
			, eUnit=0):
		'Places a Reuse Area(Managed Block area) on the board.'
		ret = self._oleobj_.InvokeTypes(319, LCID, 1, (9, 0), ((8, 1), (5, 1), (3, 1), (16396, 1), (3, 49)),sName
			, dGraphicsWidth, nPnts, safeArrayOfPnts, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutReuseArea', '{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}')
		return ret

	# Result is of type IMGCPCBRoom
	def PutRoom(self, eSide=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, sRoomName=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg
			, safeArrayOfPnts=defaultNamedNotOptArg, eUnit=0):
		'Places a Room on the board.'
		ret = self._oleobj_.InvokeTypes(99, LCID, 1, (9, 0), ((3, 1), (5, 1), (8, 1), (3, 1), (16396, 1), (3, 49)),eSide
			, dGraphicsWidth, sRoomName, nPnts, safeArrayOfPnts, eUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutRoom', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')
		return ret

	# Result is of type IMGCPCBRouteBorder
	def PutRouteBorder(self, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, eUnit=0):
		'Adds or replaces the route border.'
		ret = self._oleobj_.InvokeTypes(64, LCID, 1, (9, 0), ((3, 1), (16396, 1), (5, 1), (3, 49)),nPnts
			, pSafeArrayOfPnts, dGraphicsWidth, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutRouteBorder', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}')
		return ret

	# Result is of type IMGCPCBRouteFence
	def PutRouteFence(self, sName=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg
			, eUnit=0):
		'Places a route fence on the board.'
		ret = self._oleobj_.InvokeTypes(164, LCID, 1, (9, 0), ((8, 1), (3, 1), (3, 1), (16396, 1), (3, 49)),sName
			, eType, nPnts, safeArrayOfPnts, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutRouteFence', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}')
		return ret

	# Result is of type IMGCPCBRuleArea
	def PutRuleArea(self, nLayer=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg
			, sRuleSchemaName='Master', eUnit=0):
		'Places a Rule Area on the board.'
		return self._ApplyTypes_(100, 1, (9, 32), ((3, 1), (5, 1), (3, 1), (16396, 1), (8, 49), (3, 49)), 'PutRuleArea', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}',nLayer
			, dGraphicsWidth, nPnts, safeArrayOfPnts, sRuleSchemaName, eUnit
			)

	# Result is of type IMGCPCBRuleArea
	def PutRuleAreaEx(self, nLayer=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg
			, sRuleSchemaName='Master', pComponent=0, eUnit=0):
		'Places a Rule Area on the board and allows the rule area to be associated with a component.'
		return self._ApplyTypes_(170, 1, (9, 32), ((3, 1), (5, 1), (3, 1), (16396, 1), (8, 49), (9, 49), (3, 49)), 'PutRuleAreaEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}',nLayer
			, dGraphicsWidth, nPnts, safeArrayOfPnts, sRuleSchemaName, pComponent
			, eUnit)

	# Result is of type IMGCPCBSandbox
	def PutSandbox(self, sName=defaultNamedNotOptArg, PlacementLayers=defaultNamedNotOptArg, RouteLayers=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg
			, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, eUnit=0):
		'Places a Sandbox on the board.'
		ret = self._oleobj_.InvokeTypes(245, LCID, 1, (9, 0), ((8, 1), (16396, 1), (16396, 1), (5, 1), (3, 1), (16396, 1), (3, 49)),sName
			, PlacementLayers, RouteLayers, dGraphicsWidth, nPnts, safeArrayOfPnts
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutSandbox', '{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}')
		return ret

	# Result is of type IMGCPCBShearingHole
	def PutShearingHole(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg, eFixed=0
			, eUnit=0):
		'Add a new shearing hole.'
		ret = self._oleobj_.InvokeTypes(139, LCID, 1, (9, 0), ((5, 1), (5, 1), (9, 1), (3, 49), (3, 49)),dX
			, dY, pPadstack, eFixed, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutShearingHole', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}')
		return ret

	# Result is of type IMGCPCBSheet
	def PutSheet(self, sheetName=defaultNamedNotOptArg, drawingTemplateName=defaultNamedNotOptArg, instanceNames=defaultNamedNotOptArg, schemeNames=defaultNamedNotOptArg):
		'Add a Sheet in the Drawing Editor'
		ret = self._oleobj_.InvokeTypes(193, LCID, 1, (9, 0), ((8, 1), (8, 1), (12, 1), (12, 1)),sheetName
			, drawingTemplateName, instanceNames, schemeNames)
		if ret is not None:
			ret = Dispatch(ret, 'PutSheet', '{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')
		return ret

	# Result is of type IMGCPCBSheetOutline
	def PutSheetOutline(self, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, graphicsWidth=defaultNamedNotOptArg, eUnit=0):
		'Adds or replaces the sheet outline on the active sheet.'
		ret = self._oleobj_.InvokeTypes(186, LCID, 1, (9, 0), ((3, 1), (16396, 1), (5, 1), (3, 49)),nPnts
			, safeArrayOfPnts, graphicsWidth, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutSheetOutline', '{8906B110-98F5-44A5-BD6C-DCE96AC36C87}')
		return ret

	# Result is of type IMGCPCBNetGroup
	def PutShieldingNetGroup(self, sGroupName=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg, pNetClass=0):
		"Creates a new shielding net Group. Will display in NetExplorer as 'Shielding Rules'. (not valid without topology planner license)"
		ret = self._oleobj_.InvokeTypes(341, LCID, 1, (9, 0), ((8, 1), (9, 1), (9, 49)),sGroupName
			, pNet, pNetClass)
		if ret is not None:
			ret = Dispatch(ret, 'PutShieldingNetGroup', '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')
		return ret

	# Result is of type IMGCPCBFabricationLayerText
	def PutSilkscreenPartNumber(self, dPositionX=defaultNamedNotOptArg, dPositionY=defaultNamedNotOptArg, eUnit=0):
		'Places a Silkscreen part number at the specified location.'
		ret = self._oleobj_.InvokeTypes(232, LCID, 1, (9, 0), ((5, 1), (5, 1), (3, 49)),dPositionX
			, dPositionY, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutSilkscreenPartNumber', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	# Result is of type IMGCPCBFabricationLayerText
	def PutSilkscreenRefDes(self, dPositionX=defaultNamedNotOptArg, dPositionY=defaultNamedNotOptArg, eUnit=0):
		'Places a Silkscreen RefDes at the specified location.'
		ret = self._oleobj_.InvokeTypes(230, LCID, 1, (9, 0), ((5, 1), (5, 1), (3, 49)),dPositionX
			, dPositionY, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutSilkscreenRefDes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	# Result is of type IMGCPCBSketchPlan
	def PutSketchPlan(self, nLayer=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPoints=defaultNamedNotOptArg, ppFromTos=0
			, eUnit=0):
		'Adds a sketch plan to the document.'
		ret = self._oleobj_.InvokeTypes(394, LCID, 1, (9, 0), ((3, 1), (3, 1), (16396, 1), (9, 49), (3, 49)),nLayer
			, nPnts, pSafeArrayOfPoints, ppFromTos, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutSketchPlan', '{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')
		return ret

	# Result is of type IMGCPCBStackupScheme
	def PutStackupScheme(self, Name=defaultNamedNotOptArg):
		'Creates and returns a new StackupScheme object.'
		ret = self._oleobj_.InvokeTypes(396, LCID, 1, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutStackupScheme', '{0D170493-3863-40A7-B222-C70CDC73B07A}')
		return ret

	# Result is of type IMGCPCBTargetArea
	def PutTargetArea(self, nLayer=defaultNamedNotOptArg, dMaxDeviationDist=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg
			, eUnit=0, bDisplyRouteTargets=True, bVisibility=True, sRefDes=''):
		'Adds a target area to the document. (Beta)'
		return self._ApplyTypes_(261, 1, (9, 32), ((3, 1), (5, 1), (5, 1), (5, 1), (3, 49), (11, 49), (11, 49), (8, 49)), 'PutTargetArea', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}',nLayer
			, dMaxDeviationDist, dX, dY, eUnit, bDisplyRouteTargets
			, bVisibility, sRefDes)

	# Result is of type IMGCPCBTestFixtureOutline
	def PutTestFixtureOutline(self, nPnts=defaultNamedNotOptArg, safeArrayOfPnts=defaultNamedNotOptArg, eUnit=0):
		'Adds or replaces the board test fixture outline.'
		ret = self._oleobj_.InvokeTypes(271, LCID, 1, (9, 0), ((3, 1), (16396, 1), (3, 49)),nPnts
			, safeArrayOfPnts, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutTestFixtureOutline', '{585FFB16-62CC-4252-BE51-45D541FA8266}')
		return ret

	# Result is of type IMGCPCBComponent
	def PutTestPoint(self, sCellname=defaultNamedNotOptArg, bFromCentralLib=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg
			, dRotation=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg, sRefDes='', sPartName='', eSide=1
			, eFixType=0, eUnit=0, eAngleUnit=0):
		'Place a new testpoint from the local or central (not implemented) library.'
		return self._ApplyTypes_(143, 1, (9, 32), ((8, 1), (11, 1), (5, 1), (5, 1), (5, 1), (9, 1), (8, 49), (8, 49), (3, 49), (3, 49), (3, 49), (3, 49)), 'PutTestPoint', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}',sCellname
			, bFromCentralLib, dX, dY, dRotation, pNet
			, sRefDes, sPartName, eSide, eFixType, eUnit
			, eAngleUnit)

	# Result is of type IMGCPCBToolingHole
	def PutToolingHole(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg, eFixed=0
			, eUnit=0):
		'Add a new tooling hole.'
		ret = self._oleobj_.InvokeTypes(138, LCID, 1, (9, 0), ((5, 1), (5, 1), (9, 1), (3, 49), (3, 49)),dX
			, dY, pPadstack, eFixed, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutToolingHole', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}')
		return ret

	# Result is of type IMGCPCBTrace
	def PutTrace(self, nLayer=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg, dWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg
			, pSafeArrayOfPoints=defaultNamedNotOptArg, pComponent=0, eFixType=0, eUnit=0):
		'Adds a trace to the document.'
		ret = self._oleobj_.InvokeTypes(65, LCID, 1, (9, 0), ((3, 1), (9, 1), (5, 1), (3, 1), (16396, 1), (9, 49), (3, 49), (3, 49)),nLayer
			, pNet, dWidth, nPnts, pSafeArrayOfPoints, pComponent
			, eFixType, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutTrace', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')
		return ret

	# Result is of type IMGCPCBUserLayerGfx
	def PutUserLayerGfx(self, pUserlayer=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg
			, bFilled=False, pComponent=0, eUnit=0):
		'Add a piece of graphics on a user layer.'
		ret = self._oleobj_.InvokeTypes(89, LCID, 1, (9, 0), ((9, 1), (5, 1), (3, 1), (16396, 1), (11, 49), (9, 49), (3, 49)),pUserlayer
			, dGraphicsWidth, nPnts, pSafeArrayOfPnts, bFilled, pComponent
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutUserLayerGfx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}')
		return ret

	# Result is of type IMGCPCBUserLayerText
	def PutUserLayerText(self, sString=defaultNamedNotOptArg, dPositionX=defaultNamedNotOptArg, dPositionY=defaultNamedNotOptArg, pUserlayer=defaultNamedNotOptArg
			, dHeight=80.0, dRotation=0.0, dPenWidth=10.0, sFont='VeriBest Gerber 0', eAttr=0
			, eHoriz=0, eVert=0, pComponent=0, eUnit=0, eAngleUnit=0):
		'Places a User Layer Text on the board.'
		return self._ApplyTypes_(96, 1, (9, 32), ((8, 1), (5, 1), (5, 1), (9, 1), (5, 49), (5, 49), (5, 49), (8, 49), (3, 49), (3, 49), (3, 49), (9, 49), (3, 49), (3, 49)), 'PutUserLayerText', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}',sString
			, dPositionX, dPositionY, pUserlayer, dHeight, dRotation
			, dPenWidth, sFont, eAttr, eHoriz, eVert
			, pComponent, eUnit, eAngleUnit)

	# Result is of type IMGCPCBUserLayerText
	def PutUserLayerTextEx(self, sString=defaultNamedNotOptArg, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg, eTextType=defaultNamedNotOptArg
			, pUserlayer=defaultNamedNotOptArg, pComponent=defaultNamedNotOptArg, eUnit=0):
		'Adds text to the board.'
		ret = self._oleobj_.InvokeTypes(274, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (3, 1), (9, 1), (9, 1), (3, 49)),sString
			, PositionX, PositionY, eTextType, pUserlayer, pComponent
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutUserLayerTextEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')
		return ret

	# Result is of type IMGCPCBVia
	def PutVia(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, pPadstack=defaultNamedNotOptArg, pNet=0
			, pComponent=0, eFixed=0, eUnit=0):
		'Places a via on the board.'
		ret = self._oleobj_.InvokeTypes(93, LCID, 1, (9, 0), ((5, 1), (5, 1), (9, 1), (9, 49), (9, 49), (3, 49), (3, 49)),dX
			, dY, pPadstack, pNet, pComponent, eFixed
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutVia', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')
		return ret

	# Result is of type IMGCPCBPins
	def PutVirtualPinsOnFromTos(self, nPins=defaultNamedNotOptArg, pFromTos=defaultNamedNotOptArg, maxLengthVPtoVP=-1.0, maxLengthVPtoPin=-1.0
			, eUnit=0):
		'Internal use only.  Places a given number virtual pins on each given fromTo. This operation cannot be undone and clears the undo stack.'
		ret = self._oleobj_.InvokeTypes(402, LCID, 1, (9, 0), ((3, 1), (9, 1), (5, 49), (5, 49), (3, 49)),nPins
			, pFromTos, maxLengthVPtoVP, maxLengthVPtoPin, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutVirtualPinsOnFromTos', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')
		return ret

	# Result is of type IMGCPCBPins
	def PutVirtualPinsOnLocations(self, nPins=defaultNamedNotOptArg, pSafeArrayOfPoints=defaultNamedNotOptArg, pFromTo=defaultNamedNotOptArg, eUnit=0):
		'Internal use only.  Places a given number virtual pins on the board at the given location.  This operation cannot be undone and clears the undo stack.'
		ret = self._oleobj_.InvokeTypes(401, LCID, 1, (9, 0), ((3, 1), (16396, 1), (9, 1), (3, 49)),nPins
			, pSafeArrayOfPoints, pFromTo, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutVirtualPinsOnLocations', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')
		return ret

	# Result is of type IMGCPCBWireBondGuide
	def PutWireBondGuide(self, nPnts=defaultNamedNotOptArg, pSafeArrayOfPoints=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg, nLineWidth=defaultNamedNotOptArg
			, sNetName='', Facement=0):
		'Add a wire bond guide.'
		return self._ApplyTypes_(354, 1, (9, 32), ((3, 1), (16396, 1), (3, 1), (3, 1), (8, 49), (3, 49)), 'PutWireBondGuide', '{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}',nPnts
			, pSafeArrayOfPoints, eUnit, nLineWidth, sNetName, Facement
			)

	# Result is of type IMGCPCBConductorLayerGfx
	def PutWireGraphic(self, dWidth=defaultNamedNotOptArg, nPnts=defaultNamedNotOptArg, pSafeArrayOfPoints=defaultNamedNotOptArg, ReservedForFutureUse=defaultNamedNotOptArg
			, pComponent=defaultNamedNotOptArg, eUnit=0):
		'Adds the bond wire graphic. (Internal)'
		ret = self._oleobj_.InvokeTypes(257, LCID, 1, (9, 0), ((5, 1), (3, 1), (16396, 1), (12, 1), (9, 1), (3, 49)),dWidth
			, nPnts, pSafeArrayOfPoints, ReservedForFutureUse, pComponent, eUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutWireGraphic', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')
		return ret

	# Result is of type IMGCPCBDimension
	def PutXAngleDimension(self, pObj=defaultNamedNotOptArg, dX1=defaultNamedNotOptArg, dY1=defaultNamedNotOptArg, dX2=defaultNamedNotOptArg
			, dY2=defaultNamedNotOptArg, dOffset=0.0, pLayerObject=0, pScheme=0, eUnit=0):
		'Places an angular dimension between an element and the X axis.'
		ret = self._oleobj_.InvokeTypes(106, LCID, 1, (9, 0), ((9, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 49), (9, 49), (9, 49), (3, 49)),pObj
			, dX1, dY1, dX2, dY2, dOffset
			, pLayerObject, pScheme, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutXAngleDimension', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')
		return ret

	def ReleaseLocks(self, lockMask=defaultNamedNotOptArg):
		'Release given locks as defined in EPcbLockType'
		return self._oleobj_.InvokeTypes(379, LCID, 1, (24, 0), ((3, 1),),lockMask
			)

	def ReleaseSortChannel(self, sortChannelIndex=defaultNamedNotOptArg):
		'Release a previously created Sort Channel.'
		return self._oleobj_.InvokeTypes(308, LCID, 1, (24, 0), ((3, 1),),sortChannelIndex
			)

	def ReloadDatabase(self, eDatabase=defaultNamedNotOptArg):
		'Reloads the specified database(s). (Beta)'
		return self._oleobj_.InvokeTypes(150, LCID, 1, (24, 0), ((3, 1),),eDatabase
			)

	def ReplayFile(self, BFileName=defaultNamedNotOptArg):
		'Replays specified record file. (Beta)'
		return self._oleobj_.InvokeTypes(114, LCID, 1, (24, 0), ((8, 1),),BFileName
			)

	def ReportMixedShielding(self):
		'Report mixed shielding rules for user groups and constraint classes to MixedShieldingRules.txt'
		return self._oleobj_.InvokeTypes(384, LCID, 1, (11, 0), (),)

	def RequestWriteAccess(self, eDatabase=defaultNamedNotOptArg, bRequest=defaultNamedNotOptArg):
		'Provides write access to the specified database(s). (Internal use only.)'
		return self._oleobj_.InvokeTypes(151, LCID, 1, (3, 0), ((3, 1), (11, 1)),eDatabase
			, bRequest)

	# The method RouteLayerEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def RouteLayerEnabled(self, nLayer=defaultNamedNotOptArg):
		'Is layer enabled for routing?'
		return self._oleobj_.InvokeTypes(75, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	def RunIncrementalConnectivityUpdate(self):
		'Perform Incremental Connectivity Update.'
		return self._oleobj_.InvokeTypes(356, LCID, 1, (24, 0), (),)

	def Save(self):
		'Save the Document (using the FullName property).'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	def SaveAndCheckIn(self, pComment=defaultNamedNotOptArg):
		'Save the Document and perform a CheckIn.'
		return self._oleobj_.InvokeTypes(411, LCID, 1, (11, 0), ((8, 1),),pComment
			)

	def SaveAndPublishReuseBlocks(self, ReuseAreaNames=0, doPublishInSave=True):
		'Save the Document with or without publishing Managed Blocks.'
		return self._oleobj_.InvokeTypes(323, LCID, 1, (11, 0), ((12, 49), (11, 49)),ReuseAreaNames
			, doPublishInSave)

	def SaveToTemp(self):
		'Saves to the temporary location.'
		return self._oleobj_.InvokeTypes(276, LCID, 1, (11, 0), (),)

	def SelectedObjectIds(self, pObjectFilter=0):
		'Returns a list of unique ids meeting the search criteria.'
		return self._ApplyTypes_(316, 1, (12, 0), ((9, 49),), 'SelectedObjectIds', None,pObjectFilter
			)

	# The method SetConnectionCountOption is actually a property, but must be used as a method to correctly pass the arguments
	def SetConnectionCountOption(self, sortChannelIndex=0, arg1=0):
		"Sets or returns the Document's Connection Count Options."
		return self._oleobj_.InvokeTypes(301, LCID, 4, (24, 0), ((3, 49), (3, 49)),sortChannelIndex
			, arg1)

	# The method SetDBCached is actually a property, but must be used as a method to correctly pass the arguments
	def SetDBCached(self, _db=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'property DBCached'
		return self._oleobj_.InvokeTypes(303, LCID, 4, (24, 0), ((3, 1), (11, 1)),_db
			, arg1)

	def SetGroupSortInfo(self, key=defaultNamedNotOptArg, ascending=defaultNamedNotOptArg):
		'Set the group sort key and sort order.'
		return self._oleobj_.InvokeTypes(298, LCID, 1, (24, 0), ((3, 1), (11, 1)),key
			, ascending)

	# The method SetOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def SetOriginX(self, eType=defaultNamedNotOptArg, eUnit=0, arg2=defaultUnnamedArg):
		"Gets or sets the Document's X origin for the specified Origin type."
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (3, 49), (5, 1)),eType
			, eUnit, arg2)

	# The method SetOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def SetOriginY(self, eType=defaultNamedNotOptArg, eUnit=0, arg2=defaultUnnamedArg):
		"Gets or sets the Document's Y origin for the specified Origin type."
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((3, 1), (3, 49), (5, 1)),eType
			, eUnit, arg2)

	def SwapPins(self, pin1=defaultNamedNotOptArg, pin2=defaultNamedNotOptArg):
		'Swap the selected pins.'
		return self._oleobj_.InvokeTypes(318, LCID, 1, (24, 0), ((9, 1), (9, 1)),pin1
			, pin2)

	def TransactionEnd(self, bKeepChanges=True):
		'End of transaction, apply the current DRC mode to the newly added or modified data. Returns false if there was a violation in the current DRC mode.'
		return self._oleobj_.InvokeTypes(118, LCID, 1, (11, 0), ((11, 49),),bKeepChanges
			)

	def TransactionStart(self, eMode=1):
		'Acquire a Write lock and start a new Transaction (coallesce all the changes into a single Undo event). Calls to Begin/End a transaction may be nested. Specify the DRC mode to be used for all subsequent data modification operations.'
		return self._oleobj_.InvokeTypes(117, LCID, 1, (11, 0), ((3, 49),),eMode
			)

	def UnHighlightAll(self):
		'Unhighlight everything.'
		return self._oleobj_.InvokeTypes(83, LCID, 1, (24, 0), (),)

	def UnHighlightAllComponents(self):
		'Unhighlight all components.'
		return self._oleobj_.InvokeTypes(84, LCID, 1, (24, 0), (),)

	def UnHighlightAllNets(self):
		'Unhighlight all nets.'
		return self._oleobj_.InvokeTypes(85, LCID, 1, (24, 0), (),)

	def UnHighlightAllPins(self):
		'Unhighlight all pins.'
		return self._oleobj_.InvokeTypes(86, LCID, 1, (24, 0), (),)

	def UnSelectAll(self):
		'Unselect everything.'
		return self._oleobj_.InvokeTypes(53, LCID, 1, (24, 0), (),)

	def UnSelectAllComponents(self):
		'Unselect all components.'
		return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), (),)

	def UnSelectAllNets(self):
		'Unselect all nets.'
		return self._oleobj_.InvokeTypes(55, LCID, 1, (24, 0), (),)

	def UnSelectAllPins(self):
		'Unselect all pins.'
		return self._oleobj_.InvokeTypes(56, LCID, 1, (24, 0), (),)

	def UpdatePhysicalReuseInstances(self):
		'Update all out of date physical reuse circuit instances.'
		return self._oleobj_.InvokeTypes(410, LCID, 1, (24, 0), (),)

	def Validate(self, nLicenseToken=defaultNamedNotOptArg):
		'Validates the license for the automation layer.  Get a key by specifying 0 for the license token.'
		return self._oleobj_.InvokeTypes(112, LCID, 1, (3, 0), ((3, 1),),nLicenseToken
			)

	def VariantDataExists(self):
		'Returns the type of data that exists for Variants.(only currently returns if FabLink generated data exists.'
		return self._oleobj_.InvokeTypes(281, LCID, 1, (3, 0), (),)

	def VerifyLayerMapChange(self, vLayerMap=defaultNamedNotOptArg, nNumberOfNewLayers=defaultNamedNotOptArg):
		'Verifies the layer stackup when layers are added/deleted or modified'
		return self._oleobj_.InvokeTypes(327, LCID, 1, (3, 0), ((12, 1), (3, 1)),vLayerMap
			, nNumberOfNewLayers)

	def XtremeCheckinFile(self, PCBRelativeFilePath=defaultNamedNotOptArg):
		'Checks in the file and updates the copy at the master.'
		return self._oleobj_.InvokeTypes(210, LCID, 1, (24, 0), ((8, 1),),PCBRelativeFilePath
			)

	def XtremeCheckoutFile(self, PCBRelativeFilePath=defaultNamedNotOptArg):
		'Updates local file from master and checks out the file for making updates. Returns true if file was updated, false if already up-to-date.'
		return self._oleobj_.InvokeTypes(209, LCID, 1, (11, 0), ((8, 1),),PCBRelativeFilePath
			)

	def XtremeGetCheckoutOwner(self, PCBRelativeFilePath=defaultNamedNotOptArg):
		'Returns the handle of the Xtreme client that currently has the file checked out.  Returns an empty string if the file is not checkouted out.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(211, LCID, 1, (8, 0), ((8, 1),),PCBRelativeFilePath
			)

	def XtremeUpdateFile(self, PCBRelativeFilePath=defaultNamedNotOptArg):
		'Updates the local copy of the specified file with the most recent version from the master design.  Returns True if file is updated.  Returns False if the file is already up-to-date.'
		return self._oleobj_.InvokeTypes(208, LCID, 1, (11, 0), ((8, 1),),PCBRelativeFilePath
			)

	_prop_map_get_ = {
		# Method 'ActiveClearanceEngine' returns object of type 'IMGCPCBActiveClearanceEngine'
		"ActiveClearanceEngine": (293, 2, (9, 0), (), "ActiveClearanceEngine", '{D650CB6A-FA51-4F22-9F2C-F7900A4B304C}'),
		# Method 'ActiveGroup' returns object of type 'IMGCPCBGroup'
		"ActiveGroup": (299, 2, (9, 0), (), "ActiveGroup", '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}'),
		# Method 'ActiveSheet' returns object of type 'IMGCPCBSheet'
		"ActiveSheet": (219, 2, (9, 0), (), "ActiveSheet", '{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}'),
		# Method 'ActiveView' returns object of type 'IMGCPCBView'
		"ActiveView": (3, 2, (9, 0), (), "ActiveView", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}'),
		# Method 'ActiveViewEx' returns object of type 'IMGCPCBView'
		"ActiveViewEx": (279, 2, (9, 0), (), "ActiveViewEx", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}'),
		# Method 'ActualPlaneShapes' returns object of type 'IMGCPCBActualPlaneShapes'
		"ActualPlaneShapes": (153, 2, (9, 0), ((3, 49), (3, 49)), "ActualPlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}'),
		"AddViaSchemes": (390, 2, (12, 0), (), "AddViaSchemes", None),
		"AllowEditBoardGeometry": (266, 2, (11, 0), (), "AllowEditBoardGeometry", None),
		# Method 'AllowLoopsNets' returns object of type 'IMGCPCBNets'
		"AllowLoopsNets": (397, 2, (9, 0), (), "AllowLoopsNets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		# Method 'Application' returns object of type 'IMGCPCBApplication'
		"Application": (258, 2, (9, 0), (), "Application", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}'),
		# Method 'BaseNetGroup' returns object of type 'IMGCPCBNetGroup'
		"BaseNetGroup": (400, 2, (9, 0), (), "BaseNetGroup", '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}'),
		"BaseUnit": (156, 2, (3, 0), (), "BaseUnit", None),
		# Method 'BendAreas' returns object of type 'IMGCPCBBendAreas'
		"BendAreas": (349, 2, (9, 0), ((3, 49),), "BendAreas", '{6B76C06F-2E50-491B-B845-D70A57247DB0}'),
		# Method 'BoardOutline' returns object of type 'IMGCPCBBoardOutline'
		"BoardOutline": (38, 2, (9, 0), (), "BoardOutline", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED33}'),
		# Method 'Boards' returns object of type 'IMGCPCBBoards'
		"Boards": (134, 2, (9, 0), ((3, 49),), "Boards", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}'),
		# Method 'BondPads' returns object of type 'IMGCPCBBondPads'
		"BondPads": (256, 2, (9, 0), ((3, 49),), "BondPads", '{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}'),
		# Method 'BondWires' returns object of type 'IMGCPCBObjects'
		"BondWires": (255, 2, (9, 0), ((3, 49),), "BondWires", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'BreakoutTraces' returns object of type 'IMGCPCBBreakoutTraces'
		"BreakoutTraces": (80, 2, (9, 0), ((3, 49), (3, 49)), "BreakoutTraces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}'),
		# Method 'BusNets' returns object of type 'IMGCPCBNets'
		"BusNets": (300, 2, (9, 0), ((3, 49),), "BusNets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		# Method 'BusPaths' returns object of type 'IMGCPCBBusPaths'
		"BusPaths": (169, 2, (9, 0), ((3, 49), (3, 49)), "BusPaths", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA6}'),
		"CCZExportControl": (269, 2, (9, 0), (), "CCZExportControl", None),
		# Method 'Cavities' returns object of type 'IMGCPCBCavities'
		"Cavities": (260, 2, (9, 0), ((3, 49),), "Cavities", '{F6D6B8DF-76C9-425E-80A0-9DA8D54B1612}'),
		"CellEditor": (237, 2, (9, 0), (), "CellEditor", None),
		"CellNames": (220, 2, (12, 32), ((3, 49), (3, 49), (8, 49), (11, 49)), "CellNames", None),
		# Method 'Cells' returns object of type 'IMGCPCBCells'
		"Cells": (30, 2, (9, 32), ((8, 49),), "Cells", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED19}'),
		# Method 'ChangeData' returns object of type 'IMGCPCBChangeData'
		"ChangeData": (248, 2, (9, 0), ((12, 49), (12, 49)), "ChangeData", '{3637D13B-92C5-41E2-BC84-8B8815A8041C}'),
		"ChangedGeneratedPlaneData": (249, 2, (12, 0), (), "ChangedGeneratedPlaneData", None),
		# Method 'Checkpoint' returns object of type 'IMGCPCBCheckpoint'
		"Checkpoint": (289, 2, (9, 0), (), "Checkpoint", '{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}'),
		# Method 'Clearance' returns object of type 'IMGCPCBClearance'
		"Clearance": (226, 2, (9, 0), (), "Clearance", '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8B}'),
		"ClientName": (221, 2, (8, 0), (), "ClientName", None),
		# Method 'ComplexViaPatterns' returns object of type 'IMGCPCBComplexViaPatterns'
		"ComplexViaPatterns": (385, 2, (9, 0), (), "ComplexViaPatterns", '{FE804AAF-0865-4606-BD7C-E26536BD81F9}'),
		# Method 'ComplexVias' returns object of type 'IMGCPCBComplexVias'
		"ComplexVias": (386, 2, (9, 0), ((3, 49),), "ComplexVias", '{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}'),
		# Method 'Components' returns object of type 'IMGCPCBComponents'
		"Components": (22, 2, (9, 32), ((3, 49), (3, 49), (3, 49), (8, 49)), "Components", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		# Method 'ConductiveAreas' returns object of type 'IMGCPCBConductiveAreas'
		"ConductiveAreas": (44, 2, (9, 0), ((3, 49), (3, 49)), "ConductiveAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}'),
		# Method 'ConductorLayerGfxs' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs": (35, 2, (9, 0), ((3, 49), (3, 49), (3, 49), (11, 49)), "ConductorLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerGfxs2' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs2": (163, 2, (9, 32), ((16396, 49), (3, 49), (3, 49), (11, 49)), "ConductorLayerGfxs2", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerTexts' returns object of type 'IMGCPCBConductorLayerTexts'
		"ConductorLayerTexts": (71, 2, (9, 0), ((3, 49), (3, 49), (11, 49)), "ConductorLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}'),
		# Method 'ConnectionCountNets' returns object of type 'IMGCPCBNets'
		"ConnectionCountNets": (306, 2, (9, 0), (), "ConnectionCountNets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		"ConnectionCountOption": (301, 2, (3, 0), ((3, 49),), "ConnectionCountOption", None),
		# Method 'ConstraintClasses' returns object of type 'IMGCPCBConstraintClasses'
		"ConstraintClasses": (284, 2, (9, 32), ((8, 49),), "ConstraintClasses", '{AEDD489A-9A64-4842-ADF9-72F22B82C33C}'),
		# Method 'ConstructionLines' returns object of type 'IMGCPCBConstructionLines'
		"ConstructionLines": (212, 2, (9, 32), ((3, 49), (8, 49)), "ConstructionLines", '{9F40B36F-3CB4-48B6-AC53-8F42E432C5C5}'),
		# Method 'ConstructionPoints' returns object of type 'IMGCPCBConstructionPoints'
		"ConstructionPoints": (205, 2, (9, 32), ((3, 49), (8, 49)), "ConstructionPoints", '{70468F79-8CB4-4E7B-B6AE-9B167F349DC3}'),
		# Method 'Contours' returns object of type 'IMGCPCBContours'
		"Contours": (42, 2, (9, 0), ((3, 49),), "Contours", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}'),
		# Method 'CopperBalancing' returns object of type 'IMGCPCBCopperBalancing'
		"CopperBalancing": (181, 2, (9, 0), (), "CopperBalancing", '{9028C42A-551A-40C4-A596-C7A7058DC671}'),
		# Method 'CopperBalancingDatas' returns object of type 'IMGCPCBCopperBalancingDatas'
		"CopperBalancingDatas": (133, 2, (9, 0), ((3, 49), (3, 49)), "CopperBalancingDatas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8A}'),
		# Method 'CopperBalancingShapes' returns object of type 'IMGCPCBCopperBalancingShapes'
		"CopperBalancingShapes": (132, 2, (9, 0), ((3, 49), (3, 49)), "CopperBalancingShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED88}'),
		"CurrentUnit": (7, 2, (3, 0), (), "CurrentUnit", None),
		# Method 'DFFSliverAnalysis' returns object of type 'IMGCPCBDFFSliverAnalysis'
		"DFFSliverAnalysis": (196, 2, (9, 0), (), "DFFSliverAnalysis", '{CCFAFD52-099E-4BD6-B0DE-BC496050ED45}'),
		# Method 'DRCWindow' returns object of type 'IMGCPCBDRCWindow'
		"DRCWindow": (313, 2, (9, 0), (), "DRCWindow", '{B73D0A93-E85F-4B22-9CA8-E59101A04DC0}'),
		# Method 'DXFImport' returns object of type 'IMGCPCBDXFImport'
		"DXFImport": (277, 2, (9, 0), (), "DXFImport", '{E9B3363C-F1A7-4947-ABF3-3FE59EFFD055}'),
		# Method 'DataManagementEntity' returns object of type 'IMGCPCBDataManagementEntity'
		"DataManagementEntity": (406, 2, (9, 0), (), "DataManagementEntity", '{52D5D12D-8051-483C-8BDD-E9B195CE294D}'),
		"DataTag": (330, 2, (8, 0), (), "DataTag", None),
		# Method 'DefaultRFGroup' returns object of type 'IMGCPCBGroup'
		"DefaultRFGroup": (304, 2, (9, 0), (), "DefaultRFGroup", '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}'),
		# Method 'DetailedViews' returns object of type 'IMGCPCBDetailedViews'
		"DetailedViews": (135, 2, (9, 0), ((3, 49),), "DetailedViews", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}'),
		# Method 'DifferentialPairs' returns object of type 'IMGCPCBDifferentialPairs'
		"DifferentialPairs": (224, 2, (9, 0), ((3, 49),), "DifferentialPairs", '{B7CBBAF8-984C-4358-998E-F3FD7C2F761D}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (66, 2, (9, 0), ((3, 49),), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisabledCreateBAChanges": (312, 2, (11, 0), (), "DisabledCreateBAChanges", None),
		"DisplaySchemes": (195, 2, (12, 0), ((3, 49),), "DisplaySchemes", None),
		# Method 'DrillDrawings' returns object of type 'IMGCPCBDrillDrawings'
		"DrillDrawings": (61, 2, (9, 0), ((3, 49),), "DrillDrawings", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}'),
		# Method 'DrillTables' returns object of type 'IMGCPCBDrillTables'
		"DrillTables": (194, 2, (9, 0), ((3, 49),), "DrillTables", '{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}'),
		"EDXExportControl": (282, 2, (9, 0), (), "EDXExportControl", None),
		# Method 'EditorControl' returns object of type 'IMGCPCBEditorControl'
		"EditorControl": (108, 2, (9, 0), (), "EditorControl", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7D}'),
		# Method 'EmbeddedPassiveShapes' returns object of type 'IMGCPCBEmbeddedPassiveShapes'
		"EmbeddedPassiveShapes": (158, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "EmbeddedPassiveShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}'),
		# Method 'Environment' returns object of type 'IMGCPCBEnvironment'
		"Environment": (148, 2, (9, 0), (), "Environment", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED92}'),
		# Method 'FabricationLayerGfxs' returns object of type 'IMGCPCBFabricationLayerGfxs'
		"FabricationLayerGfxs": (69, 2, (9, 0), ((3, 49), (3, 49), (3, 49), (11, 49)), "FabricationLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}'),
		# Method 'FabricationLayerTexts' returns object of type 'IMGCPCBFabricationLayerTexts'
		"FabricationLayerTexts": (72, 2, (9, 0), ((3, 49), (3, 49), (3, 49), (11, 49)), "FabricationLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}'),
		# Method 'Fiducials' returns object of type 'IMGCPCBFiducials'
		"Fiducials": (31, 2, (9, 0), ((3, 49),), "Fiducials", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}'),
		"FlowType": (222, 2, (3, 0), (), "FlowType", None),
		# Method 'FromTos' returns object of type 'IMGCPCBFromTos'
		"FromTos": (29, 2, (9, 0), ((3, 49), (3, 49)), "FromTos", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}'),
		"FullName": (2, 2, (8, 0), (), "FullName", None),
		# Method 'GeneratedPlaneOutlines' returns object of type 'IMGCPCBGeneratedPlanes'
		"GeneratedPlaneOutlines": (178, 2, (9, 0), ((3, 49), (3, 49)), "GeneratedPlaneOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}'),
		# Method 'GeneratedPlanes' returns object of type 'IMGCPCBGeneratedPlanes'
		"GeneratedPlanes": (49, 2, (9, 0), ((3, 49), (3, 49)), "GeneratedPlanes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}'),
		# Method 'Groups' returns object of type 'IMGCPCBGroups'
		"Groups": (172, 2, (9, 0), ((3, 49), (3, 49), (11, 49)), "Groups", '{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}'),
		"HangerProtectionNets": (351, 2, (12, 0), (), "HangerProtectionNets", None),
		# Method 'HazardExplorer' returns object of type 'IMGCPCBHazardExplorer'
		"HazardExplorer": (348, 2, (9, 0), (), "HazardExplorer", '{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}'),
		# Method 'Hazards' returns object of type 'IMGCPCBHazards'
		"Hazards": (165, 2, (9, 32), ((16396, 49),), "Hazards", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}'),
		# Method 'HazardsEx' returns object of type 'IMGCPCBHazards'
		"HazardsEx": (251, 2, (9, 32), ((16396, 49), (3, 49)), "HazardsEx", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}'),
		"HoleNames": (228, 2, (12, 32), ((8, 49), (11, 49)), "HoleNames", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (37, 2, (9, 32), ((8, 49),), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		# Method 'IDFImport' returns object of type 'IMGCPCBIDFImport'
		"IDFImport": (197, 2, (9, 0), (), "IDFImport", '{6F314C25-CF10-405C-ADBD-F9D1CC8733CD}'),
		# Method 'Images' returns object of type 'IMGCPCBImages'
		"Images": (380, 2, (9, 0), ((3, 49),), "Images", '{E35CE437-C28B-4021-85A6-EEB20664B18B}'),
		# Method 'InsertionOutlines' returns object of type 'IMGCPCBInsertionOutlines'
		"InsertionOutlines": (235, 2, (9, 0), ((3, 49), (3, 49)), "InsertionOutlines", '{B9781283-DCA6-44C7-975D-DB76652A3391}'),
		"LayerCount": (17, 2, (3, 0), (), "LayerCount", None),
		# Method 'LayerRanges' returns object of type 'IMGCPCBLayerRanges'
		"LayerRanges": (109, 2, (9, 0), (), "LayerRanges", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}'),
		# Method 'LayerStack' returns object of type 'IMGCPCBLayerObjects'
		"LayerStack": (157, 2, (9, 0), ((11, 49),), "LayerStack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}'),
		"LibraryServices": (262, 2, (9, 0), (), "LibraryServices", None),
		# Method 'ManufacturingOutline' returns object of type 'IMGCPCBManufacturingOutline'
		"ManufacturingOutline": (140, 2, (9, 0), (), "ManufacturingOutline", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED91}'),
		"MaskEngine": (326, 2, (9, 0), (), "MaskEngine", None),
		"MasterFullName": (268, 2, (8, 0), (), "MasterFullName", None),
		"MasterPath": (267, 2, (8, 0), (), "MasterPath", None),
		# Method 'MatchLengthGroups' returns object of type 'IMGCPCBMatchLengthGroups'
		"MatchLengthGroups": (225, 2, (9, 0), ((3, 49),), "MatchLengthGroups", '{62A90059-38AB-4024-8A7C-0829DE185371}'),
		# Method 'Materials' returns object of type 'IMGCPCBMaterials'
		"Materials": (305, 2, (9, 0), ((3, 49),), "Materials", '{427B888F-9F9E-4408-B28C-8ECD4A5B696C}'),
		# Method 'MetalizationAreas' returns object of type 'IMGCPCBMetalizationAreas'
		"MetalizationAreas": (198, 2, (9, 0), ((3, 49), (3, 49)), "MetalizationAreas", '{F48923B1-F092-42C5-8108-1256A55CDB86}'),
		# Method 'MountingHoles' returns object of type 'IMGCPCBMountingHoles'
		"MountingHoles": (45, 2, (9, 0), ((3, 49),), "MountingHoles", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}'),
		# Method 'MultiBoardOutlines' returns object of type 'IMGCPCBMultiBoardOutlines'
		"MultiBoardOutlines": (357, 2, (9, 32), ((3, 49), (8, 49)), "MultiBoardOutlines", '{D69EB1A8-F5FC-4897-AD3C-676C50CF60AC}'),
		# Method 'MultiVias' returns object of type 'IMGCPCBMultiVias'
		"MultiVias": (166, 2, (9, 0), ((3, 49),), "MultiVias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'NetClasses' returns object of type 'IMGCPCBNetClasses'
		"NetClasses": (24, 2, (9, 32), ((8, 49),), "NetClasses", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED11}'),
		# Method 'NetGroups' returns object of type 'IMGCPCBNetGroups'
		"NetGroups": (294, 2, (9, 0), ((3, 49), (3, 49), (11, 49)), "NetGroups", '{DF8FC11D-AFBD-41A9-AF29-8821B9164732}'),
		# Method 'Nets' returns object of type 'IMGCPCBNets'
		"Nets": (23, 2, (9, 32), ((3, 49), (11, 49), (8, 49)), "Nets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		# Method 'Obstructs' returns object of type 'IMGCPCBObstructs'
		"Obstructs": (41, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "Obstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}'),
		# Method 'OutgassingVoidsSettings' returns object of type 'IMGCPCBOutgassingVoidsSettings'
		"OutgassingVoidsSettings": (383, 2, (9, 0), (), "OutgassingVoidsSettings", '{B23A65B4-1FAE-4B6C-B55D-DF78F9D3735A}'),
		"PadstackEditor": (239, 2, (9, 0), (), "PadstackEditor", None),
		"PadstackNames": (227, 2, (12, 32), ((3, 49), (3, 49), (8, 49), (11, 49)), "PadstackNames", None),
		# Method 'PadstackObjects' returns object of type 'IMGCPCBPadstackObjects'
		"PadstackObjects": (82, 2, (9, 0), ((3, 49), (3, 49)), "PadstackObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}'),
		# Method 'Padstacks' returns object of type 'IMGCPCBPadstacks'
		"Padstacks": (36, 2, (9, 32), ((8, 49),), "Padstacks", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}'),
		# Method 'PanelBorder' returns object of type 'IMGCPCBPanelBorder'
		"PanelBorder": (128, 2, (9, 0), (), "PanelBorder", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED84}'),
		# Method 'PanelOutline' returns object of type 'IMGCPCBPanelOutline'
		"PanelOutline": (126, 2, (9, 0), (), "PanelOutline", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED83}'),
		# Method 'Panels' returns object of type 'IMGCPCBPanels'
		"Panels": (184, 2, (9, 0), ((3, 49),), "Panels", '{C0072D28-C269-4E34-86D1-FE550D7FD7AB}'),
		"ParametricUtility": (215, 2, (9, 0), (), "ParametricUtility", None),
		"PartEditor": (240, 2, (9, 0), (), "PartEditor", None),
		"PartNames": (347, 2, (12, 32), ((8, 49), (11, 49)), "PartNames", None),
		"PartitionName": (252, 2, (8, 0), (), "PartitionName", None),
		# Method 'Parts' returns object of type 'IMGCPCBParts'
		"Parts": (25, 2, (9, 32), ((8, 49),), "Parts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED20}'),
		"Path": (1, 2, (8, 0), (), "Path", None),
		# Method 'PhysicalReuseLibraryCircuits' returns object of type 'IMGCPCBPhysicalReuseLibraryCircuits'
		"PhysicalReuseLibraryCircuits": (408, 2, (9, 0), (), "PhysicalReuseLibraryCircuits", '{4E0A6DAF-4C0D-415C-B43D-A6A1ED666FE6}'),
		# Method 'Pins' returns object of type 'IMGCPCBPins'
		"Pins": (26, 2, (9, 0), ((3, 49),), "Pins", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}'),
		# Method 'PlacementObstructs' returns object of type 'IMGCPCBPlacementObstructs'
		"PlacementObstructs": (40, 2, (9, 0), ((3, 49), (3, 49)), "PlacementObstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}'),
		# Method 'PlacementOutlines' returns object of type 'IMGCPCBPlacementOutlines'
		"PlacementOutlines": (48, 2, (9, 0), ((3, 49), (3, 49)), "PlacementOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}'),
		# Method 'PlaneAssignments' returns object of type 'IMGCPCBPlaneAssignments'
		"PlaneAssignments": (203, 2, (9, 0), ((3, 49),), "PlaneAssignments", '{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}'),
		# Method 'PlaneClasses' returns object of type 'IMGCPCBPlaneClasses'
		"PlaneClasses": (201, 2, (9, 0), (), "PlaneClasses", '{A86800CB-BF55-4C68-ACD4-23E5E63A8F78}'),
		# Method 'PlaneEditingSketches' returns object of type 'IMGCPCBPlaneEditingSketches'
		"PlaneEditingSketches": (179, 2, (9, 0), ((3, 49), (3, 49)), "PlaneEditingSketches", '{6C221751-C228-4D62-9393-F0E4A5169EFB}'),
		# Method 'PlaneShapes' returns object of type 'IMGCPCBPlaneShapes'
		"PlaneShapes": (47, 2, (9, 0), ((3, 49), (3, 49)), "PlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}'),
		"PlanningGroupsBubbleShape": (309, 2, (3, 0), (), "PlanningGroupsBubbleShape", None),
		# Method 'PlowUtilities' returns object of type 'IMGCPCBPlowUtilities'
		"PlowUtilities": (287, 2, (9, 0), (), "PlowUtilities", '{C2DF1786-E310-4E24-B331-225D0EB92338}'),
		"ProhibitViaMergingNets": (352, 2, (12, 0), (), "ProhibitViaMergingNets", None),
		"ProjectIntegration": (200, 2, (9, 0), (), "ProjectIntegration", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (207, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"PublishableReuseAreaNames": (322, 2, (12, 0), (), "PublishableReuseAreaNames", None),
		# Method 'RecentlyUnPlacedComponents' returns object of type 'IMGCPCBComponents'
		"RecentlyUnPlacedComponents": (171, 2, (9, 0), (), "RecentlyUnPlacedComponents", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		# Method 'ReservedAreas' returns object of type 'IMGCPCBReservedAreas'
		"ReservedAreas": (310, 2, (9, 0), ((3, 49), (3, 49)), "ReservedAreas", '{9C207921-4551-473E-94BC-1C7EDB8B5A1B}'),
		# Method 'ResistorShapes' returns object of type 'IMGCPCBResistorShapes'
		"ResistorShapes": (265, 2, (9, 0), ((3, 49), (3, 49)), "ResistorShapes", '{DC0CD70D-0F4E-4DB7-9D0B-6AD595D27C1F}'),
		"RespectComponentPlacementDRC": (412, 2, (11, 0), (), "RespectComponentPlacementDRC", None),
		"ReturnUniqueIdsAsIntegers": (243, 2, (11, 0), (), "ReturnUniqueIdsAsIntegers", None),
		"ReuseAreaBlocks": (321, 2, (12, 0), ((3, 49),), "ReuseAreaBlocks", None),
		# Method 'ReuseAreas' returns object of type 'IMGCPCBReuseAreas'
		"ReuseAreas": (320, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "ReuseAreas", '{3575F847-F278-44C6-BBC8-F79FA9E37CDB}'),
		"ReuseBlockNames": (364, 2, (12, 0), ((11, 49),), "ReuseBlockNames", None),
		# Method 'Rooms' returns object of type 'IMGCPCBRooms'
		"Rooms": (46, 2, (9, 0), ((3, 49), (3, 49)), "Rooms", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}'),
		# Method 'RouteBorder' returns object of type 'IMGCPCBRouteBorder'
		"RouteBorder": (39, 2, (9, 0), (), "RouteBorder", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}'),
		# Method 'RouteFences' returns object of type 'IMGCPCBRouteFences'
		"RouteFences": (162, 2, (9, 0), ((3, 49), (3, 49)), "RouteFences", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9C}'),
		# Method 'RuleAreas' returns object of type 'IMGCPCBRuleAreas'
		"RuleAreas": (43, 2, (9, 0), ((3, 49), (3, 49)), "RuleAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1B}'),
		# Method 'Sandboxes' returns object of type 'IMGCPCBSandboxes'
		"Sandboxes": (246, 2, (9, 32), ((8, 49), (3, 49)), "Sandboxes", '{BD848A19-1634-4C73-BADF-459C5B94BA4C}'),
		"SessionType": (120, 2, (3, 0), (), "SessionType", None),
		# Method 'SetupParameter' returns object of type 'IMGCPCBSetupParameter'
		"SetupParameter": (90, 2, (9, 0), (), "SetupParameter", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6E}'),
		# Method 'ShearingHoles' returns object of type 'IMGCPCBShearingHoles'
		"ShearingHoles": (131, 2, (9, 0), ((3, 49),), "ShearingHoles", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8E}'),
		# Method 'SheetOutline' returns object of type 'IMGCPCBSheetOutline'
		"SheetOutline": (185, 2, (9, 0), (), "SheetOutline", '{8906B110-98F5-44A5-BD6C-DCE96AC36C87}'),
		# Method 'Sheets' returns object of type 'IMGCPCBSheets'
		"Sheets": (218, 2, (9, 32), ((8, 49),), "Sheets", '{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}'),
		# Method 'ShieldingGroups' returns object of type 'IMGCPCBNetGroups'
		"ShieldingGroups": (342, 2, (9, 32), ((8, 49),), "ShieldingGroups", '{DF8FC11D-AFBD-41A9-AF29-8821B9164732}'),
		# Method 'SketchPlanVias' returns object of type 'IMGCPCBSketchPlanVias'
		"SketchPlanVias": (389, 2, (9, 0), ((3, 49),), "SketchPlanVias", '{DFE5ADA4-8560-4DCB-B850-D84BBEF0562B}'),
		# Method 'SketchPlans' returns object of type 'IMGCPCBSketchPlans'
		"SketchPlans": (376, 2, (9, 0), ((3, 49), (3, 49)), "SketchPlans", '{2F037114-93ED-4C02-B835-6EC2ECD32E3C}'),
		"SketchPlansInDesign": (355, 2, (11, 0), (), "SketchPlansInDesign", None),
		# Method 'StackupSchemes' returns object of type 'IMGCPCBStackupSchemes'
		"StackupSchemes": (395, 2, (9, 0), (), "StackupSchemes", '{E17DBE7F-A013-4E92-9F62-E20CE0AEB25D}'),
		"SyncLayerStackAndPlaneLayers": (329, 2, (11, 0), (), "SyncLayerStackAndPlaneLayers", None),
		"System3D": (317, 2, (9, 0), (), "System3D", None),
		# Method 'TargetAreas' returns object of type 'IMGCPCBTargetAreas'
		"TargetAreas": (168, 2, (9, 0), ((3, 49), (3, 49)), "TargetAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA2}'),
		# Method 'Teardrops' returns object of type 'IMGCPCBTeardrops'
		"Teardrops": (81, 2, (9, 0), ((3, 49), (3, 49)), "Teardrops", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}'),
		# Method 'TestFixtureOutline' returns object of type 'IMGCPCBTestFixtureOutline'
		"TestFixtureOutline": (270, 2, (9, 0), (), "TestFixtureOutline", '{585FFB16-62CC-4252-BE51-45D541FA8266}'),
		# Method 'TieLegs' returns object of type 'IMGCPCBTieLegs'
		"TieLegs": (154, 2, (9, 0), ((3, 49), (3, 49)), "TieLegs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}'),
		# Method 'Tiebars' returns object of type 'IMGCPCBTiebars'
		"Tiebars": (415, 2, (9, 0), ((3, 49),), "Tiebars", '{0B2A45D4-326B-493F-A476-16B04123A8CB}'),
		# Method 'ToolingHoles' returns object of type 'IMGCPCBToolingHoles'
		"ToolingHoles": (129, 2, (9, 0), ((3, 49),), "ToolingHoles", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED86}'),
		# Method 'Tracedrops' returns object of type 'IMGCPCBTracedrops'
		"Tracedrops": (325, 2, (9, 0), ((3, 49), (3, 49)), "Tracedrops", '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}'),
		# Method 'Traces' returns object of type 'IMGCPCBTraces'
		"Traces": (27, 2, (9, 0), ((3, 49), (3, 49)), "Traces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}'),
		"UseSelectionFilter": (314, 2, (11, 0), (), "UseSelectionFilter", None),
		# Method 'UserLayerGfxs' returns object of type 'IMGCPCBUserLayerGfxs'
		"UserLayerGfxs": (70, 2, (9, 32), ((3, 49), (8, 49), (11, 49)), "UserLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}'),
		# Method 'UserLayerTexts' returns object of type 'IMGCPCBUserLayerTexts'
		"UserLayerTexts": (73, 2, (9, 32), ((3, 49), (8, 49), (11, 49)), "UserLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}'),
		# Method 'UserLayers' returns object of type 'IMGCPCBUserLayers'
		"UserLayers": (87, 2, (9, 0), (), "UserLayers", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED70}'),
		"VariantManagerControl": (244, 2, (9, 0), (), "VariantManagerControl", None),
		"VerifyControl": (159, 2, (9, 0), (), "VerifyControl", None),
		"VerifyResults": (160, 2, (9, 0), (), "VerifyResults", None),
		"VerifyStatus": (161, 2, (9, 0), (), "VerifyStatus", None),
		# Method 'ViaUtility' returns object of type 'IMGCPCBViaUtility'
		"ViaUtility": (393, 2, (9, 0), (), "ViaUtility", '{64167F8C-BA98-4CB3-B48F-9D5CDC0FDE50}'),
		# Method 'Vias' returns object of type 'IMGCPCBVias'
		"Vias": (28, 2, (9, 0), ((3, 49),), "Vias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}'),
		# Method 'Views' returns object of type 'IMGCPCBViews'
		"Views": (192, 2, (9, 32), ((3, 49), (8, 49)), "Views", '{05700A92-D895-44BB-96C1-9D5BCCAE050F}'),
		# Method 'ViewsEx' returns object of type 'IMGCPCBViews'
		"ViewsEx": (280, 2, (9, 32), ((3, 49), (8, 49)), "ViewsEx", '{05700A92-D895-44BB-96C1-9D5BCCAE050F}'),
		# Method 'WireBondGuides' returns object of type 'IMGCPCBWireBondGuides'
		"WireBondGuides": (345, 2, (9, 0), ((3, 49),), "WireBondGuides", '{405FFFFA-4B23-4032-AC7F-4170EE726100}'),
		# Method 'XProbe' returns object of type 'IMGCPCBXProbe'
		"XProbe": (16, 2, (9, 0), (), "XProbe", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED28}'),
	}
	_prop_map_put_ = {
		"ActiveGroup": ((299, LCID, 4, 0),()),
		"ActiveSheet": ((219, LCID, 4, 0),()),
		"Checkpoint": ((289, LCID, 8, 0),()),
		"ClientName": ((221, LCID, 4, 0),()),
		"ConnectionCountNets": ((306, LCID, 4, 0),()),
		"CurrentUnit": ((7, LCID, 4, 0),()),
		"DataTag": ((330, LCID, 4, 0),()),
		"FireOnChangeForDynamics": ((199, LCID, 4, 0),()),
		"HangerProtectionNets": ((351, LCID, 4, 0),()),
		"PlanningGroupsBubbleShape": ((309, LCID, 4, 0),()),
		"ProhibitViaMergingNets": ((352, LCID, 4, 0),()),
		"RespectComponentPlacementDRC": ((412, LCID, 4, 0),()),
		"ReturnUniqueIdsAsIntegers": ((243, LCID, 4, 0),()),
		"SyncLayerStackAndPlaneLayers": ((329, LCID, 4, 0),()),
		"UseOnPreComponentsPlaced": ((344, LCID, 4, 0),()),
		"UseSelectionFilter": ((314, LCID, 4, 0),()),
	}

	ActiveClearanceEngine: str # IMGCPCBActiveClearanceEngine; read_only
	ActiveGroup: str # read/write
	ActiveSheet: str # read/write
	ActiveView: str # IMGCPCBView; read_only
	ActiveViewEx: str # IMGCPCBView; read_only
	ActualPlaneShapes: str # IMGCPCBActualPlaneShapes; read_only
	AddViaSchemes: str # read_only
	AllowEditBoardGeometry: str # read_only
	AllowLoopsNets: str # IMGCPCBNets; read_only
	Application: str # IMGCPCBApplication; read_only
	BaseNetGroup: str # IMGCPCBNetGroup; read_only
	BaseUnit: str # read_only
	BendAreas: str # IMGCPCBBendAreas; read_only
	BoardOutline: str # IMGCPCBBoardOutline; read_only
	Boards: str # IMGCPCBBoards; read_only
	BondPads: str # IMGCPCBBondPads; read_only
	BondWires: str # IMGCPCBObjects; read_only
	BreakoutTraces: str # IMGCPCBBreakoutTraces; read_only
	BusNets: str # IMGCPCBNets; read_only
	BusPaths: str # IMGCPCBBusPaths; read_only
	CCZExportControl: str # read_only
	Cavities: str # IMGCPCBCavities; read_only
	CellEditor: str # read_only
	CellNames: str # read_only
	Cells: str # IMGCPCBCells; read_only
	ChangeData: str # IMGCPCBChangeData; read_only
	ChangedGeneratedPlaneData: str # read_only
	Checkpoint: str # read/write
	Clearance: str # IMGCPCBClearance; read_only
	ClientName: str # read/write
	ComplexViaPatterns: str # IMGCPCBComplexViaPatterns; read_only
	ComplexVias: str # IMGCPCBComplexVias; read_only
	Components: str # IMGCPCBComponents; read_only
	ConductiveAreas: str # IMGCPCBConductiveAreas; read_only
	ConductorLayerGfxs: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerGfxs2: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerTexts: str # IMGCPCBConductorLayerTexts; read_only
	ConnectionCountNets: str # read/write
	ConnectionCountOption: str # read_only
	ConstraintClasses: str # IMGCPCBConstraintClasses; read_only
	ConstructionLines: str # IMGCPCBConstructionLines; read_only
	ConstructionPoints: str # IMGCPCBConstructionPoints; read_only
	Contours: str # IMGCPCBContours; read_only
	CopperBalancing: str # IMGCPCBCopperBalancing; read_only
	CopperBalancingDatas: str # IMGCPCBCopperBalancingDatas; read_only
	CopperBalancingShapes: str # IMGCPCBCopperBalancingShapes; read_only
	CurrentUnit: str # read/write
	DFFSliverAnalysis: str # IMGCPCBDFFSliverAnalysis; read_only
	DRCWindow: str # IMGCPCBDRCWindow; read_only
	DXFImport: str # IMGCPCBDXFImport; read_only
	DataManagementEntity: str # IMGCPCBDataManagementEntity; read_only
	DataTag: str # read/write
	DefaultRFGroup: str # IMGCPCBGroup; read_only
	DetailedViews: str # IMGCPCBDetailedViews; read_only
	DifferentialPairs: str # IMGCPCBDifferentialPairs; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisabledCreateBAChanges: str # read_only
	DisplaySchemes: str # read_only
	DrillDrawings: str # IMGCPCBDrillDrawings; read_only
	DrillTables: str # IMGCPCBDrillTables; read_only
	EDXExportControl: str # read_only
	EditorControl: str # IMGCPCBEditorControl; read_only
	EmbeddedPassiveShapes: str # IMGCPCBEmbeddedPassiveShapes; read_only
	Environment: str # IMGCPCBEnvironment; read_only
	FabricationLayerGfxs: str # IMGCPCBFabricationLayerGfxs; read_only
	FabricationLayerTexts: str # IMGCPCBFabricationLayerTexts; read_only
	Fiducials: str # IMGCPCBFiducials; read_only
	FlowType: str # read_only
	FromTos: str # IMGCPCBFromTos; read_only
	FullName: str # read_only
	GeneratedPlaneOutlines: str # IMGCPCBGeneratedPlanes; read_only
	GeneratedPlanes: str # IMGCPCBGeneratedPlanes; read_only
	Groups: str # IMGCPCBGroups; read_only
	HangerProtectionNets: str # read/write
	HazardExplorer: str # IMGCPCBHazardExplorer; read_only
	Hazards: str # IMGCPCBHazards; read_only
	HazardsEx: str # IMGCPCBHazards; read_only
	HoleNames: str # read_only
	Holes: str # IMGCPCBHoles; read_only
	IDFImport: str # IMGCPCBIDFImport; read_only
	Images: str # IMGCPCBImages; read_only
	InsertionOutlines: str # IMGCPCBInsertionOutlines; read_only
	LayerCount: str # read_only
	LayerRanges: str # IMGCPCBLayerRanges; read_only
	LayerStack: str # IMGCPCBLayerObjects; read_only
	LibraryServices: str # read_only
	ManufacturingOutline: str # IMGCPCBManufacturingOutline; read_only
	MaskEngine: str # read_only
	MasterFullName: str # read_only
	MasterPath: str # read_only
	MatchLengthGroups: str # IMGCPCBMatchLengthGroups; read_only
	Materials: str # IMGCPCBMaterials; read_only
	MetalizationAreas: str # IMGCPCBMetalizationAreas; read_only
	MountingHoles: str # IMGCPCBMountingHoles; read_only
	MultiBoardOutlines: str # IMGCPCBMultiBoardOutlines; read_only
	MultiVias: str # IMGCPCBMultiVias; read_only
	Name: str # read_only
	NetClasses: str # IMGCPCBNetClasses; read_only
	NetGroups: str # IMGCPCBNetGroups; read_only
	Nets: str # IMGCPCBNets; read_only
	Obstructs: str # IMGCPCBObstructs; read_only
	OutgassingVoidsSettings: str # IMGCPCBOutgassingVoidsSettings; read_only
	PadstackEditor: str # read_only
	PadstackNames: str # read_only
	PadstackObjects: str # IMGCPCBPadstackObjects; read_only
	Padstacks: str # IMGCPCBPadstacks; read_only
	PanelBorder: str # IMGCPCBPanelBorder; read_only
	PanelOutline: str # IMGCPCBPanelOutline; read_only
	Panels: str # IMGCPCBPanels; read_only
	ParametricUtility: str # read_only
	PartEditor: str # read_only
	PartNames: str # read_only
	PartitionName: str # read_only
	Parts: str # IMGCPCBParts; read_only
	Path: str # read_only
	PhysicalReuseLibraryCircuits: str # IMGCPCBPhysicalReuseLibraryCircuits; read_only
	Pins: str # IMGCPCBPins; read_only
	PlacementObstructs: str # IMGCPCBPlacementObstructs; read_only
	PlacementOutlines: str # IMGCPCBPlacementOutlines; read_only
	PlaneAssignments: str # IMGCPCBPlaneAssignments; read_only
	PlaneClasses: str # IMGCPCBPlaneClasses; read_only
	PlaneEditingSketches: str # IMGCPCBPlaneEditingSketches; read_only
	PlaneShapes: str # IMGCPCBPlaneShapes; read_only
	PlanningGroupsBubbleShape: str # read/write
	PlowUtilities: str # IMGCPCBPlowUtilities; read_only
	ProhibitViaMergingNets: str # read/write
	ProjectIntegration: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	PublishableReuseAreaNames: str # read_only
	RecentlyUnPlacedComponents: str # IMGCPCBComponents; read_only
	ReservedAreas: str # IMGCPCBReservedAreas; read_only
	ResistorShapes: str # IMGCPCBResistorShapes; read_only
	RespectComponentPlacementDRC: str # read/write
	ReturnUniqueIdsAsIntegers: str # read/write
	ReuseAreaBlocks: str # read_only
	ReuseAreas: str # IMGCPCBReuseAreas; read_only
	ReuseBlockNames: str # read_only
	Rooms: str # IMGCPCBRooms; read_only
	RouteBorder: str # IMGCPCBRouteBorder; read_only
	RouteFences: str # IMGCPCBRouteFences; read_only
	RuleAreas: str # IMGCPCBRuleAreas; read_only
	Sandboxes: str # IMGCPCBSandboxes; read_only
	SessionType: str # read_only
	SetupParameter: str # IMGCPCBSetupParameter; read_only
	ShearingHoles: str # IMGCPCBShearingHoles; read_only
	SheetOutline: str # IMGCPCBSheetOutline; read_only
	Sheets: str # IMGCPCBSheets; read_only
	ShieldingGroups: str # IMGCPCBNetGroups; read_only
	SketchPlanVias: str # IMGCPCBSketchPlanVias; read_only
	SketchPlans: str # IMGCPCBSketchPlans; read_only
	SketchPlansInDesign: str # read_only
	StackupSchemes: str # IMGCPCBStackupSchemes; read_only
	SyncLayerStackAndPlaneLayers: str # read/write
	System3D: str # read_only
	TargetAreas: str # IMGCPCBTargetAreas; read_only
	Teardrops: str # IMGCPCBTeardrops; read_only
	TestFixtureOutline: str # IMGCPCBTestFixtureOutline; read_only
	TieLegs: str # IMGCPCBTieLegs; read_only
	Tiebars: str # IMGCPCBTiebars; read_only
	ToolingHoles: str # IMGCPCBToolingHoles; read_only
	Tracedrops: str # IMGCPCBTracedrops; read_only
	Traces: str # IMGCPCBTraces; read_only
	UseSelectionFilter: str # read/write
	UserLayerGfxs: str # IMGCPCBUserLayerGfxs; read_only
	UserLayerTexts: str # IMGCPCBUserLayerTexts; read_only
	UserLayers: str # IMGCPCBUserLayers; read_only
	VariantManagerControl: str # read_only
	VerifyControl: str # read_only
	VerifyResults: str # read_only
	VerifyStatus: str # read_only
	ViaUtility: str # IMGCPCBViaUtility; read_only
	Vias: str # IMGCPCBVias; read_only
	Views: str # IMGCPCBViews; read_only
	ViewsEx: str # IMGCPCBViews; read_only
	WireBondGuides: str # IMGCPCBWireBondGuides; read_only
	XProbe: str # IMGCPCBXProbe; read_only
	FireOnChangeForDynamics: str # write_only
	UseOnPreComponentsPlaced: str # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDrillDrawing(DispatchBaseClass):
	'MGCPCB Drill Drawing Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}')
	coclass_clsid = IID('{EDEDED46-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsDimensionGfx(self):
		'Determines if this graphics item is dimension graphics.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(36, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FromLayer": (40, 2, (3, 0), (), "FromLayer", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (45, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (43, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (44, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (31, 2, (3, 0), (), "Side", None),
		"SideName": (32, 2, (8, 0), (), "SideName", None),
		"ToLayer": (41, 2, (3, 0), (), "ToLayer", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"UniqueId": (42, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FromLayer: str # read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Side: str # read_only
	SideName: str # read_only
	ToLayer: str # read_only
	Type: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDrillDrawings(DispatchBaseClass):
	'MGCPCB Drill Drawing collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')
	coclass_clsid = IID('{EDEDED47-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pDrillDrawing=defaultNamedNotOptArg):
		'Adds a drill drawing to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pDrillDrawing
			)

	def Delete(self):
		'Delete all drill drawings in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBDrillDrawing
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the drill drawing of a given index in the drill drawings collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort drill drawings in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the drill drawing of a given index in the drill drawings collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBDrillTable(DispatchBaseClass):
	'MGCPCB Drill Table Object.'
	CLSID = IID('{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}')
	coclass_clsid = IID('{022D2D2D-A8EB-47EA-8D44-DB1DC78E5791}')

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		"Sets or returns the Drill Table's orientation."
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the Drill Table's X position."
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the Drill Table's Y position."
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid Drill Table.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Move(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Moves the Drill Table to given location.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		"Sets or returns the Drill Table's orientation."
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Anchor": (5, 2, (3, 0), (), "Anchor", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (12, 2, (3, 0), (), "FixLock", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Orientation": (3, 2, (5, 0), ((3, 49),), "Orientation", None),
		"PositionX": (1, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (2, 2, (5, 0), ((3, 49),), "PositionY", None),
		"Selected": (4, 2, (11, 0), (), "Selected", None),
		"Side": (10, 2, (3, 0), (), "Side", None),
	}
	_prop_map_put_ = {
		"Anchor": ((5, LCID, 4, 0),()),
		"FixLock": ((12, LCID, 4, 0),()),
		"Orientation": ((3, LCID, 4, 0),()),
		"Selected": ((4, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Name: str # read_only
	Orientation: str # read/write
	PositionX: str # read_only
	PositionY: str # read_only
	Selected: bool # read/write
	Side: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBDrillTables(DispatchBaseClass):
	'MGCPCB Drill Tables collection.'
	CLSID = IID('{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}')
	coclass_clsid = IID('{C7BC8E5F-F3D1-4A50-AF40-C0F7283A38F2}')

	def Add(self, pDrillTable=defaultNamedNotOptArg):
		'Adds a drill table to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pDrillTable
			)

	def Delete(self):
		'Delete all drill tables in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBDrillTable
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the panel of a given index in the boards collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort drill tables in this collection by location.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the panel of a given index in the boards collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBEditBox(DispatchBaseClass):
	'MGCPCB Dialog Edit Box Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9A}')
	coclass_clsid = IID('{EDEDED9A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def IsValid(self):
		'Returns true if this a valid edit box button.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	def SetCursorPosition(self, cursorPosition=defaultNamedNotOptArg):
		'Sets cursor to position in edit box.  If cursorPosition is -1, cursor is placed after last character.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((3, 1),),cursorPosition
			)

	_prop_map_get_ = {
		"Text": (1, 2, (8, 0), (), "Text", None),
	}
	_prop_map_put_ = {
		"Text": ((1, LCID, 4, 0),()),
	}

	Text: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBEditorControl(DispatchBaseClass):
	'MGCPCB Editor Control Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7D}')
	coclass_clsid = IID('{EDEDED7D-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method AutoSave is actually a property, but must be used as a method to correctly pass the arguments
	def AutoSave(self, eRouteMode=defaultNamedNotOptArg):
		'Sets or returns the auto save interval for a given mode.'
		return self._oleobj_.InvokeTypes(0, LCID, 2, (3, 0), ((3, 1),),eRouteMode
			)

	# The method EnableGlossSpread is actually a property, but must be used as a method to correctly pass the arguments
	def EnableGlossSpread(self, eOption=defaultNamedNotOptArg):
		'Sets or returns whether "Additional gloss spreading clearance" is enabled.'
		return self._oleobj_.InvokeTypes(105, LCID, 2, (11, 0), ((3, 1),),eOption
			)

	def ExcludeFilterNet(self, pFilterNet=defaultNamedNotOptArg):
		'Excluded filter net from the collection.'
		return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((9, 1),),pFilterNet
			)

	# The method ExposedMetalClearances is actually a property, but must be used as a method to correctly pass the arguments
	def ExposedMetalClearances(self, eSide=defaultNamedNotOptArg, eUnit=0):
		'Sets or returns the exposed metal clearances on outer layer.'
		return self._oleobj_.InvokeTypes(74, LCID, 2, (5, 0), ((3, 1), (3, 49)),eSide
			, eUnit)

	# The method GetAdvancedGlossOption is actually a property, but must be used as a method to correctly pass the arguments
	def GetAdvancedGlossOption(self, eGloss=0):
		'Sets or returns advanced gloss options'
		return self._oleobj_.InvokeTypes(54, LCID, 2, (11, 0), ((3, 49),),eGloss
			)

	# The method GetCurveTraceMinRadius is actually a property, but must be used as a method to correctly pass the arguments
	def GetCurveTraceMinRadius(self, eUnit=0):
		'Gets or sets the curve trace minimum radius. If 0 radius is not set.'
		return self._oleobj_.InvokeTypes(67, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetCurveTraceRadius is actually a property, but must be used as a method to correctly pass the arguments
	def GetCurveTraceRadius(self, eUnit=0):
		"Gets or sets the curve trace radius. If 0 radius is 'Variable'."
		return self._oleobj_.InvokeTypes(66, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDraftGridChoices is actually a property, but must be used as a method to correctly pass the arguments
	def GetDraftGridChoices(self, eUnit=0):
		'Returns an array of draft grid choices.'
		return self._ApplyTypes_(102, 2, (12, 0), ((3, 49),), 'GetDraftGridChoices', None,eUnit
			)

	# The method GetGrid is actually a property, but must be used as a method to correctly pass the arguments
	def GetGrid(self, eType=2, eUnit=0):
		'Sets or returns the grid of the specified type. If the grid value is zero, it means no grid is defined. For a grid, the X and Y are identical.'
		return self._oleobj_.InvokeTypes(36, LCID, 2, (5, 0), ((3, 49), (3, 49)),eType
			, eUnit)

	# The method GetPadEntryGlobalRules is actually a property, but must be used as a method to correctly pass the arguments
	def GetPadEntryGlobalRules(self, ePadShape=0, eRules=0):
		'Sets or returns Pad Entry global rules (applicable to only rect & oblong pads).'
		return self._oleobj_.InvokeTypes(30, LCID, 2, (11, 0), ((3, 49), (3, 49)),ePadShape
			, eRules)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, ePadShape=0):
		'Returns the pad collection containing pads with different names irrespective of the layer on which they are present.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 2, (9, 0), ((3, 49),),ePadShape
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPartsWhileMoving is actually a property, but must be used as a method to correctly pass the arguments
	def GetPartsWhileMoving(self, bOption=1):
		'Sets or returns the options followed while moving parts.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (11, 0), ((3, 49),),bOption
			)

	# The method GetRouteNetRules is actually a property, but must be used as a method to correctly pass the arguments
	def GetRouteNetRules(self, eNetRules=0):
		'Sets or returns route optional net rules'
		return self._oleobj_.InvokeTypes(22, LCID, 2, (11, 0), ((3, 49),),eNetRules
			)

	# The method GetRouteOptions is actually a property, but must be used as a method to correctly pass the arguments
	def GetRouteOptions(self, eRouteOptions=0):
		'Sets or returns the interactive routing options. (Deprecated)'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (3, 0), ((3, 49),),eRouteOptions
			)

	# The method GetRoutePushAndShove is actually a property, but must be used as a method to correctly pass the arguments
	def GetRoutePushAndShove(self, ePushAndShove=0):
		'Sets the interactive routing - push and shove options.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (11, 0), ((3, 49),),ePushAndShove
			)

	# The method GetRouteViasMaxFanoutOnRstrdLayers is actually a property, but must be used as a method to correctly pass the arguments
	def GetRouteViasMaxFanoutOnRstrdLayers(self, bIsInternal=True, eUnit=0):
		"Sets or returns the specified Route via option's value."
		return self._oleobj_.InvokeTypes(25, LCID, 2, (5, 0), ((11, 49), (3, 49)),bIsInternal
			, eUnit)

	# The method GetRouteViasRules is actually a property, but must be used as a method to correctly pass the arguments
	def GetRouteViasRules(self, eViasRules=0):
		'Sets or returns the route vias rules'
		return self._oleobj_.InvokeTypes(23, LCID, 2, (11, 0), ((3, 49),),eViasRules
			)

	# The method GetRoutes is actually a property, but must be used as a method to correctly pass the arguments
	def GetRoutes(self, eRoute=0):
		'Sets or returns route options. (Deprecated)'
		return self._oleobj_.InvokeTypes(21, LCID, 2, (11, 0), ((3, 49),),eRoute
			)

	# The method GetTuningPatterns is actually a property, but must be used as a method to correctly pass the arguments
	def GetTuningPatterns(self, eTuningPatterns=0):
		'Sets or returns tuning patterns value. Valid options - Allow, Prevent or Prefer.'
		return self._oleobj_.InvokeTypes(45, LCID, 2, (3, 0), ((3, 49),),eTuningPatterns
			)

	# The method GlossSpreadPercent is actually a property, but must be used as a method to correctly pass the arguments
	def GlossSpreadPercent(self, eOption=defaultNamedNotOptArg):
		'Sets or returns "Additional gloss spreading clearance" percent.'
		return self._oleobj_.InvokeTypes(103, LCID, 2, (3, 0), ((3, 1),),eOption
			)

	def IncludeFilterNet(self, pFilterNet=defaultNamedNotOptArg):
		'Include the filter net in the collection.'
		return self._oleobj_.InvokeTypes(39, LCID, 1, (24, 0), ((9, 1),),pFilterNet
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(52, LCID, 1, (11, 0), (),)

	# The method JumperGraphicOption is actually a property, but must be used as a method to correctly pass the arguments
	def JumperGraphicOption(self, eOption=defaultNamedNotOptArg, eUnit=0):
		'Sets or returns Jumper graphic options.'
		return self._oleobj_.InvokeTypes(49, LCID, 2, (5, 0), ((3, 1), (3, 49)),eOption
			, eUnit)

	# Result is of type IMGCPCBLayerRanges
	# The method PadEntryAllowedPadsViaSpan is actually a property, but must be used as a method to correctly pass the arguments
	def PadEntryAllowedPadsViaSpan(self, pPad=defaultNamedNotOptArg, ePadShape=defaultNamedNotOptArg):
		'Sets or returns via spans allowed under a pad or pads. If a pad object is specified the pad shape is ignored, if the pad object is null, the pad shape is used.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 2, (9, 0), ((9, 1), (3, 1)),pPad
			, ePadShape)
		if ret is not None:
			ret = Dispatch(ret, 'PadEntryAllowedPadsViaSpan', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')
		return ret

	# Result is of type IMGCPCBLayerRanges
	# The method PadEntryViaSpansForPad is actually a property, but must be used as a method to correctly pass the arguments
	def PadEntryViaSpansForPad(self, pPad=defaultNamedNotOptArg):
		'Gets the valid layer ranges that can be used for the via spans for the specified pad'
		ret = self._oleobj_.InvokeTypes(80, LCID, 2, (9, 0), ((9, 0),),pPad
			)
		if ret is not None:
			ret = Dispatch(ret, 'PadEntryViaSpansForPad', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')
		return ret

	# The method PartCellRotation is actually a property, but must be used as a method to correctly pass the arguments
	def PartCellRotation(self, pCell=defaultNamedNotOptArg, eRotation=defaultNamedNotOptArg):
		'Sets or returns part cell rotation angles'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (11, 0), ((9, 1), (3, 1)),pCell
			, eRotation)

	# The method PartsRefdesHorzOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def PartsRefdesHorzOrientation(self, bIsTopLevelOrientation=defaultNamedNotOptArg):
		'Sets or returns the horizontal part ref des orientations rules.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (3, 0), ((11, 1),),bIsTopLevelOrientation
			)

	# The method PartsRefdesVertOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def PartsRefdesVertOrientation(self, bIsTopLevelOrientation=defaultNamedNotOptArg):
		'Sets or returns the vertical part ref des orientations rules.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (3, 0), ((11, 1),),bIsTopLevelOrientation
			)

	# Result is of type IMGCPCBCluster
	def PutCluster(self, sName=defaultNamedNotOptArg):
		'Creates a cluster by given name and returns the created object. (Deprecated)'
		ret = self._oleobj_.InvokeTypes(20, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutCluster', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}')
		return ret

	# Result is of type IMGCPCBRoom
	def PutRoom(self, sName=defaultNamedNotOptArg):
		'Creates a room by given name and returns the created object.'
		ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutRoom', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')
		return ret

	def RemoveCluster(self, pCluster=defaultNamedNotOptArg):
		'Removes the cluster.'
		return self._oleobj_.InvokeTypes(72, LCID, 1, (24, 0), ((12, 1),),pCluster
			)

	def RemoveRoom(self, pRoom=defaultNamedNotOptArg):
		'Removes the room.'
		return self._oleobj_.InvokeTypes(71, LCID, 1, (24, 0), ((12, 1),),pRoom
			)

	# The method RouteDiffPairParmVal is actually a property, but must be used as a method to correctly pass the arguments
	def RouteDiffPairParmVal(self, eParm=defaultNamedNotOptArg, eUnit=0):
		'Sets or returns the value of specified routes differential pair parameter.'
		return self._oleobj_.InvokeTypes(28, LCID, 2, (5, 0), ((3, 1), (3, 49)),eParm
			, eUnit)

	# The method RouteDirBias is actually a property, but must be used as a method to correctly pass the arguments
	def RouteDirBias(self, nLayer=defaultNamedNotOptArg):
		"Gets the layer's directional bias"
		return self._oleobj_.InvokeTypes(6, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method RouteLayerDiffPair is actually a property, but must be used as a method to correctly pass the arguments
	def RouteLayerDiffPair(self, nLayer=defaultNamedNotOptArg):
		"Sets or returns the layer's differential pair."
		return self._oleobj_.InvokeTypes(8, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method RouteLayerEnable is actually a property, but must be used as a method to correctly pass the arguments
	def RouteLayerEnable(self, nLayer=defaultNamedNotOptArg):
		'Gets or sets the layer status - enable/disable'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	# The method RouteLayerPair is actually a property, but must be used as a method to correctly pass the arguments
	def RouteLayerPair(self, nLayer=defaultNamedNotOptArg):
		"Sets or returns the layer's complementary pair."
		return self._oleobj_.InvokeTypes(7, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method RoutePadEntry is actually a property, but must be used as a method to correctly pass the arguments
	def RoutePadEntry(self, ePadEntry=defaultNamedNotOptArg, eUnit=0):
		'Sets or returns route pad entry options'
		return self._oleobj_.InvokeTypes(26, LCID, 2, (5, 0), ((3, 1), (3, 49)),ePadEntry
			, eUnit)

	# The method SelPadsTracePosRules is actually a property, but must be used as a method to correctly pass the arguments
	def SelPadsTracePosRules(self, pPad=defaultNamedNotOptArg, ePadShape=defaultNamedNotOptArg, eRules=defaultNamedNotOptArg):
		'Sets or returns Trace entry rules on a pad. If a pad object is specified the pad shape is ignored, if the pad object is null, the pad shape is used.'
		return self._oleobj_.InvokeTypes(32, LCID, 2, (11, 0), ((9, 1), (3, 1), (3, 1)),pPad
			, ePadShape, eRules)

	# The method SelPadsViaPosRules is actually a property, but must be used as a method to correctly pass the arguments
	def SelPadsViaPosRules(self, pPad=defaultNamedNotOptArg, ePadShape=defaultNamedNotOptArg, eRules=defaultNamedNotOptArg):
		'Sets or returns Via positioning rules within a pad. If a pad object is specified the pad shape is ignored, if the pad object is null, the pad shape is used.'
		return self._oleobj_.InvokeTypes(33, LCID, 2, (11, 0), ((9, 1), (3, 1), (3, 1)),pPad
			, ePadShape, eRules)

	# The method SetAdvancedGlossOption is actually a property, but must be used as a method to correctly pass the arguments
	def SetAdvancedGlossOption(self, eGloss=0, arg1=True):
		'Sets or returns advanced gloss options'
		return self._oleobj_.InvokeTypes(54, LCID, 4, (24, 0), ((3, 49), (11, 49)),eGloss
			, arg1)

	# The method SetAutoSave is actually a property, but must be used as a method to correctly pass the arguments
	def SetAutoSave(self, eRouteMode=defaultNamedNotOptArg, arg1=60):
		'Sets or returns the auto save interval for a given mode.'
		return self._oleobj_.InvokeTypes(0, LCID, 4, (24, 0), ((3, 1), (3, 49)),eRouteMode
			, arg1)

	# The method SetCurveTraceMinRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetCurveTraceMinRadius(self, eUnit=0, arg1=defaultUnnamedArg):
		'Gets or sets the curve trace minimum radius. If 0 radius is not set.'
		return self._oleobj_.InvokeTypes(67, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetCurveTraceRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetCurveTraceRadius(self, eUnit=0, arg1=defaultUnnamedArg):
		"Gets or sets the curve trace radius. If 0 radius is 'Variable'."
		return self._oleobj_.InvokeTypes(66, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetEnableGlossSpread is actually a property, but must be used as a method to correctly pass the arguments
	def SetEnableGlossSpread(self, eOption=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Sets or returns whether "Additional gloss spreading clearance" is enabled.'
		return self._oleobj_.InvokeTypes(105, LCID, 4, (24, 0), ((3, 1), (11, 1)),eOption
			, arg1)

	# The method SetExposedMetalClearances is actually a property, but must be used as a method to correctly pass the arguments
	def SetExposedMetalClearances(self, eSide=defaultNamedNotOptArg, eUnit=0, arg2=defaultUnnamedArg):
		'Sets or returns the exposed metal clearances on outer layer.'
		return self._oleobj_.InvokeTypes(74, LCID, 4, (24, 0), ((3, 1), (3, 49), (5, 1)),eSide
			, eUnit, arg2)

	# The method SetGlossSpreadPercent is actually a property, but must be used as a method to correctly pass the arguments
	def SetGlossSpreadPercent(self, eOption=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Sets or returns "Additional gloss spreading clearance" percent.'
		return self._oleobj_.InvokeTypes(103, LCID, 4, (24, 0), ((3, 1), (3, 1)),eOption
			, arg1)

	# The method SetGrid is actually a property, but must be used as a method to correctly pass the arguments
	def SetGrid(self, eType=2, eUnit=0, arg2=defaultUnnamedArg):
		'Sets or returns the grid of the specified type. If the grid value is zero, it means no grid is defined. For a grid, the X and Y are identical.'
		return self._oleobj_.InvokeTypes(36, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),eType
			, eUnit, arg2)

	# The method SetInteractiveDRCEx is actually a property, but must be used as a method to correctly pass the arguments
	def SetInteractiveDRCEx(self, bValue=defaultNamedNotOptArg, arg1=True):
		'Sets the interactive DRC - enable/disable showing the Batch DRC warning dialog if requested.'
		return self._oleobj_.InvokeTypes(75, LCID, 4, (24, 0), ((11, 1), (11, 49)),bValue
			, arg1)

	# The method SetJumperGraphicOption is actually a property, but must be used as a method to correctly pass the arguments
	def SetJumperGraphicOption(self, eOption=defaultNamedNotOptArg, eUnit=0, arg2=0.0):
		'Sets or returns Jumper graphic options.'
		return self._oleobj_.InvokeTypes(49, LCID, 4, (24, 0), ((3, 1), (3, 49), (5, 49)),eOption
			, eUnit, arg2)

	# The method SetPadEntryAllowedPadsViaSpan is actually a property, but must be used as a method to correctly pass the arguments
	def SetPadEntryAllowedPadsViaSpan(self, pPad=defaultNamedNotOptArg, ePadShape=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'Sets or returns via spans allowed under a pad or pads. If a pad object is specified the pad shape is ignored, if the pad object is null, the pad shape is used.'
		return self._oleobj_.InvokeTypes(34, LCID, 4, (24, 0), ((9, 1), (3, 1), (9, 1)),pPad
			, ePadShape, arg2)

	# The method SetPadEntryGlobalRules is actually a property, but must be used as a method to correctly pass the arguments
	def SetPadEntryGlobalRules(self, ePadShape=0, eRules=0, arg2=False):
		'Sets or returns Pad Entry global rules (applicable to only rect & oblong pads).'
		return self._oleobj_.InvokeTypes(30, LCID, 4, (24, 0), ((3, 49), (3, 49), (11, 49)),ePadShape
			, eRules, arg2)

	# The method SetPartCellRotation is actually a property, but must be used as a method to correctly pass the arguments
	def SetPartCellRotation(self, pCell=defaultNamedNotOptArg, eRotation=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'Sets or returns part cell rotation angles'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((9, 1), (3, 1), (11, 1)),pCell
			, eRotation, arg2)

	# The method SetPartsRefdesHorzOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetPartsRefdesHorzOrientation(self, bIsTopLevelOrientation=defaultNamedNotOptArg, arg1=0):
		'Sets or returns the horizontal part ref des orientations rules.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((11, 1), (3, 49)),bIsTopLevelOrientation
			, arg1)

	# The method SetPartsRefdesVertOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetPartsRefdesVertOrientation(self, bIsTopLevelOrientation=defaultNamedNotOptArg, arg1=0):
		'Sets or returns the vertical part ref des orientations rules.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((11, 1), (3, 49)),bIsTopLevelOrientation
			, arg1)

	# The method SetPartsWhileMoving is actually a property, but must be used as a method to correctly pass the arguments
	def SetPartsWhileMoving(self, bOption=1, arg1=True):
		'Sets or returns the options followed while moving parts.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 49), (11, 49)),bOption
			, arg1)

	# The method SetRouteDiffPairParmVal is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteDiffPairParmVal(self, eParm=defaultNamedNotOptArg, eUnit=0, arg2=defaultUnnamedArg):
		'Sets or returns the value of specified routes differential pair parameter.'
		return self._oleobj_.InvokeTypes(28, LCID, 4, (24, 0), ((3, 1), (3, 49), (5, 1)),eParm
			, eUnit, arg2)

	# The method SetRouteDirBias is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteDirBias(self, nLayer=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		"Gets the layer's directional bias"
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (3, 1)),nLayer
			, arg1)

	# The method SetRouteLayerDiffPair is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteLayerDiffPair(self, nLayer=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		"Sets or returns the layer's differential pair."
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (3, 1)),nLayer
			, arg1)

	# The method SetRouteLayerEnable is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteLayerEnable(self, nLayer=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Gets or sets the layer status - enable/disable'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 1), (11, 1)),nLayer
			, arg1)

	# The method SetRouteLayerPair is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteLayerPair(self, nLayer=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		"Sets or returns the layer's complementary pair."
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (3, 1)),nLayer
			, arg1)

	# The method SetRouteNetRules is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteNetRules(self, eNetRules=0, arg1=True):
		'Sets or returns route optional net rules'
		return self._oleobj_.InvokeTypes(22, LCID, 4, (24, 0), ((3, 49), (11, 49)),eNetRules
			, arg1)

	# The method SetRouteOptions is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteOptions(self, eRouteOptions=0, arg1=1):
		'Sets or returns the interactive routing options. (Deprecated)'
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((3, 49), (3, 49)),eRouteOptions
			, arg1)

	# The method SetRoutePadEntry is actually a property, but must be used as a method to correctly pass the arguments
	def SetRoutePadEntry(self, ePadEntry=defaultNamedNotOptArg, eUnit=0, arg2=defaultUnnamedArg):
		'Sets or returns route pad entry options'
		return self._oleobj_.InvokeTypes(26, LCID, 4, (24, 0), ((3, 1), (3, 49), (5, 1)),ePadEntry
			, eUnit, arg2)

	# The method SetRoutePushAndShove is actually a property, but must be used as a method to correctly pass the arguments
	def SetRoutePushAndShove(self, ePushAndShove=0, arg1=False):
		'Sets the interactive routing - push and shove options.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (11, 49)),ePushAndShove
			, arg1)

	# The method SetRouteViasMaxFanoutOnRstrdLayers is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteViasMaxFanoutOnRstrdLayers(self, bIsInternal=True, eUnit=0, arg2=0.0):
		"Sets or returns the specified Route via option's value."
		return self._oleobj_.InvokeTypes(25, LCID, 4, (24, 0), ((11, 49), (3, 49), (5, 49)),bIsInternal
			, eUnit, arg2)

	# The method SetRouteViasRules is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteViasRules(self, eViasRules=0, arg1=False):
		'Sets or returns the route vias rules'
		return self._oleobj_.InvokeTypes(23, LCID, 4, (24, 0), ((3, 49), (11, 49)),eViasRules
			, arg1)

	# The method SetRoutes is actually a property, but must be used as a method to correctly pass the arguments
	def SetRoutes(self, eRoute=0, arg1=True):
		'Sets or returns route options. (Deprecated)'
		return self._oleobj_.InvokeTypes(21, LCID, 4, (24, 0), ((3, 49), (11, 49)),eRoute
			, arg1)

	# The method SetSelPadsTracePosRules is actually a property, but must be used as a method to correctly pass the arguments
	def SetSelPadsTracePosRules(self, pPad=defaultNamedNotOptArg, ePadShape=defaultNamedNotOptArg, eRules=defaultNamedNotOptArg, arg3=defaultUnnamedArg):
		'Sets or returns Trace entry rules on a pad. If a pad object is specified the pad shape is ignored, if the pad object is null, the pad shape is used.'
		return self._oleobj_.InvokeTypes(32, LCID, 4, (24, 0), ((9, 1), (3, 1), (3, 1), (11, 1)),pPad
			, ePadShape, eRules, arg3)

	# The method SetSelPadsViaPosRules is actually a property, but must be used as a method to correctly pass the arguments
	def SetSelPadsViaPosRules(self, pPad=defaultNamedNotOptArg, ePadShape=defaultNamedNotOptArg, eRules=defaultNamedNotOptArg, arg3=defaultUnnamedArg):
		'Sets or returns Via positioning rules within a pad. If a pad object is specified the pad shape is ignored, if the pad object is null, the pad shape is used.'
		return self._oleobj_.InvokeTypes(33, LCID, 4, (24, 0), ((9, 1), (3, 1), (3, 1), (11, 1)),pPad
			, ePadShape, eRules, arg3)

	# The method SetTuningPatternDist is actually a property, but must be used as a method to correctly pass the arguments
	def SetTuningPatternDist(self, eTuningPattern=defaultNamedNotOptArg, eUnit=0, arg2=0.0):
		'Sets or returns various distances for tuning patterns'
		return self._oleobj_.InvokeTypes(43, LCID, 4, (24, 0), ((3, 1), (3, 49), (5, 49)),eTuningPattern
			, eUnit, arg2)

	# The method SetTuningPatterns is actually a property, but must be used as a method to correctly pass the arguments
	def SetTuningPatterns(self, eTuningPatterns=0, arg1=0):
		'Sets or returns tuning patterns value. Valid options - Allow, Prevent or Prefer.'
		return self._oleobj_.InvokeTypes(45, LCID, 4, (24, 0), ((3, 49), (3, 49)),eTuningPatterns
			, arg1)

	# The method TuningPatternDist is actually a property, but must be used as a method to correctly pass the arguments
	def TuningPatternDist(self, eTuningPattern=defaultNamedNotOptArg, eUnit=0):
		'Sets or returns various distances for tuning patterns'
		return self._oleobj_.InvokeTypes(43, LCID, 2, (5, 0), ((3, 1), (3, 49)),eTuningPattern
			, eUnit)

	_prop_map_get_ = {
		"AdvancedGlossOption": (54, 2, (11, 0), ((3, 49),), "AdvancedGlossOption", None),
		"Allow45DegreeCorners": (86, 2, (11, 0), (), "Allow45DegreeCorners", None),
		"AllowCellGraphicsEdits": (91, 2, (11, 0), (), "AllowCellGraphicsEdits", None),
		"AllowCellTextEdits": (90, 2, (11, 0), (), "AllowCellTextEdits", None),
		"AutoRouteAutoTuneLevel": (48, 2, (3, 0), (), "AutoRouteAutoTuneLevel", None),
		"AutoTuneAddLength": (59, 2, (3, 0), (), "AutoTuneAddLength", None),
		"AutoTuneEffort": (46, 2, (3, 0), (), "AutoTuneEffort", None),
		"AutoTuneReduceLength": (58, 2, (3, 0), (), "AutoTuneReduceLength", None),
		"BondFingerOverlap": (108, 2, (11, 0), (), "BondFingerOverlap", None),
		"BondWireDRC": (107, 2, (3, 0), (), "BondWireDRC", None),
		# Method 'Clusters' returns object of type 'IMGCPCBClusters'
		"Clusters": (19, 2, (9, 0), (), "Clusters", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED78}'),
		"CurveTraceMinRadius": (67, 2, (5, 0), ((3, 49),), "CurveTraceMinRadius", None),
		"CurveTraceRadius": (66, 2, (5, 0), ((3, 49),), "CurveTraceRadius", None),
		"DraftGridChoices": (102, 2, (12, 0), ((3, 49),), "DraftGridChoices", None),
		"EDMOutputGenerationMode_BILL_OF_Material": (100, 2, (3, 0), (), "EDMOutputGenerationMode_BILL_OF_Material", None),
		"EDMOutputGenerationMode_ODB": (99, 2, (3, 0), (), "EDMOutputGenerationMode_ODB", None),
		"EDMOutputGenerationMode_PDF": (98, 2, (3, 0), (), "EDMOutputGenerationMode_PDF", None),
		"EnableDynamicBreakoutTraces": (65, 2, (11, 0), (), "EnableDynamicBreakoutTraces", None),
		"EnableDynamicTeardrops": (64, 2, (11, 0), (), "EnableDynamicTeardrops", None),
		"EnableFilter": (41, 2, (11, 0), (), "EnableFilter", None),
		# Method 'ExcludedFilterNets' returns object of type 'IMGCPCBNets'
		"ExcludedFilterNets": (38, 2, (9, 0), (), "ExcludedFilterNets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		"FilterDisplayClassType": (63, 2, (3, 0), (), "FilterDisplayClassType", None),
		"FilterNetlineDisplay": (42, 2, (11, 0), (), "FilterNetlineDisplay", None),
		"FitView": (61, 2, (11, 0), (), "FitView", None),
		"GlossMode": (69, 2, (3, 0), (), "GlossMode", None),
		"Grid": (36, 2, (5, 0), ((3, 49), (3, 49)), "Grid", None),
		"GridMinNumberOfPins": (55, 2, (3, 0), (), "GridMinNumberOfPins", None),
		"GridMountStyle": (56, 2, (3, 0), (), "GridMountStyle", None),
		"GridlessPadEntry": (35, 2, (11, 0), (), "GridlessPadEntry", None),
		# Method 'IncludedFilterNets' returns object of type 'IMGCPCBNets'
		"IncludedFilterNets": (37, 2, (9, 0), (), "IncludedFilterNets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		"InteractiveAutoTuneLevel": (47, 2, (3, 0), (), "InteractiveAutoTuneLevel", None),
		"InteractiveDRC": (53, 2, (11, 0), (), "InteractiveDRC", None),
		"InteractiveRouteMode": (95, 2, (3, 0), (), "InteractiveRouteMode", None),
		"JumperAngle": (50, 2, (11, 0), (), "JumperAngle", None),
		"JumperCreation": (79, 2, (3, 0), (), "JumperCreation", None),
		"JumperPressSpaceBarToAdd": (57, 2, (11, 0), (), "JumperPressSpaceBarToAdd", None),
		# Method 'JumperTable' returns object of type 'IMGCPCBJumperTableEntries'
		"JumperTable": (51, 2, (9, 0), (), "JumperTable", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7C}'),
		"MaxPinsOnCmpForNetlineDisplay": (73, 2, (3, 0), (), "MaxPinsOnCmpForNetlineDisplay", None),
		"MoveFixedObject": (96, 2, (11, 0), (), "MoveFixedObject", None),
		"NetlineOptimizationModeForMove": (88, 2, (3, 0), (), "NetlineOptimizationModeForMove", None),
		"NetlineOptimizationModeForPlace": (87, 2, (3, 0), (), "NetlineOptimizationModeForPlace", None),
		"NetlineOptimizationModeForPlow": (89, 2, (3, 0), (), "NetlineOptimizationModeForPlow", None),
		"PadEntryGlobalRules": (30, 2, (11, 0), ((3, 49), (3, 49)), "PadEntryGlobalRules", None),
		# Method 'PadEntryViaSpans' returns object of type 'IMGCPCBLayerRanges'
		"PadEntryViaSpans": (70, 2, (9, 0), (), "PadEntryViaSpans", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (31, 2, (9, 0), ((3, 49),), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parts3DDRC": (97, 2, (3, 0), (), "Parts3DDRC", None),
		"PartsAlignment": (12, 2, (3, 0), (), "PartsAlignment", None),
		"PartsGridSnap": (11, 2, (3, 0), (), "PartsGridSnap", None),
		"PartsNumRotation": (13, 2, (3, 0), (), "PartsNumRotation", None),
		"PartsOnlineDRC": (9, 2, (3, 0), (), "PartsOnlineDRC", None),
		"PartsWhileMoving": (10, 2, (11, 0), ((3, 49),), "PartsWhileMoving", None),
		"PlowAngle": (84, 2, (3, 0), (), "PlowAngle", None),
		"PlowAngleShift": (92, 2, (5, 0), (), "PlowAngleShift", None),
		"PlowDRC": (83, 2, (11, 0), (), "PlowDRC", None),
		"PlowDragStyle": (82, 2, (3, 0), (), "PlowDragStyle", None),
		"PlowMouseUpStyle": (81, 2, (3, 0), (), "PlowMouseUpStyle", None),
		"PlowPreventLoops": (85, 2, (11, 0), (), "PlowPreventLoops", None),
		"PreferGlossSpread": (104, 2, (3, 0), (), "PreferGlossSpread", None),
		# Method 'Rooms' returns object of type 'IMGCPCBRooms'
		"Rooms": (17, 2, (9, 0), (), "Rooms", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}'),
		"RouteDiffPairBehavior": (29, 2, (3, 0), (), "RouteDiffPairBehavior", None),
		"RouteDoubleClickToAddVia": (3, 2, (11, 0), (), "RouteDoubleClickToAddVia", None),
		"RouteExpandTraces": (27, 2, (11, 0), (), "RouteExpandTraces", None),
		"RouteMaxVias": (2, 2, (3, 0), (), "RouteMaxVias", None),
		"RouteMinimizeSplitting": (60, 2, (11, 0), (), "RouteMinimizeSplitting", None),
		"RouteNetRules": (22, 2, (11, 0), ((3, 49),), "RouteNetRules", None),
		"RouteOptions": (1, 2, (3, 0), ((3, 49),), "RouteOptions", None),
		"RoutePushAndShove": (4, 2, (11, 0), ((3, 49),), "RoutePushAndShove", None),
		"RouteViasMaxFanoutOnRstrdLayers": (25, 2, (5, 0), ((11, 49), (3, 49)), "RouteViasMaxFanoutOnRstrdLayers", None),
		"RouteViasMaxPinsPerPlane": (24, 2, (3, 0), (), "RouteViasMaxPinsPerPlane", None),
		"RouteViasRules": (23, 2, (11, 0), ((3, 49),), "RouteViasRules", None),
		"Routes": (21, 2, (11, 0), ((3, 49),), "Routes", None),
		"SawtoothTuning": (93, 2, (11, 0), (), "SawtoothTuning", None),
		"SilverJumpersEnabled": (101, 2, (11, 0), (), "SilverJumpersEnabled", None),
		"TuningAllowVias": (44, 2, (11, 0), (), "TuningAllowVias", None),
		"TuningMiterRatio": (76, 2, (5, 0), (), "TuningMiterRatio", None),
		"TuningPatterns": (45, 2, (3, 0), ((3, 49),), "TuningPatterns", None),
		"TuningPreventStairSteps": (62, 2, (11, 0), (), "TuningPreventStairSteps", None),
		"TuningUseArcs": (77, 2, (11, 0), (), "TuningUseArcs", None),
		"UncoupledTuning": (94, 2, (11, 0), (), "UncoupledTuning", None),
		"UseCellLibrarySettings": (78, 2, (11, 0), (), "UseCellLibrarySettings", None),
		"UseRefdesPartNumberOrientationRules": (68, 2, (11, 0), (), "UseRefdesPartNumberOrientationRules", None),
		"ZAxisRouteDRC": (106, 2, (11, 0), (), "ZAxisRouteDRC", None),
	}
	_prop_map_put_ = {
		"Allow45DegreeCorners": ((86, LCID, 4, 0),()),
		"AllowCellGraphicsEdits": ((91, LCID, 4, 0),()),
		"AllowCellTextEdits": ((90, LCID, 4, 0),()),
		"AutoRouteAutoTuneLevel": ((48, LCID, 4, 0),()),
		"AutoSave": ((0, LCID, 4, 0),('60',)),
		"AutoTuneAddLength": ((59, LCID, 4, 0),()),
		"AutoTuneEffort": ((46, LCID, 4, 0),()),
		"AutoTuneReduceLength": ((58, LCID, 4, 0),()),
		"BondFingerOverlap": ((108, LCID, 4, 0),()),
		"BondWireDRC": ((107, LCID, 4, 0),()),
		"CurveTraceMinRadius": ((67, LCID, 4, 0),()),
		"CurveTraceRadius": ((66, LCID, 4, 0),()),
		"EDMOutputGenerationMode_BILL_OF_Material": ((100, LCID, 4, 0),()),
		"EDMOutputGenerationMode_ODB": ((99, LCID, 4, 0),()),
		"EDMOutputGenerationMode_PDF": ((98, LCID, 4, 0),()),
		"EnableDynamicBreakoutTraces": ((65, LCID, 4, 0),()),
		"EnableDynamicTeardrops": ((64, LCID, 4, 0),()),
		"EnableFilter": ((41, LCID, 4, 0),()),
		"FilterDisplayClassType": ((63, LCID, 4, 0),()),
		"FilterNetlineDisplay": ((42, LCID, 4, 0),()),
		"FitView": ((61, LCID, 4, 0),()),
		"GlossMode": ((69, LCID, 4, 0),()),
		"Grid": ((36, LCID, 4, 0),('0',)),
		"GridMinNumberOfPins": ((55, LCID, 4, 0),()),
		"GridMountStyle": ((56, LCID, 4, 0),()),
		"GridlessPadEntry": ((35, LCID, 4, 0),()),
		"InteractiveAutoTuneLevel": ((47, LCID, 4, 0),()),
		"InteractiveDRC": ((53, LCID, 4, 0),()),
		"InteractiveDRCEx": ((75, LCID, 4, 0),('True',)),
		"InteractiveRouteMode": ((95, LCID, 4, 0),()),
		"JumperAngle": ((50, LCID, 4, 0),()),
		"JumperCreation": ((79, LCID, 4, 0),()),
		"JumperGraphicOption": ((49, LCID, 4, 0),('0', '0.0')),
		"JumperPressSpaceBarToAdd": ((57, LCID, 4, 0),()),
		"MaxPinsOnCmpForNetlineDisplay": ((73, LCID, 4, 0),()),
		"MoveFixedObject": ((96, LCID, 4, 0),()),
		"NetlineOptimizationModeForMove": ((88, LCID, 4, 0),()),
		"NetlineOptimizationModeForPlace": ((87, LCID, 4, 0),()),
		"NetlineOptimizationModeForPlow": ((89, LCID, 4, 0),()),
		"Parts3DDRC": ((97, LCID, 4, 0),()),
		"PartsAlignment": ((12, LCID, 4, 0),()),
		"PartsGridSnap": ((11, LCID, 4, 0),()),
		"PartsNumRotation": ((13, LCID, 4, 0),()),
		"PartsOnlineDRC": ((9, LCID, 4, 0),()),
		"PartsRefdesHorzOrientation": ((14, LCID, 4, 0),('0',)),
		"PartsRefdesVertOrientation": ((15, LCID, 4, 0),('0',)),
		"PlowAngle": ((84, LCID, 4, 0),()),
		"PlowAngleShift": ((92, LCID, 4, 0),()),
		"PlowDRC": ((83, LCID, 4, 0),()),
		"PlowDragStyle": ((82, LCID, 4, 0),()),
		"PlowMouseUpStyle": ((81, LCID, 4, 0),()),
		"PlowPreventLoops": ((85, LCID, 4, 0),()),
		"PreferGlossSpread": ((104, LCID, 4, 0),()),
		"RouteDiffPairBehavior": ((29, LCID, 4, 0),()),
		"RouteDoubleClickToAddVia": ((3, LCID, 4, 0),()),
		"RouteExpandTraces": ((27, LCID, 4, 0),()),
		"RouteMaxVias": ((2, LCID, 4, 0),()),
		"RouteMinimizeSplitting": ((60, LCID, 4, 0),()),
		"RouteViasMaxPinsPerPlane": ((24, LCID, 4, 0),()),
		"SawtoothTuning": ((93, LCID, 4, 0),()),
		"SilverJumpersEnabled": ((101, LCID, 4, 0),()),
		"TuningAllowVias": ((44, LCID, 4, 0),()),
		"TuningMiterRatio": ((76, LCID, 4, 0),()),
		"TuningPatternDist": ((43, LCID, 4, 0),('0', '0.0')),
		"TuningPreventStairSteps": ((62, LCID, 4, 0),()),
		"TuningUseArcs": ((77, LCID, 4, 0),()),
		"UncoupledTuning": ((94, LCID, 4, 0),()),
		"UseCellLibrarySettings": ((78, LCID, 4, 0),()),
		"UseRefdesPartNumberOrientationRules": ((68, LCID, 4, 0),()),
		"ZAxisRouteDRC": ((106, LCID, 4, 0),()),
	}

	AdvancedGlossOption: str # read_only
	Allow45DegreeCorners: str # read/write
	AllowCellGraphicsEdits: str # read/write
	AllowCellTextEdits: str # read/write
	AutoRouteAutoTuneLevel: str # read/write
	AutoTuneAddLength: str # read/write
	AutoTuneEffort: str # read/write
	AutoTuneReduceLength: str # read/write
	BondFingerOverlap: str # read/write
	BondWireDRC: str # read/write
	Clusters: str # IMGCPCBClusters; read_only
	CurveTraceMinRadius: str # read/write
	CurveTraceRadius: str # read/write
	DraftGridChoices: str # read_only
	EDMOutputGenerationMode_BILL_OF_Material: str # read/write
	EDMOutputGenerationMode_ODB: str # read/write
	EDMOutputGenerationMode_PDF: str # read/write
	EnableDynamicBreakoutTraces: str # read/write
	EnableDynamicTeardrops: str # read/write
	EnableFilter: str # read/write
	ExcludedFilterNets: str # IMGCPCBNets; read_only
	FilterDisplayClassType: str # read/write
	FilterNetlineDisplay: str # read/write
	FitView: str # read/write
	GlossMode: str # read/write
	Grid: str # read/write
	GridMinNumberOfPins: str # read/write
	GridMountStyle: str # read/write
	GridlessPadEntry: str # read/write
	IncludedFilterNets: str # IMGCPCBNets; read_only
	InteractiveAutoTuneLevel: str # read/write
	InteractiveDRC: str # read/write
	InteractiveRouteMode: str # read/write
	JumperAngle: str # read/write
	JumperCreation: str # read/write
	JumperPressSpaceBarToAdd: str # read/write
	JumperTable: str # IMGCPCBJumperTableEntries; read_only
	MaxPinsOnCmpForNetlineDisplay: str # read/write
	MoveFixedObject: str # read/write
	NetlineOptimizationModeForMove: str # read/write
	NetlineOptimizationModeForPlace: str # read/write
	NetlineOptimizationModeForPlow: str # read/write
	PadEntryGlobalRules: str # read_only
	PadEntryViaSpans: str # IMGCPCBLayerRanges; read_only
	Pads: str # IMGCPCBPads; read_only
	Parts3DDRC: str # read/write
	PartsAlignment: str # read/write
	PartsGridSnap: str # read/write
	PartsNumRotation: str # read/write
	PartsOnlineDRC: str # read/write
	PartsWhileMoving: str # read_only
	PlowAngle: str # read/write
	PlowAngleShift: str # read/write
	PlowDRC: str # read/write
	PlowDragStyle: str # read/write
	PlowMouseUpStyle: str # read/write
	PlowPreventLoops: str # read/write
	PreferGlossSpread: str # read/write
	Rooms: str # IMGCPCBRooms; read_only
	RouteDiffPairBehavior: str # read/write
	RouteDoubleClickToAddVia: str # read/write
	RouteExpandTraces: str # read/write
	RouteMaxVias: str # read/write
	RouteMinimizeSplitting: str # read/write
	RouteNetRules: str # read_only
	RouteOptions: str # read_only
	RoutePushAndShove: str # read_only
	RouteViasMaxFanoutOnRstrdLayers: str # read_only
	RouteViasMaxPinsPerPlane: str # read/write
	RouteViasRules: str # read_only
	Routes: str # read_only
	SawtoothTuning: str # read/write
	SilverJumpersEnabled: str # read/write
	TuningAllowVias: str # read/write
	TuningMiterRatio: str # read/write
	TuningPatterns: str # read_only
	TuningPreventStairSteps: str # read/write
	TuningUseArcs: str # read/write
	UncoupledTuning: str # read/write
	UseCellLibrarySettings: str # read/write
	UseRefdesPartNumberOrientationRules: str # read/write
	ZAxisRouteDRC: str # read/write
	AutoSave: str # write_only
	InteractiveDRCEx: str # write_only
	JumperGraphicOption: str # write_only
	PartsRefdesHorzOrientation: str # write_only
	PartsRefdesVertOrientation: str # write_only
	TuningPatternDist: str # write_only

	# Default method for this class is 'AutoSave'
	def __call__(self, eRouteMode=defaultNamedNotOptArg):
		'Sets or returns the auto save interval for a given mode.'
		return self._oleobj_.InvokeTypes(0, LCID, 2, (3, 0), ((3, 1),),eRouteMode
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBEmbeddedPassiveShape(DispatchBaseClass):
	'MGCPCB Embedded Passive Shape Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}')
	coclass_clsid = IID('{EDEDED98-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"EmbeddedPassiveShapeType": (42, 2, (3, 0), (), "EmbeddedPassiveShapeType", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Material": (41, 2, (8, 0), (), "Material", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (46, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (44, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (45, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (43, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	EmbeddedPassiveShapeType: str # read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Material: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBEmbeddedPassiveShapes(DispatchBaseClass):
	'MGCPCB Embedded Passive Shapes collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')
	coclass_clsid = IID('{EDEDED99-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pEmbeddedPassiveShape=defaultNamedNotOptArg):
		'Adds an embedded passive shape to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pEmbeddedPassiveShape
			)

	# Result is of type IMGCPCBEmbeddedPassiveShape
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the embedded passive shape of a given index in the embedded passive shape collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort embedded passive shapes in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the embedded passive shape of a given index in the embedded passive shape collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBEnvironment(DispatchBaseClass):
	'Environment Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED92}')
	coclass_clsid = IID('{EDEDED92-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetLibrarySearchOrder is actually a property, but must be used as a method to correctly pass the arguments
	def GetLibrarySearchOrder(self, eLibraryType=4):
		'Returns the list of partition names representing the library search order.'
		return self._ApplyTypes_(10, 2, (12, 0), ((3, 49),), 'GetLibrarySearchOrder', None,eLibraryType
			)

	_prop_map_get_ = {
		"BendRadiusLimitDynamicLayer": (25, 2, (5, 0), (), "BendRadiusLimitDynamicLayer", None),
		"BendRadiusLimitMultiLayer": (24, 2, (5, 0), (), "BendRadiusLimitMultiLayer", None),
		"BendRadiusLimitSingleLayer": (22, 2, (5, 0), (), "BendRadiusLimitSingleLayer", None),
		"BendRadiusLimitTwoLayer": (23, 2, (5, 0), (), "BendRadiusLimitTwoLayer", None),
		"CESRunning": (30, 2, (11, 0), (), "CESRunning", None),
		"CentralLibraryFullName": (6, 2, (8, 0), (), "CentralLibraryFullName", None),
		"DesignName": (17, 2, (8, 0), (), "DesignName", None),
		"DesignTechnology": (18, 2, (3, 0), (), "DesignTechnology", None),
		"EDMApplicationID": (13, 2, (8, 0), (), "EDMApplicationID", None),
		"EDMObjectID": (14, 2, (8, 0), (), "EDMObjectID", None),
		"ExcludeCCZOnSaveInstanceSpecificCells": (27, 2, (11, 0), (), "ExcludeCCZOnSaveInstanceSpecificCells", None),
		"ExportCCZOnSaveEnabled": (19, 2, (11, 0), (), "ExportCCZOnSaveEnabled", None),
		"IsForeigniCDB": (20, 2, (11, 0), (), "IsForeigniCDB", None),
		"IsMultiBoardDrawing": (31, 2, (11, 0), (), "IsMultiBoardDrawing", None),
		"IsUsingiCDB": (21, 2, (11, 0), (), "IsUsingiCDB", None),
		"LayoutDrivenDesignEnabled": (15, 2, (11, 0), (), "LayoutDrivenDesignEnabled", None),
		"LibrarySearchOrder": (10, 2, (12, 0), ((3, 49),), "LibrarySearchOrder", None),
		"LocalCellLibraryFullName": (3, 2, (8, 0), (), "LocalCellLibraryFullName", None),
		"LocalLibraryFullName": (2, 2, (8, 0), (), "LocalLibraryFullName", None),
		"LocalPDBFullName": (5, 2, (8, 0), (), "LocalPDBFullName", None),
		"LocalPadstackLibraryFullName": (4, 2, (8, 0), (), "LocalPadstackLibraryFullName", None),
		"LogFilesDirectory": (11, 2, (8, 0), (), "LogFilesDirectory", None),
		"Open3dViewBasedOnLastViews": (29, 2, (11, 0), (), "Open3dViewBasedOnLastViews", None),
		"PADSProFeatureType": (28, 2, (3, 0), (), "PADSProFeatureType", None),
		"ProductLicenseLevel": (32, 2, (3, 0), (), "ProductLicenseLevel", None),
		"ProjectFileFullName": (1, 2, (8, 0), (), "ProjectFileFullName", None),
		"RootBlock": (9, 2, (8, 0), (), "RootBlock", None),
		"ShadowMovePartEnabled": (16, 2, (11, 0), (), "ShadowMovePartEnabled", None),
		"TestPointCheckingProcess": (26, 2, (3, 0), (), "TestPointCheckingProcess", None),
		"UsingCES": (7, 2, (11, 0), (), "UsingCES", None),
		"UsingDesignManager": (12, 2, (11, 0), (), "UsingDesignManager", None),
		"iCDBDirectory": (8, 2, (8, 0), (), "iCDBDirectory", None),
	}
	_prop_map_put_ = {
		"BendRadiusLimitDynamicLayer": ((25, LCID, 4, 0),()),
		"BendRadiusLimitMultiLayer": ((24, LCID, 4, 0),()),
		"BendRadiusLimitSingleLayer": ((22, LCID, 4, 0),()),
		"BendRadiusLimitTwoLayer": ((23, LCID, 4, 0),()),
		"DesignTechnology": ((18, LCID, 4, 0),()),
		"ExcludeCCZOnSaveInstanceSpecificCells": ((27, LCID, 4, 0),()),
		"ExportCCZOnSaveEnabled": ((19, LCID, 4, 0),()),
		"Open3dViewBasedOnLastViews": ((29, LCID, 4, 0),()),
		"ShadowMovePartEnabled": ((16, LCID, 4, 0),()),
		"TestPointCheckingProcess": ((26, LCID, 4, 0),()),
	}

	BendRadiusLimitDynamicLayer: str # read/write
	BendRadiusLimitMultiLayer: str # read/write
	BendRadiusLimitSingleLayer: str # read/write
	BendRadiusLimitTwoLayer: str # read/write
	CESRunning: str # read_only
	CentralLibraryFullName: str # read_only
	DesignName: str # read_only
	DesignTechnology: str # read/write
	EDMApplicationID: str # read_only
	EDMObjectID: str # read_only
	ExcludeCCZOnSaveInstanceSpecificCells: str # read/write
	ExportCCZOnSaveEnabled: str # read/write
	IsForeigniCDB: str # read_only
	IsMultiBoardDrawing: str # read_only
	IsUsingiCDB: str # read_only
	LayoutDrivenDesignEnabled: str # read_only
	LibrarySearchOrder: str # read_only
	LocalCellLibraryFullName: str # read_only
	LocalLibraryFullName: str # read_only
	LocalPDBFullName: str # read_only
	LocalPadstackLibraryFullName: str # read_only
	LogFilesDirectory: str # read_only
	Open3dViewBasedOnLastViews: str # read/write
	PADSProFeatureType: str # read_only
	ProductLicenseLevel: str # read_only
	ProjectFileFullName: str # read_only
	RootBlock: str # read_only
	ShadowMovePartEnabled: str # read/write
	TestPointCheckingProcess: str # read/write
	UsingCES: str # read_only
	UsingDesignManager: str # read_only
	iCDBDirectory: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBError(DispatchBaseClass):
	'Error object'
	CLSID = IID('{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}')
	coclass_clsid = IID('{91AA2A03-36ED-4133-8FFA-42AC7D52FFEC}')

	_prop_map_get_ = {
		"ErrorString": (0, 2, (8, 0), (), "ErrorString", None),
		"Severity": (1, 2, (3, 0), (), "Severity", None),
	}
	_prop_map_put_ = {
	}

	ErrorString: str # read_only
	Severity: str # read_only

	# Default property for this class is 'ErrorString'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "ErrorString", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBErrors(DispatchBaseClass):
	'Errors collection'
	CLSID = IID('{E7852DF4-9F9F-456E-8861-17AF75A62595}')
	coclass_clsid = IID('{1ABBE87F-3700-46B8-9FFD-64475723BD6F}')

	def Add(self, pError=defaultNamedNotOptArg):
		'Adds a Error object to this Error collection.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((9, 1),),pError
			)

	# Result is of type IMGCPCBError
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the Error object of a given index in the Error collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the Error object of a given index in the Error collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBExpansionMode(DispatchBaseClass):
	CLSID = IID('{90BA08EC-F7F1-4338-9AAA-F2384EB35423}')
	coclass_clsid = None

	_prop_map_get_ = {
		"HardObstacleExpansion": (2, 2, (3, 0), (), "HardObstacleExpansion", None),
		"TraceExpansion": (1, 2, (3, 0), (), "TraceExpansion", None),
		"ViaExpansion": (0, 2, (3, 0), (), "ViaExpansion", None),
	}
	_prop_map_put_ = {
		"HardObstacleExpansion": ((2, LCID, 4, 0),()),
		"TraceExpansion": ((1, LCID, 4, 0),()),
		"ViaExpansion": ((0, LCID, 4, 0),()),
	}

	HardObstacleExpansion: str # read/write
	TraceExpansion: str # read/write
	ViaExpansion: str # read/write

	# Default property for this class is 'ViaExpansion'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (3, 0), (), "ViaExpansion", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBExtrema(DispatchBaseClass):
	'MGCPCB Extrema Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')
	coclass_clsid = IID('{EDEDED61-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetMaxX is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxX(self, eUnit=0):
		'Return/Sets the max X extremum.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMaxY is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxY(self, eUnit=0):
		'Return/Sets the max Y extremum.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMinX is actually a property, but must be used as a method to correctly pass the arguments
	def GetMinX(self, eUnit=0):
		'Return/Sets the min X extremum.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMinY is actually a property, but must be used as a method to correctly pass the arguments
	def GetMinY(self, eUnit=0):
		'Return/Sets the min Y extremum.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"MaxX": (3, 2, (5, 0), ((3, 49),), "MaxX", None),
		"MaxY": (4, 2, (5, 0), ((3, 49),), "MaxY", None),
		"MinX": (1, 2, (5, 0), ((3, 49),), "MinX", None),
		"MinY": (2, 2, (5, 0), ((3, 49),), "MinY", None),
	}
	_prop_map_put_ = {
	}

	MaxX: str # read_only
	MaxY: str # read_only
	MinX: str # read_only
	MinY: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBFabricationLayerGfx(DispatchBaseClass):
	'MGCPCB Fabrication Layer Graphics Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')
	coclass_clsid = IID('{EDEDED4F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def ChangeType(self, eObjectClass=defaultNamedNotOptArg, pLayerObject=defaultNamedNotOptArg):
		'Change type of FabricationLayerGfx to a new type, if changing to UserLayerGfx include UserLayer Name in LayerObject.'
		ret = self._oleobj_.InvokeTypes(37, LCID, 1, (9, 0), ((3, 0), (9, 0)),eObjectClass
			, pLayerObject)
		if ret is not None:
			ret = Dispatch(ret, 'ChangeType', None)
		return ret

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the graphics's X position."
		return self._oleobj_.InvokeTypes(45, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the graphics's Y position."
		return self._oleobj_.InvokeTypes(46, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsDimensionGfx(self):
		'Determines if this graphics item is dimension graphics.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (11, 0), (),)

	def IsFlexGraphicsValid(self):
		'Determine if the flex graphics is valid.'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(36, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (40, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (44, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (48, 2, (3, 0), (), "Layer", None),
		"LayerName": (49, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (47, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (41, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (39, 2, (9, 0), (), "Parent", None),
		"PositionX": (45, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (46, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (42, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (43, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (31, 2, (3, 0), (), "Side", None),
		"SideName": (32, 2, (8, 0), (), "SideName", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"UniqueId": (38, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DisplayCondition": ((40, LCID, 4, 0),()),
		"FixLock": ((44, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"OriginalLayer": ((41, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read_only
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Side: str # read_only
	SideName: str # read_only
	Type: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBFabricationLayerGfxs(DispatchBaseClass):
	'MGCPCB Fabrication Layer Graphics collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')
	coclass_clsid = IID('{EDEDED50-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pGfx=defaultNamedNotOptArg):
		'Adds a gfx to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pGfx
			)

	def Delete(self):
		'Delete all fabrication layer gfx in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBFabricationLayerGfx
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the gfx of a given index in the gfx collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort gfx in this collection by type and extrema.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the gfx of a given index in the gfx collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBFabricationLayerText(DispatchBaseClass):
	'MGCPCB Fabrication Text Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
	coclass_clsid = IID('{EDEDED55-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def ChangeType(self, eObjectClass=defaultNamedNotOptArg, pLayerObject=defaultNamedNotOptArg):
		'Change type of Fabrication layer text.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((3, 0), (9, 0)),eObjectClass
			, pLayerObject)
		if ret is not None:
			ret = Dispatch(ret, 'ChangeType', None)
		return ret

	def Delete(self):
		'Deletes the Text object.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property, on the text object, by name.'
		ret = self._oleobj_.InvokeTypes(40, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Returns the X position of the Text object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Returns the Y position of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsDimensionText(self):
		'Determines if this text is dimension text.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (11, 0), (),)

	def IsFlexTextValid(self):
		'Determine if the flex text is valid.'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the text to the specified location'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the text by the specified offset.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this textobject .'
		ret = self._oleobj_.InvokeTypes(41, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the X position of the Text object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the Y position of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def SetTextType(self, pType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((3, 1),),pType
			)

	def StrokeText(self, units=0):
		'Returns array containing centerline points of given text.'
		return self._ApplyTypes_(51, 1, (12, 0), ((3, 49),), 'StrokeText', None,units
			)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (11, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		"DisplayCondition": (38, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (18, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (8, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (45, 2, (3, 0), (), "FixLock", None),
		# Method 'Format' returns object of type 'IMGCPCBFormat'
		"Format": (9, 2, (9, 0), (), "Format", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}'),
		"Layer": (48, 2, (3, 0), (), "Layer", None),
		"LayerName": (49, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (46, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ObjectClass": (14, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (39, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (37, 2, (9, 0), (), "Parent", None),
		"PositionX": (3, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (4, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (42, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (43, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (44, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (30, 2, (3, 0), (), "Side", None),
		"SideName": (31, 2, (8, 0), (), "SideName", None),
		"TextString": (2, 2, (8, 0), (), "TextString", None),
		"TextType": (6, 2, (3, 0), (), "TextType", None),
		"Type": (32, 2, (3, 0), (), "Type", None),
		"UniqueId": (36, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (13, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DisplayCondition": ((38, LCID, 4, 0),()),
		"FixLock": ((45, LCID, 4, 0),()),
		"OriginalLayer": ((39, LCID, 4, 0),()),
		"PositionX": ((3, LCID, 4, 0),()),
		"PositionY": ((4, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"Side": ((30, LCID, 4, 0),()),
		"TextString": ((2, LCID, 4, 0),()),
		"_Handle": ((13, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Format: str # IMGCPCBFormat; read_only
	Layer: str # read_only
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Side: str # read/write
	SideName: str # read_only
	TextString: str # read/write
	TextType: str # read_only
	Type: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBFabricationLayerTexts(DispatchBaseClass):
	'MGCPCB Fabrication Text collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')
	coclass_clsid = IID('{EDEDED56-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pText=defaultNamedNotOptArg):
		'Adds a text to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pText
			)

	def Delete(self):
		'Delete all fabrication layer text in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBFabricationLayerText
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the text of a given index in the text collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort text in this collection by text string and location.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the text of a given index in the text collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBFabricationPad(DispatchBaseClass):
	'MGCPCB Fabrication Pad Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}')
	coclass_clsid = IID('{EDEDED53-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def AddGeometry(self, PointsArray=defaultNamedNotOptArg, RemoveExisting=True, Unit=0):
		"Adds a geometry to the pad's geometry collection with the option of clearing the existing geometries.(Beta)"
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((16396, 1), (11, 49), (3, 49)),PointsArray
			, RemoveExisting, Unit)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (6, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometries' returns object of type 'IMGCPCBGeometries'
		"Geometries": (3, 2, (9, 0), (), "Geometries", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}'),
		"Layer": (48, 2, (3, 0), (), "Layer", None),
		"LayerName": (49, 2, (8, 0), (), "LayerName", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ShapeType": (5, 2, (3, 0), (), "ShapeType", None),
		"Side": (1, 2, (3, 0), (), "Side", None),
		"Type": (2, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}

	Extrema: str # IMGCPCBExtrema; read_only
	Geometries: str # IMGCPCBGeometries; read_only
	Layer: str # read_only
	LayerName: str # read_only
	Name: str # read_only
	ShapeType: str # read_only
	Side: str # read_only
	Type: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBFabricationPads(DispatchBaseClass):
	'MGCPCB Fabrication Pad collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}')
	coclass_clsid = IID('{EDEDED54-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pFabricationPad=defaultNamedNotOptArg):
		'Adds a pad to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pFabricationPad
			)

	# Result is of type IMGCPCBFabricationPad
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the pad of a given index in the pad collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort pads in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the pad of a given index in the pad collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBFiducial(DispatchBaseClass):
	'MGCPCB Fiducial Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}')
	coclass_clsid = IID('{EDEDED2C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBUserPads
	# The method GetUserPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserPads(self, sLayerOnly='*'):
		'Returns the collection of user pads.'
		return self._ApplyTypes_(41, 2, (9, 32), ((8, 49),), 'GetUserPads', '{ACC37237-2F98-403B-8783-C21D7026F5B4}',sLayerOnly
			)

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"FixLock": (46, 2, (3, 0), (), "FixLock", None),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (47, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parent": (45, 2, (9, 0), (), "Parent", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (43, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (44, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (40, 2, (3, 0), (), "Side", None),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"UniqueId": (42, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserPads' returns object of type 'IMGCPCBUserPads'
		"UserPads": (41, 2, (9, 32), ((8, 49),), "UserPads", '{ACC37237-2F98-403B-8783-C21D7026F5B4}'),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"FixLock": ((46, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	FixLock: str # read/write
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Side: str # read_only
	Type: str # read_only
	UniqueId: str # read_only
	UserPads: str # IMGCPCBUserPads; read_only
	_Handle: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBFiducials(DispatchBaseClass):
	'MGCPCB fiducial collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}')
	coclass_clsid = IID('{EDEDED2D-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pFiducial=defaultNamedNotOptArg):
		'Adds a fiducial to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pFiducial
			)

	def Delete(self):
		'Delete all fiducials in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBFiducial
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the fiducial of a given index in the fiducials collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort fiducials in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the fiducial of a given index in the fiducials collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBFormat(DispatchBaseClass):
	'MGCPCB Format Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}')
	coclass_clsid = IID('{EDEDED63-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetHeight(self, eUnit=0):
		'Sets or returns the height of the Text object.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Sets or returns the orientation of the Text object.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPenWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetPenWidth(self, eUnit=0):
		'Sets or returns the stroke width of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def IsVectorFont(self):
		'Returns true if a vector font is used. (Beta)'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), (),)

	# The method SetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetHeight(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the height of the Text object.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the orientation of the Text object.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPenWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetPenWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the stroke width of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"AspectRatio": (13, 2, (5, 0), (), "AspectRatio", None),
		"Attributes": (12, 2, (3, 0), (), "Attributes", None),
		"Bold": (1, 2, (11, 0), (), "Bold", None),
		"Font": (5, 2, (8, 0), (), "Font", None),
		"Height": (10, 2, (5, 0), ((3, 49),), "Height", None),
		"HorizontalJust": (6, 2, (3, 0), (), "HorizontalJust", None),
		"Italic": (2, 2, (11, 0), (), "Italic", None),
		"LineSpacing": (15, 2, (5, 0), (), "LineSpacing", None),
		"Mirrored": (8, 2, (11, 0), (), "Mirrored", None),
		"Orientation": (9, 2, (5, 0), ((3, 49),), "Orientation", None),
		"PenWidth": (4, 2, (5, 0), ((3, 49),), "PenWidth", None),
		"Underline": (3, 2, (11, 0), (), "Underline", None),
		"VerticalJust": (7, 2, (3, 0), (), "VerticalJust", None),
	}
	_prop_map_put_ = {
		"AspectRatio": ((13, LCID, 4, 0),()),
		"Bold": ((1, LCID, 4, 0),()),
		"Font": ((5, LCID, 4, 0),()),
		"Height": ((10, LCID, 4, 0),()),
		"HorizontalJust": ((6, LCID, 4, 0),()),
		"Italic": ((2, LCID, 4, 0),()),
		"LineSpacing": ((15, LCID, 4, 0),()),
		"Mirrored": ((8, LCID, 4, 0),()),
		"Orientation": ((9, LCID, 4, 0),()),
		"PenWidth": ((4, LCID, 4, 0),()),
		"Underline": ((3, LCID, 4, 0),()),
		"VerticalJust": ((7, LCID, 4, 0),()),
	}

	AspectRatio: str # read/write
	Attributes: str # read_only
	Bold: str # read/write
	Font: str # read/write
	Height: str # read/write
	HorizontalJust: str # read/write
	Italic: str # read/write
	LineSpacing: str # read/write
	Mirrored: str # read/write
	Orientation: str # read/write
	PenWidth: str # read/write
	Underline: str # read/write
	VerticalJust: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBFromTo(DispatchBaseClass):
	'MGCPCB FromTo Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')
	coclass_clsid = IID('{EDEDED1F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetFromObject is actually a property, but must be used as a method to correctly pass the arguments
	def GetFromObject(self, bPinsOnly=True):
		'Return the object on which the FromTo originates. If the PinsOnly flag is set then the closest pin will be returned for any FromTo that does originate on a pin.'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((11, 49),),bPinsOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetFromObject', None)
		return ret

	# The method GetFromX is actually a property, but must be used as a method to correctly pass the arguments
	def GetFromX(self, eUnit=0):
		'Returns the X coordinate of the from for this FromTo.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetFromY is actually a property, but must be used as a method to correctly pass the arguments
	def GetFromY(self, eUnit=0):
		'Returns the Y coordinate of the from for this FromTo.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetToObject is actually a property, but must be used as a method to correctly pass the arguments
	def GetToObject(self, bPinsOnly=True):
		'Return the object on which the FromTo terminates. If the PinsOnly flag is set then the closest pin will be returned for any FromTo that does terminate on a pin.'
		ret = self._oleobj_.InvokeTypes(12, LCID, 2, (9, 0), ((11, 49),),bPinsOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetToObject', None)
		return ret

	# The method GetToX is actually a property, but must be used as a method to correctly pass the arguments
	def GetToX(self, eUnit=0):
		'Returns the X coordinate of the to for this FromTo.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetToY is actually a property, but must be used as a method to correctly pass the arguments
	def GetToY(self, eUnit=0):
		'Returns the Y coordinate of the to for this FromTo.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsFromSketchPlan(self):
		'Returns true if this netline is associated with a sketch plan.(internal)'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"FromLayer": (7, 2, (3, 0), (), "FromLayer", None),
		# Method 'FromMarker' returns object of type 'IMGCPCBMarker'
		"FromMarker": (14, 2, (9, 0), (), "FromMarker", '{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}'),
		"FromObject": (11, 2, (9, 0), ((11, 49),), "FromObject", None),
		"FromX": (3, 2, (5, 0), ((3, 49),), "FromX", None),
		"FromY": (4, 2, (5, 0), ((3, 49),), "FromY", None),
		"Highlighted": (2, 2, (11, 0), (), "Highlighted", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (9, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		# Method 'SketchPlan' returns object of type 'IMGCPCBSketchPlan'
		"SketchPlan": (17, 2, (9, 0), (), "SketchPlan", '{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}'),
		"ToLayer": (8, 2, (3, 0), (), "ToLayer", None),
		# Method 'ToMarker' returns object of type 'IMGCPCBMarker'
		"ToMarker": (15, 2, (9, 0), (), "ToMarker", '{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}'),
		"ToObject": (12, 2, (9, 0), ((11, 49),), "ToObject", None),
		"ToX": (5, 2, (5, 0), ((3, 49),), "ToX", None),
		"ToY": (6, 2, (5, 0), ((3, 49),), "ToY", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((2, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
	}

	FromLayer: str # read_only
	FromMarker: str # IMGCPCBMarker; read_only
	FromObject: str # read_only
	FromX: str # read_only
	FromY: str # read_only
	Highlighted: bool # read/write
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	Selected: bool # read/write
	SketchPlan: str # IMGCPCBSketchPlan; read_only
	ToLayer: str # read_only
	ToMarker: str # IMGCPCBMarker; read_only
	ToObject: str # read_only
	ToX: str # read_only
	ToY: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBFromTos(DispatchBaseClass):
	'MGCPCB fromTo collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')
	coclass_clsid = IID('{EDEDED20-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pFromTo=defaultNamedNotOptArg):
		'Adds a fromTo to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pFromTo
			)

	def AddFromTos(self, FromTos=defaultNamedNotOptArg):
		'Adds a collection of FromTos to this collection of FromTos.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((9, 1),),FromTos
			)

	# Result is of type IMGCPCBFromTo
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the fromTo of a given index in the fromTo collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort fromtos in this collection by net name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the fromTo of a given index in the fromTo collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBGeneratedPlane(DispatchBaseClass):
	'MGCPCB Generated Plane Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}')
	coclass_clsid = IID('{EDEDED40-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetHatchAngle is actually a property, but must be used as a method to correctly pass the arguments
	def GetHatchAngle(self, eUnit=0):
		'Returns the hatch angle for this generated plane.'
		return self._oleobj_.InvokeTypes(53, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetHatchDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetHatchDistance(self, eUnit=0):
		'Returns the hatch distance for this generated plane.'
		return self._oleobj_.InvokeTypes(52, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetHatchWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetHatchWidth(self, eUnit=0):
		'Returns the hatch width for this generated plane.'
		return self._oleobj_.InvokeTypes(51, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'ActualPlaneShape' returns object of type 'IMGCPCBActualPlaneShape'
		"ActualPlaneShape": (46, 2, (9, 0), (), "ActualPlaneShape", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}'),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FillNonSquareHatchAreas": (55, 2, (11, 0), (), "FillNonSquareHatchAreas", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"HatchAngle": (53, 2, (5, 0), ((3, 49),), "HatchAngle", None),
		"HatchDistance": (52, 2, (5, 0), ((3, 49),), "HatchDistance", None),
		"HatchPattern": (54, 2, (3, 0), (), "HatchPattern", None),
		"HatchWidth": (51, 2, (5, 0), ((3, 49),), "HatchWidth", None),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (50, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'PlaneShape' returns object of type 'IMGCPCBPlaneShape'
		"PlaneShape": (45, 2, (9, 0), (), "PlaneShape", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}'),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (48, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (49, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (47, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	ActualPlaneShape: str # IMGCPCBActualPlaneShape; read_only
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FillNonSquareHatchAreas: str # read_only
	Geometry: str # IMGCPCBGeometry; read_only
	HatchAngle: str # read_only
	HatchDistance: str # read_only
	HatchPattern: str # read_only
	HatchWidth: str # read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	PlaneShape: str # IMGCPCBPlaneShape; read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBGeneratedPlanes(DispatchBaseClass):
	'MGCPCB Generated Planes collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')
	coclass_clsid = IID('{EDEDED41-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pGeneratedPlane=defaultNamedNotOptArg):
		'Adds an generated plane to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pGeneratedPlane
			)

	# Result is of type IMGCPCBGeneratedPlane
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the generated plane of a given index in the generated plane collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort generated planes in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the generated plane of a given index in the generated plane collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBGeometries(DispatchBaseClass):
	'MGCPCB Geometry collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')
	coclass_clsid = IID('{EDEDED6E-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pGeometry=defaultNamedNotOptArg):
		'Adds a geometry to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pGeometry
			)

	# Result is of type IMGCPCBGeometry
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the geometry of a given index in the geometries collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort geometries in this collection by extrema.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the geometry of a given index in the geometries collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBGeometry(DispatchBaseClass):
	'MGCPCB Geometry Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')
	coclass_clsid = IID('{EDEDED62-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Removes the cutout.  Delete cannot be called for an outline.'
		return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), (),)

	# The method GetCircleR is actually a property, but must be used as a method to correctly pass the arguments
	def GetCircleR(self, eUnit=0):
		'Returns the center R value for this cirlce.  Object must be a circle.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetCircleX is actually a property, but must be used as a method to correctly pass the arguments
	def GetCircleX(self, eUnit=0):
		'Returns the center X value for this cirlce.  Object must be a circle.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetCircleY is actually a property, but must be used as a method to correctly pass the arguments
	def GetCircleY(self, eUnit=0):
		'Returns the center Y value for this cirlce.  Object must be a circle.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetLineDisplayWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetLineDisplayWidth(self, eUnit=0):
		'Returns the line display width of this geometry.'
		return self._oleobj_.InvokeTypes(20, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetLineWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetLineWidth(self, eUnit=0):
		'Set or returns the line width of this geometry.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOutline is actually a property, but must be used as a method to correctly pass the arguments
	def GetOutline(self, eUnit=0):
		'Sets/returns the outline of this Geoemtry.'
		return self._ApplyTypes_(24, 2, (12, 0), ((3, 49),), 'GetOutline', None,eUnit
			)

	# The method GetPointsArray is actually a property, but must be used as a method to correctly pass the arguments
	def GetPointsArray(self, eUnit=0):
		'This property sets or returns an xyr list of the points for this geometry.'
		return self._ApplyTypes_(1, 2, (12, 0), ((3, 49),), 'GetPointsArray', None,eUnit
			)

	# The method GetRectMaxX is actually a property, but must be used as a method to correctly pass the arguments
	def GetRectMaxX(self, eUnit=0):
		'Returns the maximum X value for this rectangle.  Object must be a rectangle.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetRectMaxY is actually a property, but must be used as a method to correctly pass the arguments
	def GetRectMaxY(self, eUnit=0):
		'Returns the maximum Y value for this rectangle.  Object must be a rectangle.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetRectMinX is actually a property, but must be used as a method to correctly pass the arguments
	def GetRectMinX(self, eUnit=0):
		'Returns the minimum X value for this rectangle.  Object must be a rectangle.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetRectMinY is actually a property, but must be used as a method to correctly pass the arguments
	def GetRectMinY(self, eUnit=0):
		'Returns the minimum Y value for this rectangle.  Object must be a rectangle.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsArced(self):
		'Returns true for objects containing arcs.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	def IsCircle(self):
		'Returns true for objects that are cirlces.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def IsClosed(self):
		'Returns true for areas and closed paths.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	def IsCutout(self):
		'Returns true if this geoemtry is a cutout.'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), (),)

	def IsPath(self):
		'Returns true for paths.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def IsPointEnclosed(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate enclosed within this geometry object?'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside this geometry object?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsRect(self):
		'Returns true for objects that are rectangles.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), (),)

	# Result is of type IMGCPCBObjects
	def PutCutout(self, pSafeArrayOfPoints=defaultNamedNotOptArg, eUnit=0):
		'Adds a cutout to this geometry.'
		ret = self._oleobj_.InvokeTypes(23, LCID, 1, (9, 0), ((16396, 1), (3, 49)),pSafeArrayOfPoints
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutCutout', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')
		return ret

	# The method SetLineDisplayWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineDisplayWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the line display width of this geometry.'
		return self._oleobj_.InvokeTypes(20, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetLineWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Set or returns the line width of this geometry.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetOutline is actually a property, but must be used as a method to correctly pass the arguments
	def SetOutline(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/returns the outline of this Geoemtry.'
		return self._oleobj_.InvokeTypes(24, LCID, 4, (24, 0), ((3, 49), (12, 1)),eUnit
			, arg1)

	# The method SetPointsArray is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointsArray(self, eUnit=0, arg1=defaultUnnamedArg):
		'This property sets or returns an xyr list of the points for this geometry.'
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((3, 49), (12, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Attributes": (17, 2, (3, 0), (), "Attributes", None),
		"CircleR": (12, 2, (5, 0), ((3, 49),), "CircleR", None),
		"CircleX": (10, 2, (5, 0), ((3, 49),), "CircleX", None),
		"CircleY": (11, 2, (5, 0), ((3, 49),), "CircleY", None),
		# Method 'Cutouts' returns object of type 'IMGCPCBGeometries'
		"Cutouts": (22, 2, (9, 0), (), "Cutouts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}'),
		"DisplayFilled": (2, 2, (11, 0), (), "DisplayFilled", None),
		"FillStyle": (28, 2, (3, 0), (), "FillStyle", None),
		"Filled": (21, 2, (11, 0), (), "Filled", None),
		"LineDisplayWidth": (20, 2, (5, 0), ((3, 49),), "LineDisplayWidth", None),
		"LineStyle": (3, 2, (3, 0), (), "LineStyle", None),
		"LineWidth": (5, 2, (5, 0), ((3, 49),), "LineWidth", None),
		"Outline": (24, 2, (12, 0), ((3, 49),), "Outline", None),
		"PointsArray": (1, 2, (12, 0), ((3, 49),), "PointsArray", None),
		"RectMaxX": (15, 2, (5, 0), ((3, 49),), "RectMaxX", None),
		"RectMaxY": (16, 2, (5, 0), ((3, 49),), "RectMaxY", None),
		"RectMinX": (13, 2, (5, 0), ((3, 49),), "RectMinX", None),
		"RectMinY": (14, 2, (5, 0), ((3, 49),), "RectMinY", None),
	}
	_prop_map_put_ = {
		"FillStyle": ((28, LCID, 4, 0),()),
		"FilledEx": ((29, LCID, 4, 0),()),
		"LineDisplayWidth": ((20, LCID, 4, 0),()),
		"LineStyle": ((3, LCID, 4, 0),()),
		"LineWidth": ((5, LCID, 4, 0),()),
		"Outline": ((24, LCID, 4, 0),()),
		"PointsArray": ((1, LCID, 4, 0),()),
	}

	Attributes: str # read_only
	CircleR: str # read_only
	CircleX: str # read_only
	CircleY: str # read_only
	Cutouts: str # IMGCPCBGeometries; read_only
	DisplayFilled: str # read_only
	FillStyle: str # read/write
	Filled: str # read_only
	LineDisplayWidth: str # read/write
	LineStyle: str # read/write
	LineWidth: str # read/write
	Outline: str # read/write
	PointsArray: str # read/write
	RectMaxX: str # read_only
	RectMaxY: str # read_only
	RectMinX: str # read_only
	RectMinY: str # read_only
	FilledEx: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBGlobalDisplayControl(DispatchBaseClass):
	'MGCPCB Global Display Control Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED74}')
	coclass_clsid = IID('{EDEDED75-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# Result is of type IMGCPCBColorPattern
	# The method Color is actually a property, but must be used as a method to correctly pass the arguments
	def Color(self, itemName=defaultNamedNotOptArg):
		'Sets or returns the color data for the named item.'
		ret = self._oleobj_.InvokeTypes(18, LCID, 2, (9, 0), ((8, 1),),itemName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Color', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	# Result is of type IMGCPCBColorPattern
	# The method ConductorLayerColor is actually a property, but must be used as a method to correctly pass the arguments
	def ConductorLayerColor(self, nLayer=defaultNamedNotOptArg, eType=defaultNamedNotOptArg):
		'This property sets or returns color of different conductive layers.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((2, 1), (3, 1)),nLayer
			, eType)
		if ret is not None:
			ret = Dispatch(ret, 'ConductorLayerColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	# Result is of type IMGCPCBColorPattern
	# The method GeneralItemsColor is actually a property, but must be used as a method to correctly pass the arguments
	def GeneralItemsColor(self, eType=defaultNamedNotOptArg):
		'This property sets or returns color of the general items.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((3, 1),),eType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GeneralItemsColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	# The method Hazards is actually a property, but must be used as a method to correctly pass the arguments
	def Hazards(self, eType=defaultNamedNotOptArg):
		'This property sets or returns on/off setting of the Hazards'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (11, 0), ((3, 1),),eType
			)

	# Result is of type IMGCPCBColor
	# The method HazardsColor is actually a property, but must be used as a method to correctly pass the arguments
	def HazardsColor(self, eType=defaultNamedNotOptArg):
		'This property sets or returns color of the Hazards.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 2, (9, 0), ((3, 1),),eType
			)
		if ret is not None:
			ret = Dispatch(ret, 'HazardsColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')
		return ret

	def LowerUserLayerDisplayLevel(self, Name=defaultNamedNotOptArg):
		'Lowers the display below all user layers on same EPcbDisplayLevel.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((8, 1),),Name
			)

	# Result is of type IMGCPCBColorPattern
	# The method MaterialColor is actually a property, but must be used as a method to correctly pass the arguments
	def MaterialColor(self, Name=defaultNamedNotOptArg):
		'This property sets or returns color of a material'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'MaterialColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	# The method MiscItems is actually a property, but must be used as a method to correctly pass the arguments
	def MiscItems(self, eType=defaultNamedNotOptArg):
		'This property sets or returns on/off setting of the misc items.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (11, 0), ((3, 1),),eType
			)

	# Result is of type IMGCPCBColorPattern
	# The method MiscItemsColor is actually a property, but must be used as a method to correctly pass the arguments
	def MiscItemsColor(self, eType=defaultNamedNotOptArg):
		'This property sets or returns color of the misc items.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1),),eType
			)
		if ret is not None:
			ret = Dispatch(ret, 'MiscItemsColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	# The method Net is actually a property, but must be used as a method to correctly pass the arguments
	def Net(self, bIsNetOrNetClass=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'This property sets or returns on/off setting of the nets or netclasses.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (11, 0), ((11, 1), (8, 1)),bIsNetOrNetClass
			, Name)

	# Result is of type IMGCPCBColorPattern
	# The method NetColor is actually a property, but must be used as a method to correctly pass the arguments
	def NetColor(self, bIsNetOrNetClass=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'This property sets or returns color of the nets or netclasses.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1), (8, 1)),bIsNetOrNetClass
			, Name)
		if ret is not None:
			ret = Dispatch(ret, 'NetColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	# Result is of type IMGCPCBColorPattern
	# The method PartItemsColor is actually a property, but must be used as a method to correctly pass the arguments
	def PartItemsColor(self, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg):
		'This property sets or returns color of the part items.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 2, (9, 0), ((3, 1), (3, 1)),eType
			, eSide)
		if ret is not None:
			ret = Dispatch(ret, 'PartItemsColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	def RaiseUserLayerDisplayLevel(self, Name=defaultNamedNotOptArg):
		'Raises the display above all user layers on same EPcbDisplayLevel.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((8, 1),),Name
			)

	# The method SetColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetColor(self, itemName=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Sets or returns the color data for the named item.'
		return self._oleobj_.InvokeTypes(18, LCID, 4, (24, 0), ((8, 1), (9, 0)),itemName
			, arg1)

	# The method SetConductorLayerColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetConductorLayerColor(self, nLayer=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'This property sets or returns color of different conductive layers.'
		return self._oleobj_.InvokeTypes(1, LCID, 8, (24, 0), ((2, 1), (3, 1), (9, 1)),nLayer
			, eType, arg2)

	# The method SetGeneralItemsColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetGeneralItemsColor(self, eType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns color of the general items.'
		return self._oleobj_.InvokeTypes(2, LCID, 8, (24, 0), ((3, 1), (9, 1)),eType
			, arg1)

	# The method SetHazards is actually a property, but must be used as a method to correctly pass the arguments
	def SetHazards(self, eType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns on/off setting of the Hazards'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 1), (11, 1)),eType
			, arg1)

	# The method SetHazardsColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetHazardsColor(self, eType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns color of the Hazards.'
		return self._oleobj_.InvokeTypes(9, LCID, 8, (24, 0), ((3, 1), (9, 1)),eType
			, arg1)

	# The method SetMaterialColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetMaterialColor(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns color of a material'
		return self._oleobj_.InvokeTypes(11, LCID, 8, (24, 0), ((8, 1), (9, 1)),Name
			, arg1)

	# The method SetMiscItems is actually a property, but must be used as a method to correctly pass the arguments
	def SetMiscItems(self, eType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns on/off setting of the misc items.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (11, 1)),eType
			, arg1)

	# The method SetMiscItemsColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetMiscItemsColor(self, eType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns color of the misc items.'
		return self._oleobj_.InvokeTypes(4, LCID, 8, (24, 0), ((3, 1), (9, 1)),eType
			, arg1)

	# The method SetNet is actually a property, but must be used as a method to correctly pass the arguments
	def SetNet(self, bIsNetOrNetClass=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'This property sets or returns on/off setting of the nets or netclasses.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((11, 1), (8, 1), (11, 1)),bIsNetOrNetClass
			, Name, arg2)

	# The method SetNetColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetNetColor(self, bIsNetOrNetClass=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'This property sets or returns color of the nets or netclasses.'
		return self._oleobj_.InvokeTypes(7, LCID, 8, (24, 0), ((11, 1), (8, 1), (9, 1)),bIsNetOrNetClass
			, Name, arg2)

	def SetParentChild(self, parentName=defaultNamedNotOptArg, childName=defaultNamedNotOptArg):
		'Connect two virtual GFX nodes as a parent and a child.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), ((8, 1), (8, 1)),parentName
			, childName)

	# The method SetPartItemsColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetPartItemsColor(self, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'This property sets or returns color of the part items.'
		return self._oleobj_.InvokeTypes(5, LCID, 8, (24, 0), ((3, 1), (3, 1), (9, 1)),eType
			, eSide, arg2)

	# The method SetUserLayerColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetUserLayerColor(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'This property sets or returns color of the user layers.'
		return self._oleobj_.InvokeTypes(6, LCID, 8, (24, 0), ((8, 1), (9, 1)),Name
			, arg1)

	# The method SetUserLayerDisplayLevel is actually a property, but must be used as a method to correctly pass the arguments
	def SetUserLayerDisplayLevel(self, Name=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Sets or returns the display level of the user layer in relation to all items.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((8, 1), (3, 1)),Name
			, arg1)

	# Result is of type IMGCPCBColorPattern
	# The method UserLayerColor is actually a property, but must be used as a method to correctly pass the arguments
	def UserLayerColor(self, Name=defaultNamedNotOptArg):
		'This property sets or returns color of the user layers.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 2, (9, 0), ((8, 1),),Name
			)
		if ret is not None:
			ret = Dispatch(ret, 'UserLayerColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	# The method UserLayerDisplayLevel is actually a property, but must be used as a method to correctly pass the arguments
	def UserLayerDisplayLevel(self, Name=defaultNamedNotOptArg):
		'Sets or returns the display level of the user layer in relation to all items.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (3, 0), ((8, 1),),Name
			)

	_prop_map_get_ = {
		"ColorHazardsBySeverity": (16, 2, (11, 0), (), "ColorHazardsBySeverity", None),
		"DeferUpdate": (0, 2, (11, 0), (), "DeferUpdate", None),
		"FillSliverSymbols": (17, 2, (11, 0), (), "FillSliverSymbols", None),
		"PanSensitivity": (15, 2, (3, 0), (), "PanSensitivity", None),
	}
	_prop_map_put_ = {
		"ColorHazardsBySeverity": ((16, LCID, 4, 0),()),
		"DeferUpdate": ((0, LCID, 4, 0),()),
		"FillSliverSymbols": ((17, LCID, 4, 0),()),
		"PanSensitivity": ((15, LCID, 4, 0),()),
	}

	ColorHazardsBySeverity: str # read/write
	DeferUpdate: str # read/write
	FillSliverSymbols: str # read/write
	PanSensitivity: str # read/write

	# Default property for this class is 'DeferUpdate'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (11, 0), (), "DeferUpdate", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBGlueSpot(DispatchBaseClass):
	'MGCPCB Glue Spot Object.'
	CLSID = IID('{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}')
	coclass_clsid = IID('{37DEF24E-A64B-40E3-9614-6EEE9BC06981}')

	def Delete(self):
		'Deletes this glue spot'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (4, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		"PositionX": (1, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (2, 2, (5, 0), ((3, 49),), "PositionY", None),
	}
	_prop_map_put_ = {
		"PositionX": ((1, LCID, 4, 0),()),
		"PositionY": ((2, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	PositionX: str # read/write
	PositionY: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBGlueSpots(DispatchBaseClass):
	'MGCPCB Glue Spots collection.'
	CLSID = IID('{EDAD6DA3-1AE5-4B8E-94F0-2A3F9B69553D}')
	coclass_clsid = IID('{8E170053-F2B1-4ED8-AC31-8841426EC4C2}')

	def Add(self, pGlueSpot=defaultNamedNotOptArg):
		'Adds a glue spot to this collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((9, 1),),pGlueSpot
			)

	def Delete(self):
		'Delete all glue spots in the collection.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBGlueSpot
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the glue spot of a given index in the glue spot collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort glue spots in this collection parent and position.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the glue spot of a given index in the glue spot collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBGroup(DispatchBaseClass):
	'MGCPCB Group Object.'
	CLSID = IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
	coclass_clsid = IID('{96C19E74-E567-42EB-BE5C-CC01B0286255}')

	def Add(self, pObj=defaultNamedNotOptArg):
		'Adds an object to the group.'
		return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((9, 1),),pObj
			)

	def CanAddToPhRS(self, pObj=defaultNamedNotOptArg, suppressMsg=defaultNamedNotOptArg):
		'Check if we can add object to a Physical Reuse Source'
		return self._oleobj_.InvokeTypes(92, LCID, 1, (11, 0), ((9, 1), (11, 1)),pObj
			, suppressMsg)

	def CanRemoveFromPhRS(self, pObj=defaultNamedNotOptArg, suppressMsg=defaultNamedNotOptArg):
		'Check if we can add object to a Physical Reuse Source'
		return self._oleobj_.InvokeTypes(93, LCID, 1, (11, 0), ((9, 1), (11, 1)),pObj
			, suppressMsg)

	def Delete(self):
		'Delete the group.  The group object will be invalid after this operation.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	def DeletePhRInstance(self):
		'Delete Physical Reuse Instance. The group object will be invalid after this operation.'
		return self._oleobj_.InvokeTypes(97, LCID, 1, (24, 0), (),)

	def ExcludeFromLDDBackAnno(self):
		'Flags all objects in the group to not be back annotated through LDD.'
		return self._oleobj_.InvokeTypes(60, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property, on this group, by name.'
		ret = self._oleobj_.InvokeTypes(38, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetCenterX is actually a property, but must be used as a method to correctly pass the arguments
	def GetCenterX(self, eUnit=0):
		'Returns the X coord of the center of the group.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetCenterY is actually a property, but must be used as a method to correctly pass the arguments
	def GetCenterY(self, eUnit=0):
		'Returns the Y coord of the center of the group.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetChildIds is actually a property, but must be used as a method to correctly pass the arguments
	def GetChildIds(self, pObjectFilter=0):
		'Returns a list of unique ids owned by this group filtered by object filter.'
		return self._ApplyTypes_(72, 2, (12, 0), ((9, 49),), 'GetChildIds', None,pObjectFilter
			)

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs(self, eSelectType=-1, eSelectOnly=0, nLayerOnly=0):
		"Returns the Group's board layer gfx collection. (Deprecated) Use ConductorLayerGfxs2."
		ret = self._oleobj_.InvokeTypes(26, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs2 is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs2(self, pArrayOfSelectType='', eSelectOnly=0, nLayerOnly=0):
		"Returns the Group's board layer gfx collection."
		return self._ApplyTypes_(43, 2, (9, 32), ((16396, 49), (3, 49), (3, 49)), 'GetConductorLayerGfxs2', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}',pArrayOfSelectType
			, eSelectOnly, nLayerOnly)

	# Result is of type IMGCPCBConductorLayerTexts
	# The method GetConductorLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerTexts(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the Group's board text collection."
		ret = self._oleobj_.InvokeTypes(29, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')
		return ret

	# Result is of type IMGCPCBEmbeddedPassiveShapes
	# The method GetEmbeddedPassiveShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetEmbeddedPassiveShapes(self, eSelectOnly=0, eType=-1, nLayerOnly=0):
		"Returns the group's collection of embedded passive shapes."
		ret = self._oleobj_.InvokeTypes(40, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectOnly
			, eType, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetEmbeddedPassiveShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')
		return ret

	# Result is of type IMGCPCBFabricationLayerGfxs
	# The method GetFabricationLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerGfxs(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0):
		"Returns the Group's fabrication layer graphics collection."
		ret = self._oleobj_.InvokeTypes(27, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, eLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')
		return ret

	# Result is of type IMGCPCBFabricationLayerTexts
	# The method GetFabricationLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerTexts(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0):
		"Returns the Group's fabrication text collection."
		ret = self._oleobj_.InvokeTypes(30, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, eLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')
		return ret

	# Result is of type IMGCPCBObstructs
	# The method GetObstructs is actually a property, but must be used as a method to correctly pass the arguments
	def GetObstructs(self, eSelectType=-1):
		"Returns the Group's obstruct collection."
		ret = self._oleobj_.InvokeTypes(16, LCID, 2, (9, 0), ((3, 49),),eSelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetObstructs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		"Gets the Group's orientation."
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPadstackObjects
	# The method GetPadstackObjects is actually a property, but must be used as a method to correctly pass the arguments
	def GetPadstackObjects(self, eSelectType=-1):
		'Get the collection of padstack objects in the group'
		ret = self._oleobj_.InvokeTypes(50, LCID, 2, (9, 0), ((3, 49),),eSelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPadstackObjects', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')
		return ret

	# Result is of type IMGCPCBPins
	# The method GetPins is actually a property, but must be used as a method to correctly pass the arguments
	def GetPins(self, Name='*'):
		"Returns the Group's pin collection."
		return self._ApplyTypes_(5, 2, (9, 32), ((8, 49),), 'GetPins', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}',Name
			)

	# The method GetPlacementAngle is actually a property, but must be used as a method to correctly pass the arguments
	def GetPlacementAngle(self, eUnit=0):
		"Gets the Group's placement angle."
		return self._oleobj_.InvokeTypes(68, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetRefPointX is actually a property, but must be used as a method to correctly pass the arguments
	def GetRefPointX(self, eUnit=0):
		"Set or returns the Group's X position."
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetRefPointY is actually a property, but must be used as a method to correctly pass the arguments
	def GetRefPointY(self, eUnit=0):
		"Set or returns the Group's Y position."
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBUserLayerGfxs
	# The method GetUserLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerGfxs(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the Group's user layer gfx collection."
		return self._ApplyTypes_(28, 2, (9, 32), ((3, 49), (8, 49)), 'GetUserLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}',eSelectOnly
			, sLayerOnly)

	# Result is of type IMGCPCBUserLayerTexts
	# The method GetUserLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerTexts(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the Group's user text collection."
		return self._ApplyTypes_(31, 2, (9, 32), ((3, 49), (8, 49)), 'GetUserLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}',eSelectOnly
			, sLayerOnly)

	def IsValid(self):
		'Returns true if this a valid group.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Moves the Group to given location.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MovePlannedBubble(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the planning bubble for this group.'
		return self._oleobj_.InvokeTypes(82, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, OffsetX=defaultNamedNotOptArg, OffsetY=defaultNamedNotOptArg, eUnit=0):
		'Move the Group by the given offset.'
		return self._oleobj_.InvokeTypes(41, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),OffsetX
			, OffsetY, eUnit)

	# Result is of type IMGCPCBGroup
	def PublishPhysicalReuseSource(self, bSuppressMsg=False):
		'Publish the given physical reuse circuit source. Property used only for group type epcbGroupPhysicalReuseSource.'
		ret = self._oleobj_.InvokeTypes(89, LCID, 1, (9, 0), ((11, 49),),bSuppressMsg
			)
		if ret is not None:
			ret = Dispatch(ret, 'PublishPhysicalReuseSource', '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
		return ret

	# Result is of type IMGCPCBGroup
	def PutGroup(self, eGroupType=defaultNamedNotOptArg, sGroupName=defaultNamedNotOptArg):
		'Creates a new Group.'
		ret = self._oleobj_.InvokeTypes(63, LCID, 1, (9, 0), ((3, 1), (8, 1)),eGroupType
			, sGroupName)
		if ret is not None:
			ret = Dispatch(ret, 'PutGroup', '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
		return ret

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this pin.'
		ret = self._oleobj_.InvokeTypes(39, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def Remove(self, pObj=defaultNamedNotOptArg):
		'Removes an object from the group.'
		return self._oleobj_.InvokeTypes(47, LCID, 1, (24, 0), ((9, 1),),pObj
			)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		"Gets the Group's orientation."
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPlacementAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetPlacementAngle(self, eUnit=0, arg1=defaultUnnamedArg):
		"Gets the Group's placement angle."
		return self._oleobj_.InvokeTypes(68, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetRefPointX is actually a property, but must be used as a method to correctly pass the arguments
	def SetRefPointX(self, eUnit=0, arg1=defaultUnnamedArg):
		"Set or returns the Group's X position."
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetRefPointY is actually a property, but must be used as a method to correctly pass the arguments
	def SetRefPointY(self, eUnit=0, arg1=defaultUnnamedArg):
		"Set or returns the Group's Y position."
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def UpdatePhysicalReuseInstance(self):
		"Update Physical Reuse Instance if it's out of date"
		return self._oleobj_.InvokeTypes(91, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'ActualPlaneShapes' returns object of type 'IMGCPCBActualPlaneShapes'
		"ActualPlaneShapes": (49, 2, (9, 0), (), "ActualPlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}'),
		"Anchor": (7, 2, (3, 0), (), "Anchor", None),
		"AnchorFromDescendant": (59, 2, (3, 0), (), "AnchorFromDescendant", None),
		"BubbleSelected": (69, 2, (11, 0), (), "BubbleSelected", None),
		# Method 'Cell' returns object of type 'IMGCPCBCell'
		"Cell": (70, 2, (9, 0), (), "Cell", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}'),
		"CenterX": (8, 2, (5, 0), ((3, 49),), "CenterX", None),
		"CenterY": (9, 2, (5, 0), ((3, 49),), "CenterY", None),
		"ChildIds": (72, 2, (12, 0), ((9, 49),), "ChildIds", None),
		"ChildIdsForActiveSheet": (83, 2, (12, 0), (), "ChildIdsForActiveSheet", None),
		# Method 'ComplexVias' returns object of type 'IMGCPCBComplexVias'
		"ComplexVias": (86, 2, (9, 0), (), "ComplexVias", '{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}'),
		# Method 'Components' returns object of type 'IMGCPCBComponents'
		"Components": (46, 2, (9, 0), (), "Components", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		"CompoundRBName": (76, 2, (8, 0), (), "CompoundRBName", None),
		# Method 'ConductiveAreas' returns object of type 'IMGCPCBConductiveAreas'
		"ConductiveAreas": (19, 2, (9, 0), (), "ConductiveAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}'),
		# Method 'ConductorLayerGfxs' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs": (26, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "ConductorLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerGfxs2' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs2": (43, 2, (9, 32), ((16396, 49), (3, 49), (3, 49)), "ConductorLayerGfxs2", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerTexts' returns object of type 'IMGCPCBConductorLayerTexts'
		"ConductorLayerTexts": (29, 2, (9, 0), ((3, 49), (3, 49)), "ConductorLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}'),
		"ConnectionCount": (71, 2, (3, 0), (), "ConnectionCount", None),
		# Method 'Contours' returns object of type 'IMGCPCBContours'
		"Contours": (11, 2, (9, 0), (), "Contours", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (42, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'DrillDrawings' returns object of type 'IMGCPCBDrillDrawings'
		"DrillDrawings": (25, 2, (9, 0), (), "DrillDrawings", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}'),
		# Method 'EmbeddedPassiveShapes' returns object of type 'IMGCPCBEmbeddedPassiveShapes'
		"EmbeddedPassiveShapes": (40, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "EmbeddedPassiveShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (32, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationLayerGfxs' returns object of type 'IMGCPCBFabricationLayerGfxs'
		"FabricationLayerGfxs": (27, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "FabricationLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}'),
		# Method 'FabricationLayerTexts' returns object of type 'IMGCPCBFabricationLayerTexts'
		"FabricationLayerTexts": (30, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "FabricationLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}'),
		# Method 'Fiducials' returns object of type 'IMGCPCBFiducials'
		"Fiducials": (17, 2, (9, 0), (), "Fiducials", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}'),
		"FixLock": (74, 2, (3, 0), (), "FixLock", None),
		"FixLockFromDescendant": (75, 2, (3, 0), (), "FixLockFromDescendant", None),
		"Frozen": (56, 2, (11, 0), (), "Frozen", None),
		# Method 'GroupOutline' returns object of type 'IMGCPCBGroupOutline'
		"GroupOutline": (78, 2, (9, 0), (), "GroupOutline", '{C35F5B71-49BA-4499-9EFB-7DDE542F9503}'),
		# Method 'GroupPlannedOutline' returns object of type 'IMGCPCBGroupOutline'
		"GroupPlannedOutline": (79, 2, (9, 0), (), "GroupPlannedOutline", '{C35F5B71-49BA-4499-9EFB-7DDE542F9503}'),
		# Method 'Groups' returns object of type 'IMGCPCBGroups'
		"Groups": (45, 2, (9, 0), (), "Groups", '{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}'),
		"HierarchicalName": (65, 2, (8, 0), (), "HierarchicalName", None),
		"HierarchicalRBName": (77, 2, (8, 0), (), "HierarchicalRBName", None),
		"Highlighted": (10, 2, (11, 0), (), "Highlighted", None),
		# Method 'InsertionOutlines' returns object of type 'IMGCPCBConductorLayerGfxs'
		"InsertionOutlines": (12, 2, (9, 0), (), "InsertionOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		"IsDesignObject": (95, 2, (11, 0), (), "IsDesignObject", None),
		"IsPhysicalReuseInstanceOutOfDate": (88, 2, (11, 0), (), "IsPhysicalReuseInstanceOutOfDate", None),
		"IsPhysicalReuseSourcePublished": (87, 2, (11, 0), (), "IsPhysicalReuseSourcePublished", None),
		"ManagedBlockVersion": (96, 2, (8, 0), (), "ManagedBlockVersion", None),
		"Marked": (64, 2, (11, 0), (), "Marked", None),
		"Mirrored": (37, 2, (11, 0), (), "Mirrored", None),
		"MirroredHV": (94, 2, (11, 0), (), "MirroredHV", None),
		# Method 'MountingHoles' returns object of type 'IMGCPCBMountingHoles'
		"MountingHoles": (18, 2, (9, 0), (), "MountingHoles", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}'),
		# Method 'MultiVias' returns object of type 'IMGCPCBMultiVias'
		"MultiVias": (52, 2, (9, 0), (), "MultiVias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"NextRefDesForPlacement": (80, 2, (8, 0), (), "NextRefDesForPlacement", None),
		"NextSubGroupForPlacement": (81, 2, (8, 0), (), "NextSubGroupForPlacement", None),
		"ObjectClass": (53, 2, (3, 0), (), "ObjectClass", None),
		"ObjectType": (54, 2, (3, 0), (), "ObjectType", None),
		# Method 'Obstructs' returns object of type 'IMGCPCBObstructs'
		"Obstructs": (16, 2, (9, 0), ((3, 49),), "Obstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}'),
		"Orientation": (6, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'PadstackObjects' returns object of type 'IMGCPCBPadstackObjects'
		"PadstackObjects": (50, 2, (9, 0), ((3, 49),), "PadstackObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}'),
		"Parent": (36, 2, (9, 0), (), "Parent", None),
		"PartStack": (73, 2, (11, 0), (), "PartStack", None),
		"PhysicalReuseTimestamp": (90, 2, (8, 0), (), "PhysicalReuseTimestamp", None),
		# Method 'Pins' returns object of type 'IMGCPCBPins'
		"Pins": (5, 2, (9, 32), ((8, 49),), "Pins", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}'),
		"PlacementAngle": (68, 2, (5, 0), ((3, 49),), "PlacementAngle", None),
		"PlacementLayer": (67, 2, (3, 0), (), "PlacementLayer", None),
		# Method 'PlacementObstructs' returns object of type 'IMGCPCBPlacementObstructs'
		"PlacementObstructs": (14, 2, (9, 0), (), "PlacementObstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}'),
		# Method 'PlacementOutlines' returns object of type 'IMGCPCBPlacementOutlines'
		"PlacementOutlines": (15, 2, (9, 0), (), "PlacementOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}'),
		"PlacementSide": (66, 2, (3, 0), (), "PlacementSide", None),
		# Method 'PlaneShapes' returns object of type 'IMGCPCBPlaneShapes'
		"PlaneShapes": (21, 2, (9, 0), (), "PlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}'),
		"Planned": (61, 2, (11, 0), (), "Planned", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (23, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"RefLayer": (4, 2, (3, 0), (), "RefLayer", None),
		# Method 'RefPin' returns object of type 'IMGCPCBPin'
		"RefPin": (48, 2, (9, 0), (), "RefPin", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}'),
		"RefPointX": (1, 2, (5, 0), ((3, 49),), "RefPointX", None),
		"RefPointY": (2, 2, (5, 0), ((3, 49),), "RefPointY", None),
		"Reserved": (57, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (58, 2, (8, 0), (), "ReservedBy", None),
		"ReservedByHierarchy": (85, 2, (11, 0), (), "ReservedByHierarchy", None),
		# Method 'ResistorShapes' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ResistorShapes": (13, 2, (9, 0), (), "ResistorShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		"SandboxLock": (84, 2, (11, 0), (), "SandboxLock", None),
		"Selected": (3, 2, (11, 0), (), "Selected", None),
		"State": (62, 2, (3, 0), (), "State", None),
		# Method 'Traces' returns object of type 'IMGCPCBTraces'
		"Traces": (20, 2, (9, 0), (), "Traces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}'),
		"Type": (34, 2, (3, 0), (), "Type", None),
		"UniqueId": (55, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayerGfxs' returns object of type 'IMGCPCBUserLayerGfxs'
		"UserLayerGfxs": (28, 2, (9, 32), ((3, 49), (8, 49)), "UserLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}'),
		# Method 'UserLayerTexts' returns object of type 'IMGCPCBUserLayerTexts'
		"UserLayerTexts": (31, 2, (9, 32), ((3, 49), (8, 49)), "UserLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}'),
		# Method 'Vias' returns object of type 'IMGCPCBVias'
		"Vias": (22, 2, (9, 0), (), "Vias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}'),
	}
	_prop_map_put_ = {
		"Anchor": ((7, LCID, 4, 0),()),
		"FixLock": ((74, LCID, 4, 0),()),
		"Frozen": ((56, LCID, 4, 0),()),
		"Highlighted": ((10, LCID, 4, 0),()),
		"Marked": ((64, LCID, 4, 0),()),
		"Mirrored": ((37, LCID, 4, 0),()),
		"Name": ((0, LCID, 4, 0),()),
		"Orientation": ((6, LCID, 4, 0),()),
		"PartStack": ((73, LCID, 4, 0),()),
		"PlacementAngle": ((68, LCID, 4, 0),()),
		"PlacementLayer": ((67, LCID, 4, 0),()),
		"PlacementSide": ((66, LCID, 4, 0),()),
		"Planned": ((61, LCID, 4, 0),()),
		"RefLayer": ((4, LCID, 4, 0),()),
		"RefPin": ((48, LCID, 8, 0),()),
		"RefPointX": ((1, LCID, 4, 0),()),
		"RefPointY": ((2, LCID, 4, 0),()),
		"Selected": ((3, LCID, 4, 0),()),
		"Type": ((34, LCID, 4, 0),()),
	}

	ActualPlaneShapes: str # IMGCPCBActualPlaneShapes; read_only
	Anchor: str # read/write
	AnchorFromDescendant: str # read_only
	BubbleSelected: str # read_only
	Cell: str # IMGCPCBCell; read_only
	CenterX: str # read_only
	CenterY: str # read_only
	ChildIds: str # read_only
	ChildIdsForActiveSheet: str # read_only
	ComplexVias: str # IMGCPCBComplexVias; read_only
	Components: str # IMGCPCBComponents; read_only
	CompoundRBName: str # read_only
	ConductiveAreas: str # IMGCPCBConductiveAreas; read_only
	ConductorLayerGfxs: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerGfxs2: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerTexts: str # IMGCPCBConductorLayerTexts; read_only
	ConnectionCount: str # read_only
	Contours: str # IMGCPCBContours; read_only
	Document: str # IMGCPCBDocument; read_only
	DrillDrawings: str # IMGCPCBDrillDrawings; read_only
	EmbeddedPassiveShapes: str # IMGCPCBEmbeddedPassiveShapes; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationLayerGfxs: str # IMGCPCBFabricationLayerGfxs; read_only
	FabricationLayerTexts: str # IMGCPCBFabricationLayerTexts; read_only
	Fiducials: str # IMGCPCBFiducials; read_only
	FixLock: str # read/write
	FixLockFromDescendant: str # read_only
	Frozen: str # read/write
	GroupOutline: str # IMGCPCBGroupOutline; read_only
	GroupPlannedOutline: str # IMGCPCBGroupOutline; read_only
	Groups: str # IMGCPCBGroups; read_only
	HierarchicalName: str # read_only
	HierarchicalRBName: str # read_only
	Highlighted: bool # read/write
	InsertionOutlines: str # IMGCPCBConductorLayerGfxs; read_only
	IsDesignObject: str # read_only
	IsPhysicalReuseInstanceOutOfDate: str # read_only
	IsPhysicalReuseSourcePublished: str # read_only
	ManagedBlockVersion: str # read_only
	Marked: str # read/write
	Mirrored: str # read/write
	MirroredHV: str # read_only
	MountingHoles: str # IMGCPCBMountingHoles; read_only
	MultiVias: str # IMGCPCBMultiVias; read_only
	Name: str # read/write
	NextRefDesForPlacement: str # read_only
	NextSubGroupForPlacement: str # read_only
	ObjectClass: str # read_only
	ObjectType: str # read_only
	Obstructs: str # IMGCPCBObstructs; read_only
	Orientation: str # read/write
	PadstackObjects: str # IMGCPCBPadstackObjects; read_only
	Parent: str # read_only
	PartStack: str # read/write
	PhysicalReuseTimestamp: str # read_only
	Pins: str # IMGCPCBPins; read_only
	PlacementAngle: str # read/write
	PlacementLayer: str # read/write
	PlacementObstructs: str # IMGCPCBPlacementObstructs; read_only
	PlacementOutlines: str # IMGCPCBPlacementOutlines; read_only
	PlacementSide: str # read/write
	PlaneShapes: str # IMGCPCBPlaneShapes; read_only
	Planned: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	RefLayer: str # read/write
	RefPin: str # read/write
	RefPointX: str # read/write
	RefPointY: str # read/write
	Reserved: str # read_only
	ReservedBy: str # read_only
	ReservedByHierarchy: str # read_only
	ResistorShapes: str # IMGCPCBConductorLayerGfxs; read_only
	SandboxLock: str # read_only
	Selected: bool # read/write
	State: str # read_only
	Traces: str # IMGCPCBTraces; read_only
	Type: str # read/write
	UniqueId: str # read_only
	UserLayerGfxs: str # IMGCPCBUserLayerGfxs; read_only
	UserLayerTexts: str # IMGCPCBUserLayerTexts; read_only
	Vias: str # IMGCPCBVias; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBGroupOutline(DispatchBaseClass):
	'MGCPCB Group Outline Object.'
	CLSID = IID('{C35F5B71-49BA-4499-9EFB-7DDE542F9503}')
	coclass_clsid = IID('{30B9C205-B35F-4495-9B6F-04A9FA733B57}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (41, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (44, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (42, 2, (9, 0), (), "Parent", None),
		"Planned": (43, 2, (11, 0), (), "Planned", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((41, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Planned: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBGroups(DispatchBaseClass):
	'MGCPCB Groups Object.'
	CLSID = IID('{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')
	coclass_clsid = IID('{6D64459B-086C-40CB-B431-EDD1527E01B6}')

	def Add(self, pGroup=defaultNamedNotOptArg):
		'Adds a group to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pGroup
			)

	def Delete(self):
		'Delete all groups in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBGroup
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the group of a given index in the groups collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
		return ret

	def Place(self, eMethod=0):
		'Plan all groups in the collection according to the specified method.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((3, 49),),eMethod
			)

	def PublishPhysicalReuseSources(self, bSuppressMsg=False):
		'Publish the given multiple physical reuse circuit sources.Property used only for group type epcbGroupPhysicalReuseSource.'
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), ((11, 49),),bSuppressMsg
			)

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort groups in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the group of a given index in the groups collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBGui(DispatchBaseClass):
	'MGCPCB Gui Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5B}')
	coclass_clsid = IID('{EDEDED5B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def BeginDragMoveFromSelection(self, nFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg
			, moveOnce=defaultNamedNotOptArg, selectWhenDone=defaultNamedNotOptArg):
		'Start a drag of the currently selected objects starting at the specified point.'
		return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 1), (3, 1), (11, 1), (11, 1)),nFlags
			, dX, dY, eUnit, moveOnce, selectWhenDone
			)

	def BeginMoveFromSelection(self, nFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg
			, moveOnce=defaultNamedNotOptArg, selectWhenDone=defaultNamedNotOptArg):
		'Start a move (including drag) of the currently selected objects starting at the specified point.'
		return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 1), (3, 1), (11, 1), (11, 1)),nFlags
			, dX, dY, eUnit, moveOnce, selectWhenDone
			)

	# The method Bindings is actually a property, but must be used as a method to correctly pass the arguments
	def Bindings(self, BTableName=defaultNamedNotOptArg):
		'Map key binding to command.'
		ret = self._oleobj_.InvokeTypes(25, LCID, 2, (9, 0), ((8, 1),),BTableName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Bindings', None)
		return ret

	def CursorBusy(self, bCursorBusy=True):
		'Set the cursor to be displayed as busy or not busy.'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((11, 49),),bCursorBusy
			)

	def DirectoryBrowser(self, initialDirectory='', title='Select Directory'):
		'Display directory browser'
		return self._ApplyTypes_(46, 1, (8, 32), ((8, 49), (8, 49)), 'DirectoryBrowser', None,initialDirectory
			, title)

	def DisableControl(self, ControlId=defaultNamedNotOptArg, DialogId=defaultNamedNotOptArg, ModuleId=defaultNamedNotOptArg):
		'Disable a dialog control.'
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1)),ControlId
			, DialogId, ModuleId)

	def Display(self, Text=defaultNamedNotOptArg):
		'Display a string in a message box.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((8, 1),),Text
			)

	def DisplayActionKeybar(self, keybarName=defaultNamedNotOptArg, State=0):
		'Sets a new Action Keybar.'
		return self._oleobj_.InvokeTypes(29, LCID, 1, (11, 0), ((8, 1), (3, 49)),keybarName
			, State)

	def DisplayMessage(self, Message=defaultNamedNotOptArg, ReservedForFutureUse='', Type=1, Icon=3
			, DefaultButton=1):
		'Display a message box.  If the message window is enabled the message will be written to the message window.'
		return self._ApplyTypes_(32, 1, (3, 32), ((8, 1), (8, 49), (3, 49), (3, 49), (3, 49)), 'DisplayMessage', None,Message
			, ReservedForFutureUse, Type, Icon, DefaultButton)

	def DisplayPropertiesDialog(self, bDisplay=False):
		'Turn display of properties dialog on/off'
		return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((11, 49),),bDisplay
			)

	def FileBrowser(self, OpenFileDialog=True, initialDirectory='', filter='All Files (*.*)|*.*||', Extension=''
			, filename='', eOptions=14, title='Select File'):
		'Display File browser, if OpenFileDialog set to False will use SaveAs dialog.'
		return self._ApplyTypes_(47, 1, (8, 32), ((11, 49), (8, 49), (8, 49), (8, 49), (8, 49), (3, 49), (8, 49)), 'FileBrowser', None,OpenFileDialog
			, initialDirectory, filter, Extension, filename, eOptions
			, title)

	# Result is of type IMGCPCBDialog
	def FindDialog(self, vDialog=defaultNamedNotOptArg):
		'Find the specified open dialog.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((12, 1),),vDialog
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindDialog', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5C}')
		return ret

	def InputBox(self, sDescription=defaultNamedNotOptArg, sTitle='', sDefault=''):
		'Displays an input box and returns value retrieved.'
		return self._ApplyTypes_(19, 1, (8, 32), ((8, 1), (8, 49), (8, 49)), 'InputBox', None,sDescription
			, sTitle, sDefault)

	def IsActionObjectCmd(self):
		'Returns true if an action object command is active.'
		return self._oleobj_.InvokeTypes(41, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid Gui object.'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (11, 0), (),)

	def PopToFront(self):
		'Pop the window to the top of the window stack.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def ProcessCommand(self, vCommand=defaultNamedNotOptArg, bSynchronous=True):
		'Start this command. Returns FALSE if the command cannot be started.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1), (11, 49)),vCommand
			, bSynchronous)

	def ProcessEvent(self, nFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg):
		'Take this event and execute it as if it had come from the mouse/keyboard. (Beta)'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 1), (3, 1)),nFlags
			, dX, dY, eUnit)

	def ProcessKeyPressEvent(self, sKeyName=defaultNamedNotOptArg, eModifiers=0):
		'Take this event and execute it as if it had come from the keyboard.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((8, 1), (3, 49)),sKeyName
			, eModifiers)

	def ProcessKeyin(self, KeyinString=defaultNamedNotOptArg):
		'Runs a keyin command.'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (24, 0), ((8, 1),),KeyinString
			)

	def ProcessMouseEvent(self, eMouseEvent=defaultNamedNotOptArg, eMouseButton=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg
			, eKeyboardFlags=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg):
		'Take this event and execute it as if it had come from the mouse.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1), (3, 1)),eMouseEvent
			, eMouseButton, x, y, eKeyboardFlags, eUnit
			)

	def ProcessPointer(self, eButton=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=defaultNamedNotOptArg):
		'Take this point and execute it as if the user had clicked the mouse at this point. (Beta)'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((3, 1), (5, 1), (5, 1), (3, 1)),eButton
			, dX, dY, eUnit)

	def ProcessUserInput(self, bAllow=True):
		'Enable or Disable user input - prevents any user interaction from interfering with your Automation commands. (Beta)'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((11, 49),),bAllow
			)

	def ProgressBar(self, val=defaultNamedNotOptArg):
		'Update the progress bar.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (24, 0), ((3, 1),),val
			)

	def ProgressBarInitialize(self, bDisplay=True, BCaption='Progress', nMaxVal=100, nMinVal=0):
		'Initialize the progress bar with caption and min and max values. Set display flag to False to remove the progress bar.'
		return self._ApplyTypes_(20, 1, (24, 32), ((11, 49), (8, 49), (3, 49), (3, 49)), 'ProgressBarInitialize', None,bDisplay
			, BCaption, nMaxVal, nMinVal)

	def PutToCursor(self, _objects=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((12, 1),),_objects
			)

	# Result is of type IMGCPCBCommand
	def RegisterCommand(self, cmdName=defaultNamedNotOptArg, bTerminateCurrent=True):
		'Start a new interactive command.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((8, 1), (11, 49)),cmdName
			, bTerminateCurrent)
		if ret is not None:
			ret = Dispatch(ret, 'RegisterCommand', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED30}')
		return ret

	def ShowWindow(self, eWS=defaultNamedNotOptArg):
		"Set state of application's main window."
		return self._oleobj_.InvokeTypes(26, LCID, 1, (24, 0), ((3, 1),),eWS
			)

	def StatusBarText(self, bValue=defaultNamedNotOptArg, eField=0):
		'Sets the text displayed on the MGCPCB status bar.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((8, 1), (3, 49)),bValue
			, eField)

	def TerminateCommand(self):
		'Terminate the current command.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	def TerminateCommandEx(self):
		'Terminate the current command.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"ActiveMode": (17, 2, (3, 0), (), "ActiveMode", None),
		"ActivePlaceLayer": (15, 2, (3, 0), (), "ActivePlaceLayer", None),
		"ActiveRouteLayer": (16, 2, (3, 0), (), "ActiveRouteLayer", None),
		"CommandBars": (24, 2, (9, 0), (), "CommandBars", None),
		# Method 'CommandListener' returns object of type 'IMGCPCBCommandListener'
		"CommandListener": (28, 2, (9, 0), (), "CommandListener", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA7}'),
		"Cursor": (31, 2, (3, 0), (), "Cursor", None),
		"HWND": (23, 2, (3, 0), (), "HWND", None),
		"KeyInCommandText": (30, 2, (8, 0), (), "KeyInCommandText", None),
		"MainWindowTitle": (48, 2, (8, 0), (), "MainWindowTitle", None),
		"MeasureReadoutText": (43, 2, (8, 0), (), "MeasureReadoutText", None),
		# Method 'Settings' returns object of type 'IMGCPCBSettings'
		"Settings": (37, 2, (9, 0), (), "Settings", '{AA01E86F-E470-4E69-AAB6-AE16DC30E3D0}'),
		"SuppressTrivialDialogs": (12, 2, (11, 0), (), "SuppressTrivialDialogs", None),
		"XYReadoutText": (42, 2, (8, 0), (), "XYReadoutText", None),
	}
	_prop_map_put_ = {
		"ActiveMode": ((17, LCID, 4, 0),()),
		"ActivePlaceLayer": ((15, LCID, 4, 0),()),
		"ActiveRouteLayer": ((16, LCID, 4, 0),()),
		"Cursor": ((31, LCID, 4, 0),()),
		"KeyInCommandText": ((30, LCID, 4, 0),()),
		"MeasureReadoutText": ((43, LCID, 4, 0),()),
		"SingleThreaded": ((14, LCID, 4, 0),()),
		"SuppressNotepadDialogs": ((13, LCID, 4, 0),()),
		"SuppressTrivialDialogs": ((12, LCID, 4, 0),()),
		"SuppressVariantDataOutOfDateDialog": ((39, LCID, 4, 0),()),
		"XYReadoutText": ((42, LCID, 4, 0),()),
	}

	ActiveMode: str # read/write
	ActivePlaceLayer: str # read/write
	ActiveRouteLayer: str # read/write
	CommandBars: str # read_only
	CommandListener: str # IMGCPCBCommandListener; read_only
	Cursor: str # read/write
	HWND: str # read_only
	KeyInCommandText: str # read/write
	MainWindowTitle: str # read_only
	MeasureReadoutText: str # read/write
	Settings: str # IMGCPCBSettings; read_only
	SuppressTrivialDialogs: str # read/write
	XYReadoutText: str # read/write
	SingleThreaded: str # write_only
	SuppressNotepadDialogs: str # write_only
	SuppressVariantDataOutOfDateDialog: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBHThing(DispatchBaseClass):
	'MGCPCB HThing Object.'
	CLSID = IID('{32D2D203-BDBD-4091-AF4D-83DD57CA1AC5}')
	coclass_clsid = IID('{0F064616-1834-4DD3-9FCA-28034A045554}')

	def Delete(self):
		'Delete this group.'
		return self._oleobj_.InvokeTypes(29, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property, on this HThing, by name.'
		ret = self._oleobj_.InvokeTypes(32, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetCenterX is actually a property, but must be used as a method to correctly pass the arguments
	def GetCenterX(self, eUnit=0):
		'Returns the X coord of the center of the HThing.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetCenterY is actually a property, but must be used as a method to correctly pass the arguments
	def GetCenterY(self, eUnit=0):
		'Returns the Y coord of the center of the HThing.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs(self, eSelectType=-1, eSelectOnly=0, nLayerOnly=0):
		"Returns the HThing's board layer gfx collection. (Deprecated) Use ConductorLayerGfxs2."
		ret = self._oleobj_.InvokeTypes(22, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs2 is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs2(self, pArrayOfSelectType='', eSelectOnly=0, nLayerOnly=0):
		"Returns the HThing's board layer gfx collection."
		return self._ApplyTypes_(37, 2, (9, 32), ((16396, 49), (3, 49), (3, 49)), 'GetConductorLayerGfxs2', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}',pArrayOfSelectType
			, eSelectOnly, nLayerOnly)

	# Result is of type IMGCPCBConductorLayerTexts
	# The method GetConductorLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerTexts(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the HThing's board text collection."
		ret = self._oleobj_.InvokeTypes(25, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')
		return ret

	# Result is of type IMGCPCBEmbeddedPassiveShapes
	# The method GetEmbeddedPassiveShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetEmbeddedPassiveShapes(self, eSelectOnly=0, eType=-1, nLayerOnly=0):
		"Returns the component's collection of embedded passive shapes."
		ret = self._oleobj_.InvokeTypes(34, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectOnly
			, eType, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetEmbeddedPassiveShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')
		return ret

	# Result is of type IMGCPCBFabricationLayerGfxs
	# The method GetFabricationLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerGfxs(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0):
		"Returns the HThing's fabrication layer graphics collection."
		ret = self._oleobj_.InvokeTypes(23, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, eLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')
		return ret

	# Result is of type IMGCPCBFabricationLayerTexts
	# The method GetFabricationLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerTexts(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0):
		"Returns the HThing's fabrication text collection."
		ret = self._oleobj_.InvokeTypes(26, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, eLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')
		return ret

	# Result is of type IMGCPCBObstructs
	# The method GetObstructs is actually a property, but must be used as a method to correctly pass the arguments
	def GetObstructs(self, eSelectType=-1):
		"Returns the HThing's obstruct collection."
		ret = self._oleobj_.InvokeTypes(12, LCID, 2, (9, 0), ((3, 49),),eSelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetObstructs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')
		return ret

	# Result is of type IMGCPCBPins
	# The method GetPins is actually a property, but must be used as a method to correctly pass the arguments
	def GetPins(self, Name='*'):
		"Returns the HThing's pin collection."
		return self._ApplyTypes_(2, 2, (9, 32), ((8, 49),), 'GetPins', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}',Name
			)

	# Result is of type IMGCPCBUserLayerGfxs
	# The method GetUserLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerGfxs(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the HThing's user layer gfx collection."
		return self._ApplyTypes_(24, 2, (9, 32), ((3, 49), (8, 49)), 'GetUserLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}',eSelectOnly
			, sLayerOnly)

	# Result is of type IMGCPCBUserLayerTexts
	# The method GetUserLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerTexts(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the HThing's user text collection."
		return self._ApplyTypes_(27, 2, (9, 32), ((3, 49), (8, 49)), 'GetUserLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}',eSelectOnly
			, sLayerOnly)

	def IsValid(self):
		'Returns true if this a valid HThing.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (11, 0), (),)

	def Move(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Moves the HThing to given location.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def MoveRelative(self, OffsetX=defaultNamedNotOptArg, OffsetY=defaultNamedNotOptArg, eUnit=0):
		'Move the HThing by the given offset.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),OffsetX
			, OffsetY, eUnit)

	def Place(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dOrientation=defaultNamedNotOptArg, bTop=defaultNamedNotOptArg
			, eFixType=0, eUnit=0, eAngleUnit=0):
		'Combines Move, Rotate, etc. in one operation'
		return self._oleobj_.InvokeTypes(48, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (11, 1), (3, 49), (3, 49), (3, 49)),dX
			, dY, dOrientation, bTop, eFixType, eUnit
			, eAngleUnit)

	def PlaceEx(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dOrientation=defaultNamedNotOptArg, Layer=defaultNamedNotOptArg
			, eFixType=0, eUnit=0, eAngleUnit=0):
		'Combines Move, Rotate, etc. in one operation'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (3, 1), (3, 49), (3, 49), (3, 49)),dX
			, dY, dOrientation, Layer, eFixType, eUnit
			, eAngleUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this pin.'
		ret = self._oleobj_.InvokeTypes(33, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBProperty
	def PutPropertyEx(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg, sSource=defaultNamedNotOptArg):
		'Create a new property with source defined.'
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), ((8, 1), (8, 1), (8, 1)),sName
			, sValue, sSource)
		if ret is not None:
			ret = Dispatch(ret, 'PutPropertyEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"Anchor": (3, 2, (3, 0), (), "Anchor", None),
		"CenterX": (4, 2, (5, 0), ((3, 49),), "CenterX", None),
		"CenterY": (5, 2, (5, 0), ((3, 49),), "CenterY", None),
		# Method 'ConductiveAreas' returns object of type 'IMGCPCBConductiveAreas'
		"ConductiveAreas": (15, 2, (9, 0), (), "ConductiveAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}'),
		# Method 'ConductorLayerGfxs' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs": (22, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "ConductorLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerGfxs2' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs2": (37, 2, (9, 32), ((16396, 49), (3, 49), (3, 49)), "ConductorLayerGfxs2", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerTexts' returns object of type 'IMGCPCBConductorLayerTexts'
		"ConductorLayerTexts": (25, 2, (9, 0), ((3, 49), (3, 49)), "ConductorLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}'),
		# Method 'Contours' returns object of type 'IMGCPCBContours'
		"Contours": (7, 2, (9, 0), (), "Contours", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (36, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'DrillDrawings' returns object of type 'IMGCPCBDrillDrawings'
		"DrillDrawings": (21, 2, (9, 0), (), "DrillDrawings", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}'),
		# Method 'EmbeddedPassiveShapes' returns object of type 'IMGCPCBEmbeddedPassiveShapes'
		"EmbeddedPassiveShapes": (34, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "EmbeddedPassiveShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (28, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationLayerGfxs' returns object of type 'IMGCPCBFabricationLayerGfxs'
		"FabricationLayerGfxs": (23, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "FabricationLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}'),
		# Method 'FabricationLayerTexts' returns object of type 'IMGCPCBFabricationLayerTexts'
		"FabricationLayerTexts": (26, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "FabricationLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}'),
		# Method 'Fiducials' returns object of type 'IMGCPCBFiducials'
		"Fiducials": (13, 2, (9, 0), (), "Fiducials", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}'),
		"Highlighted": (6, 2, (11, 0), (), "Highlighted", None),
		# Method 'InsertionOutlines' returns object of type 'IMGCPCBConductorLayerGfxs'
		"InsertionOutlines": (8, 2, (9, 0), (), "InsertionOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		"Mirrored": (31, 2, (11, 0), (), "Mirrored", None),
		# Method 'MountingHoles' returns object of type 'IMGCPCBMountingHoles'
		"MountingHoles": (14, 2, (9, 0), (), "MountingHoles", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}'),
		"ObjectClass": (41, 2, (3, 0), (), "ObjectClass", None),
		"ObjectType": (42, 2, (3, 0), (), "ObjectType", None),
		# Method 'Obstructs' returns object of type 'IMGCPCBObstructs'
		"Obstructs": (12, 2, (9, 0), ((3, 49),), "Obstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}'),
		"Parent": (38, 2, (9, 0), (), "Parent", None),
		# Method 'Pins' returns object of type 'IMGCPCBPins'
		"Pins": (2, 2, (9, 32), ((8, 49),), "Pins", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}'),
		# Method 'PlacementObstructs' returns object of type 'IMGCPCBPlacementObstructs'
		"PlacementObstructs": (10, 2, (9, 0), (), "PlacementObstructs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}'),
		# Method 'PlacementOutlines' returns object of type 'IMGCPCBPlacementOutlines'
		"PlacementOutlines": (11, 2, (9, 0), (), "PlacementOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}'),
		# Method 'PlaneShapes' returns object of type 'IMGCPCBPlaneShapes'
		"PlaneShapes": (17, 2, (9, 0), (), "PlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}'),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (19, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (44, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (45, 2, (8, 0), (), "ReservedBy", None),
		# Method 'ResistorShapes' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ResistorShapes": (9, 2, (9, 0), (), "ResistorShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'RuleAreas' returns object of type 'IMGCPCBConductorLayerGfxs'
		"RuleAreas": (40, 2, (9, 0), (), "RuleAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (47, 2, (3, 0), (), "Side", None),
		# Method 'Traces' returns object of type 'IMGCPCBTraces'
		"Traces": (16, 2, (9, 0), (), "Traces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}'),
		"UniqueId": (43, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayerGfxs' returns object of type 'IMGCPCBUserLayerGfxs'
		"UserLayerGfxs": (24, 2, (9, 32), ((3, 49), (8, 49)), "UserLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}'),
		# Method 'UserLayerTexts' returns object of type 'IMGCPCBUserLayerTexts'
		"UserLayerTexts": (27, 2, (9, 32), ((3, 49), (8, 49)), "UserLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}'),
		# Method 'Vias' returns object of type 'IMGCPCBVias'
		"Vias": (18, 2, (9, 0), (), "Vias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}'),
	}
	_prop_map_put_ = {
		"Anchor": ((3, LCID, 4, 0),()),
		"Highlighted": ((6, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	CenterX: str # read_only
	CenterY: str # read_only
	ConductiveAreas: str # IMGCPCBConductiveAreas; read_only
	ConductorLayerGfxs: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerGfxs2: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerTexts: str # IMGCPCBConductorLayerTexts; read_only
	Contours: str # IMGCPCBContours; read_only
	Document: str # IMGCPCBDocument; read_only
	DrillDrawings: str # IMGCPCBDrillDrawings; read_only
	EmbeddedPassiveShapes: str # IMGCPCBEmbeddedPassiveShapes; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationLayerGfxs: str # IMGCPCBFabricationLayerGfxs; read_only
	FabricationLayerTexts: str # IMGCPCBFabricationLayerTexts; read_only
	Fiducials: str # IMGCPCBFiducials; read_only
	Highlighted: bool # read/write
	InsertionOutlines: str # IMGCPCBConductorLayerGfxs; read_only
	Mirrored: str # read_only
	MountingHoles: str # IMGCPCBMountingHoles; read_only
	ObjectClass: str # read_only
	ObjectType: str # read_only
	Obstructs: str # IMGCPCBObstructs; read_only
	Parent: str # read_only
	Pins: str # IMGCPCBPins; read_only
	PlacementObstructs: str # IMGCPCBPlacementObstructs; read_only
	PlacementOutlines: str # IMGCPCBPlacementOutlines; read_only
	PlaneShapes: str # IMGCPCBPlaneShapes; read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	ResistorShapes: str # IMGCPCBConductorLayerGfxs; read_only
	RuleAreas: str # IMGCPCBConductorLayerGfxs; read_only
	Selected: bool # read/write
	Side: str # read_only
	Traces: str # IMGCPCBTraces; read_only
	UniqueId: str # read_only
	UserLayerGfxs: str # IMGCPCBUserLayerGfxs; read_only
	UserLayerTexts: str # IMGCPCBUserLayerTexts; read_only
	Vias: str # IMGCPCBVias; read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBHazard(DispatchBaseClass):
	'MGCPCB Hazard Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}')
	coclass_clsid = IID('{EDEDED9D-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Accept(self, pComment=''):
		'Accept the hazard with accept comment.'
		return self._ApplyTypes_(7, 1, (24, 32), ((8, 49),), 'Accept', None,pComment
			)

	# The method GetActualClearance is actually a property, but must be used as a method to correctly pass the arguments
	def GetActualClearance(self, eUnit=0):
		'Returns the Actual Clearance if available (or actual distance if Batch Proximity hazard)'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetFirstObjectPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetFirstObjectPositionX(self, eUnit=0):
		"Returns the proximity hazard's first object's X location."
		return self._oleobj_.InvokeTypes(11, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetFirstObjectPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetFirstObjectPositionY(self, eUnit=0):
		"Returns the proximity hazard's first object's Y location."
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the hazard's X location."
		return self._oleobj_.InvokeTypes(9, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the hazard's Y location."
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetRequiredClearance is actually a property, but must be used as a method to correctly pass the arguments
	def GetRequiredClearance(self, eUnit=0):
		'Returns required clearance when available.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSecondObjectPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetSecondObjectPositionX(self, eUnit=0):
		"Returns the proximity hazard's second object's X location."
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSecondObjectPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetSecondObjectPositionY(self, eUnit=0):
		"Returns the proximity hazard's second object's Y location."
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def UnAccept(self):
		'Unaccept the hazard.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"AcceptComment": (4, 2, (8, 0), (), "AcceptComment", None),
		"AcceptDate": (5, 2, (8, 0), (), "AcceptDate", None),
		"AcceptUser": (6, 2, (8, 0), (), "AcceptUser", None),
		"Accepted": (3, 2, (11, 0), (), "Accepted", None),
		"ActualClearance": (16, 2, (5, 0), ((3, 49),), "ActualClearance", None),
		"Description": (0, 2, (8, 0), (), "Description", None),
		"FirstObjectPositionX": (11, 2, (5, 0), ((3, 49),), "FirstObjectPositionX", None),
		"FirstObjectPositionY": (12, 2, (5, 0), ((3, 49),), "FirstObjectPositionY", None),
		# Method 'Objects' returns object of type 'IMGCPCBObjects'
		"Objects": (2, 2, (9, 0), (), "Objects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		"PositionX": (9, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (10, 2, (5, 0), ((3, 49),), "PositionY", None),
		"RequiredClearance": (17, 2, (5, 0), ((3, 49),), "RequiredClearance", None),
		"SecondObjectPositionX": (13, 2, (5, 0), ((3, 49),), "SecondObjectPositionX", None),
		"SecondObjectPositionY": (14, 2, (5, 0), ((3, 49),), "SecondObjectPositionY", None),
		"Severity": (15, 2, (3, 0), (), "Severity", None),
		"Type": (1, 2, (3, 0), (), "Type", None),
		"TypeSpecificData": (18, 2, (9, 0), (), "TypeSpecificData", None),
	}
	_prop_map_put_ = {
	}

	AcceptComment: str # read_only
	AcceptDate: str # read_only
	AcceptUser: str # read_only
	Accepted: str # read_only
	ActualClearance: str # read_only
	Description: str # read_only
	FirstObjectPositionX: str # read_only
	FirstObjectPositionY: str # read_only
	Objects: str # IMGCPCBObjects; read_only
	PositionX: str # read_only
	PositionY: str # read_only
	RequiredClearance: str # read_only
	SecondObjectPositionX: str # read_only
	SecondObjectPositionY: str # read_only
	Severity: str # read_only
	Type: str # read_only
	TypeSpecificData: str # read_only

	# Default property for this class is 'Description'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Description", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBHazardExplorer(DispatchBaseClass):
	'MGCPCB Hazard Explorer Object.'
	CLSID = IID('{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}')
	coclass_clsid = IID('{2E182699-C20B-4388-98C0-BC5AE8D7A250}')

	def AddDRCOptionMenuItem(self, Name=defaultNamedNotOptArg):
		'Add a new item to the DRC Options menu.'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (24, 0), ((8, 1),),Name
			)

	def AddOrReplaceRows(self, data=defaultNamedNotOptArg):
		'Add or replace grid rows.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((12, 1),),data
			)

	def ClearGrid(self):
		'Clear grid contents.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), (),)

	def DeleteRows(self, ids=defaultNamedNotOptArg):
		'Delete grid rows.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((12, 1),),ids
			)

	# Result is of type IMGCPCBHazardTreeItem
	def RegisterHazardType(self, ppHzdType=defaultNamedNotOptArg):
		'Register Hazard Type.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((9, 1),),ppHzdType
			)
		if ret is not None:
			ret = Dispatch(ret, 'RegisterHazardType', '{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}')
		return ret

	def ResetGrid(self, header=defaultNamedNotOptArg, clickable=defaultNamedNotOptArg):
		'Reset grid and set up the header.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((12, 1), (12, 1)),header
			, clickable)

	# The method RowAccepted is actually a property, but must be used as a method to correctly pass the arguments
	def RowAccepted(self, hzd_id=defaultNamedNotOptArg):
		'Row accepted status.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (11, 0), ((8, 1),),hzd_id
			)

	# The method RowSelected is actually a property, but must be used as a method to correctly pass the arguments
	def RowSelected(self, hzd_id=defaultNamedNotOptArg):
		'Row selection status.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (11, 0), ((8, 1),),hzd_id
			)

	# The method SetRowAccepted is actually a property, but must be used as a method to correctly pass the arguments
	def SetRowAccepted(self, hzd_id=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Row accepted status.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((8, 1), (11, 1)),hzd_id
			, arg1)

	# The method SetRowSelected is actually a property, but must be used as a method to correctly pass the arguments
	def SetRowSelected(self, hzd_id=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Row selection status.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((8, 1), (11, 1)),hzd_id
			, arg1)

	def UnregisterHazardType(self, ppHzdType=defaultNamedNotOptArg):
		'Unregister Hazard Type.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((9, 1),),ppHzdType
			)

	def UpdateRows(self, add_replace=defaultNamedNotOptArg, Del=defaultNamedNotOptArg):
		'Update grid rows.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((12, 1), (12, 1)),add_replace
			, Del)

	_prop_map_get_ = {
		"AcceptedRows": (17, 2, (12, 0), (), "AcceptedRows", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (1, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"FitHazardOnRowSelection": (4, 2, (11, 0), (), "FitHazardOnRowSelection", None),
		"HightlightOnRowSelection": (6, 2, (11, 0), (), "HightlightOnRowSelection", None),
		"SelectObjOnRowSelection": (5, 2, (11, 0), (), "SelectObjOnRowSelection", None),
		"SelectSymbolOnRowSelection": (7, 2, (11, 0), (), "SelectSymbolOnRowSelection", None),
		"SelectedRows": (15, 2, (12, 0), (), "SelectedRows", None),
	}
	_prop_map_put_ = {
		"AcceptedRows": ((17, LCID, 4, 0),()),
		"ActiveTreeItem": ((19, LCID, 4, 0),()),
		"GridData": ((10, LCID, 4, 0),()),
		"SelectedRows": ((15, LCID, 4, 0),()),
	}

	AcceptedRows: str # read/write
	Document: str # IMGCPCBDocument; read_only
	FitHazardOnRowSelection: str # read_only
	HightlightOnRowSelection: str # read_only
	SelectObjOnRowSelection: str # read_only
	SelectSymbolOnRowSelection: str # read_only
	SelectedRows: str # read/write
	ActiveTreeItem: str # write_only
	GridData: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBHazardSymbol(DispatchBaseClass):
	'MGCPCB Hazard Symbol Object.'
	CLSID = IID('{8FEE430F-5A97-4BAF-8D0D-E931AF9CA2DA}')
	coclass_clsid = IID('{3C015462-AF66-4760-BA75-09D8ED7D4A37}')

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Hazard origin X coordinate.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Hazard origin Y coordinate.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	_prop_map_get_ = {
		# Method 'Color' returns object of type 'IMGCPCBColor'
		"Color": (2, 2, (9, 0), (), "Color", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}'),
		"HazardID": (1, 2, (8, 0), (), "HazardID", None),
		# Method 'HazardTreeItem' returns object of type 'IMGCPCBHazardTreeItem'
		"HazardTreeItem": (0, 2, (9, 0), (), "HazardTreeItem", '{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}'),
		"PositionX": (3, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (4, 2, (5, 0), ((3, 49),), "PositionY", None),
	}
	_prop_map_put_ = {
		"Color": ((2, LCID, 4, 0),()),
	}

	Color: str # read/write
	HazardID: str # read_only
	HazardTreeItem: str # IMGCPCBHazardTreeItem; read_only
	PositionX: str # read_only
	PositionY: str # read_only

	# Default property for this class is 'HazardTreeItem'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "HazardTreeItem", '{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}'))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBHazardTreeItem(DispatchBaseClass):
	'MGCPCB Hazard Tree Item Object.'
	CLSID = IID('{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}')
	coclass_clsid = IID('{E5918914-F4D4-4450-B2E6-18431CCEE78F}')

	def AddRMBMenuItem(self, Name=defaultNamedNotOptArg, checkbox=defaultNamedNotOptArg):
		'Add Right Mouse Button menu item, optionally with a checkbox'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((8, 1), (11, 1)),Name
			, checkbox)

	def ColorObject(self, hzd_id=defaultNamedNotOptArg, pObj=defaultNamedNotOptArg, pColor=0):
		'Color object with a specific color'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((8, 1), (9, 1), (9, 49)),hzd_id
			, pObj, pColor)

	def ColorSegment(self, hzd_id=defaultNamedNotOptArg, pObj=defaultNamedNotOptArg, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg
			, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg, eUnit=0, pColor=0):
		'Color a segment of an object with a specific color'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((8, 1), (9, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 49), (9, 49)),hzd_id
			, pObj, X1, Y1, X2, Y2
			, eUnit, pColor)

	# Result is of type IMGCPCBHazardSymbol
	def PutSpecialSymbol(self, hzd_id=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, dWidth=defaultNamedNotOptArg
			, nPnts=defaultNamedNotOptArg, pSafeArrayOfPoints=defaultNamedNotOptArg, eUnit=0):
		'Add a Hazard Symbol with custom graphcs'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (5, 1), (3, 1), (16396, 1), (3, 49)),hzd_id
			, x, y, dWidth, nPnts, pSafeArrayOfPoints
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutSpecialSymbol', '{8FEE430F-5A97-4BAF-8D0D-E931AF9CA2DA}')
		return ret

	# Result is of type IMGCPCBHazardSymbol
	def PutSymbol(self, hzd_id=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Add a Hazard Symbol'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (3, 49)),hzd_id
			, x, y, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutSymbol', '{8FEE430F-5A97-4BAF-8D0D-E931AF9CA2DA}')
		return ret

	# The method Stat is actually a property, but must be used as a method to correctly pass the arguments
	def Stat(self, Count=defaultNamedNotOptArg, delta=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'Statistic counters for the tree item'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (3, 1), (11, 1)),Count
			, delta, arg2)

	_prop_map_get_ = {
		"Checked": (2, 2, (11, 0), (), "Checked", None),
		# Method 'Color' returns object of type 'IMGCPCBColor'
		"Color": (3, 2, (9, 0), (), "Color", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}'),
		# Method 'HazardExplorer' returns object of type 'IMGCPCBHazardExplorer'
		"HazardExplorer": (0, 2, (9, 0), (), "HazardExplorer", '{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}'),
		"Name": (1, 2, (12, 0), (), "Name", None),
	}
	_prop_map_put_ = {
	}

	Checked: str # read_only
	Color: str # IMGCPCBColor; read_only
	HazardExplorer: str # IMGCPCBHazardExplorer; read_only
	Name: str # read_only

	# Default property for this class is 'HazardExplorer'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "HazardExplorer", '{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}'))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBHazards(DispatchBaseClass):
	'MGCPCB Hazard Collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}')
	coclass_clsid = IID('{EDEDED9E-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pHazard=defaultNamedNotOptArg):
		'Adds a hazard to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pHazard
			)

	def Delete(self):
		'Delete all hazards in the collection.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBHazard
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the hazard of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort hazards in this collection by type.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the hazard of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBHole(DispatchBaseClass):
	'MGCPCB Hole Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')
	coclass_clsid = IID('{EDEDED12-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetDrillSize is actually a property, but must be used as a method to correctly pass the arguments
	def GetDrillSize(self, eUnit=0):
		'Get hole size.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Get hole's X coordinate."
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Get hole's Y coordinate."
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"DrillSize": (1, 2, (5, 0), ((3, 49),), "DrillSize", None),
		# Method 'Geometries' returns object of type 'IMGCPCBGeometries'
		"Geometries": (6, 2, (9, 0), (), "Geometries", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Plated": (2, 2, (11, 0), (), "Plated", None),
		"PositionX": (4, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (5, 2, (5, 0), ((3, 49),), "PositionY", None),
		"ShapeType": (8, 2, (3, 0), (), "ShapeType", None),
	}
	_prop_map_put_ = {
	}

	DrillSize: str # read_only
	Geometries: str # IMGCPCBGeometries; read_only
	Name: str # read_only
	Plated: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	ShapeType: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBHoles(DispatchBaseClass):
	'MGCPCB pad collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}')
	coclass_clsid = IID('{EDEDED1A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pHole=defaultNamedNotOptArg):
		'Adds a pad to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pHole
			)

	# Result is of type IMGCPCBHole
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the pad of a given index in the pad collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort holes in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the pad of a given index in the pad collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBIDFImport(DispatchBaseClass):
	'MGCPCBEngines IDF Import engine object'
	CLSID = IID('{6F314C25-CF10-405C-ADBD-F9D1CC8733CD}')
	coclass_clsid = IID('{21C0D8FC-A893-49F0-87AF-DE0FF0F9370B}')

	def AssignHole(self, padstackName=defaultNamedNotOptArg):
		'Use to assign a padstack to the current hole.  Use HoleX, HoleY, and HoleDiameter to determine what hole the assignment is being applied to.  After assignment is made the hole is current hole is replced by another unassigned hole if one exists.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((8, 1),),padstackName
			)

	# The method GetHoleDiameter is actually a property, but must be used as a method to correctly pass the arguments
	def GetHoleDiameter(self, eUnit=0):
		'Returns the diameter for the hole that currently needs a padstack assignment.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetHoleX is actually a property, but must be used as a method to correctly pass the arguments
	def GetHoleX(self, eUnit=0):
		'Returns the x coordinate for the hole that currently needs a padstack assignment.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetHoleY is actually a property, but must be used as a method to correctly pass the arguments
	def GetHoleY(self, eUnit=0):
		'Returns the x coordinate for the hole that currently needs a padstack assignment.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def Go(self):
		'Import selected IDF file.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Errors' returns object of type 'IMGCPCBErrors'
		"Errors": (2, 2, (9, 0), (), "Errors", '{E7852DF4-9F9F-456E-8861-17AF75A62595}'),
		"HoleAssignmentRequired": (9, 2, (11, 0), (), "HoleAssignmentRequired", None),
		"HoleDiameter": (7, 2, (5, 0), ((3, 49),), "HoleDiameter", None),
		"HolePadstackOptions": (8, 2, (12, 0), (), "HolePadstackOptions", None),
		"HoleX": (5, 2, (5, 0), ((3, 49),), "HoleX", None),
		"HoleY": (6, 2, (5, 0), ((3, 49),), "HoleY", None),
	}
	_prop_map_put_ = {
		"BoardFile": ((3, LCID, 4, 0),()),
		"ContourHoleName": ((4, LCID, 4, 0),()),
		"CreateMissingMountingHoles": ((11, LCID, 4, 0),()),
		"CreateMissingPanelHoles": ((23, LCID, 4, 0),()),
		"ForceUpdateOfFixedMCADComponents": ((14, LCID, 4, 0),()),
		"ImportMechanicalComponent": ((18, LCID, 4, 0),()),
		"MapContoursToSlotHoleMountingHole": ((17, LCID, 4, 0),()),
		"MapOtherOutlinesToUserLayers": ((16, LCID, 4, 0),()),
		"MapToolingHoleToMountingHole": ((20, LCID, 4, 0),()),
		"NoToolAssignmentToContours": ((12, LCID, 4, 0),()),
		"PanelFile": ((22, LCID, 4, 0),()),
		"ProcessOtherOutlineCutouts": ((21, LCID, 4, 0),()),
		"ReplaceOnlyExternalPanelObstructs": ((24, LCID, 4, 0),()),
		"ReplaceOnlyExternalPlacementObstructs": ((19, LCID, 4, 0),()),
		"ReplaceRouteObstructs": ((15, LCID, 4, 0),()),
		"UpdateComponentPlacementStatus": ((13, LCID, 4, 0),()),
	}

	Errors: str # IMGCPCBErrors; read_only
	HoleAssignmentRequired: str # read_only
	HoleDiameter: str # read_only
	HolePadstackOptions: str # read_only
	HoleX: str # read_only
	HoleY: str # read_only
	BoardFile: str # write_only
	ContourHoleName: str # write_only
	CreateMissingMountingHoles: str # write_only
	CreateMissingPanelHoles: str # write_only
	ForceUpdateOfFixedMCADComponents: str # write_only
	ImportMechanicalComponent: str # write_only
	MapContoursToSlotHoleMountingHole: str # write_only
	MapOtherOutlinesToUserLayers: str # write_only
	MapToolingHoleToMountingHole: str # write_only
	NoToolAssignmentToContours: str # write_only
	PanelFile: str # write_only
	ProcessOtherOutlineCutouts: str # write_only
	ReplaceOnlyExternalPanelObstructs: str # write_only
	ReplaceOnlyExternalPlacementObstructs: str # write_only
	ReplaceRouteObstructs: str # write_only
	UpdateComponentPlacementStatus: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBImage(DispatchBaseClass):
	'MGCPCB Image Object.'
	CLSID = IID('{33704F23-0EB7-47D7-AB6F-F4337D5F823F}')
	coclass_clsid = IID('{C6070113-C01B-46B0-ADCC-489B4BF474F7}')

	def Delete(self):
		'Delete the image'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	# The method GetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetHeight(self, eUnit=0):
		'Sets or returns the image height. May alter width in order to maintain aspect ratio.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetWidth(self, eUnit=0):
		'Sets or returns the image width. May alter height in order to maintain aspect ratio.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid image.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Moves the image to the given location.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	# The method SetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetHeight(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the image height. May alter width in order to maintain aspect ratio.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the image width. May alter height in order to maintain aspect ratio.'
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (6, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (9, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (1, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Height": (12, 2, (5, 0), ((3, 49),), "Height", None),
		"ImagePath": (0, 2, (8, 0), (), "ImagePath", None),
		# Method 'LayerObject' returns object of type 'IMGCPCBLayerObject'
		"LayerObject": (2, 2, (9, 0), (), "LayerObject", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}'),
		"ObjectClass": (8, 2, (3, 0), (), "ObjectClass", None),
		"Selected": (5, 2, (11, 0), (), "Selected", None),
		"UniqueId": (7, 2, (12, 0), (), "UniqueId", None),
		"Width": (11, 2, (5, 0), ((3, 49),), "Width", None),
	}
	_prop_map_put_ = {
		"FixLock": ((9, LCID, 4, 0),()),
		"Height": ((12, LCID, 4, 0),()),
		"LayerObject": ((2, LCID, 8, 0),()),
		"Selected": ((5, LCID, 4, 0),()),
		"Width": ((11, LCID, 4, 0),()),
	}

	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Height: str # read/write
	ImagePath: str # read_only
	LayerObject: str # read/write
	ObjectClass: str # read_only
	Selected: bool # read/write
	UniqueId: str # read_only
	Width: str # read/write

	# Default property for this class is 'ImagePath'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "ImagePath", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBImages(DispatchBaseClass):
	'MGCPCB Image collection.'
	CLSID = IID('{E35CE437-C28B-4021-85A6-EEB20664B18B}')
	coclass_clsid = IID('{41738154-9334-4AFD-91A0-3C1BC60F969B}')

	def Add(self, pImage=defaultNamedNotOptArg):
		'Adds a detailed view to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pImage
			)

	def Delete(self):
		'Delete all images in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBImage
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'Returns the detailed view of a given index in the detailed view collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{33704F23-0EB7-47D7-AB6F-F4337D5F823F}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort images in this collection by extrema.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'Returns the detailed view of a given index in the detailed view collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{33704F23-0EB7-47D7-AB6F-F4337D5F823F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{33704F23-0EB7-47D7-AB6F-F4337D5F823F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBInsertionOutline(DispatchBaseClass):
	'MGCPCB Insertion Outline Object.'
	CLSID = IID('{045F3585-5036-40BA-97E0-EB9EF5098737}')
	coclass_clsid = IID('{3AA0DF89-DE2B-406C-A5C9-A3C42FC945C3}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (40, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (46, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (47, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (41, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (45, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (43, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (44, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (48, 2, (3, 0), (), "Side", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (42, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DisplayCondition": ((40, LCID, 4, 0),()),
		"FixLock": ((46, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"OriginalLayer": ((41, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Side: str # read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBInsertionOutlines(DispatchBaseClass):
	'MGCPCB Insertion Outline collection.'
	CLSID = IID('{B9781283-DCA6-44C7-975D-DB76652A3391}')
	coclass_clsid = IID('{EDD45523-ADD3-4469-877A-EFAAD505A5EB}')

	def Add(self, pInsertionOutline=defaultNamedNotOptArg):
		'Adds a insertion outline to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pInsertionOutline
			)

	# Result is of type IMGCPCBInsertionOutline
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the insertion outline of a given index in the insertion outlines collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{045F3585-5036-40BA-97E0-EB9EF5098737}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort insertion outlines in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the insertion outline of a given index in the insertion outlines collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{045F3585-5036-40BA-97E0-EB9EF5098737}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{045F3585-5036-40BA-97E0-EB9EF5098737}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBJumperTableEntries(DispatchBaseClass):
	'MGCPCB Jumper Table Entry collection'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7C}')
	coclass_clsid = IID('{EDEDED79-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# Result is of type IMGCPCBJumperTableEntry
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the jumper table of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7B}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the jumper table of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBJumperTableEntry(DispatchBaseClass):
	'MGCPCB Jumper Table Entry'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7B}')
	coclass_clsid = IID('{EDEDED7A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetLength(self, eUnit=0):
		'Gets jumper length.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (1, 2, (8, 0), (), "Angle", None),
		"CellName": (3, 2, (8, 0), (), "CellName", None),
		"Enable": (0, 2, (11, 0), (), "Enable", None),
		"Length": (4, 2, (5, 0), ((3, 49),), "Length", None),
		"PartNum": (2, 2, (8, 0), (), "PartNum", None),
	}
	_prop_map_put_ = {
		"Enable": ((0, LCID, 4, 0),()),
	}

	Angle: str # read_only
	CellName: str # read_only
	Enable: str # read/write
	Length: int # read_only
	PartNum: str # read_only

	# Default property for this class is 'Enable'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (11, 0), (), "Enable", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBLayerObject(DispatchBaseClass):
	'MGCPCB Layer Information Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')
	coclass_clsid = IID('{EDEDED81-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def SetFabricationLayer(self, eFabricationType=defaultNamedNotOptArg, eFabricationSide=defaultNamedNotOptArg):
		'Set the fabrication layer type and side.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1), (3, 1)),eFabricationType
			, eFabricationSide)

	_prop_map_get_ = {
		"BoardLayer": (8, 2, (3, 0), (), "BoardLayer", None),
		"ConductorLayer": (2, 2, (3, 0), (), "ConductorLayer", None),
		"ConductorType": (10, 2, (3, 0), (), "ConductorType", None),
		"FabricationSide": (3, 2, (3, 0), (), "FabricationSide", None),
		"FabricationType": (4, 2, (3, 0), (), "FabricationType", None),
		"InsulationType": (7, 2, (3, 0), (), "InsulationType", None),
		# Method 'LayerProperties' returns object of type 'IMGCPCBLayerProperties'
		"LayerProperties": (9, 2, (9, 0), (), "LayerProperties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED97}'),
		"PlaneType": (11, 2, (3, 0), (), "PlaneType", None),
		"Type": (6, 2, (3, 0), (), "Type", None),
		"UniqueId": (12, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayer' returns object of type 'IMGCPCBUserLayer'
		"UserLayer": (1, 2, (9, 0), (), "UserLayer", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}'),
	}
	_prop_map_put_ = {
		"BoardLayer": ((8, LCID, 4, 0),()),
		"ConductorLayer": ((2, LCID, 4, 0),()),
		"UserLayer": ((1, LCID, 4, 0),()),
	}

	BoardLayer: str # read/write
	ConductorLayer: str # read/write
	ConductorType: str # read_only
	FabricationSide: str # read_only
	FabricationType: str # read_only
	InsulationType: str # read_only
	LayerProperties: str # IMGCPCBLayerProperties; read_only
	PlaneType: str # read_only
	Type: str # read_only
	UniqueId: str # read_only
	UserLayer: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBLayerObjects(DispatchBaseClass):
	'MGCPCB Layer Informations collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')
	coclass_clsid = IID('{EDEDED82-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pLayerObject=defaultNamedNotOptArg):
		'Adds a layer information to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pLayerObject
			)

	# Result is of type IMGCPCBLayerObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the object of a given index in the layer informations collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the object of a given index in the layer informations collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBLayerProperties(DispatchBaseClass):
	'MGCPCB Layer Properties Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED97}')
	coclass_clsid = IID('{EDEDED97-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetThickness is actually a property, but must be used as a method to correctly pass the arguments
	def GetThickness(self, eUnit=0):
		'Returns the layer thickness.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method VpForWidth is actually a property, but must be used as a method to correctly pass the arguments
	def VpForWidth(self, Width=defaultNamedNotOptArg, widthUnit=0, vpUnit=0):
		'Returns the velocity of propagation of this layer for a specified width.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((5, 1), (3, 49), (3, 49)),Width
			, widthUnit, vpUnit)

	# The method Z0ForWidth is actually a property, but must be used as a method to correctly pass the arguments
	def Z0ForWidth(self, Width=defaultNamedNotOptArg, widthUnit=0):
		'Returns the impedance of this layer for a specified width in ohms.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((5, 1), (3, 49)),Width
			, widthUnit)

	_prop_map_get_ = {
		"Description": (2, 2, (8, 0), (), "Description", None),
		"DielectricConstant": (3, 2, (5, 0), (), "DielectricConstant", None),
		"LayerUsage": (8, 2, (3, 0), (), "LayerUsage", None),
		"Resistivity": (4, 2, (5, 0), (), "Resistivity", None),
		"StackupLayerName": (7, 2, (8, 0), (), "StackupLayerName", None),
		"Thickness": (1, 2, (5, 0), ((3, 49),), "Thickness", None),
	}
	_prop_map_put_ = {
	}

	Description: str # read_only
	DielectricConstant: str # read_only
	LayerUsage: str # read_only
	Resistivity: str # read_only
	StackupLayerName: str # read_only
	Thickness: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBLayerRange(DispatchBaseClass):
	'MGCPCB Layer Range'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}')
	coclass_clsid = IID('{EDEDED7B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetAllowedVias is actually a property, but must be used as a method to correctly pass the arguments
	def GetAllowedVias(self, bIncludeCentralLib=False):
		"Returns the names of allowed vias for this layer range.  If bIncludeCentralLib is TRUE, vias located in the central library 'central:' will be prepended to the name."
		return self._ApplyTypes_(5, 2, (12, 0), ((11, 49),), 'GetAllowedVias', None,bIncludeCentralLib
			)

	def IsValid(self):
		'Returns true if this a valid object.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AllowedVias": (5, 2, (12, 0), ((11, 49),), "AllowedVias", None),
		"EndLayer": (2, 2, (3, 0), (), "EndLayer", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"StartLayer": (1, 2, (3, 0), (), "StartLayer", None),
		"ViaPadstackName": (4, 2, (8, 0), (), "ViaPadstackName", None),
	}
	_prop_map_put_ = {
	}

	AllowedVias: str # read_only
	EndLayer: str # read_only
	Name: str # read_only
	StartLayer: str # read_only
	ViaPadstackName: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBLayerRanges(DispatchBaseClass):
	'MGCPCB Layer Range collection'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')
	coclass_clsid = IID('{EDEDED7C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# Result is of type IMGCPCBLayerRange
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'Returns the via span of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'Returns the via span of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBManufacturingOutline(DispatchBaseClass):
	'MGCPCB Manufacturing Outline Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED91}')
	coclass_clsid = IID('{EDEDED91-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (44, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (43, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((44, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMarker(DispatchBaseClass):
	CLSID = IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')
	coclass_clsid = IID('{6356402A-B8B6-4A48-BAD2-07B7749EAB1F}')

	def Delete(self):
		'Delete this marker object.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of the marker.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of the marker.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (4, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'FromTos' returns object of type 'IMGCPCBFromTos'
		"FromTos": (9, 2, (9, 0), (), "FromTos", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}'),
		"Layer": (10, 2, (3, 0), (), "Layer", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (1, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (8, 2, (3, 0), (), "ObjectClass", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		"Subnet": (5, 2, (3, 0), (), "Subnet", None),
		"UniqueId": (6, 2, (12, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
	}

	ConnectedObjects: str # IMGCPCBObjects; read_only
	FromTos: str # IMGCPCBFromTos; read_only
	Layer: str # read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	Subnet: str # read_only
	UniqueId: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMarkers(DispatchBaseClass):
	CLSID = IID('{3CCA32E2-09D7-42AB-9D14-565025B422B2}')
	coclass_clsid = IID('{EA828EB7-F1BC-4E3D-B86F-E22107617ACA}')

	def Add(self, pMarker=defaultNamedNotOptArg):
		'Adds a marker to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pMarker
			)

	def Delete(self):
		'Delete all markers in the collection.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBMarker
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the marker of a given index in the marker collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort markers in this collection by net and position.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the marker of a given index in the marker collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBMatchLengthGroup(DispatchBaseClass):
	'MGCPCB MatchLengthGroup Object.'
	CLSID = IID('{5D4AF6CF-7583-490E-89D2-7000976F2151}')
	coclass_clsid = IID('{73EB686E-4413-42D6-B0EA-574EC9B6CBCB}')

	# The method GetTolerance is actually a property, but must be used as a method to correctly pass the arguments
	def GetTolerance(self, eUnit=0):
		'Returns the tolerance of this match length group.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	_prop_map_get_ = {
		# Method 'Members' returns object of type 'IMGCPCBObjects'
		"Members": (1, 2, (9, 0), (), "Members", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Tolerance": (2, 2, (5, 0), ((3, 49),), "Tolerance", None),
		"Type": (3, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}

	Members: str # IMGCPCBObjects; read_only
	Name: str # read_only
	Tolerance: str # read_only
	Type: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMatchLengthGroups(DispatchBaseClass):
	'MGCPCB Match Length Groups collection.(deprecated)'
	CLSID = IID('{62A90059-38AB-4024-8A7C-0829DE185371}')
	coclass_clsid = IID('{4AC89F8E-5916-4D23-A346-C2A1A0ADD05A}')

	def Add(self, pGroup=defaultNamedNotOptArg):
		'Adds a match length group to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pGroup
			)

	# Result is of type IMGCPCBMatchLengthGroup
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the match length group of a given index in the match length groups collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{5D4AF6CF-7583-490E-89D2-7000976F2151}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort match length groups in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the match length group of a given index in the match length groups collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{5D4AF6CF-7583-490E-89D2-7000976F2151}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{5D4AF6CF-7583-490E-89D2-7000976F2151}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBMaterial(DispatchBaseClass):
	'MGCPCB Material Object.'
	CLSID = IID('{24B5B850-C62F-41AE-B405-018D644055AD}')
	coclass_clsid = IID('{FD58EC9E-6CA3-438D-8F4B-A440658E5002}')

	_prop_map_get_ = {
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Type": (1, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}

	Name: str # read_only
	Type: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMaterials(DispatchBaseClass):
	'MGCPCB Materials Collection Object.'
	CLSID = IID('{427B888F-9F9E-4408-B28C-8ECD4A5B696C}')
	coclass_clsid = IID('{E9E4D68B-9D4E-43E1-9A62-40BE49C403A3}')

	def Add(self, pMaterial=defaultNamedNotOptArg):
		'Adds a material to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pMaterial
			)

	# Result is of type IMGCPCBMaterial
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the material of a given index in the Materials collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{24B5B850-C62F-41AE-B405-018D644055AD}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort materials in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the material of a given index in the Materials collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{24B5B850-C62F-41AE-B405-018D644055AD}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{24B5B850-C62F-41AE-B405-018D644055AD}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBMetalizationArea(DispatchBaseClass):
	'MGCPCB Metalization Area Object.'
	CLSID = IID('{315D2489-54AB-4C47-9927-5D1EB59FC6E7}')
	coclass_clsid = IID('{43665D15-2EBE-4BCF-906C-70AB147CD1B2}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"Anchor": (42, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (43, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (51, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (55, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (56, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (52, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (49, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (53, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (54, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Subnet": (44, 2, (3, 0), (), "Subnet", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (50, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((42, LCID, 4, 0),()),
		"DisplayCondition": ((51, LCID, 4, 0),()),
		"FixLock": ((55, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"OriginalLayer": ((52, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Subnet: str # read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMetalizationAreas(DispatchBaseClass):
	'MGCPCB Metalization Areas collection.'
	CLSID = IID('{F48923B1-F092-42C5-8108-1256A55CDB86}')
	coclass_clsid = IID('{01F88762-C02D-42FB-9DB3-A62C739BF1BE}')

	def Add(self, pMetalizationArea=defaultNamedNotOptArg):
		'Adds an metalization area to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pMetalizationArea
			)

	def Delete(self):
		'Delete all metalization areas in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBMetalizationArea
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the metalization area of a given index in the metalization area collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{315D2489-54AB-4C47-9927-5D1EB59FC6E7}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort metalization areas in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the metalization area of a given index in the metalization area collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{315D2489-54AB-4C47-9927-5D1EB59FC6E7}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{315D2489-54AB-4C47-9927-5D1EB59FC6E7}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBMotionObject(DispatchBaseClass):
	CLSID = IID('{892F84E5-2360-4C62-BA83-B10CFECE180F}')
	coclass_clsid = IID('{9718D930-A889-485C-8B3C-F05198AE1B58}')

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Sets the rotation of the motion object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X Position of the motion object.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets the Y Position of the motion object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsPushed(self):
		'Returns the push status. (Only valid for components)'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	def Push(self):
		'Pushes the motion object. (Only valid for components)'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets the rotation of the motion object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X Position of the motion object.'
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets the Y Position of the motion object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Orientation": (3, 2, (5, 0), ((3, 49),), "Orientation", None),
		"PositionX": (1, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (2, 2, (5, 0), ((3, 49),), "PositionY", None),
	}
	_prop_map_put_ = {
		"Orientation": ((3, LCID, 4, 0),()),
		"PositionX": ((1, LCID, 4, 0),()),
		"PositionY": ((2, LCID, 4, 0),()),
	}

	Orientation: str # read/write
	PositionX: str # read/write
	PositionY: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMountingHole(DispatchBaseClass):
	'MGCPCB MountingHole Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')
	coclass_clsid = IID('{EDEDED29-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def AddShortedNets(self, nLayer=defaultNamedNotOptArg, shortedNets=defaultNamedNotOptArg):
		'Add shorted nets to a given layer.'
		return self._oleobj_.InvokeTypes(54, LCID, 1, (24, 0), ((3, 1), (12, 1)),nLayer
			, shortedNets)

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBBreakoutDefaults
	# The method GetBreakoutDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetBreakoutDefaults(self, nLayer=0):
		"Returns this mounting hole's breakout defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(41, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBreakoutDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def GetShortedNets(self, nLayer=defaultNamedNotOptArg):
		'Returns an array of shorted nets on a given layer.'
		return self._ApplyTypes_(56, 1, (12, 0), ((3, 1),), 'GetShortedNets', None,nLayer
			)

	# Result is of type IMGCPCBTeardropDefaults
	# The method GetTeardropDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetTeardropDefaults(self, nLayer=0):
		"Returns this mounting hole's teardrop defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(42, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetTeardropDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')
		return ret

	# Result is of type IMGCPCBUserPads
	# The method GetUserPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserPads(self, sLayerOnly='*'):
		'Returns the collection of user pads.'
		return self._ApplyTypes_(47, 2, (9, 32), ((8, 49),), 'GetUserPads', '{ACC37237-2F98-403B-8783-C21D7026F5B4}',sLayerOnly
			)

	# The method IsConnectedToPathOrAreaOnLayer is actually a property, but must be used as a method to correctly pass the arguments
	def IsConnectedToPathOrAreaOnLayer(self, nLayer=defaultNamedNotOptArg):
		'Returns true if this mounting hole is connected to a path or via on the given layer.'
		return self._oleobj_.InvokeTypes(58, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# The method PadGrowError is actually a property, but must be used as a method to correctly pass the arguments
	def PadGrowError(self, nLayer=defaultNamedNotOptArg):
		'Returns true if the pin failed to grow a pad on the given layer.'
		return self._oleobj_.InvokeTypes(59, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def RemoveShortedNets(self, nLayer=defaultNamedNotOptArg, shortedNets=defaultNamedNotOptArg):
		'Remove shorted nets from a given layer.'
		return self._oleobj_.InvokeTypes(55, LCID, 1, (24, 0), ((3, 1), (12, 1)),nLayer
			, shortedNets)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'BreakoutDefaults' returns object of type 'IMGCPCBBreakoutDefaults'
		"BreakoutDefaults": (41, 2, (9, 0), ((3, 49),), "BreakoutDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}'),
		# Method 'BreakoutTraces' returns object of type 'IMGCPCBBreakoutTraces'
		"BreakoutTraces": (44, 2, (9, 0), (), "BreakoutTraces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}'),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (45, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"FixLock": (52, 2, (3, 0), (), "FixLock", None),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (57, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parent": (51, 2, (9, 0), (), "Parent", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (49, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (50, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Subnet": (46, 2, (3, 0), (), "Subnet", None),
		# Method 'TeardropDefaults' returns object of type 'IMGCPCBTeardropDefaults'
		"TeardropDefaults": (42, 2, (9, 0), ((3, 49),), "TeardropDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}'),
		# Method 'Teardrops' returns object of type 'IMGCPCBTeardrops'
		"Teardrops": (43, 2, (9, 0), (), "Teardrops", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}'),
		# Method 'Tracedrops' returns object of type 'IMGCPCBTracedrops'
		"Tracedrops": (53, 2, (9, 0), (), "Tracedrops", '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}'),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"UniqueId": (48, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserPads' returns object of type 'IMGCPCBUserPads'
		"UserPads": (47, 2, (9, 32), ((8, 49),), "UserPads", '{ACC37237-2F98-403B-8783-C21D7026F5B4}'),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"FixLock": ((52, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	BreakoutDefaults: str # IMGCPCBBreakoutDefaults; read_only
	BreakoutTraces: str # IMGCPCBBreakoutTraces; read_only
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	FixLock: str # read/write
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Subnet: str # read_only
	TeardropDefaults: str # IMGCPCBTeardropDefaults; read_only
	Teardrops: str # IMGCPCBTeardrops; read_only
	Tracedrops: str # IMGCPCBTracedrops; read_only
	Type: str # read_only
	UniqueId: str # read_only
	UserPads: str # IMGCPCBUserPads; read_only
	_Handle: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMountingHoles(DispatchBaseClass):
	'MGCPCB MountingHole collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')
	coclass_clsid = IID('{EDEDED2A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pMountingHole=defaultNamedNotOptArg):
		'Adds a mountingHole to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pMountingHole
			)

	def Delete(self):
		'Delete all mounting holes in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBMountingHole
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the mountingHole of a given index in the mountingHole collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort mountingholes in this collection by hole name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the mountingHole of a given index in the mountingHole collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBMultiBoardOutline(DispatchBaseClass):
	'MGCPCB MultiBoardoutline Object, represents board outlines used in rigid/flex designs'
	CLSID = IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')
	coclass_clsid = IID('{1B5956ED-8394-4126-B154-2496AD9A5E39}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBRouteBorder
	def PutRouteBorder(self, nPnts=defaultNamedNotOptArg, pSafeArrayOfPnts=defaultNamedNotOptArg, dGraphicsWidth=defaultNamedNotOptArg, eUnit=0):
		'Adds or replaces the route border for this board outline.'
		ret = self._oleobj_.InvokeTypes(55, LCID, 1, (9, 0), ((3, 1), (16396, 1), (5, 1), (3, 49)),nPnts
			, pSafeArrayOfPnts, dGraphicsWidth, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutRouteBorder', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}')
		return ret

	_prop_map_get_ = {
		"BoardOutlineName": (40, 2, (8, 0), (), "BoardOutlineName", None),
		"BoardOutlineType": (42, 2, (3, 0), (), "BoardOutlineType", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'CoverLayerBottom' returns object of type 'IMGCPCBLayerObject'
		"CoverLayerBottom": (53, 2, (9, 0), (), "CoverLayerBottom", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}'),
		# Method 'CoverLayerTop' returns object of type 'IMGCPCBLayerObject'
		"CoverLayerTop": (52, 2, (9, 0), (), "CoverLayerTop", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (49, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"LayerRangeBottom": (45, 2, (3, 0), (), "LayerRangeBottom", None),
		"LayerRangeTop": (44, 2, (3, 0), (), "LayerRangeTop", None),
		# Method 'LayerStack' returns object of type 'IMGCPCBLayerObjects'
		"LayerStack": (41, 2, (9, 0), (), "LayerStack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (47, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (48, 2, (8, 0), (), "ReservedBy", None),
		# Method 'RouteBorder' returns object of type 'IMGCPCBRouteBorder'
		"RouteBorder": (54, 2, (9, 0), (), "RouteBorder", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		# Method 'SolderMaskLayerBottom' returns object of type 'IMGCPCBLayerObject'
		"SolderMaskLayerBottom": (51, 2, (9, 0), (), "SolderMaskLayerBottom", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}'),
		# Method 'SolderMaskLayerTop' returns object of type 'IMGCPCBLayerObject'
		"SolderMaskLayerTop": (50, 2, (9, 0), (), "SolderMaskLayerTop", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}'),
		# Method 'StackupScheme' returns object of type 'IMGCPCBStackupScheme'
		"StackupScheme": (57, 2, (9, 0), (), "StackupScheme", '{0D170493-3863-40A7-B222-C70CDC73B07A}'),
		# Method 'StiffenerLayer' returns object of type 'IMGCPCBLayerObject'
		"StiffenerLayer": (56, 2, (9, 0), (), "StiffenerLayer", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}'),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (46, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"BoardOutlineName": ((40, LCID, 4, 0),()),
		"BoardOutlineType": ((42, LCID, 4, 0),()),
		"FixLock": ((49, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"LayerStack": ((41, LCID, 8, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"StackupScheme": ((57, LCID, 8, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	BoardOutlineName: str # read/write
	BoardOutlineType: str # read/write
	Component: str # IMGCPCBComponent; read_only
	CoverLayerBottom: str # IMGCPCBLayerObject; read_only
	CoverLayerTop: str # IMGCPCBLayerObject; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	LayerRangeBottom: str # read_only
	LayerRangeTop: str # read_only
	LayerStack: str # read/write
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	RouteBorder: str # IMGCPCBRouteBorder; read_only
	Selected: bool # read/write
	SolderMaskLayerBottom: str # IMGCPCBLayerObject; read_only
	SolderMaskLayerTop: str # IMGCPCBLayerObject; read_only
	StackupScheme: str # read/write
	StiffenerLayer: str # IMGCPCBLayerObject; read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMultiBoardOutlines(DispatchBaseClass):
	'MGCPCB MultiBoardoutline collection.'
	CLSID = IID('{D69EB1A8-F5FC-4897-AD3C-676C50CF60AC}')
	coclass_clsid = IID('{42CAFFCF-D5B6-4053-B485-5F81D4A27E33}')

	def Add(self, pMultiBoardOutline=defaultNamedNotOptArg):
		'Adds a multi board outline to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pMultiBoardOutline
			)

	def Delete(self):
		'Delete all board outlines in the collection.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBMultiBoardOutline
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns multi board outline of a given index/name in the Multi board outlines collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort board outlines in this collection by extrema.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns multi board outline of a given index/name in the Multi board outlines collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBMultiVia(DispatchBaseClass):
	'MGCPCB MultiVia Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}')
	coclass_clsid = IID('{EDEDEDA0-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	def Dissolve(self):
		'Dissolves the multi via into individual vias and conductive areas.'
		return self._oleobj_.InvokeTypes(53, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBBreakoutDefaults
	# The method GetBreakoutDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetBreakoutDefaults(self, nLayer=0):
		"Returns this multi via's breakout defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(42, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBreakoutDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBTeardropDefaults
	# The method GetTeardropDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetTeardropDefaults(self, nLayer=0):
		"Returns this multi via's teardrop defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(43, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetTeardropDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')
		return ret

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def SetPattern(self, nRowCount=defaultNamedNotOptArg, nColCount=defaultNamedNotOptArg):
		'Sets the pattern for the multi via. (Beta)'
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), ((3, 1), (3, 1)),nRowCount
			, nColCount)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'BreakoutDefaults' returns object of type 'IMGCPCBBreakoutDefaults'
		"BreakoutDefaults": (42, 2, (9, 0), ((3, 49),), "BreakoutDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}'),
		# Method 'BreakoutTraces' returns object of type 'IMGCPCBBreakoutTraces'
		"BreakoutTraces": (45, 2, (9, 0), (), "BreakoutTraces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}'),
		"ColumnCount": (50, 2, (3, 0), (), "ColumnCount", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConductiveAreas' returns object of type 'IMGCPCBConductiveAreas'
		"ConductiveAreas": (49, 2, (9, 0), (), "ConductiveAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (46, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"EndLayer": (41, 2, (3, 0), (), "EndLayer", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"FixLock": (58, 2, (3, 0), (), "FixLock", None),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (60, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parent": (54, 2, (9, 0), (), "Parent", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (56, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (57, 2, (8, 0), (), "ReservedBy", None),
		"RowCount": (51, 2, (3, 0), (), "RowCount", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"StartLayer": (40, 2, (3, 0), (), "StartLayer", None),
		"Subnet": (47, 2, (3, 0), (), "Subnet", None),
		# Method 'TeardropDefaults' returns object of type 'IMGCPCBTeardropDefaults'
		"TeardropDefaults": (43, 2, (9, 0), ((3, 49),), "TeardropDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}'),
		# Method 'Teardrops' returns object of type 'IMGCPCBTeardrops'
		"Teardrops": (44, 2, (9, 0), (), "Teardrops", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}'),
		# Method 'Tracedrops' returns object of type 'IMGCPCBTracedrops'
		"Tracedrops": (59, 2, (9, 0), (), "Tracedrops", '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}'),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"UniqueId": (55, 2, (12, 0), (), "UniqueId", None),
		# Method 'Vias' returns object of type 'IMGCPCBVias'
		"Vias": (48, 2, (9, 0), (), "Vias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}'),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"FixLock": ((58, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	BreakoutDefaults: str # IMGCPCBBreakoutDefaults; read_only
	BreakoutTraces: str # IMGCPCBBreakoutTraces; read_only
	ColumnCount: str # read_only
	Component: str # IMGCPCBComponent; read_only
	ConductiveAreas: str # IMGCPCBConductiveAreas; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	EndLayer: str # read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	FixLock: str # read/write
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	RowCount: str # read_only
	Selected: bool # read/write
	StartLayer: str # read_only
	Subnet: str # read_only
	TeardropDefaults: str # IMGCPCBTeardropDefaults; read_only
	Teardrops: str # IMGCPCBTeardrops; read_only
	Tracedrops: str # IMGCPCBTracedrops; read_only
	Type: str # read_only
	UniqueId: str # read_only
	Vias: str # IMGCPCBVias; read_only
	_Handle: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBMultiVias(DispatchBaseClass):
	'MGCPCB multi via collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}')
	coclass_clsid = IID('{EDEDED9F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pMultiVia=defaultNamedNotOptArg):
		'Adds a multi via to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pMultiVia
			)

	def Delete(self):
		'Delete all multi vias in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBMultiVia
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the multi via of a given index in the multi via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort multi vias in this collection by padstack name, layer, and position.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the multi via of a given index in the multi via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBNet(DispatchBaseClass):
	'MGCPCB Net Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')
	coclass_clsid = IID('{EDEDED0A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Deletes this net from the design.'
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBActualPlaneShapes
	# The method GetActualPlaneShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetActualPlaneShapes(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the net's actual plane shape collection."
		ret = self._oleobj_.InvokeTypes(24, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetActualPlaneShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')
		return ret

	# Result is of type IMGCPCBBondPads
	# The method GetBondPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetBondPads(self, SelectType=0):
		"Returns the Net's collection of bond pads."
		ret = self._oleobj_.InvokeTypes(34, LCID, 2, (9, 0), ((3, 49),),SelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBondPads', '{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}')
		return ret

	# Result is of type IMGCPCBObjects
	# The method GetBondWires is actually a property, but must be used as a method to correctly pass the arguments
	def GetBondWires(self, SelectType=0):
		"Returns the Net's collection of bond wires."
		ret = self._oleobj_.InvokeTypes(33, LCID, 2, (9, 0), ((3, 49),),SelectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBondWires', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')
		return ret

	# Result is of type IMGCPCBConductiveAreas
	# The method GetConductiveAreas is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductiveAreas(self, eSelectOnly=0, nLayerOnly=0):
		'Returns conductive areas on this Net.'
		ret = self._oleobj_.InvokeTypes(15, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductiveAreas', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')
		return ret

	# Result is of type IMGCPCBFromTos
	# The method GetFromTos is actually a property, but must be used as a method to correctly pass the arguments
	def GetFromTos(self, eSelectOnly=0, eFromToType=1):
		'Returns fromtos on this Net.'
		ret = self._oleobj_.InvokeTypes(16, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, eFromToType)
		if ret is not None:
			ret = Dispatch(ret, 'GetFromTos', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')
		return ret

	# Result is of type IMGCPCBGeneratedPlanes
	# The method GetGeneratedPlaneOutlines is actually a property, but must be used as a method to correctly pass the arguments
	def GetGeneratedPlaneOutlines(self, eSelectOnly=0, nLayerOnly=0):
		'Returns generated plane outlines on this Net.'
		ret = self._oleobj_.InvokeTypes(28, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetGeneratedPlaneOutlines', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')
		return ret

	# Result is of type IMGCPCBGeneratedPlanes
	# The method GetGeneratedPlanes is actually a property, but must be used as a method to correctly pass the arguments
	def GetGeneratedPlanes(self, eSelectOnly=0, nLayerOnly=0):
		'Returns generated planes on this Net.'
		ret = self._oleobj_.InvokeTypes(13, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetGeneratedPlanes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')
		return ret

	# Result is of type IMGCPCBMountingHoles
	# The method GetMountingHoles is actually a property, but must be used as a method to correctly pass the arguments
	def GetMountingHoles(self, eSelectOnly=0):
		'Returns mounting holes on this Net.'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetMountingHoles', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')
		return ret

	# Result is of type IMGCPCBPins
	# The method GetPins is actually a property, but must be used as a method to correctly pass the arguments
	def GetPins(self, eSelectOnly=0):
		"Returns the Net's collection of pins."
		ret = self._oleobj_.InvokeTypes(9, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPins', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')
		return ret

	# Result is of type IMGCPCBPins
	# The method GetPinsEx is actually a property, but must be used as a method to correctly pass the arguments
	def GetPinsEx(self, eSelectOnly=0):
		"Returns the Net's collection of pins, allows user to pass in epcbSelectUnplaced to only get unplaced or epcbSelectAll and get all pins including unplaced for use in design tool."
		ret = self._oleobj_.InvokeTypes(47, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPinsEx', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')
		return ret

	# Result is of type IMGCPCBPlaneAssignments
	# The method GetPlaneAssignments is actually a property, but must be used as a method to correctly pass the arguments
	def GetPlaneAssignments(self, Layer=0):
		'Returns the collection of plane assignments.'
		ret = self._oleobj_.InvokeTypes(203, LCID, 2, (9, 0), ((3, 49),),Layer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPlaneAssignments', '{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}')
		return ret

	# Result is of type IMGCPCBPlaneShapes
	# The method GetPlaneShapes is actually a property, but must be used as a method to correctly pass the arguments
	def GetPlaneShapes(self, eSelectOnly=0, nLayerOnly=0):
		'Returns plane shapes on this Net.'
		ret = self._oleobj_.InvokeTypes(17, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetPlaneShapes', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')
		return ret

	# Result is of type IMGCPCBTieLegs
	# The method GetTieLegs is actually a property, but must be used as a method to correctly pass the arguments
	def GetTieLegs(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the net's tie leg collection. (Deprecated)"
		ret = self._oleobj_.InvokeTypes(25, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetTieLegs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')
		return ret

	# Result is of type IMGCPCBTraces
	# The method GetTraces is actually a property, but must be used as a method to correctly pass the arguments
	def GetTraces(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the Net's collection of traces."
		ret = self._oleobj_.InvokeTypes(10, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetTraces', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')
		return ret

	# Result is of type IMGCPCBVias
	# The method GetVias is actually a property, but must be used as a method to correctly pass the arguments
	def GetVias(self, eSelectOnly=0):
		"Returns the Net's collection of vias."
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetVias', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')
		return ret

	def IsNet0(self):
		'Returns True if this is (Net0).  Returns False otherwise.'
		return self._oleobj_.InvokeTypes(43, LCID, 1, (11, 0), (),)

	def IsNoConnect(self):
		'Returns True if this is (Net0) or a single pin net.  Returns False otherwise.'
		return self._oleobj_.InvokeTypes(42, LCID, 1, (11, 0), (),)

	def IsRouted(self):
		'Is this net completely routed?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def Merge(self, ThisPin=defaultNamedNotOptArg, OtherNet=defaultNamedNotOptArg, OtherPin=defaultNamedNotOptArg):
		'Merge 2 nets together and add netline between ThisPin and OtherPin if custom topology.'
		return self._oleobj_.InvokeTypes(38, LCID, 1, (24, 0), ((9, 1), (9, 1), (9, 1)),ThisPin
			, OtherNet, OtherPin)

	# Result is of type IMGCPCBNet
	def Split(self, OldNetPin=defaultNamedNotOptArg, NewNetPin=defaultNamedNotOptArg, NetName=defaultNamedNotOptArg):
		'Splits this net between 2 pins.  OldNetPin will keep this net.  NewNetPin will have a new net.'
		ret = self._oleobj_.InvokeTypes(44, LCID, 1, (9, 0), ((9, 1), (9, 1), (8, 1)),OldNetPin
			, NewNetPin, NetName)
		if ret is not None:
			ret = Dispatch(ret, 'Split', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')
		return ret

	_prop_map_get_ = {
		# Method 'ActualPlaneShapes' returns object of type 'IMGCPCBActualPlaneShapes'
		"ActualPlaneShapes": (24, 2, (9, 0), ((3, 49), (3, 49)), "ActualPlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}'),
		"AllowLoops": (48, 2, (11, 0), (), "AllowLoops", None),
		# Method 'BondPads' returns object of type 'IMGCPCBBondPads'
		"BondPads": (34, 2, (9, 0), ((3, 49),), "BondPads", '{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}'),
		# Method 'BondWires' returns object of type 'IMGCPCBObjects'
		"BondWires": (33, 2, (9, 0), ((3, 49),), "BondWires", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		"BusName": (41, 2, (8, 0), (), "BusName", None),
		"Comment": (50, 2, (8, 0), (), "Comment", None),
		# Method 'ConductiveAreas' returns object of type 'IMGCPCBConductiveAreas'
		"ConductiveAreas": (15, 2, (9, 0), ((3, 49), (3, 49)), "ConductiveAreas", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}'),
		# Method 'Constraint' returns object of type 'IMGCPCBConstraint'
		"Constraint": (29, 2, (9, 0), (), "Constraint", '{EAFAC376-315E-407D-A294-7DB8A2222C40}'),
		"CstrClassName": (40, 2, (8, 0), (), "CstrClassName", None),
		# Method 'DiffPair' returns object of type 'IMGCPCBNet'
		"DiffPair": (23, 2, (9, 0), (), "DiffPair", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		# Method 'DifferentialPair' returns object of type 'IMGCPCBDifferentialPair'
		"DifferentialPair": (31, 2, (9, 0), (), "DifferentialPair", '{9A2E2DB0-60CA-45A0-8788-43D139963F55}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (19, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FromTos' returns object of type 'IMGCPCBFromTos'
		"FromTos": (16, 2, (9, 0), ((3, 49), (3, 49)), "FromTos", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}'),
		# Method 'GeneratedPlaneOutlines' returns object of type 'IMGCPCBGeneratedPlanes'
		"GeneratedPlaneOutlines": (28, 2, (9, 0), ((3, 49), (3, 49)), "GeneratedPlaneOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}'),
		# Method 'GeneratedPlanes' returns object of type 'IMGCPCBGeneratedPlanes'
		"GeneratedPlanes": (13, 2, (9, 0), ((3, 49), (3, 49)), "GeneratedPlanes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"InFilter": (49, 2, (11, 0), (), "InFilter", None),
		"Marked": (39, 2, (11, 0), (), "Marked", None),
		# Method 'Markers' returns object of type 'IMGCPCBMarkers'
		"Markers": (37, 2, (9, 0), (), "Markers", '{3CCA32E2-09D7-42AB-9D14-565025B422B2}'),
		# Method 'MatchLengthGroup' returns object of type 'IMGCPCBMatchLengthGroup'
		"MatchLengthGroup": (32, 2, (9, 0), (), "MatchLengthGroup", '{5D4AF6CF-7583-490E-89D2-7000976F2151}'),
		# Method 'MountingHoles' returns object of type 'IMGCPCBMountingHoles'
		"MountingHoles": (14, 2, (9, 0), ((3, 49),), "MountingHoles", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'NetClass' returns object of type 'IMGCPCBNetClass'
		"NetClass": (12, 2, (9, 0), (), "NetClass", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}'),
		# Method 'NetGroup' returns object of type 'IMGCPCBNetGroup'
		"NetGroup": (45, 2, (9, 0), (), "NetGroup", '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}'),
		"NumberOfOpens": (20, 2, (3, 0), (), "NumberOfOpens", None),
		"ObjectClass": (27, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Pins' returns object of type 'IMGCPCBPins'
		"Pins": (9, 2, (9, 0), ((3, 49),), "Pins", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}'),
		# Method 'PinsEx' returns object of type 'IMGCPCBPins'
		"PinsEx": (47, 2, (9, 0), ((3, 49),), "PinsEx", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}'),
		# Method 'PlaneAssignments' returns object of type 'IMGCPCBPlaneAssignments'
		"PlaneAssignments": (203, 2, (9, 0), ((3, 49),), "PlaneAssignments", '{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}'),
		# Method 'PlaneShapes' returns object of type 'IMGCPCBPlaneShapes'
		"PlaneShapes": (17, 2, (9, 0), ((3, 49), (3, 49)), "PlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}'),
		"RequiredNumberOfTestPoints": (26, 2, (3, 0), (), "RequiredNumberOfTestPoints", None),
		"Selected": (2, 2, (11, 0), (), "Selected", None),
		# Method 'ShieldGroup' returns object of type 'IMGCPCBNetGroup'
		"ShieldGroup": (46, 2, (9, 0), (), "ShieldGroup", '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}'),
		# Method 'TieLegs' returns object of type 'IMGCPCBTieLegs'
		"TieLegs": (25, 2, (9, 0), ((3, 49), (3, 49)), "TieLegs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}'),
		# Method 'Traces' returns object of type 'IMGCPCBTraces'
		"Traces": (10, 2, (9, 0), ((3, 49), (3, 49)), "Traces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}'),
		"Type": (22, 2, (3, 0), (), "Type", None),
		"UniqueId": (35, 2, (12, 0), (), "UniqueId", None),
		# Method 'Vias' returns object of type 'IMGCPCBVias'
		"Vias": (11, 2, (9, 0), ((3, 49),), "Vias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}'),
	}
	_prop_map_put_ = {
		"AllowLoops": ((48, LCID, 4, 0),()),
		"Comment": ((50, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Marked": ((39, LCID, 4, 0),()),
		"Name": ((0, LCID, 4, 0),()),
		"RequiredNumberOfTestPoints": ((26, LCID, 4, 0),()),
		"Selected": ((2, LCID, 4, 0),()),
	}

	ActualPlaneShapes: str # IMGCPCBActualPlaneShapes; read_only
	AllowLoops: str # read/write
	BondPads: str # IMGCPCBBondPads; read_only
	BondWires: str # IMGCPCBObjects; read_only
	BusName: str # read_only
	Comment: str # read/write
	ConductiveAreas: str # IMGCPCBConductiveAreas; read_only
	Constraint: str # IMGCPCBConstraint; read_only
	CstrClassName: str # read_only
	DiffPair: str # IMGCPCBNet; read_only
	DifferentialPair: str # IMGCPCBDifferentialPair; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FromTos: str # IMGCPCBFromTos; read_only
	GeneratedPlaneOutlines: str # IMGCPCBGeneratedPlanes; read_only
	GeneratedPlanes: str # IMGCPCBGeneratedPlanes; read_only
	Highlighted: bool # read/write
	InFilter: str # read_only
	Marked: str # read/write
	Markers: str # IMGCPCBMarkers; read_only
	MatchLengthGroup: str # IMGCPCBMatchLengthGroup; read_only
	MountingHoles: str # IMGCPCBMountingHoles; read_only
	Name: str # read/write
	NetClass: str # IMGCPCBNetClass; read_only
	NetGroup: str # IMGCPCBNetGroup; read_only
	NumberOfOpens: str # read_only
	ObjectClass: str # read_only
	Pins: str # IMGCPCBPins; read_only
	PinsEx: str # IMGCPCBPins; read_only
	PlaneAssignments: str # IMGCPCBPlaneAssignments; read_only
	PlaneShapes: str # IMGCPCBPlaneShapes; read_only
	RequiredNumberOfTestPoints: str # read/write
	Selected: bool # read/write
	ShieldGroup: str # IMGCPCBNetGroup; read_only
	TieLegs: str # IMGCPCBTieLegs; read_only
	Traces: str # IMGCPCBTraces; read_only
	Type: str # read_only
	UniqueId: str # read_only
	Vias: str # IMGCPCBVias; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBNetClass(DispatchBaseClass):
	'MGCPCB NetClass Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')
	coclass_clsid = IID('{EDEDED16-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method DiffPairSpacing is actually a property, but must be used as a method to correctly pass the arguments
	def DiffPairSpacing(self, nLayer=defaultNamedNotOptArg, sScheme='(Master)', eUnit=0):
		'Returns the diff pair spacing of the net class for the specified layer and scheme'
		return self._ApplyTypes_(6, 2, (5, 32), ((3, 1), (8, 49), (3, 49)), 'DiffPairSpacing', None,nLayer
			, sScheme, eUnit)

	# The method ExpansionTraceWidth is actually a property, but must be used as a method to correctly pass the arguments
	def ExpansionTraceWidth(self, nLayer=defaultNamedNotOptArg, sScheme='(Master)', eUnit=0):
		'Returns the expansion trace width for the specified layer and scheme.'
		return self._ApplyTypes_(9, 2, (5, 32), ((3, 1), (8, 49), (3, 49)), 'ExpansionTraceWidth', None,nLayer
			, sScheme, eUnit)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# The method MinTraceWidth is actually a property, but must be used as a method to correctly pass the arguments
	def MinTraceWidth(self, nLayer=defaultNamedNotOptArg, sScheme='(Master)', eUnit=0):
		'Returns the min trace width for the specified layer and scheme.'
		return self._ApplyTypes_(7, 2, (5, 32), ((3, 1), (8, 49), (3, 49)), 'MinTraceWidth', None,nLayer
			, sScheme, eUnit)

	# The method RoutingEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def RoutingEnabled(self, nLayer=defaultNamedNotOptArg):
		'Returns true if this net class is enabled for routing on the specified layer.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	# The method TypicalTraceWidth is actually a property, but must be used as a method to correctly pass the arguments
	def TypicalTraceWidth(self, nLayer=defaultNamedNotOptArg, sScheme='(Master)', eUnit=0):
		'Returns the typical trace width for the specified layer and scheme.'
		return self._ApplyTypes_(8, 2, (5, 32), ((3, 1), (8, 49), (3, 49)), 'TypicalTraceWidth', None,nLayer
			, sScheme, eUnit)

	# The method TypicalWidth is actually a property, but must be used as a method to correctly pass the arguments
	def TypicalWidth(self, nLayer=defaultNamedNotOptArg, eUnit=0):
		'Returns the typical width for traces in this netclass on the specified layer. (Deprecated)'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 1), (3, 49)),nLayer
			, eUnit)

	# Result is of type IMGCPCBPadstack
	# The method ViaPadstackToUse is actually a property, but must be used as a method to correctly pass the arguments
	def ViaPadstackToUse(self, nFromLayer=defaultNamedNotOptArg, nToLayer=defaultNamedNotOptArg, sScheme='(Master)'):
		'Returns the via padstack to use for the specified layer range and scheme.'
		return self._ApplyTypes_(11, 2, (9, 32), ((3, 1), (3, 1), (8, 49)), 'ViaPadstackToUse', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}',nFromLayer
			, nToLayer, sScheme)

	_prop_map_get_ = {
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Nets' returns object of type 'IMGCPCBNets'
		"Nets": (1, 2, (9, 0), (), "Nets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
	}
	_prop_map_put_ = {
		"Highlighted": ((5, LCID, 4, 0),()),
		"Selected": ((4, LCID, 4, 0),()),
	}

	Name: str # read_only
	Nets: str # IMGCPCBNets; read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBNetClasses(DispatchBaseClass):
	'MGCPCB netclass collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED11}')
	coclass_clsid = IID('{EDEDED15-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pNetClass=defaultNamedNotOptArg):
		'Adds a part to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pNetClass
			)

	# Result is of type IMGCPCBNetClass
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the netclass of a given index in the netclass collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort netclasses in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the netclass of a given index in the netclass collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBNetGroup(DispatchBaseClass):
	'MGCPCB NetGroup Object.'
	CLSID = IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')
	coclass_clsid = IID('{8BFB2DB2-773C-43C5-B16A-6D60D2AB5FC1}')

	def Add(self, pObj=defaultNamedNotOptArg):
		'Add an obj into the group.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((9, 1),),pObj
			)

	def Delete(self):
		'Delete the group.  The group object will be invalid after this operation.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	# The method GetStitchingStep is actually a property, but must be used as a method to correctly pass the arguments
	def GetStitchingStep(self, eUnit=0):
		'Sets or returns the stitching step for the net group.'
		return self._oleobj_.InvokeTypes(20, LCID, 2, (3, 0), ((3, 49),),eUnit
			)

	def IsBus(self):
		'returns the net group bus status.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), (),)

	def IsShieldingGroup(self):
		'Returns true if this a shielding group.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid group.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	def Remove(self, pObj=defaultNamedNotOptArg):
		'Remove an obj from the group.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((9, 1),),pObj
			)

	# The method SetShieldingEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def SetShieldingEnabled(self, Layer=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Sets or returns the net group shielding enabled on a layer.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (11, 1)),Layer
			, arg1)

	# The method SetStitchingStep is actually a property, but must be used as a method to correctly pass the arguments
	def SetStitchingStep(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the stitching step for the net group.'
		return self._oleobj_.InvokeTypes(20, LCID, 4, (24, 0), ((3, 49), (3, 1)),eUnit
			, arg1)

	# The method ShieldingEnabled is actually a property, but must be used as a method to correctly pass the arguments
	def ShieldingEnabled(self, Layer=defaultNamedNotOptArg):
		'Sets or returns the net group shielding enabled on a layer.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (11, 0), ((3, 1),),Layer
			)

	_prop_map_get_ = {
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"HierarchicalName": (18, 2, (8, 0), (), "HierarchicalName", None),
		"IncludeInNetFilter": (19, 2, (11, 0), (), "IncludeInNetFilter", None),
		"Marked": (1, 2, (11, 0), (), "Marked", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Nets' returns object of type 'IMGCPCBNets'
		"Nets": (2, 2, (9, 0), (), "Nets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		# Method 'Parent' returns object of type 'IMGCPCBNetGroup'
		"Parent": (5, 2, (9, 0), (), "Parent", '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}'),
		"ShieldingNet": (12, 2, (8, 0), (), "ShieldingNet", None),
		"ShieldingNetClass": (13, 2, (8, 0), (), "ShieldingNetClass", None),
		"ShieldingOutsideTraces": (21, 2, (11, 0), (), "ShieldingOutsideTraces", None),
		"ShieldingPerBit": (14, 2, (3, 0), (), "ShieldingPerBit", None),
		"ShieldingStitching": (22, 2, (11, 0), (), "ShieldingStitching", None),
		"StitchingStep": (20, 2, (3, 0), ((3, 49),), "StitchingStep", None),
		# Method 'SubGroups' returns object of type 'IMGCPCBNetGroups'
		"SubGroups": (4, 2, (9, 0), (), "SubGroups", '{DF8FC11D-AFBD-41A9-AF29-8821B9164732}'),
		"Type": (6, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"IncludeInNetFilter": ((19, LCID, 4, 0),()),
		"Marked": ((1, LCID, 4, 0),()),
		"Name": ((0, LCID, 4, 0),()),
		"ShieldGroup": ((23, LCID, 8, 0),()),
		"ShieldingNet": ((12, LCID, 4, 0),()),
		"ShieldingNetClass": ((13, LCID, 4, 0),()),
		"ShieldingOutsideTraces": ((21, LCID, 4, 0),()),
		"ShieldingPerBit": ((14, LCID, 4, 0),()),
		"ShieldingStitching": ((22, LCID, 4, 0),()),
		"StitchingStep": ((20, LCID, 4, 0),()),
	}

	Extrema: str # IMGCPCBExtrema; read_only
	HierarchicalName: str # read_only
	IncludeInNetFilter: str # read/write
	Marked: str # read/write
	Name: str # read/write
	Nets: str # IMGCPCBNets; read_only
	Parent: str # IMGCPCBNetGroup; read_only
	ShieldingNet: str # read/write
	ShieldingNetClass: str # read/write
	ShieldingOutsideTraces: str # read/write
	ShieldingPerBit: str # read/write
	ShieldingStitching: str # read/write
	StitchingStep: str # read/write
	SubGroups: str # IMGCPCBNetGroups; read_only
	Type: str # read_only
	ShieldGroup: str # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBNetGroups(DispatchBaseClass):
	'MGCPCB net group collection.'
	CLSID = IID('{DF8FC11D-AFBD-41A9-AF29-8821B9164732}')
	coclass_clsid = IID('{7570D721-A2E1-4A5F-8140-E422383072B9}')

	def Add(self, pNetGrp=defaultNamedNotOptArg):
		'Adds a net group to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pNetGrp
			)

	# Result is of type IMGCPCBNetGroup
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the net group of a given index in the net group collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the net group of a given index in the net group collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBNets(DispatchBaseClass):
	'MGCPCB Nets collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')
	coclass_clsid = IID('{EDEDED09-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pNet=defaultNamedNotOptArg):
		'Adds a net to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pNet
			)

	def Delete(self):
		'Delete all nets in the collection.'
		return self._oleobj_.InvokeTypes(37, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBNet
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the net of a given index in the nets collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort nets in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (34, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
	}
	_prop_map_put_ = {
		"AllowLoops": ((38, LCID, 4, 0),()),
		"Highlighted": ((33, LCID, 4, 0),()),
		"IncludeInNetFilter": ((36, LCID, 4, 0),()),
		"Marked": ((35, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Extrema: str # IMGCPCBExtrema; read_only
	AllowLoops: str # write_only
	Highlighted: bool # write_only
	IncludeInNetFilter: str # write_only
	Marked: str # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the net of a given index in the nets collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBObjectFilter(DispatchBaseClass):
	'MGCPCB Object Filter Object.'
	CLSID = IID('{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}')
	coclass_clsid = IID('{B84F9DBD-1C63-4AFE-9806-BF558A41DBE0}')

	def ExcludeAllTypes(self):
		'Initializes filter to exclude all object types.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), (),)

	def ExcludeObjectTypes(self, ObjectClass=defaultNamedNotOptArg, ObjectType=''):
		'Sets filter to exclude specific object(s).'
		return self._ApplyTypes_(3, 1, (24, 32), ((3, 1), (16396, 49)), 'ExcludeObjectTypes', None,ObjectClass
			, ObjectType)

	def IncludeAllTypes(self):
		'Initializes filter to include all object types.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), (),)

	def IncludeObjectTypes(self, ObjectClass=defaultNamedNotOptArg, ObjectType=''):
		'Sets filter to include specific object(s).'
		return self._ApplyTypes_(4, 1, (24, 32), ((3, 1), (16396, 49)), 'IncludeObjectTypes', None,ObjectClass
			, ObjectType)

	def IncludeOnlyObjectsOnActiveSheet(self):
		'Includes only those objects which belong to the active sheet. '
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
		"ExcludeComponentData": ((5, LCID, 4, 0),()),
		"ExcludeIfParentSelect": ((6, LCID, 4, 0),()),
	}

	ExcludeComponentData: str # write_only
	ExcludeIfParentSelect: str # write_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBObjects(DispatchBaseClass):
	'MGCPCB Objects collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')
	coclass_clsid = IID('{EDEDED76-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, Item=defaultNamedNotOptArg):
		'Add an item or collection to this collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((9, 1),),Item
			)

	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'Returns the object of a given index in the Objects list.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', None)
		return ret

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move all items by the specified offset.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Rotate(self, dRotation=defaultNamedNotOptArg, eAngleUnit=0):
		'Rotates all items by the specified angle.'
		return self._oleobj_.InvokeTypes(36, LCID, 1, (24, 0), ((5, 1), (3, 49)),dRotation
			, eAngleUnit)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((32, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'Returns the object of a given index in the Objects list.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', None)
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBObstruct(DispatchBaseClass):
	'MGCPCB Obstruct Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}')
	coclass_clsid = IID('{EDEDED25-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def DeleteSegmentID(self, id=defaultNamedNotOptArg):
		'Removes a segment id. (Beta)'
		return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((3, 1),),id
			)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the graphics's X position."
		return self._oleobj_.InvokeTypes(53, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the graphics's Y position."
		return self._oleobj_.InvokeTypes(54, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def PutSegmentID(self, id=defaultNamedNotOptArg):
		'Adds a segment id. (Beta)'
		return self._oleobj_.InvokeTypes(42, LCID, 1, (24, 0), ((3, 1),),id
			)

	_prop_map_get_ = {
		# Method 'AllowedNet' returns object of type 'IMGCPCBNet'
		"AllowedNet": (57, 2, (9, 0), (), "AllowedNet", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (48, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (52, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (55, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"ObstructType": (41, 2, (3, 0), (), "ObstructType", None),
		"OriginalLayer": (49, 2, (3, 0), (), "OriginalLayer", None),
		"OutgassingVoid": (56, 2, (11, 0), (), "OutgassingVoid", None),
		"Parent": (46, 2, (9, 0), (), "Parent", None),
		# Method 'Pin' returns object of type 'IMGCPCBPin'
		"Pin": (45, 2, (9, 0), (), "Pin", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}'),
		"PositionX": (53, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (54, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (50, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (51, 2, (8, 0), (), "ReservedBy", None),
		"SegmentIDs": (43, 2, (12, 0), (), "SegmentIDs", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (47, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"AllowedNet": ((57, LCID, 4, 0),()),
		"DisplayCondition": ((48, LCID, 4, 0),()),
		"FixLock": ((52, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"OriginalLayer": ((49, LCID, 4, 0),()),
		"OutgassingVoid": ((56, LCID, 4, 0),()),
		"Pin": ((45, LCID, 8, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	AllowedNet: str # read/write
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	ObstructType: str # read_only
	OriginalLayer: str # read/write
	OutgassingVoid: str # read/write
	Parent: str # read_only
	Pin: str # read/write
	PositionX: str # read_only
	PositionY: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	SegmentIDs: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBObstructs(DispatchBaseClass):
	'MGCPCB Obstruct Collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')
	coclass_clsid = IID('{EDEDED26-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pObstruct=defaultNamedNotOptArg):
		'Adds a obstruct to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pObstruct
			)

	def Delete(self):
		'Delete all obstructs in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBObstruct
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the obstruct of a given index in the obstruct collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort obstructs in this collection by type.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the obstruct of a given index in the obstruct collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBOutgassingVoidsSettings(DispatchBaseClass):
	'MGCPCB OutgassingVoidsSettings Object.'
	CLSID = IID('{B23A65B4-1FAE-4B6C-B55D-DF78F9D3735A}')
	coclass_clsid = IID('{4E25E2A6-FB18-45C0-97C2-87AC496094CA}')

	def DeleteOutgassingVoidsBeforeGeneration(self, Enabled=True):
		'Sets the checkbox to delete outgassing voids before generation.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((11, 49),),Enabled
			)

	def GenerateOutgassing(self):
		'Generates outgassing voids.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	def ModifyLayerOutgassingVoidsScheme(self, pLayer=defaultNamedNotOptArg, ogvScheme=defaultNamedNotOptArg, Enabled=True):
		'Sets the outgassing void scheme on a given layer.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((3, 1), (8, 1), (11, 49)),pLayer
			, ogvScheme, Enabled)

	def ModifyLayerRuleAreaOutgassingVoidsScheme(self, pLayer=defaultNamedNotOptArg, ogvScheme=defaultNamedNotOptArg, ruleAreaSchemeName='', Enabled=True):
		'Sets the outgassing void scheme for the given rule area on the given layer.'
		return self._ApplyTypes_(6, 1, (24, 32), ((3, 1), (8, 1), (8, 49), (11, 49)), 'ModifyLayerRuleAreaOutgassingVoidsScheme', None,pLayer
			, ogvScheme, ruleAreaSchemeName, Enabled)

	def SetupOutgassing(self):
		'Saves files necessary to run outgassing voids.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), (),)

	def UnsetAllOutgassingVoids(self):
		'Unset outgassing voids on all layers and rule areas.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"MaintainOutgassingVoidsProperty": (7, 2, (11, 0), (), "MaintainOutgassingVoidsProperty", None),
	}
	_prop_map_put_ = {
		"MaintainOutgassingVoidsProperty": ((7, LCID, 4, 0),()),
	}

	MaintainOutgassingVoidsProperty: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPad(DispatchBaseClass):
	'MGCPCB Pad Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')
	coclass_clsid = IID('{EDEDED18-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def AddGeometry(self, PointsArray=defaultNamedNotOptArg, RemoveExisting=True, Unit=0):
		"Adds a geometry to the pad's geometry collection with the option of clearing the existing geometries.(Beta)"
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((16396, 1), (11, 49), (3, 49)),PointsArray
			, RemoveExisting, Unit)

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation for this negative pad.  If this is not a negative pad 0 is returned.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsNegative(self):
		'Returns true if this is a negative pad.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	def IsNoConnect(self):
		'Returns true if this is a No connect pad.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometries' returns object of type 'IMGCPCBGeometries'
		"Geometries": (4, 2, (9, 0), (), "Geometries", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}'),
		"Layer": (1, 2, (3, 0), (), "Layer", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Orientation": (3, 2, (5, 0), ((3, 49),), "Orientation", None),
		"ShapeType": (6, 2, (3, 0), (), "ShapeType", None),
	}
	_prop_map_put_ = {
	}

	Extrema: str # IMGCPCBExtrema; read_only
	Geometries: str # IMGCPCBGeometries; read_only
	Layer: str # read_only
	Name: str # read_only
	Orientation: str # read_only
	ShapeType: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPads(DispatchBaseClass):
	'MGCPCB pad collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
	coclass_clsid = IID('{EDEDED19-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pPad=defaultNamedNotOptArg):
		'Adds a pad to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPad
			)

	# Result is of type IMGCPCBPad
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the pad of a given index in the pad collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort pads in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the pad of a given index in the pad collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPadstack(DispatchBaseClass):
	'MGCPCB Padstack Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')
	coclass_clsid = IID('{EDEDED11-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# Result is of type IMGCPCBPadstack
	def Clone(self, bMirror=False):
		'Clone the padstack and optionally mirror it.'
		ret = self._oleobj_.InvokeTypes(11, LCID, 1, (9, 0), ((11, 49),),bMirror
			)
		if ret is not None:
			ret = Dispatch(ret, 'Clone', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')
		return ret

	# The method ConnectedNCPad is actually a property, but must be used as a method to correctly pass the arguments
	def ConnectedNCPad(self, nLayer=defaultNamedNotOptArg):
		'Returns the connected pad name for this padstack on the layer specified.  This is specific to padstacks with NC Pad overrides defined.  Returns Null if no NC Pad override specified for this padstack.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(21, LCID, 2, (8, 0), ((3, 1),),nLayer
			)

	def DeletePad(self, pLayerObject=defaultNamedNotOptArg):
		'Remove a pad from the padstack.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((9, 1),),pLayerObject
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0):
		'Get the collection of copper pads in this padstack on the specified layer (0=all layers).'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# Result is of type IMGCPCBUserPads
	# The method GetUserPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserPads(self, sLayerOnly='*'):
		'Returns the collection of user pads.'
		return self._ApplyTypes_(16, 2, (9, 32), ((8, 49),), 'GetUserPads', '{ACC37237-2F98-403B-8783-C21D7026F5B4}',sLayerOnly
			)

	def IsEqual(self, pPadstack=defaultNamedNotOptArg):
		'Determine if this is the same padstack.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((9, 1),),pPadstack
			)

	def IsModified(self):
		'Has this padstack been modified from the definition in the Padstack database?'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), (),)

	def IsSkipVia(self):
		'Returns true if skip via is set.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	# The method NoConnectPad is actually a property, but must be used as a method to correctly pass the arguments
	def NoConnectPad(self, nLayer=defaultNamedNotOptArg):
		'Returns the no connect pad name for this padstack on the layer specified.  Returns Null if not an NC pad or no pad specified for NCpad.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(18, LCID, 2, (8, 0), ((3, 1),),nLayer
			)

	def PutPad(self, sPadName=defaultNamedNotOptArg, pLayerObject=defaultNamedNotOptArg, bFromCentralLibrary=False):
		'Add a pad to the padstack.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((8, 1), (9, 1), (11, 49)),sPadName
			, pLayerObject, bFromCentralLibrary)

	_prop_map_get_ = {
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (5, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"HoleRangeFromLayer": (19, 2, (3, 0), (), "HoleRangeFromLayer", None),
		"HoleRangeToLayer": (20, 2, (3, 0), (), "HoleRangeToLayer", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (3, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		"MirrorType": (2, 2, (3, 0), (), "MirrorType", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (4, 2, (9, 0), ((3, 49),), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"PinClass": (17, 2, (3, 0), (), "PinClass", None),
		# Method 'Pins' returns object of type 'IMGCPCBPins'
		"Pins": (6, 2, (9, 0), (), "Pins", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}'),
		"Type": (10, 2, (3, 0), (), "Type", None),
		# Method 'UserPads' returns object of type 'IMGCPCBUserPads'
		"UserPads": (16, 2, (9, 32), ((8, 49),), "UserPads", '{ACC37237-2F98-403B-8783-C21D7026F5B4}'),
		# Method 'Vias' returns object of type 'IMGCPCBVias'
		"Vias": (7, 2, (9, 0), (), "Vias", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}'),
	}
	_prop_map_put_ = {
		"PinClass": ((17, LCID, 4, 0),()),
	}

	FabricationPads: str # IMGCPCBFabricationPads; read_only
	HoleRangeFromLayer: str # read_only
	HoleRangeToLayer: str # read_only
	Holes: str # IMGCPCBHoles; read_only
	MirrorType: str # read_only
	Name: str # read_only
	Pads: str # IMGCPCBPads; read_only
	PinClass: str # read/write
	Pins: str # IMGCPCBPins; read_only
	Type: str # read_only
	UserPads: str # IMGCPCBUserPads; read_only
	Vias: str # IMGCPCBVias; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPadstackObject(DispatchBaseClass):
	'MGCPCB Padstack Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}')
	coclass_clsid = IID('{EDEDED6C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Selected: bool # read/write
	Type: str # read_only
	_Handle: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPadstackObjects(DispatchBaseClass):
	'MGCPCB PadstackObject collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')
	coclass_clsid = IID('{EDEDED6D-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pPadstackObject=defaultNamedNotOptArg):
		'Adds a padstack object to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPadstackObject
			)

	def Delete(self):
		'Delete all padstack objects in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBPadstackObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the pin of a given index in the padstack object collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort padstack objects in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"CurrentPadstack": ((35, LCID, 4, 0),()),
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	CurrentPadstack: str # write_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the pin of a given index in the padstack object collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPadstacks(DispatchBaseClass):
	'MGCPCB padstack collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}')
	coclass_clsid = IID('{EDEDED17-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pPadstack=defaultNamedNotOptArg):
		'Adds a padstack to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPadstack
			)

	# Result is of type IMGCPCBPadstack
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the padstack of a given index in the padstack collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort padstacks in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the padstack of a given index in the padstack collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPanel(DispatchBaseClass):
	'MGCPCB Panel Object.'
	CLSID = IID('{6B941F88-756B-4734-B3B2-EAB2861ECB7C}')
	coclass_clsid = IID('{999DCEAB-25BD-4D69-90A6-7BD6D7E8FCBA}')

	def Delete(self):
		'Unplace this Panel from the drawing. The Panel is still available for subsequent placement.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), (),)

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		"Sets or returns the Panel's orientation."
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def GetOriginX(self, eUnit=0):
		"Returns the Panel's X origin."
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def GetOriginY(self, eUnit=0):
		"Returns the Panel's Y origin."
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid Panel.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Move(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Moves the Panel to given location.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def ReReferenceDesign(self, variantNewSrcDesignPath=defaultNamedNotOptArg, regenerateVariantData=False, replaceExistingDesigns=False):
		'Re-reference the source design for this panel.'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((8, 1), (11, 49), (11, 49)),variantNewSrcDesignPath
			, regenerateVariantData, replaceExistingDesigns)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		"Sets or returns the Panel's orientation."
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def TransformPointX(self, dBrdX=defaultNamedNotOptArg, dBrdY=defaultNamedNotOptArg, eUnit=0):
		'Returns x-coordinate on sheet for given Panel coordinates.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (5, 0), ((5, 1), (5, 1), (3, 49)),dBrdX
			, dBrdY, eUnit)

	def TransformPointY(self, dBrdX=defaultNamedNotOptArg, dBrdY=defaultNamedNotOptArg, eUnit=0):
		'Returns y-coordinate on sheet for given Panel coordinates.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (5, 0), ((5, 1), (5, 1), (3, 49)),dBrdX
			, dBrdY, eUnit)

	def TransformPointsArray(self, nPnts=defaultNamedNotOptArg, pBrdSafeArrayOfPnts=defaultNamedNotOptArg, eUnit=0):
		'Returns points array in sheet coordinates for given points array in Panel coordinates.'
		return self._ApplyTypes_(14, 1, (12, 0), ((3, 1), (16396, 1), (3, 49)), 'TransformPointsArray', None,nPnts
			, pBrdSafeArrayOfPnts, eUnit)

	_prop_map_get_ = {
		"Anchor": (7, 2, (3, 0), (), "Anchor", None),
		"DimensionPanelWithInstanceOrigin": (18, 2, (11, 0), (), "DimensionPanelWithInstanceOrigin", None),
		# Method 'DisplayControl' returns object of type 'IMGCPCBDisplayControl'
		"DisplayControl": (16, 2, (9, 0), (), "DisplayControl", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (19, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (24, 2, (3, 0), (), "FixLock", None),
		"FullName": (6, 2, (8, 0), (), "FullName", None),
		"Highlighted": (10, 2, (11, 0), (), "Highlighted", None),
		"InstanceName": (0, 2, (8, 0), (), "InstanceName", None),
		"LocalName": (15, 2, (8, 0), (), "LocalName", None),
		"Mirrored": (4, 2, (11, 0), (), "Mirrored", None),
		"ObjectClass": (23, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (3, 2, (5, 0), ((3, 49),), "Orientation", None),
		"OriginX": (1, 2, (5, 0), ((3, 49),), "OriginX", None),
		"OriginY": (2, 2, (5, 0), ((3, 49),), "OriginY", None),
		"Parent": (25, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (20, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"RelativePath": (26, 2, (8, 0), (), "RelativePath", None),
		"Scale": (17, 2, (5, 0), (), "Scale", None),
		"Selected": (5, 2, (11, 0), (), "Selected", None),
		"UniqueId": (21, 2, (12, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
		"Anchor": ((7, LCID, 4, 0),()),
		"DimensionPanelWithInstanceOrigin": ((18, LCID, 4, 0),()),
		"FixLock": ((24, LCID, 4, 0),()),
		"Highlighted": ((10, LCID, 4, 0),()),
		"Mirrored": ((4, LCID, 4, 0),()),
		"Orientation": ((3, LCID, 4, 0),()),
		"Scale": ((17, LCID, 4, 0),()),
		"Selected": ((5, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	DimensionPanelWithInstanceOrigin: str # read/write
	DisplayControl: str # IMGCPCBDisplayControl; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	FullName: str # read_only
	Highlighted: bool # read/write
	InstanceName: str # read_only
	LocalName: str # read_only
	Mirrored: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginX: str # read_only
	OriginY: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	RelativePath: str # read_only
	Scale: str # read/write
	Selected: bool # read/write
	UniqueId: str # read_only

	# Default property for this class is 'InstanceName'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "InstanceName", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPanelBorder(DispatchBaseClass):
	'MGCPCB Panel Border Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED84}')
	coclass_clsid = IID('{EDEDED84-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (43, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((43, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPanelOutline(DispatchBaseClass):
	'MGCPCB Panel Outline Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED83}')
	coclass_clsid = IID('{EDEDED83-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (43, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((43, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPanels(DispatchBaseClass):
	'MGCPCB Panel collection.'
	CLSID = IID('{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')
	coclass_clsid = IID('{E0831839-85FA-4BC5-A67D-AB4D5457BA87}')

	def Add(self, pBoard=defaultNamedNotOptArg):
		'Adds a board to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pBoard
			)

	def Delete(self):
		'Delete all panels in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBPanel
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the panel of a given index in the boards collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{6B941F88-756B-4734-B3B2-EAB2861ECB7C}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort panels in this collection by location.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the panel of a given index in the boards collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{6B941F88-756B-4734-B3B2-EAB2861ECB7C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{6B941F88-756B-4734-B3B2-EAB2861ECB7C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPart(DispatchBaseClass):
	'MGCPCB Part Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}')
	coclass_clsid = IID('{EDEDED14-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# The method GetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetHeight(self, eUnit=0):
		'Get the height of the part.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetUndersideHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetUndersideHeight(self, eUnit=0):
		'Get the height available underneath the part.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Cells": (8, 2, (12, 0), (), "Cells", None),
		# Method 'Components' returns object of type 'IMGCPCBComponents'
		"Components": (1, 2, (9, 0), (), "Components", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		"Height": (2, 2, (5, 0), ((3, 49),), "Height", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"PartName": (7, 2, (8, 0), (), "PartName", None),
		"UndersideHeight": (3, 2, (5, 0), ((3, 49),), "UndersideHeight", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((6, LCID, 4, 0),()),
		"Selected": ((5, LCID, 4, 0),()),
	}

	Cells: str # read_only
	Components: str # IMGCPCBComponents; read_only
	Height: str # read_only
	Name: str # read_only
	PartName: str # read_only
	UndersideHeight: str # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBParts(DispatchBaseClass):
	'MGCPCB part collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED20}')
	coclass_clsid = IID('{EDEDED13-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pPart=defaultNamedNotOptArg):
		'Adds a part to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPart
			)

	# Result is of type IMGCPCBPart
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the part of a given index in the part collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort parts in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the part of a given index in the part collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPhysicalReuseLibraryCircuit(DispatchBaseClass):
	'MGCPCB Physical Reuse Library Circuit class.'
	CLSID = IID('{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}')
	coclass_clsid = IID('{6CC07E43-9B26-46B8-B778-832911602B4B}')

	def Place(self):
		'Place physical reuse circuit.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), (),)

	def PlaceAtLocation(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dAngle=0.0, bMirror=False
			, eUnit=0, eAngleUnit=0):
		'Place physical reuse circuit at the given location.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 49), (11, 49), (3, 49), (3, 49)),dX
			, dY, dAngle, bMirror, eUnit, eAngleUnit
			)

	def PlaceAtLocationEx(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dAngle=0.0, bMirror=False
			, bMirrorHor=False, eUnit=0, eAngleUnit=0):
		'Place physical reuse circuit mirrored horizontally at the given location.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 49), (11, 49), (11, 49), (3, 49), (3, 49)),dX
			, dY, dAngle, bMirror, bMirrorHor, eUnit
			, eAngleUnit)

	def PlaceAtLocationWithMapping(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, dAngle=0.0, bMirror=False
			, bMirrorHor=False, layerMap='', netMap='', eUnit=0, eAngleUnit=0):
		'Place physical reuse circuit at the given location with given layer and net mapping.'
		return self._ApplyTypes_(6, 1, (24, 32), ((5, 1), (5, 1), (5, 49), (11, 49), (11, 49), (8, 49), (8, 49), (3, 49), (3, 49)), 'PlaceAtLocationWithMapping', None,dX
			, dY, dAngle, bMirror, bMirrorHor, layerMap
			, netMap, eUnit, eAngleUnit)

	def Remove(self):
		'Remove physical reuse circuit from the library.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Name": (0, 2, (8, 0), (), "Name", None),
		"TimeStamp": (1, 2, (8, 0), (), "TimeStamp", None),
	}
	_prop_map_put_ = {
	}

	Name: str # read_only
	TimeStamp: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPhysicalReuseLibraryCircuits(DispatchBaseClass):
	'MGCPCB physical reuse library circuits collection.'
	CLSID = IID('{4E0A6DAF-4C0D-415C-B43D-A6A1ED666FE6}')
	coclass_clsid = IID('{B05D0EE8-3B79-460F-982D-E15CF70AC323}')

	def Add(self, pPhysicalReuseLibraryCircuit=defaultNamedNotOptArg):
		'Adds a physical reuse library circuit to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPhysicalReuseLibraryCircuit
			)

	# Result is of type IMGCPCBPhysicalReuseLibraryCircuit
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the physical reuse library circuit of a given index in the physical reuse library circuit collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort physical reuse library circuits in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the physical reuse library circuit of a given index in the physical reuse library circuit collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPin(DispatchBaseClass):
	'MGCPCB Pin Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')
	coclass_clsid = IID('{EDEDED0C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def AddShortedNets(self, nLayer=defaultNamedNotOptArg, shortedNets=defaultNamedNotOptArg):
		'Add shorted nets to a given layer.'
		return self._oleobj_.InvokeTypes(83, LCID, 1, (24, 0), ((3, 1), (12, 1)),nLayer
			, shortedNets)

	def BreakBack(self):
		'Break all connected traces away from the pin.'
		return self._oleobj_.InvokeTypes(79, LCID, 1, (24, 0), (),)

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	def DeleteSegmentID(self, id=defaultNamedNotOptArg):
		'Removes the specified segment id. (Beta)'
		return self._oleobj_.InvokeTypes(51, LCID, 1, (24, 0), ((3, 1),),id
			)

	def Destroy(self):
		'Removes the pin from the cel.'
		return self._oleobj_.InvokeTypes(63, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBBreakoutDefaults
	# The method GetBreakoutDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetBreakoutDefaults(self, nLayer=0):
		"Returns this pin's breakout defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(40, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBreakoutDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')
		return ret

	# Result is of type IMGCPCBConductorLayerTexts
	# The method GetConductorLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerTexts(self, eSelectOnly=0, nLayerOnly=0):
		"Returns the pin's collection of conductor layer texts that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(70, LCID, 2, (9, 0), ((3, 49), (3, 49)),eSelectOnly
			, nLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')
		return ret

	# Result is of type IMGCPCBFabricationLayerTexts
	# The method GetFabricationLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerTexts(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0):
		"Returns the pin's collection of fabrication texts that match the supplied criteria."
		ret = self._oleobj_.InvokeTypes(68, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, eLayerOnly)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def GetShortedNets(self, nLayer=defaultNamedNotOptArg):
		'Returns an array of shorted nets on a given layer.'
		return self._ApplyTypes_(85, 1, (12, 0), ((3, 1),), 'GetShortedNets', None,nLayer
			)

	# Result is of type IMGCPCBTeardropDefaults
	# The method GetTeardropDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetTeardropDefaults(self, nLayer=0):
		"Returns this pin's teardrop defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(41, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetTeardropDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')
		return ret

	# Result is of type IMGCPCBUserLayerTexts
	# The method GetUserLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerTexts(self, eSelectOnly=0, sLayerOnly='*'):
		"Returns the pin's collection of user layer texts that match the supplied criteria."
		return self._ApplyTypes_(72, 2, (9, 32), ((3, 49), (8, 49)), 'GetUserLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}',eSelectOnly
			, sLayerOnly)

	# Result is of type IMGCPCBUserPads
	# The method GetUserPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserPads(self, sLayerOnly='*'):
		'Returns the collection of user pads.'
		return self._ApplyTypes_(53, 2, (9, 32), ((8, 49),), 'GetUserPads', '{ACC37237-2F98-403B-8783-C21D7026F5B4}',sLayerOnly
			)

	# The method IsConnectedToPathOrAreaOnLayer is actually a property, but must be used as a method to correctly pass the arguments
	def IsConnectedToPathOrAreaOnLayer(self, nLayer=defaultNamedNotOptArg):
		'Returns true if this pin is connected to a path or area on the given layer.'
		return self._oleobj_.InvokeTypes(87, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	def IsDiePin(self):
		'Is pin a die pin?'
		return self._oleobj_.InvokeTypes(81, LCID, 1, (11, 0), (),)

	def IsNoConnect(self):
		'Is pin No Connect type.'
		return self._oleobj_.InvokeTypes(76, LCID, 1, (11, 0), (),)

	def IsNoRoute(self):
		'Is pin No Route type.'
		return self._oleobj_.InvokeTypes(77, LCID, 1, (11, 0), (),)

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsTopSidePin(self):
		'Returns true if this pin is a top side pin.'
		return self._oleobj_.InvokeTypes(89, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	def MoveSchematicShortToLayer(self, new_layer=defaultNamedNotOptArg):
		'Moves the schematic short of a pin to a different layer.'
		return self._oleobj_.InvokeTypes(90, LCID, 1, (24, 0), ((3, 1),),new_layer
			)

	# The method PadGrowError is actually a property, but must be used as a method to correctly pass the arguments
	def PadGrowError(self, nLayer=defaultNamedNotOptArg):
		'Returns true if the pin failed to grow a pad on the given layer.'
		return self._oleobj_.InvokeTypes(88, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	def Place(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, dOrientation=defaultNamedNotOptArg, eUnit=0
			, eAngleUnit=0):
		'Places the pin with all the specified attributes. If the pin is already placed it will move the pin to the new location.'
		return self._oleobj_.InvokeTypes(62, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (3, 49), (3, 49)),x
			, y, dOrientation, eUnit, eAngleUnit)

	# Result is of type IMGCPCBConductorLayerText
	def PutConductorLayerText(self, sString=defaultNamedNotOptArg, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg, eTextType=defaultNamedNotOptArg
			, Layer=defaultNamedNotOptArg, eUnit=0):
		'Puts text on this pin object.'
		ret = self._oleobj_.InvokeTypes(69, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 49)),sString
			, PositionX, PositionY, eTextType, Layer, eUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutConductorLayerText', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')
		return ret

	# Result is of type IMGCPCBFabricationLayerText
	def PutFabricationLayerText(self, sString=defaultNamedNotOptArg, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg, eTextType=defaultNamedNotOptArg
			, eType=defaultNamedNotOptArg, eSide=defaultNamedNotOptArg, eUnit=0):
		'Puts text on this pin object.'
		ret = self._oleobj_.InvokeTypes(67, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (3, 1), (3, 1), (3, 1), (3, 49)),sString
			, PositionX, PositionY, eTextType, eType, eSide
			, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'PutFabricationLayerText', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')
		return ret

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def PutSegmentID(self, id=defaultNamedNotOptArg):
		'Adds a segment id. (Beta)'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (24, 0), ((3, 1),),id
			)

	# Result is of type IMGCPCBComponent
	def PutTestPoint(self):
		'Place a testpoint on the pin in BoardStationRE'
		ret = self._oleobj_.InvokeTypes(47, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'PutTestPoint', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
		return ret

	# Result is of type IMGCPCBUserLayerText
	def PutUserLayerText(self, sString=defaultNamedNotOptArg, PositionX=defaultNamedNotOptArg, PositionY=defaultNamedNotOptArg, eTextType=defaultNamedNotOptArg
			, pUserlayer=defaultNamedNotOptArg, eUnit=0):
		'Puts text on this pin object.'
		ret = self._oleobj_.InvokeTypes(71, LCID, 1, (9, 0), ((8, 1), (5, 1), (5, 1), (3, 1), (9, 1), (3, 49)),sString
			, PositionX, PositionY, eTextType, pUserlayer, eUnit
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutUserLayerText', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')
		return ret

	def RemoveShortedNets(self, nLayer=defaultNamedNotOptArg, shortedNets=defaultNamedNotOptArg):
		'Remove shorted nets from a given layer.'
		return self._oleobj_.InvokeTypes(84, LCID, 1, (24, 0), ((3, 1), (12, 1)),nLayer
			, shortedNets)

	def SelectOnly(self):
		'Select only the pin and no netlines.'
		return self._oleobj_.InvokeTypes(78, LCID, 1, (24, 0), (),)

	def SetName(self, pName=defaultNamedNotOptArg):
		'Sets the name of this pin object.'
		return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((8, 1),),pName
			)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetTieLegClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegClearance(self, nLayer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Set or returns the required tie leg clearance.'
		return self._oleobj_.InvokeTypes(57, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),nLayer
			, eUnit, arg2)

	# The method SetTieLegRotation is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegRotation(self, nLayer=0, arg1=1):
		'Set or returns the tie leg rotation.'
		return self._oleobj_.InvokeTypes(55, LCID, 4, (24, 0), ((3, 49), (3, 49)),nLayer
			, arg1)

	# The method SetTieLegType is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegType(self, nLayer=0, arg1=0):
		'Set or returns the tie leg type.'
		return self._oleobj_.InvokeTypes(54, LCID, 4, (24, 0), ((3, 49), (3, 49)),nLayer
			, arg1)

	# The method SetTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegWidth(self, nLayer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Set or returns the required tie leg width.'
		return self._oleobj_.InvokeTypes(56, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),nLayer
			, eUnit, arg2)

	# The method SetUsePadstackThermalDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def SetUsePadstackThermalDefaults(self, nLayer=0, arg1=True):
		'Sets or returns the option of using the padstack thermal defaults for thermal ties.'
		return self._oleobj_.InvokeTypes(58, LCID, 4, (24, 0), ((3, 49), (11, 49)),nLayer
			, arg1)

	# The method TieLegClearance is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegClearance(self, nLayer=defaultNamedNotOptArg, eUnit=0):
		'Set or returns the required tie leg clearance.'
		return self._oleobj_.InvokeTypes(57, LCID, 2, (5, 0), ((3, 1), (3, 49)),nLayer
			, eUnit)

	# The method TieLegRotation is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegRotation(self, nLayer=defaultNamedNotOptArg):
		'Set or returns the tie leg rotation.'
		return self._oleobj_.InvokeTypes(55, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method TieLegType is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegType(self, nLayer=defaultNamedNotOptArg):
		'Set or returns the tie leg type.'
		return self._oleobj_.InvokeTypes(54, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method TieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegWidth(self, nLayer=defaultNamedNotOptArg, eUnit=0):
		'Set or returns the required tie leg width.'
		return self._oleobj_.InvokeTypes(56, LCID, 2, (5, 0), ((3, 1), (3, 49)),nLayer
			, eUnit)

	# The method UsePadstackThermalDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def UsePadstackThermalDefaults(self, nLayer=defaultNamedNotOptArg):
		'Sets or returns the option of using the padstack thermal defaults for thermal ties.'
		return self._oleobj_.InvokeTypes(58, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'BreakoutDefaults' returns object of type 'IMGCPCBBreakoutDefaults'
		"BreakoutDefaults": (40, 2, (9, 0), ((3, 49),), "BreakoutDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}'),
		# Method 'BreakoutTraces' returns object of type 'IMGCPCBBreakoutTraces'
		"BreakoutTraces": (43, 2, (9, 0), (), "BreakoutTraces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}'),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConductorLayerTexts' returns object of type 'IMGCPCBConductorLayerTexts'
		"ConductorLayerTexts": (70, 2, (9, 0), ((3, 49), (3, 49)), "ConductorLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (44, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		"ConnectionType": (75, 2, (3, 0), (), "ConnectionType", None),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationLayerTexts' returns object of type 'IMGCPCBFabricationLayerTexts'
		"FabricationLayerTexts": (68, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "FabricationLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"FixLock": (80, 2, (3, 0), (), "FixLock", None),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		"Layer": (48, 2, (3, 0), (), "Layer", None),
		"Level": (66, 2, (3, 0), (), "Level", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (86, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		# Method 'NetClass' returns object of type 'IMGCPCBNetClass'
		"NetClass": (61, 2, (9, 0), (), "NetClass", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parent": (52, 2, (9, 0), (), "Parent", None),
		"Placed": (59, 2, (11, 0), (), "Placed", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (73, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (74, 2, (8, 0), (), "ReservedBy", None),
		"SegmentIDs": (50, 2, (12, 0), (), "SegmentIDs", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (60, 2, (3, 0), (), "Side", None),
		"Subnet": (45, 2, (3, 0), (), "Subnet", None),
		# Method 'TeardropDefaults' returns object of type 'IMGCPCBTeardropDefaults'
		"TeardropDefaults": (41, 2, (9, 0), ((3, 49),), "TeardropDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}'),
		# Method 'Teardrops' returns object of type 'IMGCPCBTeardrops'
		"Teardrops": (42, 2, (9, 0), (), "Teardrops", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}'),
		# Method 'Tracedrops' returns object of type 'IMGCPCBTracedrops'
		"Tracedrops": (82, 2, (9, 0), (), "Tracedrops", '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}'),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"TypeChained": (46, 2, (3, 0), (), "TypeChained", None),
		"UniqueId": (64, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayerTexts' returns object of type 'IMGCPCBUserLayerTexts'
		"UserLayerTexts": (72, 2, (9, 32), ((3, 49), (8, 49)), "UserLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}'),
		# Method 'UserPads' returns object of type 'IMGCPCBUserPads'
		"UserPads": (53, 2, (9, 32), ((8, 49),), "UserPads", '{ACC37237-2F98-403B-8783-C21D7026F5B4}'),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"FixLock": ((80, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Layer": ((48, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"NetClass": ((61, LCID, 4, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"Side": ((60, LCID, 4, 0),()),
		"TieLegClearance": ((57, LCID, 4, 0),('0',)),
		"TieLegWidth": ((56, LCID, 4, 0),('0',)),
	}

	Anchor: str # read/write
	BreakoutDefaults: str # IMGCPCBBreakoutDefaults; read_only
	BreakoutTraces: str # IMGCPCBBreakoutTraces; read_only
	Component: str # IMGCPCBComponent; read_only
	ConductorLayerTexts: str # IMGCPCBConductorLayerTexts; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	ConnectionType: str # read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationLayerTexts: str # IMGCPCBFabricationLayerTexts; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	FixLock: str # read/write
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	Layer: str # read/write
	Level: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	NetClass: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	Parent: str # read_only
	Placed: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	SegmentIDs: str # read_only
	Selected: bool # read/write
	Side: str # read/write
	Subnet: str # read_only
	TeardropDefaults: str # IMGCPCBTeardropDefaults; read_only
	Teardrops: str # IMGCPCBTeardrops; read_only
	Tracedrops: str # IMGCPCBTracedrops; read_only
	Type: str # read_only
	TypeChained: str # read_only
	UniqueId: str # read_only
	UserLayerTexts: str # IMGCPCBUserLayerTexts; read_only
	UserPads: str # IMGCPCBUserPads; read_only
	_Handle: str # read_only
	TieLegClearance: str # write_only
	TieLegWidth: str # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPins(DispatchBaseClass):
	'MGCPCB pin collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')
	coclass_clsid = IID('{EDEDED0B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pPin=defaultNamedNotOptArg):
		'Adds a pin to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPin
			)

	# Result is of type IMGCPCBPin
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the pin of a given index in the pins collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort pins in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"CurrentPadstack": ((35, LCID, 4, 0),()),
		"Highlighted": ((33, LCID, 4, 0),()),
		"Net": ((34, LCID, 8, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	CurrentPadstack: str # write_only
	Highlighted: bool # write_only
	Net: str # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the pin of a given index in the pins collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPlacementObstruct(DispatchBaseClass):
	'MGCPCB Placement Keepout Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}')
	coclass_clsid = IID('{EDEDED38-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetHeight(self, eUnit=0):
		'Sets or returns the height of the placement obstruct'
		return self._oleobj_.InvokeTypes(41, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetHeight(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the height of the placement obstruct'
		return self._oleobj_.InvokeTypes(41, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (44, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (48, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Height": (41, 2, (5, 0), ((3, 49),), "Height", None),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (49, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (45, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (43, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (46, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (47, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (50, 2, (3, 0), (), "Side", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (42, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DisplayCondition": ((44, LCID, 4, 0),()),
		"FixLock": ((48, LCID, 4, 0),()),
		"Height": ((41, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"OriginalLayer": ((45, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Height: str # read/write
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Side: str # read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPlacementObstructs(DispatchBaseClass):
	'MGCPCB Placement Keepout collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}')
	coclass_clsid = IID('{EDEDED39-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pPlacementObstruct=defaultNamedNotOptArg):
		'Adds a placement obstruct to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPlacementObstruct
			)

	def Delete(self):
		'Delete all placement obstructs in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBPlacementObstruct
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the placement obstruct of a given index in the placement obstructs collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort placement obstructs in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the placement obstruct of a given index in the placement obstructs collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPlacementOutline(DispatchBaseClass):
	'MGCPCB Placement Outline Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}')
	coclass_clsid = IID('{EDEDED3E-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def GetHeight(self, eUnit=0):
		'Sets or returns the height of the placement outline'
		return self._oleobj_.InvokeTypes(40, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetUndersideSpace is actually a property, but must be used as a method to correctly pass the arguments
	def GetUndersideSpace(self, eUnit=0):
		'Sets or returns the underside space of the placement outline'
		return self._oleobj_.InvokeTypes(41, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetHeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetHeight(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the height of the placement outline'
		return self._oleobj_.InvokeTypes(40, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetUndersideSpace is actually a property, but must be used as a method to correctly pass the arguments
	def SetUndersideSpace(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the underside space of the placement outline'
		return self._oleobj_.InvokeTypes(41, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (43, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (48, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Height": (40, 2, (5, 0), ((3, 49),), "Height", None),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (49, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (44, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (47, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (45, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (46, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (50, 2, (3, 0), (), "Side", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UndersideSpace": (41, 2, (5, 0), ((3, 49),), "UndersideSpace", None),
		"UniqueId": (42, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DisplayCondition": ((43, LCID, 4, 0),()),
		"FixLock": ((48, LCID, 4, 0),()),
		"Height": ((40, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"OriginalLayer": ((44, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"UndersideSpace": ((41, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Height: str # read/write
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Side: str # read_only
	Type: str # read_only
	Type2: str # read_only
	UndersideSpace: str # read/write
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPlacementOutlines(DispatchBaseClass):
	'MGCPCB Placement Outline collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}')
	coclass_clsid = IID('{EDEDED3F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pPlacementOutline=defaultNamedNotOptArg):
		'Adds a placement outline to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPlacementOutline
			)

	# Result is of type IMGCPCBPlacementOutline
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the placement outline of a given index in the placement outlines collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort placement outlines in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the placement outline of a given index in the placement outlines collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPlaneAssignment(DispatchBaseClass):
	'MGCPCB Plane Assignment Object.'
	CLSID = IID('{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}')
	coclass_clsid = IID('{A2316731-42FD-4B3A-9006-F76599AD13A0}')

	_prop_map_get_ = {
		"InheritedPlaneClass": (4, 2, (11, 0), (), "InheritedPlaneClass", None),
		"InheritedPlaneDataState": (6, 2, (11, 0), (), "InheritedPlaneDataState", None),
		# Method 'LayerObject' returns object of type 'IMGCPCBLayerObject'
		"LayerObject": (1, 2, (9, 0), (), "LayerObject", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}'),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (2, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		# Method 'PlaneClass' returns object of type 'IMGCPCBPlaneClass'
		"PlaneClass": (3, 2, (9, 0), (), "PlaneClass", '{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}'),
		"PlaneDataState": (5, 2, (3, 0), (), "PlaneDataState", None),
		"UseRouteBorderAsPlaneShape": (7, 2, (11, 0), (), "UseRouteBorderAsPlaneShape", None),
	}
	_prop_map_put_ = {
		"PlaneDataState": ((5, LCID, 4, 0),()),
	}

	InheritedPlaneClass: str # read_only
	InheritedPlaneDataState: str # read_only
	LayerObject: str # IMGCPCBLayerObject; read_only
	Net: str # IMGCPCBNet; read_only
	PlaneClass: str # IMGCPCBPlaneClass; read_only
	PlaneDataState: str # read/write
	UseRouteBorderAsPlaneShape: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPlaneAssignments(DispatchBaseClass):
	'MGCPCB Plane Assignments collection.'
	CLSID = IID('{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}')
	coclass_clsid = IID('{B36B9D7C-B29E-409B-BA12-58FE415F6429}')

	def Add(self, pPlaneAssignment=defaultNamedNotOptArg):
		'Adds an Plane Assignment to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPlaneAssignment
			)

	# Result is of type IMGCPCBPlaneAssignment
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the Plane Assignment of a given index in the Plane Assignment collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort Plane Assignments in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the Plane Assignment of a given index in the Plane Assignment collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPlaneClass(DispatchBaseClass):
	'MGCPCB Plane Class Object.'
	CLSID = IID('{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')
	coclass_clsid = IID('{78CBB863-1042-4845-B8C4-843764CD8C10}')

	# The method GetDefaultContourMountingHoleClearance is actually a property, but must be used as a method to correctly pass the arguments
	def GetDefaultContourMountingHoleClearance(self, eUnit=0):
		'Sets or returns the default mounting hole/contour clearance.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDefaultOtherObjectMinimumClearance is actually a property, but must be used as a method to correctly pass the arguments
	def GetDefaultOtherObjectMinimumClearance(self, eUnit=0):
		'Sets or returns minimum default clearance for other objects.'
		return self._oleobj_.InvokeTypes(18, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDefaultSMDThermalClearance is actually a property, but must be used as a method to correctly pass the arguments
	def GetDefaultSMDThermalClearance(self, eUnit=0):
		'Sets or returns the default SMD thermal clearance.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDefaultSMDTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetDefaultSMDTieLegWidth(self, eUnit=0):
		'Sets or returns the defulat SMD tie leg width.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDefaultThroughHoleThermalClearance is actually a property, but must be used as a method to correctly pass the arguments
	def GetDefaultThroughHoleThermalClearance(self, eUnit=0):
		'Sets or returns the default through hole thermal clearance.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDefaultThroughHoleTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetDefaultThroughHoleTieLegWidth(self, eUnit=0):
		'Sets or returns the defulat through hole tie leg width.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDefaultViaThermalClearance is actually a property, but must be used as a method to correctly pass the arguments
	def GetDefaultViaThermalClearance(self, eUnit=0):
		'Sets or returns the default via thermal clearance.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDefaultViaTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetDefaultViaTieLegWidth(self, eUnit=0):
		'Sets or returns the defulat via tie leg width.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDiscardAreaLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetDiscardAreaLength(self, eUnit=0):
		'Sets or returns discard area length.'
		return self._oleobj_.InvokeTypes(22, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDiscardAreaWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetDiscardAreaWidth(self, eUnit=0):
		'Sets or returns discard area width.'
		return self._oleobj_.InvokeTypes(23, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetHatchAngle is actually a property, but must be used as a method to correctly pass the arguments
	def GetHatchAngle(self, eUnit=0):
		'Sets or returns the hatch angle.'
		return self._oleobj_.InvokeTypes(33, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetHatchDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetHatchDistance(self, eUnit=0):
		'Sets or returns the hatch distance.'
		return self._oleobj_.InvokeTypes(25, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetHatchWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetHatchWidth(self, eUnit=0):
		'Sets or returns the plane classes hatch width.'
		return self._oleobj_.InvokeTypes(24, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method SetDefaultContourMountingHoleClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetDefaultContourMountingHoleClearance(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the default mounting hole/contour clearance.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDefaultOtherObjectMinimumClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetDefaultOtherObjectMinimumClearance(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns minimum default clearance for other objects.'
		return self._oleobj_.InvokeTypes(18, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDefaultSMDThermalClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetDefaultSMDThermalClearance(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the default SMD thermal clearance.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDefaultSMDTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetDefaultSMDTieLegWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the defulat SMD tie leg width.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDefaultThroughHoleThermalClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetDefaultThroughHoleThermalClearance(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the default through hole thermal clearance.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDefaultThroughHoleTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetDefaultThroughHoleTieLegWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the defulat through hole tie leg width.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDefaultViaThermalClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetDefaultViaThermalClearance(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the default via thermal clearance.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDefaultViaTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetDefaultViaTieLegWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the defulat via tie leg width.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDiscardAreaLength is actually a property, but must be used as a method to correctly pass the arguments
	def SetDiscardAreaLength(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns discard area length.'
		return self._oleobj_.InvokeTypes(22, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDiscardAreaWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetDiscardAreaWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns discard area width.'
		return self._oleobj_.InvokeTypes(23, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetHatchAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetHatchAngle(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the hatch angle.'
		return self._oleobj_.InvokeTypes(33, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetHatchDistance is actually a property, but must be used as a method to correctly pass the arguments
	def SetHatchDistance(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the hatch distance.'
		return self._oleobj_.InvokeTypes(25, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetHatchWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetHatchWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets or returns the plane classes hatch width.'
		return self._oleobj_.InvokeTypes(24, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"ClearPadIfOriginOutsideShape": (32, 2, (11, 0), (), "ClearPadIfOriginOutsideShape", None),
		"DefaultContourMountingHoleClearance": (17, 2, (5, 0), ((3, 49),), "DefaultContourMountingHoleClearance", None),
		"DefaultOtherObjectMinimumClearance": (18, 2, (5, 0), ((3, 49),), "DefaultOtherObjectMinimumClearance", None),
		"DefaultSMDThermalClearance": (14, 2, (5, 0), ((3, 49),), "DefaultSMDThermalClearance", None),
		"DefaultSMDTieLegRotation": (16, 2, (3, 0), (), "DefaultSMDTieLegRotation", None),
		"DefaultSMDTieLegType": (15, 2, (3, 0), (), "DefaultSMDTieLegType", None),
		"DefaultSMDTieLegWidth": (13, 2, (5, 0), ((3, 49),), "DefaultSMDTieLegWidth", None),
		"DefaultThroughHoleThermalClearance": (10, 2, (5, 0), ((3, 49),), "DefaultThroughHoleThermalClearance", None),
		"DefaultThroughHoleTieLegRotation": (12, 2, (3, 0), (), "DefaultThroughHoleTieLegRotation", None),
		"DefaultThroughHoleTieLegType": (11, 2, (3, 0), (), "DefaultThroughHoleTieLegType", None),
		"DefaultThroughHoleTieLegWidth": (9, 2, (5, 0), ((3, 49),), "DefaultThroughHoleTieLegWidth", None),
		"DefaultViaThermalClearance": (6, 2, (5, 0), ((3, 49),), "DefaultViaThermalClearance", None),
		"DefaultViaTieLegRotation": (8, 2, (3, 0), (), "DefaultViaTieLegRotation", None),
		"DefaultViaTieLegType": (7, 2, (3, 0), (), "DefaultViaTieLegType", None),
		"DefaultViaTieLegWidth": (5, 2, (5, 0), ((3, 49),), "DefaultViaTieLegWidth", None),
		"DiscardAllUntiedAreas": (19, 2, (11, 0), (), "DiscardAllUntiedAreas", None),
		"DiscardAreaLength": (22, 2, (5, 0), ((3, 49),), "DiscardAreaLength", None),
		"DiscardAreaWidth": (23, 2, (5, 0), ((3, 49),), "DiscardAreaWidth", None),
		"DiscardAreasLessThanDefinedArea": (21, 2, (11, 0), (), "DiscardAreasLessThanDefinedArea", None),
		"DiscardAreasTiedToSinglePad": (20, 2, (11, 0), (), "DiscardAreasTiedToSinglePad", None),
		"EnableTieBridging": (4, 2, (11, 0), (), "EnableTieBridging", None),
		"FillNonSquareHatchAreas": (27, 2, (11, 0), (), "FillNonSquareHatchAreas", None),
		"HasOverrides": (30, 2, (11, 0), (), "HasOverrides", None),
		"HatchAngle": (33, 2, (5, 0), ((3, 49),), "HatchAngle", None),
		"HatchDistance": (25, 2, (5, 0), ((3, 49),), "HatchDistance", None),
		"HatchPattern": (26, 2, (3, 0), (), "HatchPattern", None),
		"HatchWidth": (24, 2, (5, 0), ((3, 49),), "HatchWidth", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Parent": (2, 2, (9, 0), (), "Parent", None),
		"RemoveScallops": (31, 2, (11, 0), (), "RemoveScallops", None),
		"RestrictPlaneToOrthogonalPatterns": (28, 2, (11, 0), (), "RestrictPlaneToOrthogonalPatterns", None),
		"SnapToHatchGrid": (29, 2, (11, 0), (), "SnapToHatchGrid", None),
		"UsePadstackThermalDefinition": (3, 2, (11, 0), (), "UsePadstackThermalDefinition", None),
	}
	_prop_map_put_ = {
		"ClearPadIfOriginOutsideShape": ((32, LCID, 4, 0),()),
		"DefaultContourMountingHoleClearance": ((17, LCID, 4, 0),()),
		"DefaultOtherObjectMinimumClearance": ((18, LCID, 4, 0),()),
		"DefaultSMDThermalClearance": ((14, LCID, 4, 0),()),
		"DefaultSMDTieLegRotation": ((16, LCID, 4, 0),()),
		"DefaultSMDTieLegType": ((15, LCID, 4, 0),()),
		"DefaultSMDTieLegWidth": ((13, LCID, 4, 0),()),
		"DefaultThroughHoleThermalClearance": ((10, LCID, 4, 0),()),
		"DefaultThroughHoleTieLegRotation": ((12, LCID, 4, 0),()),
		"DefaultThroughHoleTieLegType": ((11, LCID, 4, 0),()),
		"DefaultThroughHoleTieLegWidth": ((9, LCID, 4, 0),()),
		"DefaultViaThermalClearance": ((6, LCID, 4, 0),()),
		"DefaultViaTieLegRotation": ((8, LCID, 4, 0),()),
		"DefaultViaTieLegType": ((7, LCID, 4, 0),()),
		"DefaultViaTieLegWidth": ((5, LCID, 4, 0),()),
		"DiscardAllUntiedAreas": ((19, LCID, 4, 0),()),
		"DiscardAreaLength": ((22, LCID, 4, 0),()),
		"DiscardAreaWidth": ((23, LCID, 4, 0),()),
		"DiscardAreasLessThanDefinedArea": ((21, LCID, 4, 0),()),
		"DiscardAreasTiedToSinglePad": ((20, LCID, 4, 0),()),
		"EnableTieBridging": ((4, LCID, 4, 0),()),
		"FillNonSquareHatchAreas": ((27, LCID, 4, 0),()),
		"HatchAngle": ((33, LCID, 4, 0),()),
		"HatchDistance": ((25, LCID, 4, 0),()),
		"HatchPattern": ((26, LCID, 4, 0),()),
		"HatchWidth": ((24, LCID, 4, 0),()),
		"RemoveScallops": ((31, LCID, 4, 0),()),
		"RestrictPlaneToOrthogonalPatterns": ((28, LCID, 4, 0),()),
		"SnapToHatchGrid": ((29, LCID, 4, 0),()),
		"UsePadstackThermalDefinition": ((3, LCID, 4, 0),()),
	}

	ClearPadIfOriginOutsideShape: str # read/write
	DefaultContourMountingHoleClearance: str # read/write
	DefaultOtherObjectMinimumClearance: str # read/write
	DefaultSMDThermalClearance: str # read/write
	DefaultSMDTieLegRotation: str # read/write
	DefaultSMDTieLegType: str # read/write
	DefaultSMDTieLegWidth: str # read/write
	DefaultThroughHoleThermalClearance: str # read/write
	DefaultThroughHoleTieLegRotation: str # read/write
	DefaultThroughHoleTieLegType: str # read/write
	DefaultThroughHoleTieLegWidth: str # read/write
	DefaultViaThermalClearance: str # read/write
	DefaultViaTieLegRotation: str # read/write
	DefaultViaTieLegType: str # read/write
	DefaultViaTieLegWidth: str # read/write
	DiscardAllUntiedAreas: str # read/write
	DiscardAreaLength: str # read/write
	DiscardAreaWidth: str # read/write
	DiscardAreasLessThanDefinedArea: str # read/write
	DiscardAreasTiedToSinglePad: str # read/write
	EnableTieBridging: str # read/write
	FillNonSquareHatchAreas: str # read/write
	HasOverrides: str # read_only
	HatchAngle: str # read/write
	HatchDistance: str # read/write
	HatchPattern: str # read/write
	HatchWidth: str # read/write
	Name: str # read_only
	Parent: str # read_only
	RemoveScallops: str # read/write
	RestrictPlaneToOrthogonalPatterns: str # read/write
	SnapToHatchGrid: str # read/write
	UsePadstackThermalDefinition: str # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPlaneClasses(DispatchBaseClass):
	'MGCPCB Plane Classes collection.'
	CLSID = IID('{A86800CB-BF55-4C68-ACD4-23E5E63A8F78}')
	coclass_clsid = IID('{C9584331-8E6C-4186-B77C-224A771F9FA9}')

	def Add(self, pPlaneClass=defaultNamedNotOptArg):
		'Adds an plane class to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPlaneClass
			)

	def Delete(self):
		'Delete all plane classes in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBPlaneClass
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the plane class of a given index in the plane class collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort plane classes in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the plane class of a given index in the plane class collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPlaneEditingSketch(DispatchBaseClass):
	'MGCPCB PlaneEditingSketch Object.'
	CLSID = IID('{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}')
	coclass_clsid = IID('{FAD5FFCC-73AF-468F-ACA9-5F0F48FE1978}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (45, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"MetalSide": (40, 2, (3, 0), (), "MetalSide", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (44, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (42, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (43, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (41, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((45, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"MetalSide": ((40, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MetalSide: str # read/write
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPlaneEditingSketches(DispatchBaseClass):
	'MGCPCB plane editing sketch collection.'
	CLSID = IID('{6C221751-C228-4D62-9393-F0E4A5169EFB}')
	coclass_clsid = IID('{47834540-ADA2-4C09-887C-8EFCF724F59C}')

	def Add(self, pPlaneEditingSketch=defaultNamedNotOptArg):
		'Adds a plane editing sketch to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPlaneEditingSketch
			)

	def Delete(self):
		'Delete all plane editing sketches in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBPlaneEditingSketch
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the plane editing sketch of a given index in the plane editing sketch collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort plane editing sketches in this collection by position and layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the plane editing sketch of a given index in the plane editing sketch collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPlaneShape(DispatchBaseClass):
	'MGCPCB PlaneShape Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')
	coclass_clsid = IID('{EDEDED3C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetHatchDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetHatchDistance(self, eUnit=0):
		'Returns the hatch pattern spacing of this plane shape. (Deprecated)'
		return self._oleobj_.InvokeTypes(44, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetHatchWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetHatchWidth(self, eUnit=0):
		'Returns the hatch pattern width of this plane shape. (Deprecated)'
		return self._oleobj_.InvokeTypes(43, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the graphics's X position."
		return self._oleobj_.InvokeTypes(64, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the graphics's Y position."
		return self._oleobj_.InvokeTypes(65, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetHatchDistance is actually a property, but must be used as a method to correctly pass the arguments
	def SetHatchDistance(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the hatch pattern spacing of this plane shape. (Deprecated)'
		return self._oleobj_.InvokeTypes(44, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetHatchWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetHatchWidth(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the hatch pattern width of this plane shape. (Deprecated)'
		return self._oleobj_.InvokeTypes(43, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		# Method 'ActualPlaneShapes' returns object of type 'IMGCPCBActualPlaneShapes'
		"ActualPlaneShapes": (48, 2, (9, 0), (), "ActualPlaneShapes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}'),
		"AllowOutGassingVoids": (67, 2, (11, 0), (), "AllowOutGassingVoids", None),
		"Anchor": (47, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (45, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (57, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (63, 2, (3, 0), (), "FixLock", None),
		# Method 'GeneratedPlaneOutlines' returns object of type 'IMGCPCBGeneratedPlanes'
		"GeneratedPlaneOutlines": (53, 2, (9, 0), (), "GeneratedPlaneOutlines", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}'),
		# Method 'GeneratedPlanes' returns object of type 'IMGCPCBGeneratedPlanes'
		"GeneratedPlanes": (49, 2, (9, 0), (), "GeneratedPlanes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"HatchDistance": (44, 2, (5, 0), ((3, 49),), "HatchDistance", None),
		"HatchPattern": (42, 2, (3, 0), (), "HatchPattern", None),
		"HatchWidth": (43, 2, (5, 0), ((3, 49),), "HatchWidth", None),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"IgnoreRouteBorder": (68, 2, (11, 0), (), "IgnoreRouteBorder", None),
		"InheritedPlaneClass": (4, 2, (11, 0), (), "InheritedPlaneClass", None),
		"IsolatePlane": (62, 2, (11, 0), (), "IsolatePlane", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (66, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"ObstructType": (59, 2, (3, 0), (), "ObstructType", None),
		"OriginalLayer": (58, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (52, 2, (9, 0), (), "Parent", None),
		# Method 'PlaneClass' returns object of type 'IMGCPCBPlaneClass'
		"PlaneClass": (54, 2, (9, 0), (), "PlaneClass", '{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}'),
		"PositionX": (64, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (65, 2, (5, 0), ((3, 49),), "PositionY", None),
		"Priority": (69, 2, (3, 0), (), "Priority", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (60, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (61, 2, (8, 0), (), "ReservedBy", None),
		"RouteObstructed": (51, 2, (11, 0), (), "RouteObstructed", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Subnet": (46, 2, (3, 0), (), "Subnet", None),
		# Method 'TieLegs' returns object of type 'IMGCPCBTieLegs'
		"TieLegs": (50, 2, (9, 0), (), "TieLegs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}'),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (56, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"AllowOutGassingVoids": ((67, LCID, 4, 0),()),
		"Anchor": ((47, LCID, 4, 0),()),
		"DisplayCondition": ((57, LCID, 4, 0),()),
		"FixLock": ((63, LCID, 4, 0),()),
		"HatchDistance": ((44, LCID, 4, 0),()),
		"HatchPattern": ((42, LCID, 4, 0),()),
		"HatchWidth": ((43, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"IgnoreRouteBorder": ((68, LCID, 4, 0),()),
		"IsolatePlane": ((62, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Net": ((41, LCID, 8, 0),()),
		"ObstructType": ((59, LCID, 4, 0),()),
		"OriginalLayer": ((58, LCID, 4, 0),()),
		"PlaneClass": ((54, LCID, 8, 0),()),
		"RouteObstructed": ((51, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	ActualPlaneShapes: str # IMGCPCBActualPlaneShapes; read_only
	AllowOutGassingVoids: str # read/write
	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	GeneratedPlaneOutlines: str # IMGCPCBGeneratedPlanes; read_only
	GeneratedPlanes: str # IMGCPCBGeneratedPlanes; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	HatchDistance: str # read/write
	HatchPattern: str # read/write
	HatchWidth: str # read/write
	Highlighted: bool # read/write
	IgnoreRouteBorder: str # read/write
	InheritedPlaneClass: str # read_only
	IsolatePlane: str # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	ObstructType: str # read/write
	OriginalLayer: str # read/write
	Parent: str # read_only
	PlaneClass: str # read/write
	PositionX: str # read_only
	PositionY: str # read_only
	Priority: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	RouteObstructed: str # read/write
	Selected: bool # read/write
	Subnet: str # read_only
	TieLegs: str # IMGCPCBTieLegs; read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPlaneShapes(DispatchBaseClass):
	'MGCPCB Plane Shape collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')
	coclass_clsid = IID('{EDEDED3D-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pPlaneShape=defaultNamedNotOptArg):
		'Adds an plane shape to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pPlaneShape
			)

	def Delete(self):
		'Delete all plane shapes in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBPlaneShape
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the plane shape of a given index in the plane shape collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort plane shapes in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the plane shape of a given index in the plane shape collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBPlowUtilities(DispatchBaseClass):
	CLSID = IID('{C2DF1786-E310-4E24-B331-225D0EB92338}')
	coclass_clsid = None

	def Connect(self, pNet=defaultNamedNotOptArg, pFromTo=defaultNamedNotOptArg, pStart=defaultNamedNotOptArg, pEnd=defaultNamedNotOptArg
			, dWidth=defaultNamedNotOptArg, iLayer=defaultNamedNotOptArg, eUnit=0):
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((9, 1), (9, 1), (9, 1), (9, 1), (5, 1), (3, 1), (3, 49)),pNet
			, pFromTo, pStart, pEnd, dWidth, iLayer
			, eUnit)

	def DiffPairConnect(self, pNet1=defaultNamedNotOptArg, pFromTo1=defaultNamedNotOptArg, pStart1=defaultNamedNotOptArg, pEnd1=defaultNamedNotOptArg
			, pNet2=defaultNamedNotOptArg, pFromTo2=defaultNamedNotOptArg, pStart2=defaultNamedNotOptArg, pEnd2=defaultNamedNotOptArg, dWidth=defaultNamedNotOptArg
			, iLayer=defaultNamedNotOptArg, eUnit=0):
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((9, 1), (9, 1), (9, 1), (9, 1), (9, 1), (9, 1), (9, 1), (9, 1), (5, 1), (3, 1), (3, 49)),pNet1
			, pFromTo1, pStart1, pEnd1, pNet2, pFromTo2
			, pStart2, pEnd2, dWidth, iLayer, eUnit
			)

	def FindPath(self, pNet=defaultNamedNotOptArg, pFromTo=defaultNamedNotOptArg, dWidth=defaultNamedNotOptArg, iLayer=defaultNamedNotOptArg
			, vPointsArray=defaultNamedNotOptArg, dDeviation=-1.0, eUnit=0):
		return self._ApplyTypes_(5, 1, (12, 0), ((9, 1), (9, 1), (5, 1), (3, 1), (16396, 1), (5, 49), (3, 49)), 'FindPath', None,pNet
			, pFromTo, dWidth, iLayer, vPointsArray, dDeviation
			, eUnit)

	def GetPlowWidthSetting(self, currentwidth=pythoncom.Missing, minimumwidth=pythoncom.Missing, TypicalWidth=pythoncom.Missing, expansionwidth=pythoncom.Missing):
		'Get the plow width settings.'
		return self._ApplyTypes_(15, 1, (24, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetPlowWidthSetting', None,currentwidth
			, minimumwidth, TypicalWidth, expansionwidth)

	def Gloss(self, pNet=defaultNamedNotOptArg, Checkpoint=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((9, 1), (9, 1)),pNet
			, Checkpoint)

	def GlossPath(self, pNet=defaultNamedNotOptArg, pFromTo=defaultNamedNotOptArg, dWidth=defaultNamedNotOptArg, iLayer=defaultNamedNotOptArg
			, vPointsArray=defaultNamedNotOptArg, dDeviation=-1.0, eUnit=0):
		return self._ApplyTypes_(6, 1, (12, 0), ((9, 1), (9, 1), (5, 1), (3, 1), (16396, 1), (5, 49), (3, 49)), 'GlossPath', None,pNet
			, pFromTo, dWidth, iLayer, vPointsArray, dDeviation
			, eUnit)

	def GrowDiffPairTracesByCenterLine(self, pTrace1=defaultNamedNotOptArg, pEndPosition1=defaultNamedNotOptArg, pTrace2=defaultNamedNotOptArg, pEndPosition2=defaultNamedNotOptArg
			, vCenterLine=defaultNamedNotOptArg, eUnit=0):
		return self._oleobj_.InvokeTypes(11, LCID, 1, (24, 0), ((9, 1), (9, 1), (9, 1), (9, 1), (16396, 1), (3, 49)),pTrace1
			, pEndPosition1, pTrace2, pEndPosition2, vCenterLine, eUnit
			)

	# Result is of type IMGCPCBPoint
	def NewPoint(self):
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewPoint', '{6ADF1858-A878-47E5-B3B2-5820C27712DB}')
		return ret

	# Result is of type IMGCPCBTraces
	def ReRoute(self, pStart=defaultNamedNotOptArg, pEnd=defaultNamedNotOptArg, pTrace=defaultNamedNotOptArg):
		ret = self._oleobj_.InvokeTypes(14, LCID, 1, (9, 0), ((9, 1), (9, 1), (9, 1)),pStart
			, pEnd, pTrace)
		if ret is not None:
			ret = Dispatch(ret, 'ReRoute', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')
		return ret

	def ResolveTraceConflicts(self, pTrace=defaultNamedNotOptArg, dWidth=defaultNamedNotOptArg, pEndPosition=defaultNamedNotOptArg, dDeviation=-1.0
			, eUnit=0):
		return self._oleobj_.InvokeTypes(7, LCID, 1, (24, 0), ((9, 1), (5, 1), (9, 1), (5, 49), (3, 49)),pTrace
			, dWidth, pEndPosition, dDeviation, eUnit)

	def ResolveTracesConflicts(self, pTrace1=defaultNamedNotOptArg, pEndPosition1=defaultNamedNotOptArg, pTrace2=defaultNamedNotOptArg, pEndPosition2=defaultNamedNotOptArg
			, dDeviation=-1.0, eUnit=0):
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((9, 1), (9, 1), (9, 1), (9, 1), (5, 49), (3, 49)),pTrace1
			, pEndPosition1, pTrace2, pEndPosition2, dDeviation, eUnit
			)

	def ResolveViaConflicts(self, pVia=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((9, 1),),pVia
			)

	# Result is of type IMGCPCBPoint
	def SnapPoint(self, pNet=defaultNamedNotOptArg, pFromTo=defaultNamedNotOptArg, dWidth=defaultNamedNotOptArg, iLayer=defaultNamedNotOptArg
			, pExtrema=defaultNamedNotOptArg, dMaxJump=defaultNamedNotOptArg, pBasePosition=defaultNamedNotOptArg, pCursorPosition=defaultNamedNotOptArg, eUnit=0):
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((9, 1), (9, 1), (5, 1), (3, 1), (9, 1), (5, 1), (9, 1), (9, 1), (3, 49)),pNet
			, pFromTo, dWidth, iLayer, pExtrema, dMaxJump
			, pBasePosition, pCursorPosition, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'SnapPoint', '{6ADF1858-A878-47E5-B3B2-5820C27712DB}')
		return ret

	_prop_map_get_ = {
		"CurrentUnit": (2, 2, (3, 0), (), "CurrentUnit", None),
		# Method 'ExpansionMode' returns object of type 'IMGCPCBExpansionMode'
		"ExpansionMode": (0, 2, (9, 0), (), "ExpansionMode", '{90BA08EC-F7F1-4338-9AAA-F2384EB35423}'),
		"PushAndShoveMode": (1, 2, (3, 0), (), "PushAndShoveMode", None),
	}
	_prop_map_put_ = {
		"CurrentUnit": ((2, LCID, 4, 0),()),
		"ExpansionMode": ((0, LCID, 4, 0),()),
		"PushAndShoveMode": ((1, LCID, 4, 0),()),
	}

	CurrentUnit: str # read/write
	ExpansionMode: str # read/write
	PushAndShoveMode: str # read/write

	# Default property for this class is 'ExpansionMode'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (9, 0), (), "ExpansionMode", '{90BA08EC-F7F1-4338-9AAA-F2384EB35423}'))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBPoint(DispatchBaseClass):
	'MGCPCB Point object.'
	CLSID = IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')
	coclass_clsid = None

	# The method Getx is actually a property, but must be used as a method to correctly pass the arguments
	def Getx(self, Unit=0):
		'Gets or sets the X value of the point.'
		return self._oleobj_.InvokeTypes(0, LCID, 2, (5, 0), ((3, 49),),Unit
			)

	# The method Gety is actually a property, but must be used as a method to correctly pass the arguments
	def Gety(self, Unit=0):
		'Gets or sets the Y value of the point.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),Unit
			)

	# The method Setx is actually a property, but must be used as a method to correctly pass the arguments
	def Setx(self, Unit=0, arg1=defaultUnnamedArg):
		'Gets or sets the X value of the point.'
		return self._oleobj_.InvokeTypes(0, LCID, 4, (24, 0), ((3, 49), (5, 1)),Unit
			, arg1)

	# The method Sety is actually a property, but must be used as a method to correctly pass the arguments
	def Sety(self, Unit=0, arg1=defaultUnnamedArg):
		'Gets or sets the Y value of the point.'
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((3, 49), (5, 1)),Unit
			, arg1)

	_prop_map_get_ = {
		"InFreeArea": (2, 2, (11, 0), (), "InFreeArea", None),
		"x": (0, 2, (5, 0), ((3, 49),), "x", None),
		"y": (1, 2, (5, 0), ((3, 49),), "y", None),
	}
	_prop_map_put_ = {
		"InFreeArea": ((2, LCID, 4, 0),()),
		"x": ((0, LCID, 4, 0),()),
		"y": ((1, LCID, 4, 0),()),
	}

	InFreeArea: str # read/write
	x: str # read/write
	y: str # read/write

	# Default method for this class is 'x'
	def __call__(self, Unit=0):
		'Gets or sets the X value of the point.'
		return self._oleobj_.InvokeTypes(0, LCID, 2, (5, 0), ((3, 49),),Unit
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBProperties(DispatchBaseClass):
	'MGCPCB property collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')
	coclass_clsid = IID('{EDEDED45-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pProperty=defaultNamedNotOptArg):
		'Adds a property to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pProperty
			)

	def Delete(self):
		'Delete all properties in the collection.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the property of a given index in the property collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort properties in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the property of a given index in the property collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBProperty(DispatchBaseClass):
	'MGCPCB Property Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
	coclass_clsid = IID('{EDEDED44-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this property.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Source": (5, 2, (8, 0), (), "Source", None),
		"Value": (2, 2, (8, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"Name": ((1, LCID, 4, 0),()),
		"Value": ((2, LCID, 4, 0),()),
	}

	Name: str # read/write
	Source: str # read_only
	Value: str # read/write

	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(2, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBRFHazard(DispatchBaseClass):
	'MGCPCB RF Hazard Object.'
	CLSID = IID('{6AC7C876-C1C1-419E-90D2-71324569E41E}')
	coclass_clsid = IID('{A43DB03C-72FD-425F-92DF-1BB5516B8DC1}')

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the shape's X location."
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the shape's Y location."
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	_prop_map_get_ = {
		"Arguments": (11, 2, (12, 0), (), "Arguments", None),
		"Description": (0, 2, (8, 0), (), "Description", None),
		"GroupName": (8, 2, (8, 0), (), "GroupName", None),
		"PinName": (7, 2, (8, 0), (), "PinName", None),
		"PositionX": (5, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (6, 2, (5, 0), ((3, 49),), "PositionY", None),
		"RFGenerationFormats": (10, 2, (12, 0), (), "RFGenerationFormats", None),
		"RFHazardType": (1, 2, (3, 0), (), "RFHazardType", None),
		"ShapeGenerationDescription": (2, 2, (8, 0), (), "ShapeGenerationDescription", None),
		"ShapeReferenceDesignator": (3, 2, (8, 0), (), "ShapeReferenceDesignator", None),
		"ShapeType": (4, 2, (8, 0), (), "ShapeType", None),
		"SubstrateName": (9, 2, (8, 0), (), "SubstrateName", None),
	}
	_prop_map_put_ = {
	}

	Arguments: str # read_only
	Description: str # read_only
	GroupName: str # read_only
	PinName: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	RFGenerationFormats: str # read_only
	RFHazardType: str # read_only
	ShapeGenerationDescription: str # read_only
	ShapeReferenceDesignator: str # read_only
	ShapeType: str # read_only
	SubstrateName: str # read_only

	# Default property for this class is 'Description'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Description", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBRadialGrid(DispatchBaseClass):
	CLSID = IID('{36F191D7-5E03-4303-BBE3-53541ED04939}')
	coclass_clsid = IID('{CDF6343B-6DD7-4573-9411-EFF95322DBE6}')

	# The method GetDeltaAngle is actually a property, but must be used as a method to correctly pass the arguments
	def GetDeltaAngle(self, eUnit=0):
		'Sets/returns the radial grid delta angle.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetDeltaRadius is actually a property, but must be used as a method to correctly pass the arguments
	def GetDeltaRadius(self, eUnit=0):
		'Sets/returns the radial grid delta radius.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetInnerRadius is actually a property, but must be used as a method to correctly pass the arguments
	def GetInnerRadius(self, eUnit=0):
		'Sets/returns the radial grid inner radius.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def GetOriginX(self, eUnit=0):
		'Sets/returns the radial grid X origin.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def GetOriginY(self, eUnit=0):
		'Sets/returns the radial grid Y origin.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method SetDeltaAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetDeltaAngle(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/returns the radial grid delta angle.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetDeltaRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetDeltaRadius(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/returns the radial grid delta radius.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetInnerRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetInnerRadius(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/returns the radial grid inner radius.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetOriginX is actually a property, but must be used as a method to correctly pass the arguments
	def SetOriginX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/returns the radial grid X origin.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetOriginY is actually a property, but must be used as a method to correctly pass the arguments
	def SetOriginY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/returns the radial grid Y origin.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"DeltaAngle": (6, 2, (5, 0), ((3, 49),), "DeltaAngle", None),
		"DeltaRadius": (5, 2, (5, 0), ((3, 49),), "DeltaRadius", None),
		"Enabled": (1, 2, (11, 0), (), "Enabled", None),
		"InnerRadius": (4, 2, (5, 0), ((3, 49),), "InnerRadius", None),
		"OriginX": (2, 2, (5, 0), ((3, 49),), "OriginX", None),
		"OriginY": (3, 2, (5, 0), ((3, 49),), "OriginY", None),
	}
	_prop_map_put_ = {
		"DeltaAngle": ((6, LCID, 4, 0),()),
		"DeltaRadius": ((5, LCID, 4, 0),()),
		"Enabled": ((1, LCID, 4, 0),()),
		"InnerRadius": ((4, LCID, 4, 0),()),
		"OriginX": ((2, LCID, 4, 0),()),
		"OriginY": ((3, LCID, 4, 0),()),
	}

	DeltaAngle: str # read/write
	DeltaRadius: str # read/write
	Enabled: str # read/write
	InnerRadius: str # read/write
	OriginX: str # read/write
	OriginY: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBReservedArea(DispatchBaseClass):
	'MGCPCB Reserved Area Object.'
	CLSID = IID('{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}')
	coclass_clsid = IID('{DE842064-5FF0-4FA0-BB09-9EA774EF6417}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (43, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (49, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (42, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((43, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBReservedAreas(DispatchBaseClass):
	'MGCPCB Reserved Area collection.'
	CLSID = IID('{9C207921-4551-473E-94BC-1C7EDB8B5A1B}')
	coclass_clsid = IID('{863F1725-6431-48E7-B656-4D80383AA334}')

	def Add(self, pReservedArea=defaultNamedNotOptArg):
		'Adds a reserved area to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pReservedArea
			)

	# Result is of type IMGCPCBReservedArea
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the reserved area of a given index in the reserved areas collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort reserved areas in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the reserved area of a given index in the reserved areas collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBResistorShape(DispatchBaseClass):
	'MGCPCB Resistor shape Object.'
	CLSID = IID('{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}')
	coclass_clsid = IID('{8717F36C-1B10-4AE7-BEE0-93C9BD63FA03}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (43, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (44, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((43, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBResistorShapes(DispatchBaseClass):
	'MGCPCB Resistor shape collection.'
	CLSID = IID('{DC0CD70D-0F4E-4DB7-9D0B-6AD595D27C1F}')
	coclass_clsid = IID('{A7141DD4-4024-4DBC-AEAB-20F8712F2C1A}')

	def Add(self, pResistorShape=defaultNamedNotOptArg):
		'Adds a insertion outline to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pResistorShape
			)

	# Result is of type IMGCPCBResistorShape
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the insertion outline of a given index in the resistor shapes collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort resistor shapes in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the insertion outline of a given index in the resistor shapes collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBReusableBlock(DispatchBaseClass):
	'MGCPCB Reusable Block Object.'
	CLSID = IID('{3C82C9A5-9A63-4D83-B9FC-E5FA2EE8FD7A}')
	coclass_clsid = IID('{E7751A10-BD2B-48BA-8C2C-788374F67904}')

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the Reusable Block's X position."
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the Reusable Block's Y position."
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid Reusable Block.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ObjectClass": (5, 2, (3, 0), (), "ObjectClass", None),
		"ObjectType": (6, 2, (3, 0), (), "ObjectType", None),
		"PositionX": (1, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (2, 2, (5, 0), ((3, 49),), "PositionY", None),
		"Selected": (3, 2, (11, 0), (), "Selected", None),
	}
	_prop_map_put_ = {
		"Selected": ((3, LCID, 4, 0),()),
	}

	Name: str # read_only
	ObjectClass: str # read_only
	ObjectType: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	Selected: bool # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBReuseArea(DispatchBaseClass):
	'MGCPCB Reuse Area(Managed Block area) Object.'
	CLSID = IID('{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}')
	coclass_clsid = IID('{887911D8-607E-4A56-AE98-47F3DF6C0D07}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (41, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Publishable": (43, 2, (11, 0), (), "Publishable", None),
		"ReuseAreaName": (42, 2, (8, 0), (), "ReuseAreaName", None),
		"ReuseAreaState": (44, 2, (3, 0), (), "ReuseAreaState", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Publishable": ((43, LCID, 4, 0),()),
		"ReuseAreaName": ((42, LCID, 4, 0),()),
		"ReuseAreaState": ((44, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Publishable: str # read/write
	ReuseAreaName: str # read/write
	ReuseAreaState: str # read/write
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBReuseAreas(DispatchBaseClass):
	'MGCPCB Reuse Areas(Managed Block areas) collection.'
	CLSID = IID('{3575F847-F278-44C6-BBC8-F79FA9E37CDB}')
	coclass_clsid = IID('{D0E409CC-42BA-471E-83C0-E7D034966335}')

	def Add(self, pReuseArea=defaultNamedNotOptArg):
		'Adds a Reuse Area(Managed Block area) to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pReuseArea
			)

	def Delete(self):
		'Delete all Reuse Areas(Managed Block areas) in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBReuseArea
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the Reuse Area(Managed Block area) of a given index in the Reuse Area(Managed Block area) collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort Reuse Areas(Managed Block areas) in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the Reuse Area(Managed Block area) of a given index in the Reuse Area(Managed Block area) collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBRoom(DispatchBaseClass):
	'MGCPCB Room Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')
	coclass_clsid = IID('{EDEDED3A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method IncludedComponent is actually a property, but must be used as a method to correctly pass the arguments
	def IncludedComponent(self, pComp=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Include or exclude the given component from the room.'
		return self._oleobj_.InvokeTypes(41, LCID, 4, (24, 0), ((9, 1), (11, 1)),pComp
			, arg1)

	def IsPlaced(self):
		'Returns the room status (whether placed or not on the board).'
		return self._oleobj_.InvokeTypes(43, LCID, 1, (11, 0), (),)

	def IsTopAndBottom(self):
		'Returns true if this room is on both the top and the bottom board layers.'
		return self._oleobj_.InvokeTypes(40, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def SetName(self, pName=defaultNamedNotOptArg):
		'Sets the name of the room.'
		return self._oleobj_.InvokeTypes(44, LCID, 1, (24, 0), ((8, 1),),pName
			)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (49, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		# Method 'IncludedComponents' returns object of type 'IMGCPCBComponents'
		"IncludedComponents": (42, 2, (9, 0), (), "IncludedComponents", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (48, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (46, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (47, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Side": (50, 2, (3, 0), (), "Side", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (45, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((49, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	IncludedComponents: str # IMGCPCBComponents; read_only
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Side: str # read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBRooms(DispatchBaseClass):
	'MGCPCB Rooms collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}')
	coclass_clsid = IID('{EDEDED3B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pRoom=defaultNamedNotOptArg):
		'Adds a room to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pRoom
			)

	def Delete(self):
		'Delete all rooms in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBRoom
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the room of a given index in the room collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort rooms in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the room of a given index in the room collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBRouteBorder(DispatchBaseClass):
	'MGCPCB Route Border Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}')
	coclass_clsid = IID('{EDEDED37-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (44, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (45, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (43, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((44, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBRouteFence(DispatchBaseClass):
	'MGCPCB Route Fence Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}')
	coclass_clsid = IID('{EDEDED9B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FenceType": (41, 2, (3, 0), (), "FenceType", None),
		"FixLock": (45, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (44, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (42, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (43, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FenceType": ((41, LCID, 4, 0),()),
		"FixLock": ((45, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FenceType: str # read/write
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBRouteFences(DispatchBaseClass):
	'MGCPCB Route Fence Collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9C}')
	coclass_clsid = IID('{EDEDED9C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pRouteFence=defaultNamedNotOptArg):
		'Adds a route fence to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pRouteFence
			)

	def Delete(self):
		'Delete all route fences in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBRouteFence
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the route fence of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort route fences in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the route fence of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBRoutePass(DispatchBaseClass):
	'MGCPCB RoutePass Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7F}')
	coclass_clsid = IID('{EDEDED7F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Config(self, bRouteDuringFanout=defaultNamedNotOptArg, bAllowCleanup=defaultNamedNotOptArg):
		'Sets the config settings for Auto Route Pass.'
		return self._oleobj_.InvokeTypes(0, LCID, 1, (24, 0), ((11, 1), (11, 1)),bRouteDuringFanout
			, bAllowCleanup)

	def FixUnfix(self, bFixUnfix=defaultNamedNotOptArg, eMask=defaultNamedNotOptArg):
		'Sets the Unfix before pass and Fix after pass values.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((11, 1), (3, 1)),bFixUnfix
			, eMask)

	def Go(self):
		'Processes this route pass.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	def Items(self, eType=defaultNamedNotOptArg, pCollection=defaultNamedNotOptArg):
		'Sets the Items to route.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((3, 1), (9, 1)),eType
			, pCollection)

	def LayerSelect(self, eType=defaultNamedNotOptArg, nLayer=0):
		'Sets the layers to be routed. A Zero means all layers.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((3, 1), (3, 49)),eType
			, nLayer)

	def Order(self, eOrderType=defaultNamedNotOptArg, nCustomValue=defaultNamedNotOptArg):
		'Sets the order of routing.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((3, 1), (3, 1)),eOrderType
			, nCustomValue)

	def PassType(self, ePassType=defaultNamedNotOptArg, nEffortStart=defaultNamedNotOptArg, nEffortEnd=defaultNamedNotOptArg, bViaGrid=False
			, bRouteGrid=False):
		'Sets the Pass Type and the begin and end efforts. Calling this method will reset all the parameters on the RoutePass object.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (11, 49), (11, 49)),ePassType
			, nEffortStart, nEffortEnd, bViaGrid, bRouteGrid)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Config'
	def __call__(self, bRouteDuringFanout=defaultNamedNotOptArg, bAllowCleanup=defaultNamedNotOptArg):
		'Sets the config settings for Auto Route Pass.'
		return self._oleobj_.InvokeTypes(0, LCID, 1, (24, 0), ((11, 1), (11, 1)),bRouteDuringFanout
			, bAllowCleanup)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBRouteTarget(DispatchBaseClass):
	'MGCPCB Route Target Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}')
	coclass_clsid = IID('{EDEDEDA3-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete the route target.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Returns the route target X position.'
		return self._oleobj_.InvokeTypes(0, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Returns the route target Y position.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	_prop_map_get_ = {
		# Method 'AssociatedComponentPin' returns object of type 'IMGCPCBPin'
		"AssociatedComponentPin": (6, 2, (9, 0), (), "AssociatedComponentPin", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (4, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"PositionX": (0, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (1, 2, (5, 0), ((3, 49),), "PositionY", None),
		"Selected": (2, 2, (11, 0), (), "Selected", None),
		"UniqueId": (7, 2, (12, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Net": ((4, LCID, 8, 0),()),
		"Selected": ((2, LCID, 4, 0),()),
	}

	AssociatedComponentPin: str # IMGCPCBPin; read_only
	Highlighted: bool # read/write
	Net: str # read/write
	PositionX: str # read_only
	PositionY: str # read_only
	Selected: bool # read/write
	UniqueId: str # read_only

	# Default method for this class is 'PositionX'
	def __call__(self, eUnit=0):
		'Returns the route target X position.'
		return self._oleobj_.InvokeTypes(0, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBRouteTargets(DispatchBaseClass):
	'MGCPCB Route Targets collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA4}')
	coclass_clsid = IID('{EDEDEDA4-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pRouteTarget=defaultNamedNotOptArg):
		'Adds a route target to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pRouteTarget
			)

	def Delete(self):
		'Delete all route targets in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBRouteTarget
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the route target of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the route target of a given index in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBRuleArea(DispatchBaseClass):
	'MGCPCB RuleArea Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}')
	coclass_clsid = IID('{EDEDED1D-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		"DFTArea": (45, 2, (11, 0), (), "DFTArea", None),
		"DFTAreaName": (46, 2, (8, 0), (), "DFTAreaName", None),
		"DFTTestpointCellName": (49, 2, (8, 0), (), "DFTTestpointCellName", None),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (42, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"EscapeOutline": (44, 2, (11, 0), (), "EscapeOutline", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (50, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (43, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (41, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (47, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (48, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DFTArea": ((45, LCID, 4, 0),()),
		"DFTAreaName": ((46, LCID, 4, 0),()),
		"DFTTestpointCellName": ((49, LCID, 4, 0),()),
		"DisplayCondition": ((42, LCID, 4, 0),()),
		"EscapeOutline": ((44, LCID, 4, 0),()),
		"FixLock": ((50, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"OriginalLayer": ((43, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	DFTArea: str # read/write
	DFTAreaName: str # read/write
	DFTTestpointCellName: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	EscapeOutline: str # read/write
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBRuleAreas(DispatchBaseClass):
	'MGCPCB ruleArea collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1B}')
	coclass_clsid = IID('{EDEDED1E-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pRuleArea=defaultNamedNotOptArg):
		'Adds a ruleArea to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pRuleArea
			)

	def Delete(self):
		'Delete all rule areas in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBRuleArea
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the ruleArea of a given index in the ruleArea collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort rule areas in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the ruleArea of a given index in the ruleArea collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBSandbox(DispatchBaseClass):
	'MGCPCB Sandbox Object.'
	CLSID = IID('{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}')
	coclass_clsid = IID('{6C4DEA98-587A-41EE-9BC9-1FD19AE3C883}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# The method PlacementLayer is actually a property, but must be used as a method to correctly pass the arguments
	def PlacementLayer(self, Layer=defaultNamedNotOptArg):
		'Get/Set the whether this layer is enabled as placement layer for this sandbox.'
		return self._oleobj_.InvokeTypes(44, LCID, 2, (11, 0), ((3, 1),),Layer
			)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method RouteLayer is actually a property, but must be used as a method to correctly pass the arguments
	def RouteLayer(self, Layer=defaultNamedNotOptArg):
		'Get/Set the whether this layer is enabled as route layer for this sandbox.'
		return self._oleobj_.InvokeTypes(45, LCID, 2, (11, 0), ((3, 1),),Layer
			)

	# The method SetPlacementLayer is actually a property, but must be used as a method to correctly pass the arguments
	def SetPlacementLayer(self, Layer=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Get/Set the whether this layer is enabled as placement layer for this sandbox.'
		return self._oleobj_.InvokeTypes(44, LCID, 4, (24, 0), ((3, 1), (11, 1)),Layer
			, arg1)

	# The method SetRouteLayer is actually a property, but must be used as a method to correctly pass the arguments
	def SetRouteLayer(self, Layer=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Get/Set the whether this layer is enabled as route layer for this sandbox.'
		return self._oleobj_.InvokeTypes(45, LCID, 4, (24, 0), ((3, 1), (11, 1)),Layer
			, arg1)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (50, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (51, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Owner": (40, 2, (8, 0), (), "Owner", None),
		"Parent": (49, 2, (9, 0), (), "Parent", None),
		"PlacementLayers": (42, 2, (12, 0), (), "PlacementLayers", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (47, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (48, 2, (8, 0), (), "ReservedBy", None),
		"RouteLayers": (43, 2, (12, 0), (), "RouteLayers", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"State": (41, 2, (3, 0), (), "State", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (46, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((50, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"State": ((41, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Owner: str # read_only
	Parent: str # read_only
	PlacementLayers: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	RouteLayers: str # read_only
	Selected: bool # read/write
	State: str # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBSandboxes(DispatchBaseClass):
	'MGCPCB Sandboxes collection.'
	CLSID = IID('{BD848A19-1634-4C73-BADF-459C5B94BA4C}')
	coclass_clsid = IID('{6E49B9FA-AFE5-471B-A7B6-3537D2753266}')

	def Add(self, pSandbox=defaultNamedNotOptArg):
		'Adds a sandbox to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pSandbox
			)

	def Delete(self):
		'Delete all sandboxes in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBSandbox
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the sandbox of a given index in the sandbox collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort sandboxes in this collection by name and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the sandbox of a given index in the sandbox collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBSettings(DispatchBaseClass):
	'MGCPCB Settings object.'
	CLSID = IID('{AA01E86F-E470-4E69-AAB6-AE16DC30E3D0}')
	coclass_clsid = IID('{2D0374E9-4948-4CE9-912F-DCCD33BDF0E3}')

	def GetDouble(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, DefaultValue=0.0):
		'Returns the double setting.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (5, 0), ((8, 1), (3, 1), (3, 1), (5, 49)),ClientId
			, SettingId, SettingType, DefaultValue)

	def GetDoubleArray(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg):
		'Returns the double array setting.'
		return self._ApplyTypes_(7, 1, (12, 0), ((8, 1), (3, 1), (3, 1)), 'GetDoubleArray', None,ClientId
			, SettingId, SettingType)

	def GetInteger(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, DefaultValue=0):
		'Returns the integer setting.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (3, 0), ((8, 1), (3, 1), (3, 1), (3, 49)),ClientId
			, SettingId, SettingType, DefaultValue)

	def GetIntegerArray(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg):
		'Returns the integer array setting.'
		return self._ApplyTypes_(3, 1, (12, 0), ((8, 1), (3, 1), (3, 1)), 'GetIntegerArray', None,ClientId
			, SettingId, SettingType)

	def GetString(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, DefaultValue='0'):
		'Returns the string setting.'
		return self._ApplyTypes_(9, 1, (8, 32), ((8, 1), (3, 1), (3, 1), (8, 49)), 'GetString', None,ClientId
			, SettingId, SettingType, DefaultValue)

	def GetStringArray(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg):
		'Returns the string array setting.'
		return self._ApplyTypes_(11, 1, (12, 0), ((8, 1), (3, 1), (3, 1)), 'GetStringArray', None,ClientId
			, SettingId, SettingType)

	def PutDouble(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, DoubleVal=defaultNamedNotOptArg):
		'Sets the double setting.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (5, 1)),ClientId
			, SettingId, SettingType, DoubleVal)

	def PutDoubleArray(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, DoubleArray=defaultNamedNotOptArg):
		'Sets the double array setting.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (12, 1)),ClientId
			, SettingId, SettingType, DoubleArray)

	def PutInteger(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, Integer=defaultNamedNotOptArg):
		'Sets the integer setting.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (3, 1)),ClientId
			, SettingId, SettingType, Integer)

	def PutIntegerArray(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, IntegerArray=defaultNamedNotOptArg):
		'Sets the integer array setting.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (12, 1)),ClientId
			, SettingId, SettingType, IntegerArray)

	def PutString(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, StringVal=defaultNamedNotOptArg):
		'Sets the string setting.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (8, 1)),ClientId
			, SettingId, SettingType, StringVal)

	def PutStringArray(self, ClientId=defaultNamedNotOptArg, SettingId=defaultNamedNotOptArg, SettingType=defaultNamedNotOptArg, StringArray=defaultNamedNotOptArg):
		'Sets the string array setting.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((8, 1), (3, 1), (3, 1), (12, 1)),ClientId
			, SettingId, SettingType, StringArray)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBSetupParameter(DispatchBaseClass):
	'MGCPCB SetupParameter Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6E}')
	coclass_clsid = IID('{EDEDED6F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	# Result is of type IMGCPCBUserLayer
	def PutUserLayer(self, sName=defaultNamedNotOptArg):
		'Creates a new user layer with the specified name.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'PutUserLayer', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')
		return ret

	# Result is of type IMGCPCBViaSpan
	def PutViaSpan(self, StartLayer=defaultNamedNotOptArg, EndLayer=defaultNamedNotOptArg, pDefaultViaPadstack=defaultNamedNotOptArg):
		'Adds a new via span and returns the created object. Default padstack must be a Via Padstack'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((3, 1), (3, 1), (9, 1)),StartLayer
			, EndLayer, pDefaultViaPadstack)
		if ret is not None:
			ret = Dispatch(ret, 'PutViaSpan', '{C4A8992A-7CE8-4925-963C-462E3FC2623E}')
		return ret

	_prop_map_get_ = {
		"CurrentPadstackTechnologyName": (9, 2, (8, 0), (), "CurrentPadstackTechnologyName", None),
		"TestPointRefDesPrefix": (6, 2, (8, 0), (), "TestPointRefDesPrefix", None),
		"TestpointCellName": (3, 2, (8, 0), (), "TestpointCellName", None),
		"TestpointSide": (4, 2, (3, 0), (), "TestpointSide", None),
		"Unit": (2, 2, (3, 0), (), "Unit", None),
		"UseAssemblyAsTestPointObstructs": (7, 2, (11, 0), (), "UseAssemblyAsTestPointObstructs", None),
		# Method 'ViaLayerRanges' returns object of type 'IMGCPCBLayerRanges'
		"ViaLayerRanges": (5, 2, (9, 0), (), "ViaLayerRanges", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}'),
	}
	_prop_map_put_ = {
		"TestPointRefDesPrefix": ((6, LCID, 4, 0),()),
		"TestpointCellName": ((3, LCID, 4, 0),()),
		"TestpointSide": ((4, LCID, 4, 0),()),
		"UseAssemblyAsTestPointObstructs": ((7, LCID, 4, 0),()),
	}

	CurrentPadstackTechnologyName: str # read_only
	TestPointRefDesPrefix: str # read/write
	TestpointCellName: str # read/write
	TestpointSide: str # read/write
	Unit: str # read_only
	UseAssemblyAsTestPointObstructs: str # read/write
	ViaLayerRanges: str # IMGCPCBLayerRanges; read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBShearingHole(DispatchBaseClass):
	'MGCPCB ShearingHole Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}')
	coclass_clsid = IID('{EDEDED8D-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBUserPads
	# The method GetUserPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserPads(self, sLayerOnly='*'):
		'Returns the collection of user pads.'
		return self._ApplyTypes_(40, 2, (9, 32), ((8, 49),), 'GetUserPads', '{ACC37237-2F98-403B-8783-C21D7026F5B4}',sLayerOnly
			)

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"FixLock": (45, 2, (3, 0), (), "FixLock", None),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parent": (44, 2, (9, 0), (), "Parent", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (42, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (43, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"UniqueId": (41, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserPads' returns object of type 'IMGCPCBUserPads'
		"UserPads": (40, 2, (9, 32), ((8, 49),), "UserPads", '{ACC37237-2F98-403B-8783-C21D7026F5B4}'),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"FixLock": ((45, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	FixLock: str # read/write
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	UniqueId: str # read_only
	UserPads: str # IMGCPCBUserPads; read_only
	_Handle: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBShearingHoles(DispatchBaseClass):
	'MGCPCB ShearingHole collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8E}')
	coclass_clsid = IID('{EDEDED8E-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pShearingHole=defaultNamedNotOptArg):
		'Adds a shearing hole to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pShearingHole
			)

	def Delete(self):
		'Delete all shearing holes in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBShearingHole
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'Returns the shearing hole of a given index in the shearing hole collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort shearing holes in this collection by hole name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'Returns the shearing hole of a given index in the shearing hole collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBSheet(DispatchBaseClass):
	'MGCPCB Sheet Object. this is only valid for the Drawing Editor'
	CLSID = IID('{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')
	coclass_clsid = IID('{FBAD0390-893C-42E4-A427-82B628D8A021}')

	def Delete(self):
		'Delete this sheet.  If this is the only sheet, this will fail.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBBoards
	# The method GetBoards is actually a property, but must be used as a method to correctly pass the arguments
	def GetBoards(self, eSelectOnly=0):
		"Returns the Sheet's collection of boards."
		ret = self._oleobj_.InvokeTypes(6, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBoards', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')
		return ret

	# Result is of type IMGCPCBComponents
	# The method GetComponents is actually a property, but must be used as a method to correctly pass the arguments
	def GetComponents(self, eSelectOnly=0, eCompType=-1, eCelltype=4):
		"Returns the collection of components that match the supplied criteria placed on this sheet. The refDes may contain the '*' and '?' wildcards."
		ret = self._oleobj_.InvokeTypes(22, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectOnly
			, eCompType, eCelltype)
		if ret is not None:
			ret = Dispatch(ret, 'GetComponents', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')
		return ret

	# Result is of type IMGCPCBConductorLayerGfxs
	# The method GetConductorLayerGfxs2 is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerGfxs2(self, pArrayOfSelectType='', eSelectOnly=0, nLayerOnly=0):
		'Returns the board layer gfx collection placed on this sheet.'
		return self._ApplyTypes_(14, 2, (9, 32), ((16396, 49), (3, 49), (3, 49)), 'GetConductorLayerGfxs2', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}',pArrayOfSelectType
			, eSelectOnly, nLayerOnly)

	# Result is of type IMGCPCBConductorLayerTexts
	# The method GetConductorLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetConductorLayerTexts(self, eSelectOnly=0, nLayerOnly=0, bIncludeComponentText=True):
		'Returns the board layer text collection placed on this sheet.'
		ret = self._oleobj_.InvokeTypes(16, LCID, 2, (9, 0), ((3, 49), (3, 49), (11, 49)),eSelectOnly
			, nLayerOnly, bIncludeComponentText)
		if ret is not None:
			ret = Dispatch(ret, 'GetConductorLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')
		return ret

	# Result is of type IMGCPCBContours
	# The method GetContours is actually a property, but must be used as a method to correctly pass the arguments
	def GetContours(self, eSelectOnly=0):
		"Returns the document's contour collection."
		ret = self._oleobj_.InvokeTypes(24, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetContours', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')
		return ret

	# Result is of type IMGCPCBDetailedViews
	# The method GetDetailedViews is actually a property, but must be used as a method to correctly pass the arguments
	def GetDetailedViews(self, eSelectOnly=0):
		"Returns the Sheet's collection of detail views."
		ret = self._oleobj_.InvokeTypes(27, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDetailedViews', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}')
		return ret

	# Result is of type IMGCPCBDrillDrawings
	# The method GetDrillDrawings is actually a property, but must be used as a method to correctly pass the arguments
	def GetDrillDrawings(self, eSelectOnly=0):
		"Returns the sheet's drill drawing collection."
		ret = self._oleobj_.InvokeTypes(26, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDrillDrawings', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')
		return ret

	# Result is of type IMGCPCBFabricationLayerGfxs
	# The method GetFabricationLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerGfxs(self, eSelectType=-1, eSelectOnly=0, Side=0):
		'Returns the fabrication layer graphics collection placed on this sheet.'
		ret = self._oleobj_.InvokeTypes(15, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49)),eSelectType
			, eSelectOnly, Side)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')
		return ret

	# Result is of type IMGCPCBFabricationLayerTexts
	# The method GetFabricationLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetFabricationLayerTexts(self, eSelectType=-1, eSelectOnly=0, eLayerOnly=0, bIncludeComponentText=True):
		'Returns the fabrication layer text collection placed on this sheet.'
		ret = self._oleobj_.InvokeTypes(17, LCID, 2, (9, 0), ((3, 49), (3, 49), (3, 49), (11, 49)),eSelectType
			, eSelectOnly, eLayerOnly, bIncludeComponentText)
		if ret is not None:
			ret = Dispatch(ret, 'GetFabricationLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')
		return ret

	# Result is of type IMGCPCBGroups
	# The method GetGroups is actually a property, but must be used as a method to correctly pass the arguments
	def GetGroups(self, eSelectOnly=0, topMostRootGroup=False):
		'Returns the collection of groups that match the supplied criteria and are placed on this sheet.'
		ret = self._oleobj_.InvokeTypes(25, LCID, 2, (9, 0), ((3, 49), (11, 49)),eSelectOnly
			, topMostRootGroup)
		if ret is not None:
			ret = Dispatch(ret, 'GetGroups', '{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')
		return ret

	# Result is of type IMGCPCBPanels
	# The method GetPanels is actually a property, but must be used as a method to correctly pass the arguments
	def GetPanels(self, eSelectOnly=0):
		'Returns the collection of Panels associated with this sheet'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetPanels', '{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')
		return ret

	# Result is of type IMGCPCBUserLayerGfxs
	# The method GetUserLayerGfxs is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerGfxs(self, eSelectOnly=0, sLayerOnly='*'):
		'Returns the user layer gfx collection on this sheet only.'
		return self._ApplyTypes_(8, 2, (9, 32), ((3, 49), (8, 49)), 'GetUserLayerGfxs', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}',eSelectOnly
			, sLayerOnly)

	# Result is of type IMGCPCBUserLayerTexts
	# The method GetUserLayerTexts is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserLayerTexts(self, eSelectOnly=0, sLayerOnly='*', bIncludeComponentText=True):
		'Returns the user texts collection associated with this sheet.  LayerOnly can be a regular expression.'
		return self._ApplyTypes_(9, 2, (9, 32), ((3, 49), (8, 49), (11, 49)), 'GetUserLayerTexts', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}',eSelectOnly
			, sLayerOnly, bIncludeComponentText)

	def IsValid(self):
		'Returns true if this a valid sheet.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), (),)

	def PutInstanceScheme(self, InstanceName=defaultNamedNotOptArg, schemeName=''):
		'Adds instance(and associated scheme) or replaces the scheme for the specified instance.'
		return self._ApplyTypes_(5, 1, (24, 32), ((8, 1), (8, 49)), 'PutInstanceScheme', None,InstanceName
			, schemeName)

	_prop_map_get_ = {
		# Method 'Boards' returns object of type 'IMGCPCBBoards'
		"Boards": (6, 2, (9, 0), ((3, 49),), "Boards", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}'),
		# Method 'Components' returns object of type 'IMGCPCBComponents'
		"Components": (22, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "Components", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}'),
		# Method 'ConductorLayerGfxs2' returns object of type 'IMGCPCBConductorLayerGfxs'
		"ConductorLayerGfxs2": (14, 2, (9, 32), ((16396, 49), (3, 49), (3, 49)), "ConductorLayerGfxs2", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}'),
		# Method 'ConductorLayerTexts' returns object of type 'IMGCPCBConductorLayerTexts'
		"ConductorLayerTexts": (16, 2, (9, 0), ((3, 49), (3, 49), (11, 49)), "ConductorLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}'),
		# Method 'Contours' returns object of type 'IMGCPCBContours'
		"Contours": (24, 2, (9, 0), ((3, 49),), "Contours", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}'),
		# Method 'DetailedViews' returns object of type 'IMGCPCBDetailedViews'
		"DetailedViews": (27, 2, (9, 0), ((3, 49),), "DetailedViews", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}'),
		"DrawingTemplate": (2, 2, (8, 0), (), "DrawingTemplate", None),
		# Method 'DrillDrawings' returns object of type 'IMGCPCBDrillDrawings'
		"DrillDrawings": (26, 2, (9, 0), ((3, 49),), "DrillDrawings", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}'),
		# Method 'FabricationLayerGfxs' returns object of type 'IMGCPCBFabricationLayerGfxs'
		"FabricationLayerGfxs": (15, 2, (9, 0), ((3, 49), (3, 49), (3, 49)), "FabricationLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}'),
		# Method 'FabricationLayerTexts' returns object of type 'IMGCPCBFabricationLayerTexts'
		"FabricationLayerTexts": (17, 2, (9, 0), ((3, 49), (3, 49), (3, 49), (11, 49)), "FabricationLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}'),
		# Method 'Groups' returns object of type 'IMGCPCBGroups'
		"Groups": (25, 2, (9, 0), ((3, 49), (11, 49)), "Groups", '{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}'),
		"Instances": (3, 2, (12, 0), (), "Instances", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ObjectClass": (12, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Panels' returns object of type 'IMGCPCBPanels'
		"Panels": (7, 2, (9, 0), ((3, 49),), "Panels", '{C0072D28-C269-4E34-86D1-FE550D7FD7AB}'),
		"Schemes": (4, 2, (12, 0), (), "Schemes", None),
		"SheetNumber": (11, 2, (8, 0), (), "SheetNumber", None),
		# Method 'SheetOutline' returns object of type 'IMGCPCBSheetOutline'
		"SheetOutline": (10, 2, (9, 0), (), "SheetOutline", '{8906B110-98F5-44A5-BD6C-DCE96AC36C87}'),
		# Method 'UserLayerGfxs' returns object of type 'IMGCPCBUserLayerGfxs'
		"UserLayerGfxs": (8, 2, (9, 32), ((3, 49), (8, 49)), "UserLayerGfxs", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}'),
		# Method 'UserLayerTexts' returns object of type 'IMGCPCBUserLayerTexts'
		"UserLayerTexts": (9, 2, (9, 32), ((3, 49), (8, 49), (11, 49)), "UserLayerTexts", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}'),
	}
	_prop_map_put_ = {
		"Name": ((0, LCID, 4, 0),()),
		"SheetNumber": ((11, LCID, 4, 0),()),
	}

	Boards: str # IMGCPCBBoards; read_only
	Components: str # IMGCPCBComponents; read_only
	ConductorLayerGfxs2: str # IMGCPCBConductorLayerGfxs; read_only
	ConductorLayerTexts: str # IMGCPCBConductorLayerTexts; read_only
	Contours: str # IMGCPCBContours; read_only
	DetailedViews: str # IMGCPCBDetailedViews; read_only
	DrawingTemplate: str # read_only
	DrillDrawings: str # IMGCPCBDrillDrawings; read_only
	FabricationLayerGfxs: str # IMGCPCBFabricationLayerGfxs; read_only
	FabricationLayerTexts: str # IMGCPCBFabricationLayerTexts; read_only
	Groups: str # IMGCPCBGroups; read_only
	Instances: str # read_only
	Name: str # read/write
	ObjectClass: str # read_only
	Panels: str # IMGCPCBPanels; read_only
	Schemes: str # read_only
	SheetNumber: str # read/write
	SheetOutline: str # IMGCPCBSheetOutline; read_only
	UserLayerGfxs: str # IMGCPCBUserLayerGfxs; read_only
	UserLayerTexts: str # IMGCPCBUserLayerTexts; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBSheetOutline(DispatchBaseClass):
	'MGCPCB Sheet Outline Object.'
	CLSID = IID('{8906B110-98F5-44A5-BD6C-DCE96AC36C87}')
	coclass_clsid = IID('{E3CE28CA-2EAC-4695-B4F3-6D38423F7F13}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (43, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((43, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBSheets(DispatchBaseClass):
	'MGCPCB Sheets collection.These are only valid in the Drawing Editor'
	CLSID = IID('{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}')
	coclass_clsid = IID('{0B9C6959-78B6-4BF2-B0B2-24D356BAE93E}')

	def Add(self, pView=defaultNamedNotOptArg):
		'Adds a sheet to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pView
			)

	def Delete(self):
		'Delete sheets in the collection. Cannot delete if last sheet in list.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBSheet
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the Sheet of a given index in the Sheets collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort sheets in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the Sheet of a given index in the Sheets collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBSketchPlan(DispatchBaseClass):
	'MGCPCB Sketch Plan Object.'
	CLSID = IID('{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')
	coclass_clsid = IID('{1D127C3B-0C83-49F0-8974-F64B30D1E33B}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsSketchPlanRouted(self):
		'Returns if this sketch plan is routed. (Internal)'
		return self._oleobj_.InvokeTypes(58, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def RemoveFromTos(self, FromTos=defaultNamedNotOptArg):
		'Removes the given collection of FromTos to this sketch plan. (Internal)'
		return self._oleobj_.InvokeTypes(60, LCID, 1, (24, 0), ((9, 1),),FromTos
			)

	_prop_map_get_ = {
		"BitWidth": (41, 2, (3, 0), (), "BitWidth", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (59, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (54, 2, (3, 0), (), "FixLock", None),
		# Method 'FromTos' returns object of type 'IMGCPCBFromTos'
		"FromTos": (57, 2, (9, 0), (), "FromTos", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'Markers' returns object of type 'IMGCPCBMarkers'
		"Markers": (56, 2, (9, 0), (), "Markers", '{3CCA32E2-09D7-42AB-9D14-565025B422B2}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Nets' returns object of type 'IMGCPCBNets'
		"Nets": (52, 2, (9, 0), (), "Nets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (53, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (49, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (50, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		# Method 'ShieldGroup' returns object of type 'IMGCPCBNetGroup'
		"ShieldGroup": (55, 2, (9, 0), (), "ShieldGroup", '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}'),
		"Shielding": (44, 2, (11, 0), (), "Shielding", None),
		# Method 'ShieldingNet' returns object of type 'IMGCPCBNet'
		"ShieldingNet": (46, 2, (9, 0), (), "ShieldingNet", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		# Method 'ShieldingNetClass' returns object of type 'IMGCPCBNetClass'
		"ShieldingNetClass": (47, 2, (9, 0), (), "ShieldingNetClass", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}'),
		"TracesBetween": (45, 2, (3, 0), (), "TracesBetween", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (48, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((54, LCID, 4, 0),()),
		"FromTos": ((57, LCID, 8, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	BitWidth: str # read_only
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	FromTos: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Markers: str # IMGCPCBMarkers; read_only
	Name: str # read_only
	Nets: str # IMGCPCBNets; read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	ShieldGroup: str # IMGCPCBNetGroup; read_only
	Shielding: str # read_only
	ShieldingNet: str # IMGCPCBNet; read_only
	ShieldingNetClass: str # IMGCPCBNetClass; read_only
	TracesBetween: str # read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBSketchPlanVia(DispatchBaseClass):
	'MGCPCB Sketch Plan Via collection.'
	CLSID = IID('{252A33B0-814C-48B3-BEB6-36FC5550AE43}')
	coclass_clsid = IID('{087AE75B-81DC-41DF-ABAD-978E425B3AD9}')

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the Sketch Via's X position."
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the Sketch Via's Y position."
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"FromLayer": (3, 2, (3, 0), (), "FromLayer", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (9, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ObjectClass": (7, 2, (3, 0), (), "ObjectClass", None),
		"PositionX": (1, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (2, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'SketchPlans' returns object of type 'IMGCPCBSketchPlans'
		"SketchPlans": (6, 2, (9, 0), (), "SketchPlans", '{2F037114-93ED-4C02-B835-6EC2ECD32E3C}'),
		"ToLayer": (4, 2, (3, 0), (), "ToLayer", None),
		"UniqueId": (8, 2, (12, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
	}

	FromLayer: str # read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	SketchPlans: str # IMGCPCBSketchPlans; read_only
	ToLayer: str # read_only
	UniqueId: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBSketchPlanVias(DispatchBaseClass):
	'MGCPCB Sketch Plan Vias collection.'
	CLSID = IID('{DFE5ADA4-8560-4DCB-B850-D84BBEF0562B}')
	coclass_clsid = IID('{EA861E6A-16B1-4A85-A174-5AB9AF229FBD}')

	def Add(self, pSketchPlanVia=defaultNamedNotOptArg):
		'Adds a sketch plan via to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pSketchPlanVia
			)

	# Result is of type IMGCPCBSketchPlanVia
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the sketch plan via of a given index in the sketch plan via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{252A33B0-814C-48B3-BEB6-36FC5550AE43}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the sketch plan via of a given index in the sketch plan via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{252A33B0-814C-48B3-BEB6-36FC5550AE43}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{252A33B0-814C-48B3-BEB6-36FC5550AE43}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBSketchPlans(DispatchBaseClass):
	'MGCPCB Sketch Plans collection.'
	CLSID = IID('{2F037114-93ED-4C02-B835-6EC2ECD32E3C}')
	coclass_clsid = IID('{3693B0E6-CA38-4811-82EA-F78D4BA04A95}')

	def Add(self, pSketchPlan=defaultNamedNotOptArg):
		'Adds a bus path to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pSketchPlan
			)

	def Delete(self):
		'Delete all sketch plans in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBSketchPlan
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the bus path of a given index in the sketch plan ollection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort sketch plans in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the bus path of a given index in the sketch plan ollection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBStackupScheme(DispatchBaseClass):
	'MGCPCB Stackup Scheme Object.'
	CLSID = IID('{0D170493-3863-40A7-B222-C70CDC73B07A}')
	coclass_clsid = IID('{722E36DF-2BD1-4988-A670-96048FBC5FF0}')

	def Delete(self):
		'Deletes this stackup scheme.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'LayerStack' returns object of type 'IMGCPCBLayerObjects'
		"LayerStack": (2, 2, (9, 0), (), "LayerStack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectClass": (5, 2, (3, 0), (), "ObjectClass", None),
		"UniqueId": (4, 2, (12, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
		"LayerStack": ((2, LCID, 8, 0),()),
		"Name": ((1, LCID, 4, 0),()),
	}

	LayerStack: str # read/write
	Name: str # read/write
	ObjectClass: str # read_only
	UniqueId: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBStackupSchemes(DispatchBaseClass):
	'MGCPCB Stackup Schemes collection.'
	CLSID = IID('{E17DBE7F-A013-4E92-9F62-E20CE0AEB25D}')
	coclass_clsid = IID('{7AF637B3-357E-41AD-990E-49C61B6A605A}')

	def Add(self, pStackupScheme=defaultNamedNotOptArg):
		'Adds a stackup scheme to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pStackupScheme
			)

	def Delete(self):
		'Deletes all stackup schemes in this collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBStackupScheme
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the stackup scheme of a given index in the stackup schemes collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0D170493-3863-40A7-B222-C70CDC73B07A}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sorts stackup schemes in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the stackup scheme of a given index in the stackup schemes collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0D170493-3863-40A7-B222-C70CDC73B07A}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0D170493-3863-40A7-B222-C70CDC73B07A}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTargetArea(DispatchBaseClass):
	'MGCPCB Target Area Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}')
	coclass_clsid = IID('{EDEDEDA1-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Remove the target area.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Returns the target area X position.'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Returns the target area Y position.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid target area.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	# Result is of type IMGCPCBRouteTarget
	def PutRouteTarget(self, pPin=defaultNamedNotOptArg, pNet=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg
			, eUnit=0, sName=''):
		'Add a route target to a target area. (Beta)'
		return self._ApplyTypes_(9, 1, (9, 32), ((9, 1), (9, 1), (5, 1), (5, 1), (3, 49), (8, 49)), 'PutRouteTarget', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}',pPin
			, pNet, dX, dY, eUnit, sName
			)

	_prop_map_get_ = {
		"Layer": (3, 2, (3, 0), (), "Layer", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"PositionX": (1, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (2, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'RouteTargets' returns object of type 'IMGCPCBRouteTargets'
		"RouteTargets": (7, 2, (9, 0), (), "RouteTargets", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA4}'),
		"Selected": (4, 2, (11, 0), (), "Selected", None),
		"UniqueId": (8, 2, (12, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
		"Selected": ((4, LCID, 4, 0),()),
	}

	Layer: str # read_only
	Name: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	RouteTargets: str # IMGCPCBRouteTargets; read_only
	Selected: bool # read/write
	UniqueId: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTargetAreas(DispatchBaseClass):
	'MGCPCB Target Areas collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA2}')
	coclass_clsid = IID('{EDEDEDA2-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pTargetArea=defaultNamedNotOptArg):
		'Adds a target area to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pTargetArea
			)

	def Delete(self):
		'Delete all target areas in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBTargetArea
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the target area of a given index in the target area collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort target areas in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the target area of a given index in the target area collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTeardrop(DispatchBaseClass):
	'MGCPCB Teardrop Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}')
	coclass_clsid = IID('{EDEDED68-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"Anchor": (42, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (48, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (49, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'PadstackObjects' returns object of type 'IMGCPCBPadstackObjects'
		"PadstackObjects": (43, 2, (9, 0), (), "PadstackObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}'),
		"Parent": (44, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (46, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (47, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (45, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((42, LCID, 4, 0),()),
		"FixLock": ((48, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	PadstackObjects: str # IMGCPCBPadstackObjects; read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTeardropDefault(DispatchBaseClass):
	'MGCPCB Teardrop Parameters Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}')
	coclass_clsid = IID('{EDEDED6A-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Deletes this teardrop default.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	# The method GetMaxMultiViaToMultiViaDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxMultiViaToMultiViaDistance(self, eUnit=0):
		'Returns the maximum distance to allow a multi via to multi via teardrop.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMaxMultiViaToSMDPadDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxMultiViaToSMDPadDistance(self, eUnit=0):
		'Returns the maximum distance to allow a multi via to SMD pad teardrop.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMaxMultiViaToViaDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxMultiViaToViaDistance(self, eUnit=0):
		'Returns the maximum distance to allow a multi via to via teardrop.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMaxPadToPadDistance is actually a property, but must be used as a method to correctly pass the arguments
	def GetMaxPadToPadDistance(self, eUnit=0):
		'Returns the maximum part pad to via pad distance a teardrop can span.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPreferredLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetPreferredLength(self, eUnit=0):
		'Returns the prefered length of the teardrop for absolute generation.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSecondaryLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetSecondaryLength(self, eUnit=0):
		'Returns the secondary length of the teardrop for absolute generation.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"ExcludeMultiViaToMultiVia": (11, 2, (11, 0), (), "ExcludeMultiViaToMultiVia", None),
		"ExcludeMultiViaToSMDPad": (15, 2, (11, 0), (), "ExcludeMultiViaToSMDPad", None),
		"ExcludeMultiViaToVia": (13, 2, (11, 0), (), "ExcludeMultiViaToVia", None),
		"ExcludeRectPads": (6, 2, (11, 0), (), "ExcludeRectPads", None),
		"ExcludeSMDPads": (7, 2, (11, 0), (), "ExcludeSMDPads", None),
		"IncludeFixLockTraces": (5, 2, (11, 0), (), "IncludeFixLockTraces", None),
		"Layer": (9, 2, (3, 0), (), "Layer", None),
		"LengthRatio": (1, 2, (5, 0), (), "LengthRatio", None),
		"MaxMultiViaToMultiViaDistance": (12, 2, (5, 0), ((3, 49),), "MaxMultiViaToMultiViaDistance", None),
		"MaxMultiViaToSMDPadDistance": (16, 2, (5, 0), ((3, 49),), "MaxMultiViaToSMDPadDistance", None),
		"MaxMultiViaToViaDistance": (14, 2, (5, 0), ((3, 49),), "MaxMultiViaToViaDistance", None),
		"MaxPadToPadDistance": (4, 2, (5, 0), ((3, 49),), "MaxPadToPadDistance", None),
		"PreferredLength": (2, 2, (5, 0), ((3, 49),), "PreferredLength", None),
		"SecondaryLength": (3, 2, (5, 0), ((3, 49),), "SecondaryLength", None),
	}
	_prop_map_put_ = {
	}

	ExcludeMultiViaToMultiVia: str # read_only
	ExcludeMultiViaToSMDPad: str # read_only
	ExcludeMultiViaToVia: str # read_only
	ExcludeRectPads: str # read_only
	ExcludeSMDPads: str # read_only
	IncludeFixLockTraces: str # read_only
	Layer: str # read_only
	LengthRatio: str # read_only
	MaxMultiViaToMultiViaDistance: str # read_only
	MaxMultiViaToSMDPadDistance: str # read_only
	MaxMultiViaToViaDistance: str # read_only
	MaxPadToPadDistance: str # read_only
	PreferredLength: str # read_only
	SecondaryLength: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTeardropDefaults(DispatchBaseClass):
	'MGCPCB Teardrop Default collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')
	coclass_clsid = IID('{EDEDED6B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pTeardropDefault=defaultNamedNotOptArg):
		'Adds a teardrop default to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pTeardropDefault
			)

	def Delete(self):
		'Delete breakout defaults in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBTeardropDefault
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the teardrop default of a given index in the teardrop defaults collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort teardrop defaults in this collection by parent position and layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the teardrop default of a given index in the teardrop defaults collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTeardrops(DispatchBaseClass):
	'MGCPCB Teardrop Collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')
	coclass_clsid = IID('{EDEDED69-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pTeardrop=defaultNamedNotOptArg):
		'Adds a teardrop to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pTeardrop
			)

	def Delete(self):
		'Delete all teardrops in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBTeardrop
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the teardrop of a given index in the teardrop collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort teardrops in this collection by net and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the teardrop of a given index in the teardrop collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTestFixtureOutline(DispatchBaseClass):
	'MGCPCB Test Fixture Outline Object.'
	CLSID = IID('{585FFB16-62CC-4252-BE51-45D541FA8266}')
	coclass_clsid = IID('{5F43EC13-8A7A-4D88-BBC9-B310BD2F6743}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (43, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (41, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (42, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((43, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTieLeg(DispatchBaseClass):
	'MGCPCB Tie Leg Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}')
	coclass_clsid = IID('{EDEDED95-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsModified(self):
		'Returns true if this tie leg has been manually edited since it was generated.'
		return self._oleobj_.InvokeTypes(47, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'ActualPlaneShape' returns object of type 'IMGCPCBActualPlaneShape'
		"ActualPlaneShape": (46, 2, (9, 0), (), "ActualPlaneShape", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}'),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (43, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (51, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (53, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (52, 2, (9, 0), (), "Parent", None),
		# Method 'PlaneShape' returns object of type 'IMGCPCBPlaneShape'
		"PlaneShape": (45, 2, (9, 0), (), "PlaneShape", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}'),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (49, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (50, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Subnet": (44, 2, (3, 0), (), "Subnet", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (48, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"FixLock": ((51, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	ActualPlaneShape: str # IMGCPCBActualPlaneShape; read_only
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	Parent: str # read_only
	PlaneShape: str # IMGCPCBPlaneShape; read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Subnet: str # read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTieLegs(DispatchBaseClass):
	'MGCPCB Tie Legs collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')
	coclass_clsid = IID('{EDEDED96-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pTieLeg=defaultNamedNotOptArg):
		'Adds an tie leg to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pTieLeg
			)

	def Delete(self):
		'Delete all tie legs in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBTieLeg
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the tie leg of a given index in the tie leg collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort tie legs in this collection by layer.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the tie leg of a given index in the tie leg collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTiebar(DispatchBaseClass):
	'MGCPCB Trace Object.'
	CLSID = IID('{8D64846E-3942-4DD1-AF9E-102981DA52D2}')
	coclass_clsid = IID('{42DF9F9D-8B9E-475C-8024-B68AF6AAA3CB}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetConnectionPoints is actually a property, but must be used as a method to correctly pass the arguments
	def GetConnectionPoints(self, eUnit=0):
		'This property returns the two connection points for this tiebar.'
		return self._ApplyTypes_(44, 2, (12, 0), ((3, 49),), 'GetConnectionPoints', None,eUnit
			)

	def GetShortedNets(self):
		'Returns an array of shorted net names.'
		return self._ApplyTypes_(43, 1, (12, 0), (), 'GetShortedNets', None,)

	# The method GetWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetWidth(self, eUnit=0):
		'Returns the width of the tiebar.'
		return self._oleobj_.InvokeTypes(42, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		"ConnectionPoints": (44, 2, (12, 0), ((3, 49),), "ConnectionPoints", None),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"Width": (42, 2, (5, 0), ((3, 49),), "Width", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	ConnectionPoints: str # read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	Width: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTiebars(DispatchBaseClass):
	'MGCPCB tiebar collection.'
	CLSID = IID('{0B2A45D4-326B-493F-A476-16B04123A8CB}')
	coclass_clsid = IID('{64FE251C-549A-4B0B-BBF5-E7EE6E32ECF4}')

	# Result is of type IMGCPCBTiebar
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the tiebar of a given index in the tiebars collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{8D64846E-3942-4DD1-AF9E-102981DA52D2}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort Tiebars in this collection by position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the tiebar of a given index in the tiebars collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{8D64846E-3942-4DD1-AF9E-102981DA52D2}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{8D64846E-3942-4DD1-AF9E-102981DA52D2}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBToolingHole(DispatchBaseClass):
	'MGCPCB ToolingHole Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}')
	coclass_clsid = IID('{EDEDED85-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBUserPads
	# The method GetUserPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserPads(self, sLayerOnly='*'):
		'Returns the collection of user pads.'
		return self._ApplyTypes_(40, 2, (9, 32), ((8, 49),), 'GetUserPads', '{ACC37237-2F98-403B-8783-C21D7026F5B4}',sLayerOnly
			)

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"FixLock": (45, 2, (3, 0), (), "FixLock", None),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parent": (44, 2, (9, 0), (), "Parent", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (42, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (43, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"UniqueId": (41, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserPads' returns object of type 'IMGCPCBUserPads'
		"UserPads": (40, 2, (9, 32), ((8, 49),), "UserPads", '{ACC37237-2F98-403B-8783-C21D7026F5B4}'),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"FixLock": ((45, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	FixLock: str # read/write
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	UniqueId: str # read_only
	UserPads: str # IMGCPCBUserPads; read_only
	_Handle: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBToolingHoles(DispatchBaseClass):
	'MGCPCB ToolingHole collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED86}')
	coclass_clsid = IID('{EDEDED86-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pToolingHole=defaultNamedNotOptArg):
		'Adds a tooling hole to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pToolingHole
			)

	def Delete(self):
		'Delete all tooling holes in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBToolingHole
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'Returns the tooling hole of a given index in the tooling hole collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort tooling holes in this collection by hole name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'Returns the tooling hole of a given index in the tooling hole collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTrace(DispatchBaseClass):
	'MGCPCB Trace Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')
	coclass_clsid = IID('{EDEDED0E-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Combine(self, inputTrace=defaultNamedNotOptArg):
		'Combines the current trace with the trace passed in.  The current trace becomes the combined trace. Traces must be on the same net and have an overlapping point.'
		return self._oleobj_.InvokeTypes(55, LCID, 1, (24, 0), ((9, 1),),inputTrace
			)

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetLength(self, eUnit=0):
		'Returns the length of the trace.'
		return self._oleobj_.InvokeTypes(47, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBTraceSegments
	# The method GetTraceSegments is actually a property, but must be used as a method to correctly pass the arguments
	def GetTraceSegments(self, eSelectOnly=0):
		"Returns the Trace's collection of trace segments."
		ret = self._oleobj_.InvokeTypes(53, LCID, 2, (9, 0), ((3, 49),),eSelectOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetTraceSegments', '{E9383918-8714-45AA-BA68-B0FDB928473C}')
		return ret

	# The method GetVp is actually a property, but must be used as a method to correctly pass the arguments
	def GetVp(self, eUnit=0):
		'Returns the velocity of propagation of a signal down the trace.'
		return self._oleobj_.InvokeTypes(45, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBTraces
	def Split(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Given an x, y location, the current trace is split at that point.  A collection of traces is returned'
		ret = self._oleobj_.InvokeTypes(54, LCID, 1, (9, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'Split', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')
		return ret

	_prop_map_get_ = {
		"Anchor": (42, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (43, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (49, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (56, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		"Length": (47, 2, (5, 0), ((3, 49),), "Length", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (58, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (50, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (48, 2, (9, 0), (), "Parent", None),
		"Placed": (57, 2, (11, 0), (), "Placed", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (51, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (52, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Subnet": (44, 2, (3, 0), (), "Subnet", None),
		# Method 'TraceSegments' returns object of type 'IMGCPCBTraceSegments'
		"TraceSegments": (53, 2, (9, 0), ((3, 49),), "TraceSegments", '{E9383918-8714-45AA-BA68-B0FDB928473C}'),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (87, 2, (12, 0), (), "UniqueId", None),
		"Vp": (45, 2, (5, 0), ((3, 49),), "Vp", None),
		"Zo": (46, 2, (5, 0), (), "Zo", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((42, LCID, 4, 0),()),
		"DisplayCondition": ((49, LCID, 4, 0),()),
		"FixLock": ((56, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Net": ((41, LCID, 8, 0),()),
		"OriginalLayer": ((50, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	Length: int # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	Placed: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Subnet: str # read_only
	TraceSegments: str # IMGCPCBTraceSegments; read_only
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	Vp: str # read_only
	Zo: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTraceSegment(DispatchBaseClass):
	'MGCPCB TraceSegment Object.'
	CLSID = IID('{BCC7826E-B004-43A2-A084-A76329E08D2B}')
	coclass_clsid = IID('{B96D1270-A555-4AD2-9A59-EE5A4943F47A}')

	# The method GetPoint1X is actually a property, but must be used as a method to correctly pass the arguments
	def GetPoint1X(self, eUnit=0):
		'Returns the tracesegment point 1 X position.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPoint1Y is actually a property, but must be used as a method to correctly pass the arguments
	def GetPoint1Y(self, eUnit=0):
		'Returns the tracesegment point 1 Y position.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPoint2X is actually a property, but must be used as a method to correctly pass the arguments
	def GetPoint2X(self, eUnit=0):
		'Returns the tracesegment point 2 X position.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPoint2Y is actually a property, but must be used as a method to correctly pass the arguments
	def GetPoint2Y(self, eUnit=0):
		'Returns the tracesegment point 2 Y position.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (1, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"Point1X": (4, 2, (5, 0), ((3, 49),), "Point1X", None),
		"Point1Y": (5, 2, (5, 0), ((3, 49),), "Point1Y", None),
		"Point2X": (6, 2, (5, 0), ((3, 49),), "Point2X", None),
		"Point2Y": (7, 2, (5, 0), ((3, 49),), "Point2Y", None),
		# Method 'Trace' returns object of type 'IMGCPCBTrace'
		"Trace": (3, 2, (9, 0), (), "Trace", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}'),
	}
	_prop_map_put_ = {
	}

	Geometry: str # IMGCPCBGeometry; read_only
	Name: str # read_only
	Point1X: str # read_only
	Point1Y: str # read_only
	Point2X: str # read_only
	Point2Y: str # read_only
	Trace: str # IMGCPCBTrace; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTraceSegments(DispatchBaseClass):
	'MGCPCB tracesegment collection.'
	CLSID = IID('{E9383918-8714-45AA-BA68-B0FDB928473C}')
	coclass_clsid = IID('{BA6106DA-5EA2-42AA-AD89-A2F3C050B80C}')

	def Add(self, pTraceSegment=defaultNamedNotOptArg):
		'Adds a trace segment to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pTraceSegment
			)

	# Result is of type IMGCPCBTraceSegment
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the trace segment of a given index in the trace segment collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{BCC7826E-B004-43A2-A084-A76329E08D2B}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort trace segments in this collection by net and position.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the trace segment of a given index in the trace segment collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{BCC7826E-B004-43A2-A084-A76329E08D2B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{BCC7826E-B004-43A2-A084-A76329E08D2B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTracedrop(DispatchBaseClass):
	'MGCPCB Tracedrop Object.'
	CLSID = IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}')
	coclass_clsid = IID('{EDEDEDA9-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		"Anchor": (42, 2, (3, 0), (), "Anchor", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (48, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (49, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (41, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		# Method 'PadstackObjects' returns object of type 'IMGCPCBPadstackObjects'
		"PadstackObjects": (43, 2, (9, 0), (), "PadstackObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}'),
		"Parent": (44, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (46, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (47, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"Type": (33, 2, (3, 0), (), "Type", None),
		"Type2": (36, 2, (3, 0), (), "Type2", None),
		"UniqueId": (45, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((42, LCID, 4, 0),()),
		"FixLock": ((48, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Layer": ((31, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Anchor: str # read/write
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read/write
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # IMGCPCBNet; read_only
	ObjectClass: str # read_only
	PadstackObjects: str # IMGCPCBPadstackObjects; read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	Type: str # read_only
	Type2: str # read_only
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBTracedrops(DispatchBaseClass):
	'MGCPCB Tracedrop Collection.'
	CLSID = IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')
	coclass_clsid = IID('{EDEDEDAA-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pBreakoutTrace=defaultNamedNotOptArg):
		'Adds a tracedrop to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pBreakoutTrace
			)

	def Delete(self):
		'Delete all tracedrops in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBTracedrop
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the tracedrop of a given index in the breakout trace collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort tracedrops in this collection by net and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the tracedrop of a given index in the breakout trace collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTraces(DispatchBaseClass):
	'MGCPCB trace collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')
	coclass_clsid = IID('{EDEDED0D-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pTrace=defaultNamedNotOptArg):
		'Adds a trace to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pTrace
			)

	def Delete(self):
		'Delete all traces in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# The method GetTraceLength is actually a property, but must be used as a method to correctly pass the arguments
	def GetTraceLength(self, eUnit=0):
		'Returns total trace length.'
		return self._oleobj_.InvokeTypes(35, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBTrace
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the trace of a given index in the trace collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort traces in this collection by net and position.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
		"TraceLength": (35, 2, (5, 0), ((3, 49),), "TraceLength", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((33, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	TraceLength: str # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the trace of a given index in the trace collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBTuningMeter(DispatchBaseClass):
	CLSID = IID('{C08852D9-8D46-4AF5-8957-C02383D370A8}')
	coclass_clsid = IID('{112EBB48-A7FC-4993-BFDC-207DACB7EF41}')

	def Update(self, dMinLength=defaultNamedNotOptArg, dMaxLength=defaultNamedNotOptArg, dTargetLength=defaultNamedNotOptArg, dRoutedLength=defaultNamedNotOptArg
			, dEstimatedLength=defaultNamedNotOptArg, strUnit=defaultNamedNotOptArg, isWholeNetSolution=False, isApproximateSolution=False):
		'Update the tuning meter with new values. Redraw the tuning meter if visible property is true.'
		return self._oleobj_.InvokeTypes(0, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (8, 1), (11, 49), (11, 49)),dMinLength
			, dMaxLength, dTargetLength, dRoutedLength, dEstimatedLength, strUnit
			, isWholeNetSolution, isApproximateSolution)

	_prop_map_get_ = {
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Visible": ((1, LCID, 4, 0),()),
	}

	Visible: bool # read/write

	# Default method for this class is 'Update'
	def __call__(self, dMinLength=defaultNamedNotOptArg, dMaxLength=defaultNamedNotOptArg, dTargetLength=defaultNamedNotOptArg, dRoutedLength=defaultNamedNotOptArg
			, dEstimatedLength=defaultNamedNotOptArg, strUnit=defaultNamedNotOptArg, isWholeNetSolution=False, isApproximateSolution=False):
		'Update the tuning meter with new values. Redraw the tuning meter if visible property is true.'
		return self._oleobj_.InvokeTypes(0, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (8, 1), (11, 49), (11, 49)),dMinLength
			, dMaxLength, dTargetLength, dRoutedLength, dEstimatedLength, strUnit
			, isWholeNetSolution, isApproximateSolution)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBUserLayer(DispatchBaseClass):
	'MGCPCB User Layer Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')
	coclass_clsid = IID('{EDEDED70-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Delete(self):
		'Delete this user layer.  Only user layers without data present can be deleted.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Name": (0, 2, (8, 0), (), "Name", None),
	}
	_prop_map_put_ = {
	}

	Name: str # read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBUserLayerGfx(DispatchBaseClass):
	'MGCPCB User Layer Gfx Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}')
	coclass_clsid = IID('{EDEDED51-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def ChangeType(self, eObjectClass=defaultNamedNotOptArg, pLayerObject=defaultNamedNotOptArg):
		'Change type of UserLayerGfx to a FabricationLayerGfx type'
		ret = self._oleobj_.InvokeTypes(39, LCID, 1, (9, 0), ((3, 0), (9, 0)),eObjectClass
			, pLayerObject)
		if ret is not None:
			ret = Dispatch(ret, 'ChangeType', None)
		return ret

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(34, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		"Returns the graphics's X position."
		return self._oleobj_.InvokeTypes(46, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		"Returns the graphics's Y position."
		return self._oleobj_.InvokeTypes(47, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsConstructionElement(self):
		'Determines if this is a construction element.'
		return self._oleobj_.InvokeTypes(38, LCID, 1, (11, 0), (),)

	def IsDimensionGfx(self):
		'Determines if this graphics item is dimension graphics.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this graphics object.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		"DisplayCondition": (41, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (45, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		"Layer": (31, 2, (3, 0), (), "Layer", None),
		"LayerName": (32, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (48, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (30, 2, (8, 0), (), "Name", None),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (42, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (37, 2, (9, 0), (), "Parent", None),
		"PositionX": (46, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (47, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (43, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (44, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"UniqueId": (40, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayer' returns object of type 'IMGCPCBUserLayer'
		"UserLayer": (36, 2, (9, 0), (), "UserLayer", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}'),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DisplayCondition": ((41, LCID, 4, 0),()),
		"FixLock": ((45, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"OriginalLayer": ((42, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"UserLayer": ((36, LCID, 8, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Layer: str # read_only
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	PositionX: str # read_only
	PositionY: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	UniqueId: str # read_only
	UserLayer: str # read/write
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBUserLayerGfxs(DispatchBaseClass):
	'MGCPCB User Layer Gfx collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')
	coclass_clsid = IID('{EDEDED52-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pGfx=defaultNamedNotOptArg):
		'Adds a gfx to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pGfx
			)

	def Delete(self):
		'Delete all the user layer graphics in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBUserLayerGfx
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the gfx of a given index in the gfx collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort gfx in this collection by type and extrema.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the gfx of a given index in the gfx collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBUserLayerText(DispatchBaseClass):
	'MGCPCB User Text Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')
	coclass_clsid = IID('{EDEDED57-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def ChangeType(self, eObjectClass=defaultNamedNotOptArg, pLayerObject=defaultNamedNotOptArg):
		'Change type of UserLayer Text to Fabrication Layer Text.'
		ret = self._oleobj_.InvokeTypes(35, LCID, 1, (9, 0), ((3, 0), (9, 0)),eObjectClass
			, pLayerObject)
		if ret is not None:
			ret = Dispatch(ret, 'ChangeType', None)
		return ret

	def Delete(self):
		'Deletes the Text object.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property, on the text object, by name.'
		ret = self._oleobj_.InvokeTypes(41, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Returns the X position of the Text object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Returns the Y position of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsDimensionText(self):
		'Determines if this text is dimension text.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the text to the specified location'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the text by the specified offset.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this text.'
		ret = self._oleobj_.InvokeTypes(42, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the X position of the Text object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the Y position of the Text object.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	def SetTextType(self, pType=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), ((3, 1),),pType
			)

	def StrokeText(self, units=0):
		'Returns array containing centerline points of given text.'
		return self._ApplyTypes_(48, 1, (12, 0), ((3, 49),), 'StrokeText', None,units
			)

	_prop_map_get_ = {
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (11, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		"DisplayCondition": (39, 2, (3, 0), (), "DisplayCondition", None),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (18, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (8, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"FixLock": (46, 2, (3, 0), (), "FixLock", None),
		# Method 'Format' returns object of type 'IMGCPCBFormat'
		"Format": (9, 2, (9, 0), (), "Format", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}'),
		"Layer": (30, 2, (3, 0), (), "Layer", None),
		"LayerName": (31, 2, (8, 0), (), "LayerName", None),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (47, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ObjectClass": (14, 2, (3, 0), (), "ObjectClass", None),
		"OriginalLayer": (40, 2, (3, 0), (), "OriginalLayer", None),
		"Parent": (38, 2, (9, 0), (), "Parent", None),
		"PositionX": (3, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (4, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (43, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (44, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (45, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"TextString": (2, 2, (8, 0), (), "TextString", None),
		"TextType": (6, 2, (3, 0), (), "TextType", None),
		"UniqueId": (36, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserLayer' returns object of type 'IMGCPCBUserLayer'
		"UserLayer": (33, 2, (9, 0), (), "UserLayer", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}'),
		"_Handle": (13, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"DisplayCondition": ((39, LCID, 4, 0),()),
		"FixLock": ((46, LCID, 4, 0),()),
		"OriginalLayer": ((40, LCID, 4, 0),()),
		"PositionX": ((3, LCID, 4, 0),()),
		"PositionY": ((4, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"TextString": ((2, LCID, 4, 0),()),
		"UserLayer": ((33, LCID, 8, 0),()),
		"_Handle": ((13, LCID, 4, 0),()),
	}

	Component: str # IMGCPCBComponent; read_only
	DisplayCondition: str # read/write
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FixLock: str # read/write
	Format: str # IMGCPCBFormat; read_only
	Layer: str # read_only
	LayerName: str # read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	ObjectClass: str # read_only
	OriginalLayer: str # read/write
	Parent: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	TextString: str # read/write
	TextType: str # read_only
	UniqueId: str # read_only
	UserLayer: str # read/write
	_Handle: str # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBUserLayerTexts(DispatchBaseClass):
	'MGCPCB User Text collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')
	coclass_clsid = IID('{EDEDED58-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pText=defaultNamedNotOptArg):
		'Adds a text to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pText
			)

	def Delete(self):
		'Delete all user layer text in the collection.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBUserLayerText
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the text of a given index in the text collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort text in this collection by text string and location.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the text of a given index in the text collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBUserLayers(DispatchBaseClass):
	'MGCPCB User Layers Collection Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED70}')
	coclass_clsid = IID('{EDEDED71-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pUserlayer=defaultNamedNotOptArg):
		'Adds a user layer to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pUserlayer
			)

	# Result is of type IMGCPCBUserLayer
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the user layer of a given index in the UserLayers collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort user layers in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the user layer of a given index in the UserLayers collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBUserPad(DispatchBaseClass):
	'MGCPCB User Pad Object.'
	CLSID = IID('{0A6E0E06-2267-49D6-AC17-548E09AE85CD}')
	coclass_clsid = IID('{A5EF4AE4-C5B1-4DFF-811A-2B55EB8A78EB}')

	def AddGeometry(self, PointsArray=defaultNamedNotOptArg, RemoveExisting=True, Unit=0):
		"Adds a geometry to the pad's geometry collection with the option of clearing the existing geometries.(Beta)"
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((16396, 1), (11, 49), (3, 49)),PointsArray
			, RemoveExisting, Unit)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (5, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'Geometries' returns object of type 'IMGCPCBGeometries'
		"Geometries": (2, 2, (9, 0), (), "Geometries", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"ShapeType": (4, 2, (3, 0), (), "ShapeType", None),
		# Method 'UserLayer' returns object of type 'IMGCPCBUserLayer'
		"UserLayer": (1, 2, (9, 0), (), "UserLayer", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}'),
	}
	_prop_map_put_ = {
	}

	Extrema: str # IMGCPCBExtrema; read_only
	Geometries: str # IMGCPCBGeometries; read_only
	Name: str # read_only
	ShapeType: str # read_only
	UserLayer: str # IMGCPCBUserLayer; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBUserPads(DispatchBaseClass):
	'MGCPCB User Pad collection.'
	CLSID = IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')
	coclass_clsid = IID('{19561159-3A13-4D58-AEEA-7FD328997BD2}')

	def Add(self, pUserPad=defaultNamedNotOptArg):
		'Adds a pad to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pUserPad
			)

	# Result is of type IMGCPCBUserPad
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the pad of a given index in the pad collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0A6E0E06-2267-49D6-AC17-548E09AE85CD}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort pads in this collection by name.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the pad of a given index in the pad collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0A6E0E06-2267-49D6-AC17-548E09AE85CD}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0A6E0E06-2267-49D6-AC17-548E09AE85CD}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBUtility(DispatchBaseClass):
	'MGCPCB Utility Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4B}')
	coclass_clsid = IID('{EDEDED4C-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def ConvertUnit(self, dValue=defaultNamedNotOptArg, eFromUnit=defaultNamedNotOptArg, eToUnit=defaultNamedNotOptArg):
		'Returns the value converted to the specified unit.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (5, 0), ((5, 1), (3, 1), (3, 1)),dValue
			, eFromUnit, eToUnit)

	def CreateCircleXYR(self, dCenterX=defaultNamedNotOptArg, dCenterY=defaultNamedNotOptArg, dRadiues=defaultNamedNotOptArg):
		'Creates a cirlce XYR.'
		return self._ApplyTypes_(3, 1, (12, 0), ((5, 1), (5, 1), (5, 1)), 'CreateCircleXYR', None,dCenterX
			, dCenterY, dRadiues)

	def CreateLineXYR(self, startX=defaultNamedNotOptArg, startY=defaultNamedNotOptArg, endX=defaultNamedNotOptArg, endY=defaultNamedNotOptArg):
		'Creates a line XYR.'
		return self._ApplyTypes_(28, 1, (12, 0), ((5, 1), (5, 1), (5, 1), (5, 1)), 'CreateLineXYR', None,startX
			, startY, endX, endY)

	def CreateRectXYR(self, dMinX=defaultNamedNotOptArg, dMinY=defaultNamedNotOptArg, dMaxX=defaultNamedNotOptArg, dMaxY=defaultNamedNotOptArg):
		'Creates a rectangle XYR.'
		return self._ApplyTypes_(2, 1, (12, 0), ((5, 1), (5, 1), (5, 1), (5, 1)), 'CreateRectXYR', None,dMinX
			, dMinY, dMaxX, dMaxY)

	def CreateScriptObject(self, Script=defaultNamedNotOptArg, CreateFromFile=True):
		'Creates an object from a script or from script text. (Beta)'
		ret = self._oleobj_.InvokeTypes(20, LCID, 1, (9, 0), ((8, 1), (11, 49)),Script
			, CreateFromFile)
		if ret is not None:
			ret = Dispatch(ret, 'CreateScriptObject', None)
		return ret

	def Dummy(self):
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBApplication
	def FindApplication(self, vAppDescriptor=defaultNamedNotOptArg):
		'Returns the Application object of a running application instance.  The input can be a string that specifies a document(full path only) or an integer that specifies the index of the application instance(0 based indexing)'
		ret = self._oleobj_.InvokeTypes(18, LCID, 1, (9, 0), ((12, 1),),vAppDescriptor
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindApplication', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}')
		return ret

	def GetUniqueIdString(self, UniqueId=defaultNamedNotOptArg):
		'Converts a 64 bit integer UniqueId into a string.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(23, LCID, 1, (8, 0), ((12, 1),),UniqueId
			)

	def IsEqual(self, UniqueId1=defaultNamedNotOptArg, UniqueId2=defaultNamedNotOptArg):
		'Returns true if these two ids are equivalent.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), ((12, 1), (12, 1)),UniqueId1
			, UniqueId2)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def MemoryUsage(self):
		'Returns the amount of memory (in kbytes) in use by the application. (Internal use only.)'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (3, 0), (),)

	# Result is of type IMGCPCBColor
	def NewColor(self, nRed=255, nGreen=255, nBlue=255):
		'Returns a new Color object.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((2, 49), (2, 49), (2, 49)),nRed
			, nGreen, nBlue)
		if ret is not None:
			ret = Dispatch(ret, 'NewColor', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')
		return ret

	# Result is of type IMGCPCBColorPattern
	def NewColorPattern(self, nRed=255, nGreen=255, nBlue=255, nAlphaBlend=100
			, nPattern=0, bTransparent=False, bOutline=False):
		'Returns a new ColorPattern object.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((2, 49), (2, 49), (2, 49), (3, 49), (2, 49), (11, 49), (11, 49)),nRed
			, nGreen, nBlue, nAlphaBlend, nPattern, bTransparent
			, bOutline)
		if ret is not None:
			ret = Dispatch(ret, 'NewColorPattern', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')
		return ret

	# Result is of type IMGCPCBComponents
	def NewComponents(self):
		'Returns a new empty Components collection.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewComponents', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')
		return ret

	# Result is of type IMGCPCBExtrema
	def NewExtrema(self, MinX=defaultNamedNotOptArg, MinY=defaultNamedNotOptArg, MaxX=defaultNamedNotOptArg, MaxY=defaultNamedNotOptArg
			, eUnit=0):
		'Returns a new Extrema object.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (3, 49)),MinX
			, MinY, MaxX, MaxY, eUnit)
		if ret is not None:
			ret = Dispatch(ret, 'NewExtrema', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')
		return ret

	# Result is of type IMGCPCBFromTos
	def NewFromTos(self):
		'Returns a new empty collection of FromTos.'
		ret = self._oleobj_.InvokeTypes(29, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewFromTos', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')
		return ret

	# Result is of type IMGCPCBGroups
	def NewGroups(self):
		'Returns a new empty Groups collection.'
		ret = self._oleobj_.InvokeTypes(27, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewGroups', '{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')
		return ret

	# Result is of type IMGCPCBLayerObject
	def NewLayerObject(self):
		'Returns a new, uninitialized LayerObject object.'
		ret = self._oleobj_.InvokeTypes(12, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewLayerObject', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')
		return ret

	# Result is of type IMGCPCBLayerObjects
	def NewLayerObjects(self):
		'Returns a new, empty LayerObjects collection.'
		ret = self._oleobj_.InvokeTypes(13, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewLayerObjects', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')
		return ret

	# Result is of type IMGCPCBLayerRange
	def NewLayerRange(self, StartLayer=defaultNamedNotOptArg, EndLayer=defaultNamedNotOptArg):
		'Returns a new LayerRange object.'
		ret = self._oleobj_.InvokeTypes(22, LCID, 1, (9, 0), ((3, 1), (3, 1)),StartLayer
			, EndLayer)
		if ret is not None:
			ret = Dispatch(ret, 'NewLayerRange', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}')
		return ret

	# Result is of type IMGCPCBLayerRanges
	def NewLayerRanges(self):
		'Returns a new, empty LayerRanges collection.'
		ret = self._oleobj_.InvokeTypes(21, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewLayerRanges', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')
		return ret

	# Result is of type IMGCPCBNets
	def NewNets(self):
		'Returns a new empty Nets collection.'
		ret = self._oleobj_.InvokeTypes(11, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewNets', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')
		return ret

	# Result is of type IMGCPCBObjectFilter
	def NewObjectFilter(self):
		'Creates a filter object initialized to contian the set of all objects.'
		ret = self._oleobj_.InvokeTypes(25, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewObjectFilter', '{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}')
		return ret

	# Result is of type IMGCPCBObjects
	def NewObjects(self):
		'Returns a new, empty Objects collection.'
		ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewObjects', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')
		return ret

	# Result is of type IMGCPCBPhysicalReuseLibraryCircuits
	def NewPhysicalReuseLibraryCircuits(self):
		'Returns a new empty PhysicalReuseLibraryCircuits collection.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewPhysicalReuseLibraryCircuits', '{4E0A6DAF-4C0D-415C-B43D-A6A1ED666FE6}')
		return ret

	_prop_map_get_ = {
		"Globals": (26, 2, (9, 0), (), "Globals", None),
	}
	_prop_map_put_ = {
	}

	Globals: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBVariantInfo(DispatchBaseClass):
	'MGCPCB VariantInfo Object. (Internal use only.)'
	CLSID = IID('{75404CBD-630D-4F46-A588-6251B8FE7514}')
	coclass_clsid = None

	def PutVariant(self, sVariantSpec=defaultNamedNotOptArg, ReservedForFutureUse=defaultNamedNotOptArg, ReserverdForFutureUse2=defaultNamedNotOptArg, bPreserve=True):
		'Adds a variant or list of variants.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (11, 49)),sVariantSpec
			, ReservedForFutureUse, ReserverdForFutureUse2, bPreserve)

	def RemoveAllVariants(self):
		'Removes all variants'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	def RemoveVariant(self, sVariantSpec=defaultNamedNotOptArg):
		'Removes a variant. Or a list of variants.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), ((12, 1),),sVariantSpec
			)

	_prop_map_get_ = {
		"Parent": (5, 2, (9, 0), (), "Parent", None),
		"Variants": (1, 2, (12, 0), (), "Variants", None),
	}
	_prop_map_put_ = {
	}

	Parent: str # read_only
	Variants: str # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBVia(DispatchBaseClass):
	'MGCPCB Via Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')
	coclass_clsid = IID('{EDEDED10-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def AddShortedNets(self, nLayer=defaultNamedNotOptArg, shortedNets=defaultNamedNotOptArg):
		'Add shorted nets to a given layer.'
		return self._oleobj_.InvokeTypes(64, LCID, 1, (24, 0), ((3, 1), (12, 1)),nLayer
			, shortedNets)

	def Delete(self):
		'Delete this padstack object.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBProperty
	def FindProperty(self, sName=defaultNamedNotOptArg):
		'Find the property by name.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((8, 1),),sName
			)
		if ret is not None:
			ret = Dispatch(ret, 'FindProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBBreakoutDefaults
	# The method GetBreakoutDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetBreakoutDefaults(self, nLayer=0):
		"Returns this via's breakout defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(42, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBreakoutDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')
		return ret

	# The method GetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def GetOrientation(self, eUnit=0):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# Result is of type IMGCPCBPads
	# The method GetPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetPads(self, nLayer=0, bIncludeNegativePads=False):
		'Returns the pad collection for this padstack object on the specified layer (0=all layers). May optionally return the negative pads too, the presence of a negative pad on a layer will override the regular pad on that layer.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 2, (9, 0), ((3, 49), (11, 49)),nLayer
			, bIncludeNegativePads)
		if ret is not None:
			ret = Dispatch(ret, 'GetPads', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')
		return ret

	# The method GetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionX(self, eUnit=0):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetPositionY(self, eUnit=0):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def GetShortedNets(self, nLayer=defaultNamedNotOptArg):
		'Returns an array of shorted nets on a given layer.'
		return self._ApplyTypes_(66, 1, (12, 0), ((3, 1),), 'GetShortedNets', None,nLayer
			)

	# Result is of type IMGCPCBTeardropDefaults
	# The method GetTeardropDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def GetTeardropDefaults(self, nLayer=0):
		"Returns this via's teardrop defaults.  A single layer can be specified."
		ret = self._oleobj_.InvokeTypes(43, LCID, 2, (9, 0), ((3, 49),),nLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetTeardropDefaults', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')
		return ret

	# Result is of type IMGCPCBUserPads
	# The method GetUserPads is actually a property, but must be used as a method to correctly pass the arguments
	def GetUserPads(self, sLayerOnly='*'):
		'Returns the collection of user pads.'
		return self._ApplyTypes_(52, 2, (9, 32), ((8, 49),), 'GetUserPads', '{ACC37237-2F98-403B-8783-C21D7026F5B4}',sLayerOnly
			)

	# The method IsConnectedToPathOrAreaOnLayer is actually a property, but must be used as a method to correctly pass the arguments
	def IsConnectedToPathOrAreaOnLayer(self, nLayer=defaultNamedNotOptArg):
		'Returns true if this via is connected to a path or area on the given layer.'
		return self._oleobj_.InvokeTypes(68, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	def IsMultiViaMember(self):
		'Returns true if this is a member of a multi via.'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (11, 0), (),)

	def IsPadstackModified(self):
		'Returns true if the padstack has been modified from its definition in the Padstack database.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def IsPointInside(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Is the x,y coordinate inside the pads for this object?'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	def IsSMD(self):
		'Is this an SMD padstack?'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), (),)

	def IsSkipVia(self):
		'Returns true if skip via is set.'
		return self._oleobj_.InvokeTypes(51, LCID, 1, (11, 0), (),)

	def IsStitchVia(self):
		'Returns true if via is a stitch via.'
		return self._oleobj_.InvokeTypes(70, LCID, 1, (11, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), (),)

	def Move(self, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),x
			, y, eUnit)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Move the padstack object by an offset.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	# The method PadGrowError is actually a property, but must be used as a method to correctly pass the arguments
	def PadGrowError(self, nLayer=defaultNamedNotOptArg):
		'Returns true if the via failed to grow a pad on the given layer.'
		return self._oleobj_.InvokeTypes(69, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	# Result is of type IMGCPCBProperty
	def PutProperty(self, sName=defaultNamedNotOptArg, sValue=defaultNamedNotOptArg):
		'Create a new property and bind it to this padstack object.'
		ret = self._oleobj_.InvokeTypes(31, LCID, 1, (9, 0), ((8, 1), (8, 1)),sName
			, sValue)
		if ret is not None:
			ret = Dispatch(ret, 'PutProperty', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')
		return ret

	# Result is of type IMGCPCBComponent
	def PutTestPoint(self):
		'Place a testpoint on the via in BoardStationRE'
		ret = self._oleobj_.InvokeTypes(48, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'PutTestPoint', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')
		return ret

	def RemoveShortedNets(self, nLayer=defaultNamedNotOptArg, shortedNets=defaultNamedNotOptArg):
		'Remove shorted nets from a given layer.'
		return self._oleobj_.InvokeTypes(65, LCID, 1, (24, 0), ((3, 1), (12, 1)),nLayer
			, shortedNets)

	# The method SetOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetOrientation(self, eUnit=0, arg1=defaultUnnamedArg):
		'Returns the orientation of this padstack object.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionX is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionX(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the X position of this object.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetPositionY is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionY(self, eUnit=0, arg1=defaultUnnamedArg):
		'Sets/Returns the Y position of this object.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetTieLegClearance is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegClearance(self, nLayer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Set or returns the tie leg width.'
		return self._oleobj_.InvokeTypes(56, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),nLayer
			, eUnit, arg2)

	# The method SetTieLegRotation is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegRotation(self, nLayer=0, arg1=1):
		'Set or returns the tie leg rotation.'
		return self._oleobj_.InvokeTypes(54, LCID, 4, (24, 0), ((3, 49), (3, 49)),nLayer
			, arg1)

	# The method SetTieLegType is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegType(self, nLayer=0, arg1=0):
		'Set or returns the tie leg type.'
		return self._oleobj_.InvokeTypes(53, LCID, 4, (24, 0), ((3, 49), (3, 49)),nLayer
			, arg1)

	# The method SetTieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetTieLegWidth(self, nLayer=0, eUnit=0, arg2=defaultUnnamedArg):
		'Set or returns the tie leg width.'
		return self._oleobj_.InvokeTypes(55, LCID, 4, (24, 0), ((3, 49), (3, 49), (5, 1)),nLayer
			, eUnit, arg2)

	# The method SetUsePadstackThermalDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def SetUsePadstackThermalDefaults(self, nLayer=0, arg1=True):
		'Sets or returns the option of using the padstack thermal defaults for thermal ties.'
		return self._oleobj_.InvokeTypes(57, LCID, 4, (24, 0), ((3, 49), (11, 49)),nLayer
			, arg1)

	# The method TieLegClearance is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegClearance(self, nLayer=defaultNamedNotOptArg, eUnit=0):
		'Set or returns the tie leg width.'
		return self._oleobj_.InvokeTypes(56, LCID, 2, (5, 0), ((3, 1), (3, 49)),nLayer
			, eUnit)

	# The method TieLegRotation is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegRotation(self, nLayer=defaultNamedNotOptArg):
		'Set or returns the tie leg rotation.'
		return self._oleobj_.InvokeTypes(54, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method TieLegType is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegType(self, nLayer=defaultNamedNotOptArg):
		'Set or returns the tie leg type.'
		return self._oleobj_.InvokeTypes(53, LCID, 2, (3, 0), ((3, 1),),nLayer
			)

	# The method TieLegWidth is actually a property, but must be used as a method to correctly pass the arguments
	def TieLegWidth(self, nLayer=defaultNamedNotOptArg, eUnit=0):
		'Set or returns the tie leg width.'
		return self._oleobj_.InvokeTypes(55, LCID, 2, (5, 0), ((3, 1), (3, 49)),nLayer
			, eUnit)

	# The method UsePadstackThermalDefaults is actually a property, but must be used as a method to correctly pass the arguments
	def UsePadstackThermalDefaults(self, nLayer=defaultNamedNotOptArg):
		'Sets or returns the option of using the padstack thermal defaults for thermal ties.'
		return self._oleobj_.InvokeTypes(57, LCID, 2, (11, 0), ((3, 1),),nLayer
			)

	_prop_map_get_ = {
		"Anchor": (6, 2, (3, 0), (), "Anchor", None),
		# Method 'BreakoutDefaults' returns object of type 'IMGCPCBBreakoutDefaults'
		"BreakoutDefaults": (42, 2, (9, 0), ((3, 49),), "BreakoutDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}'),
		# Method 'BreakoutTraces' returns object of type 'IMGCPCBBreakoutTraces'
		"BreakoutTraces": (45, 2, (9, 0), (), "BreakoutTraces", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}'),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (16, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'ConnectedObjects' returns object of type 'IMGCPCBObjects'
		"ConnectedObjects": (46, 2, (9, 0), (), "ConnectedObjects", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}'),
		# Method 'CurrentPadstack' returns object of type 'IMGCPCBPadstack'
		"CurrentPadstack": (28, 2, (9, 0), (), "CurrentPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (27, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (34, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		"EndLayer": (41, 2, (3, 0), (), "EndLayer", None),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (11, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		# Method 'FabricationPads' returns object of type 'IMGCPCBFabricationPads'
		"FabricationPads": (23, 2, (9, 0), (), "FabricationPads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}'),
		"FixLock": (61, 2, (3, 0), (), "FixLock", None),
		"Highlighted": (5, 2, (11, 0), (), "Highlighted", None),
		# Method 'Holes' returns object of type 'IMGCPCBHoles'
		"Holes": (25, 2, (9, 0), (), "Holes", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}'),
		# Method 'MultiBoardOutline' returns object of type 'IMGCPCBMultiBoardOutline'
		"MultiBoardOutline": (67, 2, (9, 0), (), "MultiBoardOutline", '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}'),
		"Name": (0, 2, (8, 0), (), "Name", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (8, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (29, 2, (3, 0), (), "ObjectClass", None),
		"Orientation": (15, 2, (5, 0), ((3, 49),), "Orientation", None),
		# Method 'OriginalPadstack' returns object of type 'IMGCPCBPadstack'
		"OriginalPadstack": (4, 2, (9, 0), (), "OriginalPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		# Method 'Pads' returns object of type 'IMGCPCBPads'
		"Pads": (20, 2, (9, 0), ((3, 49), (11, 49)), "Pads", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}'),
		"Parent": (50, 2, (9, 0), (), "Parent", None),
		"Placed": (63, 2, (11, 0), (), "Placed", None),
		"PositionX": (2, 2, (5, 0), ((3, 49),), "PositionX", None),
		"PositionY": (3, 2, (5, 0), ((3, 49),), "PositionY", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (9, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (59, 2, (11, 0), (), "Reserved", None),
		"ReservedBy": (60, 2, (8, 0), (), "ReservedBy", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"StartLayer": (40, 2, (3, 0), (), "StartLayer", None),
		"Subnet": (47, 2, (3, 0), (), "Subnet", None),
		# Method 'TeardropDefaults' returns object of type 'IMGCPCBTeardropDefaults'
		"TeardropDefaults": (43, 2, (9, 0), ((3, 49),), "TeardropDefaults", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}'),
		# Method 'Teardrops' returns object of type 'IMGCPCBTeardrops'
		"Teardrops": (44, 2, (9, 0), (), "Teardrops", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}'),
		# Method 'Tracedrops' returns object of type 'IMGCPCBTracedrops'
		"Tracedrops": (62, 2, (9, 0), (), "Tracedrops", '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}'),
		"Type": (26, 2, (3, 0), (), "Type", None),
		"UniqueId": (58, 2, (12, 0), (), "UniqueId", None),
		# Method 'UserPads' returns object of type 'IMGCPCBUserPads'
		"UserPads": (52, 2, (9, 32), ((8, 49),), "UserPads", '{ACC37237-2F98-403B-8783-C21D7026F5B4}'),
		"_Handle": (22, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Anchor": ((6, LCID, 4, 0),()),
		"CurrentPadstack": ((28, LCID, 4, 0),()),
		"FixLock": ((61, LCID, 4, 0),()),
		"Highlighted": ((5, LCID, 4, 0),()),
		"Net": ((8, LCID, 8, 0),()),
		"Orientation": ((15, LCID, 4, 0),()),
		"PositionX": ((2, LCID, 4, 0),()),
		"PositionY": ((3, LCID, 4, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"TieLegClearance": ((56, LCID, 4, 0),('0',)),
		"TieLegWidth": ((55, LCID, 4, 0),('0',)),
	}

	Anchor: str # read/write
	BreakoutDefaults: str # IMGCPCBBreakoutDefaults; read_only
	BreakoutTraces: str # IMGCPCBBreakoutTraces; read_only
	Component: str # IMGCPCBComponent; read_only
	ConnectedObjects: str # IMGCPCBObjects; read_only
	CurrentPadstack: str # read/write
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	EndLayer: str # read_only
	Extrema: str # IMGCPCBExtrema; read_only
	FabricationPads: str # IMGCPCBFabricationPads; read_only
	FixLock: str # read/write
	Highlighted: bool # read/write
	Holes: str # IMGCPCBHoles; read_only
	MultiBoardOutline: str # IMGCPCBMultiBoardOutline; read_only
	Name: str # read_only
	Net: str # read/write
	ObjectClass: str # read_only
	Orientation: str # read/write
	OriginalPadstack: str # IMGCPCBPadstack; read_only
	Pads: str # IMGCPCBPads; read_only
	Parent: str # read_only
	Placed: str # read_only
	PositionX: str # read/write
	PositionY: str # read/write
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	ReservedBy: str # read_only
	Selected: bool # read/write
	StartLayer: str # read_only
	Subnet: str # read_only
	TeardropDefaults: str # IMGCPCBTeardropDefaults; read_only
	Teardrops: str # IMGCPCBTeardrops; read_only
	Tracedrops: str # IMGCPCBTracedrops; read_only
	Type: str # read_only
	UniqueId: str # read_only
	UserPads: str # IMGCPCBUserPads; read_only
	_Handle: str # read_only
	TieLegClearance: str # write_only
	TieLegWidth: str # write_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBViaSpan(DispatchBaseClass):
	'MGCPCB Via Span Object.'
	CLSID = IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')
	coclass_clsid = IID('{19165111-34B6-48A8-ADAC-DFCE46334755}')

	def AddAllowedViaPadstack(self, pPadstack=defaultNamedNotOptArg):
		'Add Via Padstack to Allowed Via Padstacks collection.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((9, 1),),pPadstack
			)

	# The method GetGeneralViaClearanceOverride is actually a property, but must be used as a method to correctly pass the arguments
	def GetGeneralViaClearanceOverride(self, pViaSpan=0, eUnit=0):
		'Get or set the via to via general clearance override for this via span'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((9, 49), (3, 49)),pViaSpan
			, eUnit)

	# The method GetGrid is actually a property, but must be used as a method to correctly pass the arguments
	def GetGrid(self, eUnit=0):
		'Get or Set Via Span Grid. -1 for no grid, and 0 for default.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetSameNetViaClearanceOverride is actually a property, but must be used as a method to correctly pass the arguments
	def GetSameNetViaClearanceOverride(self, pViaSpan=0, eUnit=0):
		'Get or set the via to via same net clearance override for this via span'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((9, 49), (3, 49)),pViaSpan
			, eUnit)

	# The method GetTraceClearanceOverride is actually a property, but must be used as a method to correctly pass the arguments
	def GetTraceClearanceOverride(self, eUnit=0):
		'Get or set the via to trace general clearance override for this via span'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def RemoveAllowedViaPadstack(self, pPadstack=defaultNamedNotOptArg):
		'Remove Via Padstack from Allowed Via Padstacks collection.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((9, 1),),pPadstack
			)

	# The method SameNetViaClearanceOverrideMode is actually a property, but must be used as a method to correctly pass the arguments
	def SameNetViaClearanceOverrideMode(self, pViaSpan=defaultNamedNotOptArg):
		'Get or set the via to via same net clearance override mode for this via span'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (3, 0), ((9, 1),),pViaSpan
			)

	# The method SetGeneralViaClearanceOverride is actually a property, but must be used as a method to correctly pass the arguments
	def SetGeneralViaClearanceOverride(self, pViaSpan=0, eUnit=0, arg2=defaultUnnamedArg):
		'Get or set the via to via general clearance override for this via span'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((9, 49), (3, 49), (5, 1)),pViaSpan
			, eUnit, arg2)

	# The method SetGrid is actually a property, but must be used as a method to correctly pass the arguments
	def SetGrid(self, eUnit=0, arg1=defaultUnnamedArg):
		'Get or Set Via Span Grid. -1 for no grid, and 0 for default.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	# The method SetSameNetViaClearanceOverride is actually a property, but must be used as a method to correctly pass the arguments
	def SetSameNetViaClearanceOverride(self, pViaSpan=0, eUnit=0, arg2=defaultUnnamedArg):
		'Get or set the via to via same net clearance override for this via span'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((9, 49), (3, 49), (5, 1)),pViaSpan
			, eUnit, arg2)

	# The method SetSameNetViaClearanceOverrideMode is actually a property, but must be used as a method to correctly pass the arguments
	def SetSameNetViaClearanceOverrideMode(self, pViaSpan=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Get or set the via to via same net clearance override mode for this via span'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((9, 1), (3, 1)),pViaSpan
			, arg1)

	# The method SetTraceClearanceOverride is actually a property, but must be used as a method to correctly pass the arguments
	def SetTraceClearanceOverride(self, eUnit=0, arg1=defaultUnnamedArg):
		'Get or set the via to trace general clearance override for this via span'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((3, 49), (5, 1)),eUnit
			, arg1)

	_prop_map_get_ = {
		# Method 'AllowedViaPadstacks' returns object of type 'IMGCPCBPadstacks'
		"AllowedViaPadstacks": (4, 2, (9, 0), (), "AllowedViaPadstacks", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}'),
		"Capacitance": (7, 2, (5, 0), (), "Capacitance", None),
		# Method 'DefaultViaPadstack' returns object of type 'IMGCPCBPadstack'
		"DefaultViaPadstack": (3, 2, (9, 0), (), "DefaultViaPadstack", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}'),
		"Delay": (9, 2, (5, 0), (), "Delay", None),
		"EndLayer": (2, 2, (3, 0), (), "EndLayer", None),
		"GeneralViaClearanceOverride": (13, 2, (5, 0), ((9, 49), (3, 49)), "GeneralViaClearanceOverride", None),
		"Grid": (10, 2, (5, 0), ((3, 49),), "Grid", None),
		"Inductance": (8, 2, (5, 0), (), "Inductance", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"SameNetViaClearanceOverride": (14, 2, (5, 0), ((9, 49), (3, 49)), "SameNetViaClearanceOverride", None),
		"Skip": (11, 2, (11, 0), (), "Skip", None),
		"StartLayer": (1, 2, (3, 0), (), "StartLayer", None),
		"TraceClearanceOverride": (12, 2, (5, 0), ((3, 49),), "TraceClearanceOverride", None),
	}
	_prop_map_put_ = {
		"Capacitance": ((7, LCID, 4, 0),()),
		"DefaultViaPadstack": ((3, LCID, 4, 0),()),
		"Delay": ((9, LCID, 4, 0),()),
		"GeneralViaClearanceOverride": ((13, LCID, 4, 0),('0',)),
		"Grid": ((10, LCID, 4, 0),()),
		"Inductance": ((8, LCID, 4, 0),()),
		"SameNetViaClearanceOverride": ((14, LCID, 4, 0),('0',)),
		"Skip": ((11, LCID, 4, 0),()),
		"TraceClearanceOverride": ((12, LCID, 4, 0),()),
	}

	AllowedViaPadstacks: str # IMGCPCBPadstacks; read_only
	Capacitance: str # read/write
	DefaultViaPadstack: str # read/write
	Delay: str # read/write
	EndLayer: str # read_only
	GeneralViaClearanceOverride: str # read/write
	Grid: str # read/write
	Inductance: str # read/write
	Name: str # read_only
	SameNetViaClearanceOverride: str # read/write
	Skip: str # read/write
	StartLayer: str # read_only
	TraceClearanceOverride: str # read/write

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBViaUtility(DispatchBaseClass):
	'IMGCPCBViaUtility Interface'
	CLSID = IID('{64167F8C-BA98-4CB3-B48F-9D5CDC0FDE50}')
	coclass_clsid = IID('{64167F8C-BA98-4DB3-B48F-9D5CDC0FDE50}')

	def AddViaStitchArea(self):
		'method AddViaStitchArea'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBVias(DispatchBaseClass):
	'MGCPCB via collection.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')
	coclass_clsid = IID('{EDEDED0F-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Add(self, pVia=defaultNamedNotOptArg):
		'Adds a via to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pVia
			)

	def Delete(self):
		'Delete all vias in the collection.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBVia
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the via of a given index in the via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort vias in this collection by padstack name, layer, and position.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"CurrentPadstack": ((35, LCID, 4, 0),()),
		"Highlighted": ((32, LCID, 4, 0),()),
		"Selected": ((31, LCID, 4, 0),()),
	}

	Count: int # read_only
	CurrentPadstack: str # write_only
	Highlighted: bool # write_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the via of a given index in the via collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBView(DispatchBaseClass):
	'MGCPCB View Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')
	coclass_clsid = IID('{EDEDED06-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def Activate(self):
		'Make this the active view.'
		return self._oleobj_.InvokeTypes(50, LCID, 1, (24, 0), (),)

	def Delete(self):
		'Delete this view.  If this is the only view, this will fail.'
		return self._oleobj_.InvokeTypes(37, LCID, 1, (24, 0), (),)

	def DumpContents(self):
		'Dumps the contents of the view.'
		return self._oleobj_.InvokeTypes(52, LCID, 1, (24, 0), (),)

	# The method GetCenterX is actually a property, but must be used as a method to correctly pass the arguments
	def GetCenterX(self, eUnit=0):
		'Returns the x coordinate of center of the view'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetCenterY is actually a property, but must be used as a method to correctly pass the arguments
	def GetCenterY(self, eUnit=0):
		'Returns the y coordinate of center of the view'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMousePositionX is actually a property, but must be used as a method to correctly pass the arguments
	def GetMousePositionX(self, eUnit=0):
		'Get the current mouse position.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetMousePositionY is actually a property, but must be used as a method to correctly pass the arguments
	def GetMousePositionY(self, eUnit=0):
		'Get the current mouse position.'
		return self._oleobj_.InvokeTypes(18, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	# The method GetPixelWidth is actually a property, but must be used as a method to correctly pass the arguments
	def GetPixelWidth(self, eUnit=0):
		'Returns the width of one pixel.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 49),),eUnit
			)

	def IsMouseCursorInView(self):
		'REturn if the mouse cursor is currently over this view, only valid for pcb view.'
		return self._oleobj_.InvokeTypes(55, LCID, 1, (11, 0), (),)

	def IsSelectable(self, UniqueIdOrObject=defaultNamedNotOptArg):
		'Returns true if the object is selectable in this view. UID or object are valid parameters.'
		return self._oleobj_.InvokeTypes(48, LCID, 1, (11, 0), ((12, 1),),UniqueIdOrObject
			)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (11, 0), (),)

	def IsVisible(self, UniqueIdOrObject=defaultNamedNotOptArg):
		'Returns true if the object is visible in this view. UID or object are valid parameters.'
		return self._oleobj_.InvokeTypes(49, LCID, 1, (11, 0), ((12, 1),),UniqueIdOrObject
			)

	def LockMotionGfx(self):
		'Defer motion graphics updates to unlock.'
		return self._oleobj_.InvokeTypes(45, LCID, 1, (24, 0), (),)

	def MotionGfxDeleteByTag(self, nTagID=defaultNamedNotOptArg):
		'Delete all motion graphics with matching tag.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((3, 1),),nTagID
			)

	def MotionGfxDrawAnyUndrawn(self):
		'Draw any motion graphics that has not yet been drawn.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (24, 0), (),)

	def MotionGfxGetTag(self):
		'Get a Tag ID to use when creating motion graphics.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (3, 0), (),)

	def MotionGfxPutArcByCenter(self, dX1=defaultNamedNotOptArg, dY1=defaultNamedNotOptArg, dXc=defaultNamedNotOptArg, dYc=defaultNamedNotOptArg
			, ec=defaultNamedNotOptArg, dX2=defaultNamedNotOptArg, dY2=defaultNamedNotOptArg, e2=defaultNamedNotOptArg, bClockwise=defaultNamedNotOptArg
			, nTagID=defaultNamedNotOptArg, dWidth=0.0, pColor=0, eUnit=0):
		'Put an arc into dynamics.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (5, 1), (5, 1), (3, 1), (11, 1), (3, 1), (5, 49), (9, 49), (3, 49)),dX1
			, dY1, dXc, dYc, ec, dX2
			, dY2, e2, bClockwise, nTagID, dWidth
			, pColor, eUnit)

	def MotionGfxPutArcFillet(self, dX1=defaultNamedNotOptArg, dY1=defaultNamedNotOptArg, dXIntersect=defaultNamedNotOptArg, dYIntersect=defaultNamedNotOptArg
			, dXMouse=defaultNamedNotOptArg, dYMouse=defaultNamedNotOptArg, eMouse=defaultNamedNotOptArg, dRadius=defaultNamedNotOptArg, nTagID=defaultNamedNotOptArg
			, dWidth=0.0, pColor=0, eUnit=0):
		'Put an arc fillet that is tangential to two lines and has a fixed radius into dynamics.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (5, 1), (3, 1), (5, 49), (9, 49), (3, 49)),dX1
			, dY1, dXIntersect, dYIntersect, dXMouse, dYMouse
			, eMouse, dRadius, nTagID, dWidth, pColor
			, eUnit)

	def MotionGfxPutLine(self, dX1=defaultNamedNotOptArg, dY1=defaultNamedNotOptArg, e1=defaultNamedNotOptArg, dX2=defaultNamedNotOptArg
			, dY2=defaultNamedNotOptArg, e2=defaultNamedNotOptArg, nTagID=defaultNamedNotOptArg, dWidth=0.0, pColor=0
			, eUnit=0):
		'Put a line into dynamics.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 1), (5, 1), (5, 1), (3, 1), (3, 1), (5, 49), (9, 49), (3, 49)),dX1
			, dY1, e1, dX2, dY2, e2
			, nTagID, dWidth, pColor, eUnit)

	def MotionGfxPutPointsArray(self, PointsArray=defaultNamedNotOptArg, eMouse=defaultNamedNotOptArg, nTagID=defaultNamedNotOptArg, dWidth=0.0
			, pColor=0, eUnit=0):
		'Puts the points array into motion graphics.'
		return self._oleobj_.InvokeTypes(43, LCID, 1, (24, 0), ((16396, 1), (3, 1), (3, 1), (5, 49), (9, 49), (3, 49)),PointsArray
			, eMouse, nTagID, dWidth, pColor, eUnit
			)

	def MotionGfxPutRect(self, dX1=defaultNamedNotOptArg, dY1=defaultNamedNotOptArg, e1=defaultNamedNotOptArg, dX2=defaultNamedNotOptArg
			, dY2=defaultNamedNotOptArg, e2=defaultNamedNotOptArg, nTagID=defaultNamedNotOptArg, dWidth=0.0, pColor=0
			, eUnit=0):
		'Put a rectangle into dynamics.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 1), (5, 1), (5, 1), (3, 1), (3, 1), (5, 49), (9, 49), (3, 49)),dX1
			, dY1, e1, dX2, dY2, e2
			, nTagID, dWidth, pColor, eUnit)

	def MotionGfxPutText(self, sString=defaultNamedNotOptArg, x=defaultNamedNotOptArg, y=defaultNamedNotOptArg, e=defaultNamedNotOptArg
			, dHeight=defaultNamedNotOptArg, dRotation=defaultNamedNotOptArg, dPenWidth=defaultNamedNotOptArg, sFont=defaultNamedNotOptArg, eAttr=defaultNamedNotOptArg
			, eHoriz=defaultNamedNotOptArg, eVert=defaultNamedNotOptArg, nTagID=defaultNamedNotOptArg, pColor=0, bShowBoundingBox=True
			, eUnit=0, eAngleUnit=0):
		'Put text into dynamics.'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (24, 0), ((8, 1), (5, 1), (5, 1), (3, 1), (5, 1), (5, 1), (5, 1), (8, 1), (3, 1), (3, 1), (3, 1), (3, 1), (9, 49), (11, 49), (3, 49), (3, 49)),sString
			, x, y, e, dHeight, dRotation
			, dPenWidth, sFont, eAttr, eHoriz, eVert
			, nTagID, pColor, bShowBoundingBox, eUnit, eAngleUnit
			)

	def MotionGfxSnapToGridX(self, XCoord=defaultNamedNotOptArg, eUnit=0):
		'Returns snapped x coordinate. (Beta)'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (5, 0), ((5, 1), (3, 49)),XCoord
			, eUnit)

	def MotionGfxSnapToGridY(self, YCoord=defaultNamedNotOptArg, eUnit=0):
		'Returns snapped y coordinate. (Beta)'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (5, 0), ((5, 1), (3, 49)),YCoord
			, eUnit)

	def Pan(self, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg, eUnit=0):
		'Pan the current View to the given location keeping the same zoom level.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),dX
			, dY, eUnit)

	# The method PopupMenu is actually a property, but must be used as a method to correctly pass the arguments
	def PopupMenu(self, nRows=defaultNamedNotOptArg, vBSTRArray=defaultNamedNotOptArg):
		'Display a popup under the mouse and get selected row number (-1 if no row selected).'
		return self._oleobj_.InvokeTypes(19, LCID, 2, (3, 0), ((3, 1), (12, 1)),nRows
			, vBSTRArray)

	def SaveCustomEvent(self, _eventDescription=defaultNamedNotOptArg):
		'Save custom event for RnP'
		return self._oleobj_.InvokeTypes(40, LCID, 1, (24, 0), ((8, 1),),_eventDescription
			)

	def SetExtents(self, dMinX=defaultNamedNotOptArg, dMinY=defaultNamedNotOptArg, dMaxX=defaultNamedNotOptArg, dMaxY=defaultNamedNotOptArg
			, eUnit=0):
		'Set extents to the specified coordinates.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (3, 49)),dMinX
			, dMinY, dMaxX, dMaxY, eUnit)

	def SetExtentsEx(self, dMinX=defaultNamedNotOptArg, dMinY=defaultNamedNotOptArg, dMaxX=defaultNamedNotOptArg, dMaxY=defaultNamedNotOptArg
			, bOversize=False, eUnit=0):
		'Set extents to the specified coordinates.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (11, 49), (3, 49)),dMinX
			, dMinY, dMaxX, dMaxY, bOversize, eUnit
			)

	def SetExtentsToAll(self):
		'Set extents to all visible data.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), (),)

	def SetExtentsToBoard(self):
		'Set extents to board outline.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def SetExtentsToExtrema(self, pExtrema=defaultNamedNotOptArg):
		'Set the extents to the specified extrema.  Use Extrema.Oversize(0) to fit the extrema inside the view.'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (24, 0), ((9, 1),),pExtrema
			)

	def SetExtentsToExtremaEx(self, pExtrema=defaultNamedNotOptArg, bOversize=False):
		'Set the extents to the specified extrema.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (24, 0), ((9, 1), (11, 49)),pExtrema
			, bOversize)

	def SetExtentsToSelection(self, bIncludeHighlightedThings=False, bIncludeText=False):
		'Set extents to currently selected items.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((11, 49), (11, 49)),bIncludeHighlightedThings
			, bIncludeText)

	def SetIcon(self, libraryPath=defaultNamedNotOptArg, iconId=defaultNamedNotOptArg):
		'Sets view icon by resource object path and icon id.'
		return self._oleobj_.InvokeTypes(41, LCID, 1, (24, 0), ((8, 1), (3, 1)),libraryPath
			, iconId)

	def ShowCurrentPopupMenu(self):
		'Display the popup menu for the active command at the current mouse position.'
		return self._oleobj_.InvokeTypes(53, LCID, 1, (24, 0), (),)

	def ShowCurrentPopupMenuEx(self, vBSTRArray=defaultNamedNotOptArg):
		'Display the popup menu for the active command at the current mouse position and append the provided menu items to the menu. Returns the selected row number if an appended row is selected or -1 otherwise.'
		return self._oleobj_.InvokeTypes(54, LCID, 1, (3, 0), ((12, 1),),vBSTRArray
			)

	def UnlockMotionGfx(self):
		'Enable motion graphics updates.'
		return self._oleobj_.InvokeTypes(46, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"CenterX": (6, 2, (5, 0), ((3, 49),), "CenterX", None),
		"CenterY": (7, 2, (5, 0), ((3, 49),), "CenterY", None),
		"CustomViewControl": (39, 2, (9, 0), (), "CustomViewControl", None),
		# Method 'DisplayControl' returns object of type 'IMGCPCBDisplayControl'
		"DisplayControl": (24, 2, (9, 0), (), "DisplayControl", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (8, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"InstanceGuid": (51, 2, (8, 0), (), "InstanceGuid", None),
		"MousePositionX": (17, 2, (5, 0), ((3, 49),), "MousePositionX", None),
		"MousePositionY": (18, 2, (5, 0), ((3, 49),), "MousePositionY", None),
		"Name": (0, 2, (8, 0), (), "Name", None),
		"OriginalName": (42, 2, (8, 0), (), "OriginalName", None),
		"PixelWidth": (10, 2, (5, 0), ((3, 49),), "PixelWidth", None),
		"ProgID": (38, 2, (8, 0), (), "ProgID", None),
		# Method 'RadialGrid' returns object of type 'IMGCPCBRadialGrid'
		"RadialGrid": (47, 2, (9, 0), (), "RadialGrid", '{36F191D7-5E03-4303-BBE3-53541ED04939}'),
		# Method 'TuningMeter' returns object of type 'IMGCPCBTuningMeter'
		"TuningMeter": (44, 2, (9, 0), (), "TuningMeter", '{C08852D9-8D46-4AF5-8957-C02383D370A8}'),
		"Type": (36, 2, (3, 0), (), "Type", None),
		# Method 'ViewContentsExtrema' returns object of type 'IMGCPCBExtrema'
		"ViewContentsExtrema": (9, 2, (9, 0), (), "ViewContentsExtrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
	}
	_prop_map_put_ = {
		"Name": ((0, LCID, 4, 0),()),
	}

	CenterX: str # read_only
	CenterY: str # read_only
	CustomViewControl: str # read_only
	DisplayControl: str # IMGCPCBDisplayControl; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	InstanceGuid: str # read_only
	MousePositionX: str # read_only
	MousePositionY: str # read_only
	Name: str # read/write
	OriginalName: str # read_only
	PixelWidth: str # read_only
	ProgID: str # read_only
	RadialGrid: str # IMGCPCBRadialGrid; read_only
	TuningMeter: str # IMGCPCBTuningMeter; read_only
	Type: str # read_only
	ViewContentsExtrema: str # IMGCPCBExtrema; read_only

	# Default property for this class is 'Name'
	def __call__(self):
		return self._ApplyTypes_(*(0, 2, (8, 0), (), "Name", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBViews(DispatchBaseClass):
	'MGCPCB Views collection.'
	CLSID = IID('{05700A92-D895-44BB-96C1-9D5BCCAE050F}')
	coclass_clsid = IID('{42818231-BDC7-4236-AAF8-179AF482F1AE}')

	def Add(self, pView=defaultNamedNotOptArg):
		'Adds a view to this collection.'
		return self._oleobj_.InvokeTypes(30, LCID, 1, (24, 0), ((9, 1),),pView
			)

	def Delete(self):
		'Delete views in the collection.(Will delete up to view_count -1)'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBView
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the View of a given index in the Views collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort views in this collection by name.'
		return self._oleobj_.InvokeTypes(32, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}

	Count: int # read_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the View of a given index in the Views collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBWireBondGuide(DispatchBaseClass):
	'MGCPCB WireBondGuide Object.'
	CLSID = IID('{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}')
	coclass_clsid = IID('{2C63C8B0-5B8F-499C-8C8E-A3361EED9017}')

	def Delete(self):
		'Delete this Graphics object.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def MoveRelative(self, XOffset=defaultNamedNotOptArg, YOffset=defaultNamedNotOptArg, eUnit=0):
		'Moves the specified offset.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (24, 0), ((5, 1), (5, 1), (3, 49)),XOffset
			, YOffset, eUnit)

	_prop_map_get_ = {
		"CanBeModified": (60, 2, (11, 0), (), "CanBeModified", None),
		# Method 'Component' returns object of type 'IMGCPCBComponent'
		"Component": (5, 2, (9, 0), (), "Component", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}'),
		# Method 'Dimensions' returns object of type 'IMGCPCBDimensions'
		"Dimensions": (12, 2, (9, 0), (), "Dimensions", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}'),
		# Method 'Document' returns object of type 'IMGCPCBDocument'
		"Document": (16, 2, (9, 0), (), "Document", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}'),
		# Method 'Extrema' returns object of type 'IMGCPCBExtrema'
		"Extrema": (7, 2, (9, 0), (), "Extrema", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}'),
		"Facement": (19, 2, (3, 0), (), "Facement", None),
		"FixLock": (18, 2, (3, 0), (), "FixLock", None),
		# Method 'Geometry' returns object of type 'IMGCPCBGeometry'
		"Geometry": (8, 2, (9, 0), (), "Geometry", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}'),
		"Highlighted": (3, 2, (11, 0), (), "Highlighted", None),
		# Method 'Net' returns object of type 'IMGCPCBNet'
		"Net": (17, 2, (9, 0), (), "Net", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}'),
		"ObjectClass": (13, 2, (3, 0), (), "ObjectClass", None),
		"Parent": (21, 2, (9, 0), (), "Parent", None),
		# Method 'Properties' returns object of type 'IMGCPCBProperties'
		"Properties": (6, 2, (9, 0), (), "Properties", '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}'),
		"Reserved": (59, 2, (11, 0), (), "Reserved", None),
		"Selected": (1, 2, (11, 0), (), "Selected", None),
		"UniqueId": (20, 2, (12, 0), (), "UniqueId", None),
		"_Handle": (10, 2, (3, 0), (), "_Handle", None),
	}
	_prop_map_put_ = {
		"Facement": ((19, LCID, 4, 0),()),
		"FixLock": ((18, LCID, 4, 0),()),
		"Highlighted": ((3, LCID, 4, 0),()),
		"Net": ((17, LCID, 8, 0),()),
		"Selected": ((1, LCID, 4, 0),()),
		"_Handle": ((10, LCID, 4, 0),()),
	}

	CanBeModified: str # read_only
	Component: str # IMGCPCBComponent; read_only
	Dimensions: str # IMGCPCBDimensions; read_only
	Document: str # IMGCPCBDocument; read_only
	Extrema: str # IMGCPCBExtrema; read_only
	Facement: str # read/write
	FixLock: str # read/write
	Geometry: str # IMGCPCBGeometry; read_only
	Highlighted: bool # read/write
	Net: str # read/write
	ObjectClass: str # read_only
	Parent: str # read_only
	Properties: str # IMGCPCBProperties; read_only
	Reserved: str # read_only
	Selected: bool # read/write
	UniqueId: str # read_only
	_Handle: str # read/write

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMGCPCBWireBondGuides(DispatchBaseClass):
	'MGCPCB wire bond guides collection.'
	CLSID = IID('{405FFFFA-4B23-4032-AC7F-4170EE726100}')
	coclass_clsid = IID('{7499ED95-4CE6-4A33-99D5-E4C8C1DC6D1D}')

	def Add(self, pWireBondGuide=defaultNamedNotOptArg):
		'Adds a wire bond guide to this collection.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((9, 1),),pWireBondGuide
			)

	def Delete(self):
		'Delete all wire bond guides in this collection.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	# Result is of type IMGCPCBWireBondGuide
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, vIndex=defaultNamedNotOptArg):
		'Returns the wire bond guide of a given index in the wire bond guides collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}')
		return ret

	def Remove(self, vIndex=defaultNamedNotOptArg):
		'Removes an object from this collection.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (24, 0), ((12, 1),),vIndex
			)

	def Sort(self):
		'Sort wire bond guides in this collection by extrema.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		"Count": (1, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
		"Selected": ((5, LCID, 4, 0),()),
	}

	Count: int # read_only
	Selected: bool # write_only

	# Default method for this class is 'Item'
	def __call__(self, vIndex=defaultNamedNotOptArg):
		'Returns the wire bond guide of a given index in the wire bond guides collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),vIndex
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMGCPCBXProbe(DispatchBaseClass):
	'MGCPCB XProbe Object.'
	CLSID = IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED28}')
	coclass_clsid = IID('{EDEDED2B-D5F6-4B04-8FE7-EDEDEDEDED00}')

	def IsValid(self):
		'Returns true if this a valid object in the database.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Fitted": (1, 2, (11, 0), (), "Fitted", None),
		"Highlighted": (2, 2, (11, 0), (), "Highlighted", None),
		"PlaceBySchematic": (5, 2, (11, 0), (), "PlaceBySchematic", None),
		"Selected": (3, 2, (11, 0), (), "Selected", None),
	}
	_prop_map_put_ = {
		"PlaceBySchematic": ((5, LCID, 4, 0),()),
	}

	Fitted: str # read_only
	Highlighted: bool # read_only
	PlaceBySchematic: str # read/write
	Selected: bool # read_only

	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class _IMGCPCBApplicationEvents:
	'Event interface for MGCPCB Application'
	CLSID = CLSID_Sink = IID('{EDEDED01-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_clsid = IID('{8B456EA8-6CF5-1014-857A-77B9EECCF0AC}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnOpenDocument",
		        2 : "OnQuit",
		        3 : "OnReplayFinished",
		        4 : "OnPreOpenDocument",
		        5 : "OnIdle",
		        6 : "OnOpenDocument",
		        7 : "OnProcessKeyin",
		        8 : "OnIdleExt",
		        9 : "OnPreLaunchKeyinDlg",
		       10 : "OnOpenTeamcenterDocument",
		       11 : "OnChangeTeamcenterBOMFile",
		       12 : "OnDataManagementOperationFinished",
		       13 : "OnEarlyDocumentLoading",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnOpenDocument(self):
#		'Fired after a new document has been opened. (Deprecated)'
#	def OnQuit(self):
#		'Fired before MGCPCB exits'
#	def OnReplayFinished(self):
#		'Fired when the replay file finishes. (Internal use only.)'
#	def OnPreOpenDocument(self, fullPathName=defaultNamedNotOptArg):
#		'Fired before a document is loaded. (Deprecated)'
#	def OnIdle(self):
#		'Fired when the idle processing is allowed. This event is fired frequently.'
#	def OnOpenDocument(self, Flags=defaultNamedNotOptArg):
#		'Fired when a new document has been opened. Reload will be true if this event is the result of a reload.'
#	def OnProcessKeyin(self, keyinText=defaultNamedNotOptArg):
#		'Fired when keyin data is processed.  The client gets the first chance to process it.  Return false to indicate the system should process and true to keep it from being processed.'
#	def OnIdleExt(self):
#		'Fired when the idle processing is allowed. This event is fired frequently.'
#	def OnPreLaunchKeyinDlg(self):
#		'Fired before launching the keyin dialog when there is no active document. This event is fired for each keystroke unless the keyin dialog has focus.'
#	def OnOpenTeamcenterDocument(self):
#		'Fired after a new Teamcenter document has been opened.'
#	def OnChangeTeamcenterBOMFile(self):
#		'Fired after Teamcenter BOM file changed.'
#	def OnDataManagementOperationFinished(self, keyinText=defaultNamedNotOptArg):
#		'Fired after Data Management Asynchronous Operation is finished.'
#	def OnEarlyDocumentLoading(self):
#		"Fired when a new document has been opened before it's ready for all clients.  This event will only be sent to those clients who enable this event. Not all functionality is enabled.(internal usage only)"


class _IMGCPCBCommandEvents:
	'Event interface for MGCPCB commands.'
	CLSID = CLSID_Sink = IID('{EDEDED32-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_clsid = IID('{EDEDED33-D5F6-4B04-8FE7-EDEDEDEDED00}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnTerminate",
		        2 : "OnMouseMove",
		        3 : "OnMouseDown",
		        4 : "OnMouseClk",
		        5 : "OnMouseDblClk",
		        6 : "OnMouseBeginDrag",
		        7 : "OnMouseDrag",
		        8 : "OnMouseEndDrag",
		        9 : "OnMouseCancelDrag",
		       10 : "OnChar",
		       11 : "OnVChar",
		       12 : "OnLayerChanged",
		       13 : "OnUndo",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnTerminate(self):
#		'Fired when the command is exiting.'
#	def OnMouseMove(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired when the mouse is moved.'
#	def OnMouseDown(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired when a mouse button is pressed down.'
#	def OnMouseClk(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired when a mouse button is clicked (the up-event).'
#	def OnMouseDblClk(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired when a mouse button is double-clicked.'
#	def OnMouseBeginDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired when a mouse button is held down and the mouse starts moving.'
#	def OnMouseDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired when the mouse moves while a drag is in progress.'
#	def OnMouseEndDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired when user terminates the drag by taking their finger off the mouse button.'
#	def OnMouseCancelDrag(self, eButton=defaultNamedNotOptArg):
#		'Fired when user cancels the drag by returning to the start point and takes their finger off the button.'
#	def OnChar(self, nChar=defaultNamedNotOptArg):
#		'Fired when a character is typed on the keyboard.'
#	def OnVChar(self, nChar=defaultNamedNotOptArg):
#		'Fired when a virtual character is typed on the keyboard.'
#	def OnLayerChanged(self, nLayer=defaultNamedNotOptArg, bRouteLayerChanged=defaultNamedNotOptArg):
#		'Fired when either the route or component active layer is changed.'
#	def OnUndo(self, bExecute=defaultNamedNotOptArg, bIsUndoEvent=defaultNamedNotOptArg):
#		'Fired when a request for Undo or Redo is made. If bIsUndoEvent is True then this is a request for Undo, else a request for Redo. As usual, return False if you cannot handle the event.'


class _IMGCPCBCommandListenerEvents:
	'Event interface for MGCPCB command listner.'
	CLSID = CLSID_Sink = IID('{EDEDEDA7-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_clsid = IID('{EDEDEDA8-D5F6-4B04-8FE7-EDEDEDEDED00}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnPreOnCommand",
		        2 : "OnPreOnMouseMove",
		        3 : "OnPostOnMouseMove",
		        4 : "OnPreOnMouseDown",
		        5 : "OnPostOnMouseDown",
		        6 : "OnPreOnMouseClk",
		        7 : "OnPostOnMouseClk",
		        8 : "OnPreOnMouseDblClk",
		        9 : "OnPostOnMouseDblClk",
		       10 : "OnPreOnMouseBeginDrag",
		       11 : "OnPostOnMouseBeginDrag",
		       12 : "OnPreOnMouseDrag",
		       13 : "OnPostOnMouseDrag",
		       14 : "OnPreOnMouseEndDrag",
		       15 : "OnPostOnMouseEndDrag",
		       16 : "OnPreOnMouseCancelDrag",
		       17 : "OnPostOnMouseCancelDrag",
		       18 : "OnPreOnChar",
		       19 : "OnPostOnChar",
		       20 : "OnPreOnVChar",
		       21 : "OnPostOnVChar",
		       22 : "OnPreOnEscape",
		       23 : "OnPostOnEscape",
		       24 : "OnPostOnCommand",
		       25 : "OnPostOnTerminate",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnPreOnCommand(self, CommandName=defaultNamedNotOptArg, CommandId=defaultNamedNotOptArg):
#		'Fired before a command is run.'
#	def OnPreOnMouseMove(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired before the current command process the mouse move.'
#	def OnPostOnMouseMove(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired after the current command processes the mouse move.'
#	def OnPreOnMouseDown(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired before the current command processes the mouse down event.'
#	def OnPostOnMouseDown(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired after the current command processes the mouse down event.'
#	def OnPreOnMouseClk(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired before the current command process the click event (the up-event).'
#	def OnPostOnMouseClk(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired after the current command process the click event (the up-event).'
#	def OnPreOnMouseDblClk(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired before the current command process the double-click event.'
#	def OnPostOnMouseDblClk(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired after the current command process the double-click event.'
#	def OnPreOnMouseBeginDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired before the current command processes the begin drag event.'
#	def OnPostOnMouseBeginDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired after the current command processes the begin drag event.'
#	def OnPreOnMouseDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired before the current command processes the drag event.'
#	def OnPostOnMouseDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired after the current command processes the drag event.'
#	def OnPreOnMouseEndDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired before the current command processes the end drag event.'
#	def OnPostOnMouseEndDrag(self, eButton=defaultNamedNotOptArg, eFlags=defaultNamedNotOptArg, dXStart=defaultNamedNotOptArg, dYStart=defaultNamedNotOptArg
#			, dXNow=defaultNamedNotOptArg, dYNow=defaultNamedNotOptArg):
#		'Fired after the current command processes the end drag event.'
#	def OnPreOnMouseCancelDrag(self, eButton=defaultNamedNotOptArg):
#		'Fired before the current command processes the cancel drag event.'
#	def OnPostOnMouseCancelDrag(self, eButton=defaultNamedNotOptArg):
#		'Fired after the current command processes the cancel drag event.'
#	def OnPreOnChar(self, nChar=defaultNamedNotOptArg):
#		'Fired before the current command processes the key press event.'
#	def OnPostOnChar(self, nChar=defaultNamedNotOptArg):
#		'Fired after the current command processes the key press event.'
#	def OnPreOnVChar(self, nChar=defaultNamedNotOptArg):
#		'Fired before the current command processes the virtual key press.'
#	def OnPostOnVChar(self, nChar=defaultNamedNotOptArg):
#		'Fired after the current command processes the vitrual key press.'
#	def OnPreOnEscape(self):
#		'Fired before the current command processes the escape key press.'
#	def OnPostOnEscape(self):
#		'Fired after the current command processes the escape key press.'
#	def OnPostOnCommand(self, CommandName=defaultNamedNotOptArg, CommandId=defaultNamedNotOptArg):
#		'Fired after a command has been initialized.'
#	def OnPostOnTerminate(self, CommandName=defaultNamedNotOptArg, CommandId=defaultNamedNotOptArg):
#		'Fired after a command has been terminated.'


class _IMGCPCBDialogEvents:
	'Event interface for MGCPCB Dialogs.'
	CLSID = CLSID_Sink = IID('{EDEDED5C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_clsid = IID('{EDEDED5E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnClosed",
		        2 : "OnOK",
		        3 : "OnApply",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnClosed(self):
#		'Fired after the dialog is closed.'
#	def OnOK(self):
#		"Fired after the dialog's OK button is clicked."
#	def OnApply(self):
#		"Fired after the dialog's Apply button is clicked."


class _IMGCPCBDocumentEvents:
	'Event interface for MGCPCB Document'
	CLSID = CLSID_Sink = IID('{EDEDED03-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_clsid = IID('{EDEDED04-D5F6-4B04-8FE7-EDEDEDEDED00}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnSave",
		        2 : "OnSelectionChange",
		        3 : "OnChange",
		        4 : "OnPreClose",
		        5 : "OnChange",
		        6 : "OnSelectionChange",
		        7 : "OnClosed",
		        8 : "OnPreClose",
		        9 : "OnNotify",
		       10 : "OnRButtonClk",
		       11 : "OnCreateComponentMotionGfx",
		       12 : "OnDestroyComponentMotionGfx",
		       13 : "OnPreComponentPlace",
		       14 : "OnNetlineOrderChanged",
		       15 : "OnSimulationFinished",
		       16 : "OnPropertyChange",
		       17 : "OnPreSave",
		       18 : "OnDatabaseChanged",
		       19 : "OnWorkbenchToolRequested",
		       20 : "OnComponentUnPlaced",
		       21 : "OnDisplayColorChange",
		       22 : "OnDisplayViewExtentsChange",
		       23 : "OnDisplayOnOffChange",
		       24 : "OnChangeLocal",
		       25 : "OnPreForwardAnnotate",
		       26 : "OnForwardAnnotating",
		       27 : "OnPostForwardAnnotate",
		       28 : "OnPreBackAnnotate",
		       29 : "OnBackAnnotating",
		       30 : "OnPostBackAnnotate",
		       31 : "OnClosing",
		       32 : "OnXtremeFileCheckin",
		       33 : "OnActiveRouteLayerChange",
		       34 : "OnActivePlaceLayerChange",
		       35 : "OnDisplaySchemeChange",
		       36 : "OnPreTempSave",
		       37 : "OnTempSave",
		       38 : "OnInterTool",
		       39 : "OnConstraintsChange",
		       40 : "OnPreChange",
		       41 : "On3DDRC",
		       42 : "OnCreateBondWire",
		       43 : "OnWireBondBatchDRC",
		       44 : "OnEnterVariantView",
		       45 : "OnExitVariantView",
		       46 : "OnSettingsChange",
		       47 : "OnCellDBChanged",
		       48 : "OnCellModifyConfirmation",
		       49 : "OnLicenseChange",
		       50 : "OnSessionComplete",
		       51 : "OnSessionCancel",
		       52 : "OnSessionStart",
		       53 : "OnMarkedChange",
		       54 : "OnProjectFileChanged",
		       55 : "OnDynamicReuseBlockUnlocked",
		       56 : "OnPostPublishDRB",
		       57 : "OnPrePublishDRB",
		       58 : "OnDesignDataUploaded",
		       59 : "OnViewClose",
		       60 : "OnAutoRouteStart",
		       61 : "OnAutoRouteEnd",
		       62 : "OnDisplaySchemeListChanged",
		       63 : "OnCreateMotionGfx",
		       64 : "OnDestroyMotionGfx",
		       65 : "OnHighlightChange",
		       66 : "OnXtremeInterruptAccepted",
		       67 : "OnXtremeInterruptRequest",
		       68 : "OnPreComponentsPlaced",
		       69 : "OnDesignTechnologyChanged",
		       70 : "OnBoardOutlineStackupChanged",
		       71 : "OnBendRadiusLimitsChanged",
		       72 : "OnNetFilterChanged",
		       73 : "OnLDDNetUpdate",
		       74 : "OnCellReplaceOrReset",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnSave(self):
#		'Fired after the document has been saved.'
#	def OnSelectionChange(self):
#		'Fired after the selection has changed. (Deprecated)'
#	def OnChange(self):
#		'Fired after the design has been modified. (Deprecated)'
#	def OnPreClose(self):
#		'Fired just before the document is closed. (Deprecated)'
#	def OnChange(self, ReservedForFutureUse=defaultNamedNotOptArg):
#		'Fired after the document is changed. Parameter indicates the types of things that were changed.'
#	def OnSelectionChange(self, eType=defaultNamedNotOptArg):
#		'Fired after the selection is changed. Parameter indicates the types of things that were selected.'
#	def OnClosed(self):
#		'Fired after the document is closed.'
#	def OnPreClose(self):
#		'Fired just before the document is closed. If caller returns false, the document will not be closed.'
#	def OnNotify(self, eType=defaultNamedNotOptArg):
#		"Fired when some of the document's settings change."
#	def OnRButtonClk(self, eFlags=defaultNamedNotOptArg, dX=defaultNamedNotOptArg, dY=defaultNamedNotOptArg):
#		'Fired when right mouse button is clicked in any view (the up-event).'
#	def OnCreateComponentMotionGfx(self, pOldComponent=defaultNamedNotOptArg, dNewPositionX=defaultNamedNotOptArg, dNewPositionY=defaultNamedNotOptArg, nNewLayer=defaultNamedNotOptArg
#			, dNewAngle=defaultNamedNotOptArg, bNewMirror=defaultNamedNotOptArg, dCursorX=defaultNamedNotOptArg, dCursorY=defaultNamedNotOptArg, nGroupIndex=defaultNamedNotOptArg
#			, nGroupCount=defaultNamedNotOptArg):
#		'Fired when the motion gfx for component movement are generated or modified.'
#	def OnDestroyComponentMotionGfx(self):
#		'Fired when the motion gfx for component movement are destroyed.'
#	def OnPreComponentPlace(self, pComponent=defaultNamedNotOptArg, dOriginX=defaultNamedNotOptArg, dOriginY=defaultNamedNotOptArg, nLayer=defaultNamedNotOptArg
#			, dRotation=defaultNamedNotOptArg, bMirror=defaultNamedNotOptArg):
#		'Fired before a component is placed. Returning false will prevent placement.'
#	def OnNetlineOrderChanged(self, pNet=defaultNamedNotOptArg, eType=defaultNamedNotOptArg, pFromTos=defaultNamedNotOptArg):
#		'Fired when the netline order for a net is changed.'
#	def OnSimulationFinished(self, eType=defaultNamedNotOptArg, bResults=defaultNamedNotOptArg):
#		'Fired when a simulation finishes.'
#	def OnPropertyChange(self, pOwner=defaultNamedNotOptArg, sName=defaultNamedNotOptArg, sOldValue=defaultNamedNotOptArg, sNewValue=defaultNamedNotOptArg):
#		'Fired when a property changes value or one is added or deleted.'
#	def OnPreSave(self):
#		'Fired just before the document is Saved. If caller returns false, the document will not be saved.'
#	def OnDatabaseChanged(self, eDatabase=defaultNamedNotOptArg, eReason=defaultNamedNotOptArg, sHandle=defaultNamedNotOptArg):
#		'Fired when a database has been changed. (Beta)'
#	def OnWorkbenchToolRequested(self, eWorkbenchTool=defaultNamedNotOptArg, sDesignName=defaultNamedNotOptArg, sProjectPath=defaultNamedNotOptArg, sCommandLine=defaultNamedNotOptArg):
#		'Fired when a Workbench tool is requested. (Internal use only.)'
#	def OnComponentUnPlaced(self):
#		'Fired After Component is unplaced.'
#	def OnDisplayColorChange(self):
#		'Fired when the display color of an item has changed.'
#	def OnDisplayViewExtentsChange(self):
#		"Fired when the active view's extents are changed."
#	def OnDisplayOnOffChange(self):
#		'Fired when the display of an item is changed in the active view.'
#	def OnChangeLocal(self, ReservedForFutureUse=defaultNamedNotOptArg):
#		'Fired after the document is changed. If Xtreme only fires for changes made on the local client.  Not fired for changes orginating from other clients. (Deprecated)'
#	def OnPreForwardAnnotate(self):
#		'Fired before the forward annotation is about to be started. If caller returns false, the document will not be closed.'
#	def OnForwardAnnotating(self):
#		'Fired just before the forward annotation is about to be started.'
#	def OnPostForwardAnnotate(self, _succeeded=defaultNamedNotOptArg):
#		'Fired when the forward annotation finishes.'
#	def OnPreBackAnnotate(self):
#		'Fired before the backward annotation is about to be started. If caller returns false, the document will not be closed.'
#	def OnBackAnnotating(self):
#		'Fired just before the backward annotation is about to be started.'
#	def OnPostBackAnnotate(self, _succeeded=defaultNamedNotOptArg):
#		'Fired when the backward annotation finishes.'
#	def OnClosing(self):
#		'Fired before the document is closed.'
#	def OnXtremeFileCheckin(self, PCBRelativeFilePath=defaultNamedNotOptArg):
#		'Fired after a client specific file has been checked in in an Xtreme session.'
#	def OnActiveRouteLayerChange(self, Layer=defaultNamedNotOptArg):
#		'Fired after the active route layer has been changed.'
#	def OnActivePlaceLayerChange(self, Layer=defaultNamedNotOptArg, ReservedForFutureUse=defaultNamedNotOptArg):
#		'Fired after the active place layer has been changed.'
#	def OnDisplaySchemeChange(self, schemeName=defaultNamedNotOptArg):
#		'Fired after the display scheme has changed.'
#	def OnPreTempSave(self):
#		'Fired before a save to the temporary directory is made.  Return value has no effect.'
#	def OnTempSave(self):
#		'Fired after a temp save has been made.'
#	def OnInterTool(self, nApplication=defaultNamedNotOptArg, nNotifyCode=defaultNamedNotOptArg, vInfo=defaultNamedNotOptArg):
#		'Fired for Mentor tools. Internal use only.'
#	def OnConstraintsChange(self, eReloadConstraints=defaultNamedNotOptArg):
#		'Fired after the constraints are reloaded and specifies what set of constraints were reloaded.'
#	def OnPreChange(self, ReservedForFutureUse=defaultNamedNotOptArg):
#		'Fired after the document is changed but before the change is commited.  Updates will be on same undo level when made with in the context of this event. (Beta)'
#	def On3DDRC(self, ReservedForFutureUse=defaultNamedNotOptArg):
#		'Fired to execute 3d DRC.(Internal)'
#	def OnCreateBondWire(self, BondWireComponent=defaultNamedNotOptArg):
#		'Fired to allow bond wire graphics to be created.(Internal)'
#	def OnWireBondBatchDRC(self, OutputFileName=defaultNamedNotOptArg):
#		'Fired to invoke bond wire batch DRC. (Internal)'
#	def OnEnterVariantView(self, sVariant=defaultNamedNotOptArg):
#		'Fired after variant view is generated..(Internal)'
#	def OnExitVariantView(self):
#		'Fired after variant is reset to master view.(Internal)'
#	def OnSettingsChange(self, ClientNameArr=defaultNamedNotOptArg):
#		'Fired when settings are changed. Currently only supports the design settings type.'
#	def OnCellDBChanged(self, pSafeArrayOfData=defaultNamedNotOptArg):
#		'Fired when change to Cell database.'
#	def OnCellModifyConfirmation(self, _query=defaultNamedNotOptArg, _description=defaultNamedNotOptArg):
#		'Handle Cell Editor Application cell modify confirmations.'
#	def OnLicenseChange(self, eType=defaultNamedNotOptArg, bAcquired=defaultNamedNotOptArg):
#		'Fired when a license feature is acquired/released.'
#	def OnSessionComplete(self, ReservedForFutureUse=defaultNamedNotOptArg):
#		'Fired after an interactive component movement has completed.'
#	def OnSessionCancel(self, ReservedForFutureUse=defaultNamedNotOptArg):
#		'Fired after an interactive component movement is canceled.'
#	def OnSessionStart(self, ReservedForFutureUse=defaultNamedNotOptArg):
#		'Fired after an interactive component movement has started.'
#	def OnMarkedChange(self):
#		'Fired after the marked status has changed.'
#	def OnProjectFileChanged(self):
#		'Fired after the project file has changed.'
#	def OnDynamicReuseBlockUnlocked(self):
#		'Fired when change a locked Managed Block to be unlocked'
#	def OnPostPublishDRB(self):
#		'Fired when publishing Managed Blocks is complete.'
#	def OnPrePublishDRB(self):
#		'Fired just before publishing Managed Blocks starts. If caller returns false, publishing will be cancelled.'
#	def OnDesignDataUploaded(self, bLoad=defaultNamedNotOptArg):
#		'Fired when user has uploaded/unloaded design data for boards/panels.'
#	def OnViewClose(self):
#		'Fired when view is being closed.'
#	def OnAutoRouteStart(self):
#		'Fired when autorouter is started; user interfaces defer updates until autorouting is complete'
#	def OnAutoRouteEnd(self):
#		'Fired when autorouter has completed; user interfaces can resume responding to interactive events'
#	def OnDisplaySchemeListChanged(self):
#		'Fired when the list of display schemes changes.'
#	def OnCreateMotionGfx(self, pGroup=defaultNamedNotOptArg, dNewPositionX=defaultNamedNotOptArg, dNewPositionY=defaultNamedNotOptArg, nNewLayer=defaultNamedNotOptArg
#			, dNewAngle=defaultNamedNotOptArg, bNewMirror=defaultNamedNotOptArg, dCursorX=defaultNamedNotOptArg, dCursorY=defaultNamedNotOptArg, nGroupIndex=defaultNamedNotOptArg
#			, nGroupCount=defaultNamedNotOptArg):
#		'Fired when the motion gfx for movement of things other than components are generated or modified.'
#	def OnDestroyMotionGfx(self):
#		'Fired when the motion gfx for movement of things other than components are destroyed.'
#	def OnHighlightChange(self, eType=defaultNamedNotOptArg):
#		'Fired after the highlight has changed. Parameter indicates the types of things that were highlighted.'
#	def OnXtremeInterruptAccepted(self):
#		'Fired after an interrupt has been accepted by the client.'
#	def OnXtremeInterruptRequest(self):
#		'Fired after an interrupt has been requested by the client.'
#	def OnPreComponentsPlaced(self, pComponents=defaultNamedNotOptArg):
#		'Fired before a set of components is placed. Returning false will prevent placement.'
#	def OnDesignTechnologyChanged(self):
#		'Fired when design technology is changed.'
#	def OnBoardOutlineStackupChanged(self):
#		'Fired when the stackup for a named board outline has been changed.'
#	def OnBendRadiusLimitsChanged(self):
#		'Fired when the bend radius limits for bend areas have been changed.'
#	def OnNetFilterChanged(self):
#		'Fired when net filter informaiton is updated.'
#	def OnLDDNetUpdate(self, eUpdateType=defaultNamedNotOptArg, netNames=defaultNamedNotOptArg):
#		'Fired when a net is added or deleted using LDD. This event will not be fired during Forward Annotate.'
#	def OnCellReplaceOrReset(self):
#		'Fired when a cell is replaced or reset. This event is used by internal clients.'


class _IMGCPCBHazardExplorerEvents:
	'Event interface for MGCPCB Hazard Explorer'
	CLSID = CLSID_Sink = IID('{A54F58CC-B418-45BC-80B0-BCE062DF441C}')
	coclass_clsid = IID('{2E182699-C20B-4388-98C0-BC5AE8D7A250}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnDRCOption",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnDRCOption(self, Name=defaultNamedNotOptArg):
#		'Fired when a DRC option menu item is activated'


from win32com.client import CoClassBaseClass
class ActiveClearanceEngine(CoClassBaseClass): # A CoClass
	# MGCPCB Active Clearance Engine Class
	CLSID = IID('{BB885650-D4A1-4724-89AB-4A6D83BD436B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBActiveClearanceEngine,
	]
	default_interface = IMGCPCBActiveClearanceEngine

class ActualPlaneShape(CoClassBaseClass): # A CoClass
	# MGCPCB Actual Plane Shape class.
	CLSID = IID('{EDEDED93-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBActualPlaneShape,
	]
	default_interface = IMGCPCBActualPlaneShape

class ActualPlaneShapes(CoClassBaseClass): # A CoClass
	# MGCPCB Actual Plane Shapes class.
	CLSID = IID('{EDEDED94-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBActualPlaneShapes,
	]
	default_interface = IMGCPCBActualPlaneShapes

# This CoClass is known by the name 'MGCPCB.Application.119'
class Application(CoClassBaseClass): # A CoClass
	# Generic AutoActive Application Class
	CLSID = IID('{8B451C9D-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class BendArea(CoClassBaseClass): # A CoClass
	# MGCPCB BendArea Class
	CLSID = IID('{F33247C1-FE50-4BBE-8A41-1EF349FCACA6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBendArea,
	]
	default_interface = IMGCPCBBendArea

class BendAreas(CoClassBaseClass): # A CoClass
	# MGCPCB BendAreas Class
	CLSID = IID('{6B2ED012-98B6-4544-A4DA-58794B7ABECC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBendAreas,
	]
	default_interface = IMGCPCBBendAreas

class Board(CoClassBaseClass): # A CoClass
	# MGCPCB Board class.
	CLSID = IID('{EDEDED8B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBoard,
	]
	default_interface = IMGCPCBBoard

class BoardOutline(CoClassBaseClass): # A CoClass
	# MGCPCB Board Outline Class
	CLSID = IID('{EDEDED36-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBoardOutline,
	]
	default_interface = IMGCPCBBoardOutline

class BoardStationREApplication(CoClassBaseClass): # A CoClass
	# MGCPCB BoardStationRE Application Class
	CLSID = IID('{8B45621A-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class BoardStationXEApplication(CoClassBaseClass): # A CoClass
	# MGCPCB BoardStationXE Application Class
	CLSID = IID('{8B456B83-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class Boards(CoClassBaseClass): # A CoClass
	# MGCPCB Boards class.
	CLSID = IID('{EDEDED8C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBoards,
	]
	default_interface = IMGCPCBBoards

class BondPad(CoClassBaseClass): # A CoClass
	# MGCPCB Bond Pad Class
	CLSID = IID('{A3124861-0E05-4372-9212-5BC14BF80705}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBondPad,
	]
	default_interface = IMGCPCBBondPad

class BondPads(CoClassBaseClass): # A CoClass
	# MGCPCB Bond Pads Class
	CLSID = IID('{809A1741-717F-40B3-A0BF-0A5C944F72F1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBondPads,
	]
	default_interface = IMGCPCBBondPads

class BreakoutDefault(CoClassBaseClass): # A CoClass
	# MGCPCB Breakout Default class.
	CLSID = IID('{EDEDED66-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBreakoutDefault,
	]
	default_interface = IMGCPCBBreakoutDefault

class BreakoutDefaults(CoClassBaseClass): # A CoClass
	# MGCPCB Breakout Defaults class.
	CLSID = IID('{EDEDED67-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBreakoutDefaults,
	]
	default_interface = IMGCPCBBreakoutDefaults

class BreakoutTrace(CoClassBaseClass): # A CoClass
	# MGCPCB Breakout Trace class.
	CLSID = IID('{EDEDED64-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBreakoutTrace,
	]
	default_interface = IMGCPCBBreakoutTrace

class BreakoutTraces(CoClassBaseClass): # A CoClass
	# MGCPCB Breakout Traces class.
	CLSID = IID('{EDEDED65-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBreakoutTraces,
	]
	default_interface = IMGCPCBBreakoutTraces

# This CoClass is known by the name 'MGCPCB.BrowserPCBApplication.119'
class BrowserPCBApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Xpedition Layout Browser Application Class
	CLSID = IID('{8B456A39-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class BusPath(CoClassBaseClass): # A CoClass
	# MGCPCB Bus Path class
	CLSID = IID('{EDEDEDA5-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBusPath,
	]
	default_interface = IMGCPCBBusPath

class BusPaths(CoClassBaseClass): # A CoClass
	# MGCPCB Bus Paths class
	CLSID = IID('{EDEDEDA6-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBBusPaths,
	]
	default_interface = IMGCPCBBusPaths

class Cavities(CoClassBaseClass): # A CoClass
	# MGCPCB Cavities Class
	CLSID = IID('{039A55EC-D850-4645-AEF1-E5B0D8F4DE54}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCavities,
	]
	default_interface = IMGCPCBCavities

class Cavity(CoClassBaseClass): # A CoClass
	# MGCPCB Cavity Class
	CLSID = IID('{F6E0FBD0-742B-407E-87C3-16A63F5545A4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCavity,
	]
	default_interface = IMGCPCBCavity

class Cell(CoClassBaseClass): # A CoClass
	# MGCPCB Cell Class
	CLSID = IID('{EDEDED1B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCell,
	]
	default_interface = IMGCPCBCell

# This CoClass is known by the name 'MGCPCB.CellEditorApplication.119'
class CellEditorApplication(CoClassBaseClass): # A CoClass
	# Cell Editor Application Class
	CLSID = IID('{8B456683-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class Cells(CoClassBaseClass): # A CoClass
	# MGCPCB Cells Class
	CLSID = IID('{EDEDED1C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCells,
	]
	default_interface = IMGCPCBCells

class ChangeData(CoClassBaseClass): # A CoClass
	# MGCPCB ChangeData Class
	CLSID = IID('{C7F1BAE9-76A9-44F5-A22A-A2984B43C2AB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBChangeData,
	]
	default_interface = IMGCPCBChangeData

class Clearance(CoClassBaseClass): # A CoClass
	# MGCPCB Clearance Class
	CLSID = IID('{D9C635E1-8AE1-446D-ADD3-EFFC82AC9044}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBClearance,
	]
	default_interface = IMGCPCBClearance

class Cluster(CoClassBaseClass): # A CoClass
	# MGCPCB Editor Control Cluster class.
	CLSID = IID('{EDEDED77-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCluster,
	]
	default_interface = IMGCPCBCluster

class Clusters(CoClassBaseClass): # A CoClass
	# MGCPCB Editor Control Clusters class.
	CLSID = IID('{EDEDED78-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBClusters,
	]
	default_interface = IMGCPCBClusters

class Color(CoClassBaseClass): # A CoClass
	# MGCPCB Color Class
	CLSID = IID('{EDEDED72-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBColor,
	]
	default_interface = IMGCPCBColor

class ColorPattern(CoClassBaseClass): # A CoClass
	# MGCPCB ColorPattern Class
	CLSID = IID('{EDEDED73-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBColorPattern,
	]
	default_interface = IMGCPCBColorPattern

class Command(CoClassBaseClass): # A CoClass
	# MGCPCB Command Class
	CLSID = IID('{EDEDED33-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
		_IMGCPCBCommandEvents,
	]
	default_source = _IMGCPCBCommandEvents
	coclass_interfaces = [
		IMGCPCBCommand,
	]
	default_interface = IMGCPCBCommand

class CommandListener(CoClassBaseClass): # A CoClass
	# MGCPCB Command Listener Class
	CLSID = IID('{EDEDEDA8-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
		_IMGCPCBCommandListenerEvents,
	]
	default_source = _IMGCPCBCommandListenerEvents
	coclass_interfaces = [
		IMGCPCBCommandListener,
	]
	default_interface = IMGCPCBCommandListener

class ComplexVia(CoClassBaseClass): # A CoClass
	# MGCPCB ComplexVia Class
	CLSID = IID('{E4CF19CE-E948-4DE5-921F-069160EA465B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBComplexVia,
	]
	default_interface = IMGCPCBComplexVia

class ComplexViaPattern(CoClassBaseClass): # A CoClass
	# MGCPCB ComplexViaPattern Class
	CLSID = IID('{5EE8496D-7DDE-482A-B5B2-7F4756313DE4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBComplexViaPattern,
	]
	default_interface = IMGCPCBComplexViaPattern

class ComplexViaPatterns(CoClassBaseClass): # A CoClass
	# MGCPCB ComplexViaPAttern Collection Class
	CLSID = IID('{8BFD00E4-8BDA-4061-B5F5-88117C47587F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBComplexViaPatterns,
	]
	default_interface = IMGCPCBComplexViaPatterns

class ComplexVias(CoClassBaseClass): # A CoClass
	# MGCPCB ComplexVias Collection Class
	CLSID = IID('{5C2518D2-FB17-4F9B-9BA0-A30A7FDA06F0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBComplexVias,
	]
	default_interface = IMGCPCBComplexVias

class Component(CoClassBaseClass): # A CoClass
	# MGCPCB Component
	CLSID = IID('{EDEDED08-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBComponent,
	]
	default_interface = IMGCPCBComponent

class Components(CoClassBaseClass): # A CoClass
	# MGCPCB Component collection
	CLSID = IID('{EDEDED07-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBComponents,
	]
	default_interface = IMGCPCBComponents

class ConductiveArea(CoClassBaseClass): # A CoClass
	# MGCPCB Conductive Area Class
	CLSID = IID('{EDEDED27-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConductiveArea,
	]
	default_interface = IMGCPCBConductiveArea

class ConductiveAreas(CoClassBaseClass): # A CoClass
	# MGCPCB Conductive Areas Class
	CLSID = IID('{EDEDED28-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConductiveAreas,
	]
	default_interface = IMGCPCBConductiveAreas

class ConductorLayerGfx(CoClassBaseClass): # A CoClass
	# MGCPCB ConductorLayerGfx Class
	CLSID = IID('{EDEDED23-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConductorLayerGfx,
	]
	default_interface = IMGCPCBConductorLayerGfx

class ConductorLayerGfxs(CoClassBaseClass): # A CoClass
	# MGCPCB ConductorLayerGfxs Class
	CLSID = IID('{EDEDED24-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConductorLayerGfxs,
	]
	default_interface = IMGCPCBConductorLayerGfxs

class ConductorLayerText(CoClassBaseClass): # A CoClass
	# MGCPCB ConductorLayerText Class
	CLSID = IID('{EDEDED59-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConductorLayerText,
	]
	default_interface = IMGCPCBConductorLayerText

class ConductorLayerTexts(CoClassBaseClass): # A CoClass
	# MGCPCB ConductorLayerTexts Class
	CLSID = IID('{EDEDED5A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConductorLayerTexts,
	]
	default_interface = IMGCPCBConductorLayerTexts

class Constraint(CoClassBaseClass): # A CoClass
	# MGCPCB Constraint Class
	CLSID = IID('{7F9D3438-714B-4F63-BFB0-C261254D1556}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConstraint,
	]
	default_interface = IMGCPCBConstraint

class ConstraintClass(CoClassBaseClass): # A CoClass
	# MGCPCB ConstraintClass Class
	CLSID = IID('{8D428186-DE3C-49F3-A8D0-F14DC5037D49}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConstraintClass,
	]
	default_interface = IMGCPCBConstraintClass

class ConstraintClasses(CoClassBaseClass): # A CoClass
	# MGCPCB ConstraintClasses Class
	CLSID = IID('{DA99EC4C-6A6D-4B0E-AB92-281FB592D296}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConstraintClasses,
	]
	default_interface = IMGCPCBConstraintClasses

class ConstructionLine(CoClassBaseClass): # A CoClass
	# MGCPCB Construction Line Class
	CLSID = IID('{C0D2A601-EBA5-47D3-98B0-83FD262FB6CB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConstructionLine,
	]
	default_interface = IMGCPCBConstructionLine

class ConstructionLines(CoClassBaseClass): # A CoClass
	# MGCPCB Construction Lines Class
	CLSID = IID('{54FA30B2-0D79-4F3B-BA78-77622DC51F7C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConstructionLines,
	]
	default_interface = IMGCPCBConstructionLines

class ConstructionPoint(CoClassBaseClass): # A CoClass
	# MGCPCB Construction Point Class
	CLSID = IID('{2C80B0ED-1ED8-41C9-87E7-0735F2178A4B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConstructionPoint,
	]
	default_interface = IMGCPCBConstructionPoint

class ConstructionPoints(CoClassBaseClass): # A CoClass
	# MGCPCB Construction Points Class
	CLSID = IID('{7CBEF113-44DD-4D31-A205-8D2FF6B252F8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBConstructionPoints,
	]
	default_interface = IMGCPCBConstructionPoints

class Contour(CoClassBaseClass): # A CoClass
	# MGCPCB Contour Class
	CLSID = IID('{EDEDED21-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBContour,
	]
	default_interface = IMGCPCBContour

class Contours(CoClassBaseClass): # A CoClass
	# MGCPCB Contours Class
	CLSID = IID('{EDEDED22-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBContours,
	]
	default_interface = IMGCPCBContours

class Copper(CoClassBaseClass): # A CoClass
	# Internal use only
	CLSID = IID('{185EF0A1-E14B-4A1E-81FC-01B0A91A1AAE}')
	coclass_sources = [
	]
	coclass_interfaces = [
	]

class CopperBalancing(CoClassBaseClass): # A CoClass
	# MGCPCB Copper Balancing Engine class
	CLSID = IID('{2664BBAB-8FFE-42A4-A2C2-326AC42C265C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCopperBalancing,
	]
	default_interface = IMGCPCBCopperBalancing

class CopperBalancingData(CoClassBaseClass): # A CoClass
	# MGCPCB Copper Balancing Data class.
	CLSID = IID('{EDEDED89-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCopperBalancingData,
	]
	default_interface = IMGCPCBCopperBalancingData

class CopperBalancingDatas(CoClassBaseClass): # A CoClass
	# MGCPCB Copper Balancing Datas class.
	CLSID = IID('{EDEDED8A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCopperBalancingDatas,
	]
	default_interface = IMGCPCBCopperBalancingDatas

class CopperBalancingShape(CoClassBaseClass): # A CoClass
	# MGCPCB Copper Balancing Shape class.
	CLSID = IID('{EDEDED87-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCopperBalancingShape,
	]
	default_interface = IMGCPCBCopperBalancingShape

class CopperBalancingShapes(CoClassBaseClass): # A CoClass
	# MGCPCB Copper Balancing Shapes class.
	CLSID = IID('{EDEDED88-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCopperBalancingShapes,
	]
	default_interface = IMGCPCBCopperBalancingShapes

class DFFSliverAnalysis(CoClassBaseClass): # A CoClass
	# MGCPCB DFF Sliver Analysis engine
	CLSID = IID('{BF402A9A-D287-49EE-A88E-2FB4C3CED2A6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDFFSliverAnalysis,
	]
	default_interface = IMGCPCBDFFSliverAnalysis

class DXFImport(CoClassBaseClass): # A CoClass
	# MGCPCB DXF Import Engine class
	CLSID = IID('{4793EAF3-C6B3-4118-9155-C3F3961FA25D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDXFImport,
	]
	default_interface = IMGCPCBDXFImport

class DataManagement(CoClassBaseClass): # A CoClass
	# MGCPCB Data Management Class.
	CLSID = IID('{31E57DFC-2D52-4BB2-B49D-263545035B14}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDataManagement,
	]
	default_interface = IMGCPCBDataManagement

class DataManagementAdditionalProperties(CoClassBaseClass): # A CoClass
	# MGCPCB Data Management Properties Collection Class.
	CLSID = IID('{8BF7551C-1117-4231-A247-D5739B12B8F4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDataManagementAdditionalProperties,
	]
	default_interface = IMGCPCBDataManagementAdditionalProperties

class DataManagementAdditionalProperty(CoClassBaseClass): # A CoClass
	# MGCPCB Data Management Property Class.
	CLSID = IID('{B70B652C-4484-48E5-BCA9-62CE39087DC1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDataManagementAdditionalProperty,
	]
	default_interface = IMGCPCBDataManagementAdditionalProperty

class DataManagementEntities(CoClassBaseClass): # A CoClass
	# MGCPCB Data Management Entities Collection Class.
	CLSID = IID('{3100EEB6-0071-40A4-9D53-BABA18027081}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDataManagementEntities,
	]
	default_interface = IMGCPCBDataManagementEntities

class DataManagementEntity(CoClassBaseClass): # A CoClass
	# MGCPCB Data Management Entity Class.
	CLSID = IID('{D3329B2A-F69B-4204-B3F2-1DBA963E1388}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDataManagementEntity,
	]
	default_interface = IMGCPCBDataManagementEntity

class DetailedView(CoClassBaseClass): # A CoClass
	# MGCPCB Detailed View class.
	CLSID = IID('{EDEDED8F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDetailedView,
	]
	default_interface = IMGCPCBDetailedView

class DetailedViews(CoClassBaseClass): # A CoClass
	# MGCPCB Detailed Views class.
	CLSID = IID('{EDEDED90-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDetailedViews,
	]
	default_interface = IMGCPCBDetailedViews

class Dialog(CoClassBaseClass): # A CoClass
	# MGCPCB Dialog class.
	CLSID = IID('{EDEDED5E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
		_IMGCPCBDialogEvents,
	]
	default_source = _IMGCPCBDialogEvents
	coclass_interfaces = [
		IMGCPCBDialog,
	]
	default_interface = IMGCPCBDialog

class DifferentialPair(CoClassBaseClass): # A CoClass
	# MGCPCB DifferentialPair Class
	CLSID = IID('{23D9A7BD-4B0A-49FB-AA5F-EEFB91E477D6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDifferentialPair,
	]
	default_interface = IMGCPCBDifferentialPair

class DifferentialPairs(CoClassBaseClass): # A CoClass
	# MGCPCB DifferentialPairs Class
	CLSID = IID('{0D3F7906-B221-42A5-9D68-3DEC3EF8072A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDifferentialPairs,
	]
	default_interface = IMGCPCBDifferentialPairs

class Dimension(CoClassBaseClass): # A CoClass
	# MGCPCB Dimension Class
	CLSID = IID('{EDEDED48-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDimension,
	]
	default_interface = IMGCPCBDimension

class DimensionScheme(CoClassBaseClass): # A CoClass
	# MGCPCB Dimension Scheme Class
	CLSID = IID('{EDEDED4A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDimensionScheme,
	]
	default_interface = IMGCPCBDimensionScheme

class DimensionSchemes(CoClassBaseClass): # A CoClass
	# MGCPCB Dimension Schemes Class
	CLSID = IID('{EDEDED4B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDimensionSchemes,
	]
	default_interface = IMGCPCBDimensionSchemes

class DimensionedObject(CoClassBaseClass): # A CoClass
	# MGCPCB Dimensioned Object Class
	CLSID = IID('{EDEDED7E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDimensionedObject,
	]
	default_interface = IMGCPCBDimensionedObject

class Dimensions(CoClassBaseClass): # A CoClass
	# MGCPCB Dimensions Class
	CLSID = IID('{EDEDED49-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDimensions,
	]
	default_interface = IMGCPCBDimensions

class DisplayControl(CoClassBaseClass): # A CoClass
	# MGCPCB DisplayControl Class
	CLSID = IID('{EDEDED74-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDisplayControl,
	]
	default_interface = IMGCPCBDisplayControl

class Document(CoClassBaseClass): # A CoClass
	# MGCPCB Document Class
	CLSID = IID('{EDEDED04-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
		_IMGCPCBDocumentEvents,
	]
	default_source = _IMGCPCBDocumentEvents
	coclass_interfaces = [
		IMGCPCBDocument,
	]
	default_interface = IMGCPCBDocument

# This CoClass is known by the name 'MGCPCB.DrawingEditorApplication.119'
class DrawingEditorApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Drawing Editor Application Class
	CLSID = IID('{8B456C93-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class DrillDrawing(CoClassBaseClass): # A CoClass
	# MGCPCB DrillDrawing Class
	CLSID = IID('{EDEDED46-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDrillDrawing,
	]
	default_interface = IMGCPCBDrillDrawing

class DrillDrawings(CoClassBaseClass): # A CoClass
	# MGCPCB Drill Drawings Class
	CLSID = IID('{EDEDED47-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDrillDrawings,
	]
	default_interface = IMGCPCBDrillDrawings

class DrillTable(CoClassBaseClass): # A CoClass
	# MGCPCB Drill Table class
	CLSID = IID('{022D2D2D-A8EB-47EA-8D44-DB1DC78E5791}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDrillTable,
	]
	default_interface = IMGCPCBDrillTable

class DrillTables(CoClassBaseClass): # A CoClass
	# MGCPCB Drill Tables class
	CLSID = IID('{C7BC8E5F-F3D1-4A50-AF40-C0F7283A38F2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBDrillTables,
	]
	default_interface = IMGCPCBDrillTables

class EditBox(CoClassBaseClass): # A CoClass
	# MGCPCB Edit Box Class
	CLSID = IID('{EDEDED9A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBEditBox,
	]
	default_interface = IMGCPCBEditBox

class EditorControl(CoClassBaseClass): # A CoClass
	# MGCPCB Editor Control class.
	CLSID = IID('{EDEDED7D-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBEditorControl,
	]
	default_interface = IMGCPCBEditorControl

class EmbeddedPassiveShape(CoClassBaseClass): # A CoClass
	# MGCPCB Embedded Passive Shape class.
	CLSID = IID('{EDEDED98-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBEmbeddedPassiveShape,
	]
	default_interface = IMGCPCBEmbeddedPassiveShape

class EmbeddedPassiveShapes(CoClassBaseClass): # A CoClass
	# MGCPCB Embedded Passive Shapes class.
	CLSID = IID('{EDEDED99-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBEmbeddedPassiveShapes,
	]
	default_interface = IMGCPCBEmbeddedPassiveShapes

class Environment(CoClassBaseClass): # A CoClass
	# MGCPCB Environment class.
	CLSID = IID('{EDEDED92-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBEnvironment,
	]
	default_interface = IMGCPCBEnvironment

class Error(CoClassBaseClass): # A CoClass
	# MGCPCB Error Class
	CLSID = IID('{91AA2A03-36ED-4133-8FFA-42AC7D52FFEC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBError,
	]
	default_interface = IMGCPCBError

class Errors(CoClassBaseClass): # A CoClass
	# MGCPCB Errors Class
	CLSID = IID('{1ABBE87F-3700-46B8-9FFD-64475723BD6F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBErrors,
	]
	default_interface = IMGCPCBErrors

# This CoClass is known by the name 'MGCPCB.ExpeditionPCBApplication.119'
class ExpeditionPCBApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Xpedition Layout Application Class
	CLSID = IID('{8B45609B-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class ExpeditionPEApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Expedition PE Application Class
	CLSID = IID('{8B456D9C-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class Extrema(CoClassBaseClass): # A CoClass
	# MGCPCB Extrema class.
	CLSID = IID('{EDEDED61-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBExtrema,
	]
	default_interface = IMGCPCBExtrema

# This CoClass is known by the name 'MGCPCB.FablinkXEApplication.119'
class FablinkXEApplication(CoClassBaseClass): # A CoClass
	# Xpedition FabLink Application Class
	CLSID = IID('{8B456577-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class FabricationLayerGfx(CoClassBaseClass): # A CoClass
	# MGCPCB FabricationLayerGfx Class
	CLSID = IID('{EDEDED4F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFabricationLayerGfx,
	]
	default_interface = IMGCPCBFabricationLayerGfx

class FabricationLayerGfxs(CoClassBaseClass): # A CoClass
	# MGCPCB FabricationLayerGfxs Class
	CLSID = IID('{EDEDED50-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFabricationLayerGfxs,
	]
	default_interface = IMGCPCBFabricationLayerGfxs

class FabricationLayerText(CoClassBaseClass): # A CoClass
	# MGCPCB FabricationLayerText Class
	CLSID = IID('{EDEDED55-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFabricationLayerText,
	]
	default_interface = IMGCPCBFabricationLayerText

class FabricationLayerTexts(CoClassBaseClass): # A CoClass
	# MGCPCB FabricationLayerTexts Class
	CLSID = IID('{EDEDED56-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFabricationLayerTexts,
	]
	default_interface = IMGCPCBFabricationLayerTexts

class FabricationPad(CoClassBaseClass): # A CoClass
	# MGCPCB FabricationPad Class
	CLSID = IID('{EDEDED53-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFabricationPad,
	]
	default_interface = IMGCPCBFabricationPad

class FabricationPads(CoClassBaseClass): # A CoClass
	# MGCPCB FabricationPads Class
	CLSID = IID('{EDEDED54-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFabricationPads,
	]
	default_interface = IMGCPCBFabricationPads

class Fiducial(CoClassBaseClass): # A CoClass
	# MGCPCB Fiducial Class
	CLSID = IID('{EDEDED2C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFiducial,
	]
	default_interface = IMGCPCBFiducial

class Fiducials(CoClassBaseClass): # A CoClass
	# MGCPCB Fiducials Class
	CLSID = IID('{EDEDED2D-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFiducials,
	]
	default_interface = IMGCPCBFiducials

class Format(CoClassBaseClass): # A CoClass
	# MGCPCB Format class.
	CLSID = IID('{EDEDED63-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFormat,
	]
	default_interface = IMGCPCBFormat

class FromTo(CoClassBaseClass): # A CoClass
	# MGCPCB FromTo Class
	CLSID = IID('{EDEDED1F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFromTo,
	]
	default_interface = IMGCPCBFromTo

class FromTos(CoClassBaseClass): # A CoClass
	# MGCPCB FromTos Class
	CLSID = IID('{EDEDED20-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBFromTos,
	]
	default_interface = IMGCPCBFromTos

class GeneratedPlane(CoClassBaseClass): # A CoClass
	# MGCPCB Generated Plane Class
	CLSID = IID('{EDEDED40-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGeneratedPlane,
	]
	default_interface = IMGCPCBGeneratedPlane

class GeneratedPlanes(CoClassBaseClass): # A CoClass
	# MGCPCB Generated Planes Class
	CLSID = IID('{EDEDED41-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGeneratedPlanes,
	]
	default_interface = IMGCPCBGeneratedPlanes

class Geometries(CoClassBaseClass): # A CoClass
	# MGCPCB Geometries class.
	CLSID = IID('{EDEDED6E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGeometries,
	]
	default_interface = IMGCPCBGeometries

class Geometry(CoClassBaseClass): # A CoClass
	# MGCPCB Geometry class.
	CLSID = IID('{EDEDED62-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGeometry,
	]
	default_interface = IMGCPCBGeometry

class GlobalDisplayControl(CoClassBaseClass): # A CoClass
	# MGCPCB GlobalDisplayControl Class
	CLSID = IID('{EDEDED75-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGlobalDisplayControl,
	]
	default_interface = IMGCPCBGlobalDisplayControl

class GlueSpot(CoClassBaseClass): # A CoClass
	# MGCPCB Glue Spot Class
	CLSID = IID('{37DEF24E-A64B-40E3-9614-6EEE9BC06981}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGlueSpot,
	]
	default_interface = IMGCPCBGlueSpot

class GlueSpots(CoClassBaseClass): # A CoClass
	# MGCPCB Glue Spots Class
	CLSID = IID('{8E170053-F2B1-4ED8-AC31-8841426EC4C2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGlueSpots,
	]
	default_interface = IMGCPCBGlueSpots

class Group(CoClassBaseClass): # A CoClass
	# MGCPCB Group Class
	CLSID = IID('{96C19E74-E567-42EB-BE5C-CC01B0286255}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGroup,
	]
	default_interface = IMGCPCBGroup

class GroupOutline(CoClassBaseClass): # A CoClass
	# MGCPCB GroupOutline Class
	CLSID = IID('{30B9C205-B35F-4495-9B6F-04A9FA733B57}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGroupOutline,
	]
	default_interface = IMGCPCBGroupOutline

class Groups(CoClassBaseClass): # A CoClass
	# MGCPCB Groups Class
	CLSID = IID('{6D64459B-086C-40CB-B431-EDD1527E01B6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGroups,
	]
	default_interface = IMGCPCBGroups

class Gui(CoClassBaseClass): # A CoClass
	# MGCPCB Gui class.
	CLSID = IID('{EDEDED5B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBGui,
	]
	default_interface = IMGCPCBGui

class HThing(CoClassBaseClass): # A CoClass
	# Internal use only
	CLSID = IID('{0F064616-1834-4DD3-9FCA-28034A045554}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBHThing,
	]
	default_interface = IMGCPCBHThing

class Hazard(CoClassBaseClass): # A CoClass
	# MGCPCB Hazard Class
	CLSID = IID('{EDEDED9D-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBHazard,
	]
	default_interface = IMGCPCBHazard

class HazardExplorer(CoClassBaseClass): # A CoClass
	# MGCPCB Hazard Explorer Class
	CLSID = IID('{2E182699-C20B-4388-98C0-BC5AE8D7A250}')
	coclass_sources = [
		_IMGCPCBHazardExplorerEvents,
	]
	default_source = _IMGCPCBHazardExplorerEvents
	coclass_interfaces = [
		IMGCPCBHazardExplorer,
	]
	default_interface = IMGCPCBHazardExplorer

class HazardSymbol(CoClassBaseClass): # A CoClass
	# MGCPCB Hazard Symbol class
	CLSID = IID('{3C015462-AF66-4760-BA75-09D8ED7D4A37}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBHazardSymbol,
	]
	default_interface = IMGCPCBHazardSymbol

class HazardTreeItem(CoClassBaseClass): # A CoClass
	# MGCPCB Hazard Tree Item class
	CLSID = IID('{E5918914-F4D4-4450-B2E6-18431CCEE78F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBHazardTreeItem,
	]
	default_interface = IMGCPCBHazardTreeItem

class Hazards(CoClassBaseClass): # A CoClass
	# MGCPCB Hazards Class
	CLSID = IID('{EDEDED9E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBHazards,
	]
	default_interface = IMGCPCBHazards

class Hole(CoClassBaseClass): # A CoClass
	# MGCPCB Hole Class
	CLSID = IID('{EDEDED12-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBHole,
	]
	default_interface = IMGCPCBHole

class Holes(CoClassBaseClass): # A CoClass
	# MGCPCB Holes Class
	CLSID = IID('{EDEDED1A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBHoles,
	]
	default_interface = IMGCPCBHoles

class ICXProVerifyApplication(CoClassBaseClass): # A CoClass
	# MGCPCB ICXProVerify Application Class
	CLSID = IID('{8B456462-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class IDFImport(CoClassBaseClass): # A CoClass
	# MGCPCB IDF Import Engine class
	CLSID = IID('{21C0D8FC-A893-49F0-87AF-DE0FF0F9370B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBIDFImport,
	]
	default_interface = IMGCPCBIDFImport

class Image(CoClassBaseClass): # A CoClass
	# MGCPCB Image class.
	CLSID = IID('{C6070113-C01B-46B0-ADCC-489B4BF474F7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBImage,
	]
	default_interface = IMGCPCBImage

class Images(CoClassBaseClass): # A CoClass
	# MGCPCB Images class.
	CLSID = IID('{41738154-9334-4AFD-91A0-3C1BC60F969B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBImages,
	]
	default_interface = IMGCPCBImages

class InsertionOutline(CoClassBaseClass): # A CoClass
	# MGCPCB Insertion Outline Class
	CLSID = IID('{3AA0DF89-DE2B-406C-A5C9-A3C42FC945C3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBInsertionOutline,
	]
	default_interface = IMGCPCBInsertionOutline

class InsertionOutlines(CoClassBaseClass): # A CoClass
	# MGCPCB Insertion Outlines Class
	CLSID = IID('{EDD45523-ADD3-4469-877A-EFAAD505A5EB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBInsertionOutlines,
	]
	default_interface = IMGCPCBInsertionOutlines

class Internal(CoClassBaseClass): # A CoClass
	# Internal use only
	CLSID = IID('{7775EBCC-A87C-4B01-A0A8-27C6D05E2708}')
	coclass_sources = [
	]
	coclass_interfaces = [
	]

class JumperTableEntries(CoClassBaseClass): # A CoClass
	# MGCPCB Editor Control JumperTableEntries class.
	CLSID = IID('{EDEDED79-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBJumperTableEntries,
	]
	default_interface = IMGCPCBJumperTableEntries

class JumperTableEntry(CoClassBaseClass): # A CoClass
	# MGCPCB Editor Control JumperTableEntry class.
	CLSID = IID('{EDEDED7A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBJumperTableEntry,
	]
	default_interface = IMGCPCBJumperTableEntry

class LayerObject(CoClassBaseClass): # A CoClass
	# MGCPCB Layer Information Class
	CLSID = IID('{EDEDED81-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBLayerObject,
	]
	default_interface = IMGCPCBLayerObject

class LayerObjects(CoClassBaseClass): # A CoClass
	# MGCPCB Layer Informations Class
	CLSID = IID('{EDEDED82-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBLayerObjects,
	]
	default_interface = IMGCPCBLayerObjects

class LayerProperties(CoClassBaseClass): # A CoClass
	# MGCPCB Layer Properties class.
	CLSID = IID('{EDEDED97-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBLayerProperties,
	]
	default_interface = IMGCPCBLayerProperties

class LayerRange(CoClassBaseClass): # A CoClass
	# MGCPCB Document Layer range class.
	CLSID = IID('{EDEDED7B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBLayerRange,
	]
	default_interface = IMGCPCBLayerRange

class LayerRanges(CoClassBaseClass): # A CoClass
	# MGCPCB Document Layer ranges class.
	CLSID = IID('{EDEDED7C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBLayerRanges,
	]
	default_interface = IMGCPCBLayerRanges

class ManufacturingOutline(CoClassBaseClass): # A CoClass
	# MGCPCB Manufacturing Outline class.
	CLSID = IID('{EDEDED91-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBManufacturingOutline,
	]
	default_interface = IMGCPCBManufacturingOutline

class Marker(CoClassBaseClass): # A CoClass
	# MGCPCB Marker Class
	CLSID = IID('{6356402A-B8B6-4A48-BAD2-07B7749EAB1F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMarker,
	]
	default_interface = IMGCPCBMarker

class Markers(CoClassBaseClass): # A CoClass
	# MGCPCB Markers Class
	CLSID = IID('{EA828EB7-F1BC-4E3D-B86F-E22107617ACA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMarkers,
	]
	default_interface = IMGCPCBMarkers

class MatchLengthGroup(CoClassBaseClass): # A CoClass
	# MGCPCB MatchLengthGroup Class
	CLSID = IID('{73EB686E-4413-42D6-B0EA-574EC9B6CBCB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMatchLengthGroup,
	]
	default_interface = IMGCPCBMatchLengthGroup

class MatchLengthGroups(CoClassBaseClass): # A CoClass
	# MGCPCB MatchLengthGroups Class
	CLSID = IID('{4AC89F8E-5916-4D23-A346-C2A1A0ADD05A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMatchLengthGroups,
	]
	default_interface = IMGCPCBMatchLengthGroups

class Material(CoClassBaseClass): # A CoClass
	# MGCPCB Material class.
	CLSID = IID('{FD58EC9E-6CA3-438D-8F4B-A440658E5002}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMaterial,
	]
	default_interface = IMGCPCBMaterial

class Materials(CoClassBaseClass): # A CoClass
	# MGCPCB Materials collection class.
	CLSID = IID('{E9E4D68B-9D4E-43E1-9A62-40BE49C403A3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMaterials,
	]
	default_interface = IMGCPCBMaterials

class MetalizationArea(CoClassBaseClass): # A CoClass
	# MGCPCB Metalization Area Class
	CLSID = IID('{43665D15-2EBE-4BCF-906C-70AB147CD1B2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMetalizationArea,
	]
	default_interface = IMGCPCBMetalizationArea

class MetalizationAreas(CoClassBaseClass): # A CoClass
	# MGCPCB Metalization Areas Class
	CLSID = IID('{01F88762-C02D-42FB-9DB3-A62C739BF1BE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMetalizationAreas,
	]
	default_interface = IMGCPCBMetalizationAreas

class MotionObject(CoClassBaseClass): # A CoClass
	# MGCPCB Motion Object Class
	CLSID = IID('{9718D930-A889-485C-8B3C-F05198AE1B58}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMotionObject,
	]
	default_interface = IMGCPCBMotionObject

class MountingHole(CoClassBaseClass): # A CoClass
	# MGCPCB MountingHole Class
	CLSID = IID('{EDEDED29-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMountingHole,
	]
	default_interface = IMGCPCBMountingHole

class MountingHoles(CoClassBaseClass): # A CoClass
	# MGCPCB MountingHoles Class
	CLSID = IID('{EDEDED2A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMountingHoles,
	]
	default_interface = IMGCPCBMountingHoles

class MultiBoardOutline(CoClassBaseClass): # A CoClass
	# MGCPCB Multi Board Outline class
	CLSID = IID('{1B5956ED-8394-4126-B154-2496AD9A5E39}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMultiBoardOutline,
	]
	default_interface = IMGCPCBMultiBoardOutline

class MultiBoardOutlines(CoClassBaseClass): # A CoClass
	# MGCPCB Multi Board Outlines collection
	CLSID = IID('{42CAFFCF-D5B6-4053-B485-5F81D4A27E33}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMultiBoardOutlines,
	]
	default_interface = IMGCPCBMultiBoardOutlines

class MultiVia(CoClassBaseClass): # A CoClass
	# MGCPCB MultiVia Class
	CLSID = IID('{EDEDEDA0-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMultiVia,
	]
	default_interface = IMGCPCBMultiVia

class MultiVias(CoClassBaseClass): # A CoClass
	# MGCPCB MultiVias Collection Class
	CLSID = IID('{EDEDED9F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBMultiVias,
	]
	default_interface = IMGCPCBMultiVias

class Net(CoClassBaseClass): # A CoClass
	# MGCPCB Net Class
	CLSID = IID('{EDEDED0A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBNet,
	]
	default_interface = IMGCPCBNet

class NetClass(CoClassBaseClass): # A CoClass
	# MGCPCB NetClass Class
	CLSID = IID('{EDEDED16-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBNetClass,
	]
	default_interface = IMGCPCBNetClass

class NetClasses(CoClassBaseClass): # A CoClass
	# MGCPCB NetClasses Class
	CLSID = IID('{EDEDED15-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBNetClasses,
	]
	default_interface = IMGCPCBNetClasses

class NetGroup(CoClassBaseClass): # A CoClass
	# MGCPCB NetGroup Class
	CLSID = IID('{8BFB2DB2-773C-43C5-B16A-6D60D2AB5FC1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBNetGroup,
	]
	default_interface = IMGCPCBNetGroup

class NetGroups(CoClassBaseClass): # A CoClass
	# MGCPCB NetGroups Class
	CLSID = IID('{7570D721-A2E1-4A5F-8140-E422383072B9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBNetGroups,
	]
	default_interface = IMGCPCBNetGroups

class Nets(CoClassBaseClass): # A CoClass
	# MGCPCB Nets collection Class
	CLSID = IID('{EDEDED09-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBNets,
	]
	default_interface = IMGCPCBNets

class ObjectFilter(CoClassBaseClass): # A CoClass
	# MGCPCB ObjectFilter Class
	CLSID = IID('{B84F9DBD-1C63-4AFE-9806-BF558A41DBE0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBObjectFilter,
	]
	default_interface = IMGCPCBObjectFilter

class Objects(CoClassBaseClass): # A CoClass
	# MGCPCB Objects Class
	CLSID = IID('{EDEDED76-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBObjects,
	]
	default_interface = IMGCPCBObjects

class Obstruct(CoClassBaseClass): # A CoClass
	# MGCPCB Obstruct Class
	CLSID = IID('{EDEDED25-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBObstruct,
	]
	default_interface = IMGCPCBObstruct

class Obstructs(CoClassBaseClass): # A CoClass
	# MGCPCB Obstructs Class
	CLSID = IID('{EDEDED26-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBObstructs,
	]
	default_interface = IMGCPCBObstructs

class OutgassingVoidsSettings(CoClassBaseClass): # A CoClass
	# MGCPCB OutgassingVoidsSettings class.
	CLSID = IID('{4E25E2A6-FB18-45C0-97C2-87AC496094CA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBOutgassingVoidsSettings,
	]
	default_interface = IMGCPCBOutgassingVoidsSettings

class Pad(CoClassBaseClass): # A CoClass
	# MGCPCB Pad Class
	CLSID = IID('{EDEDED18-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPad,
	]
	default_interface = IMGCPCBPad

class Pads(CoClassBaseClass): # A CoClass
	# MGCPCB Pads Class
	CLSID = IID('{EDEDED19-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPads,
	]
	default_interface = IMGCPCBPads

class Padstack(CoClassBaseClass): # A CoClass
	# MGCPCB Padstack Class
	CLSID = IID('{EDEDED11-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPadstack,
	]
	default_interface = IMGCPCBPadstack

class PadstackObject(CoClassBaseClass): # A CoClass
	# MGCPCB PadstackObject class.
	CLSID = IID('{EDEDED6C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPadstackObject,
	]
	default_interface = IMGCPCBPadstackObject

class PadstackObjects(CoClassBaseClass): # A CoClass
	# MGCPCB PadstackObjects class.
	CLSID = IID('{EDEDED6D-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPadstackObjects,
	]
	default_interface = IMGCPCBPadstackObjects

class Padstacks(CoClassBaseClass): # A CoClass
	# MGCPCB Padstacks Class
	CLSID = IID('{EDEDED17-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPadstacks,
	]
	default_interface = IMGCPCBPadstacks

class Panel(CoClassBaseClass): # A CoClass
	# MGCPCB Panel class.
	CLSID = IID('{999DCEAB-25BD-4D69-90A6-7BD6D7E8FCBA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPanel,
	]
	default_interface = IMGCPCBPanel

class PanelBorder(CoClassBaseClass): # A CoClass
	# MGCPCB Panel Border class.
	CLSID = IID('{EDEDED84-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPanelBorder,
	]
	default_interface = IMGCPCBPanelBorder

class PanelOutline(CoClassBaseClass): # A CoClass
	# MGCPCB Panel Outline class.
	CLSID = IID('{EDEDED83-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPanelOutline,
	]
	default_interface = IMGCPCBPanelOutline

class Panels(CoClassBaseClass): # A CoClass
	# MGCPCB Panels class.
	CLSID = IID('{E0831839-85FA-4BC5-A67D-AB4D5457BA87}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPanels,
	]
	default_interface = IMGCPCBPanels

class Part(CoClassBaseClass): # A CoClass
	# MGCPCB Part Class
	CLSID = IID('{EDEDED14-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPart,
	]
	default_interface = IMGCPCBPart

class Parts(CoClassBaseClass): # A CoClass
	# MGCPCB Parts Class
	CLSID = IID('{EDEDED13-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBParts,
	]
	default_interface = IMGCPCBParts

class PhysicalReuseLibraryCircuit(CoClassBaseClass): # A CoClass
	# MGCPCB Physical Reuse Circuit class
	CLSID = IID('{6CC07E43-9B26-46B8-B778-832911602B4B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPhysicalReuseLibraryCircuit,
	]
	default_interface = IMGCPCBPhysicalReuseLibraryCircuit

class PhysicalReuseLibraryCircuits(CoClassBaseClass): # A CoClass
	# MGCPCB Physical Reuse Circuits class
	CLSID = IID('{B05D0EE8-3B79-460F-982D-E15CF70AC323}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPhysicalReuseLibraryCircuits,
	]
	default_interface = IMGCPCBPhysicalReuseLibraryCircuits

class Pin(CoClassBaseClass): # A CoClass
	# MGCPCB Pin Class
	CLSID = IID('{EDEDED0C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPin,
	]
	default_interface = IMGCPCBPin

class Pins(CoClassBaseClass): # A CoClass
	# MGCPCB Pins collection Class
	CLSID = IID('{EDEDED0B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPins,
	]
	default_interface = IMGCPCBPins

class PlacementObstruct(CoClassBaseClass): # A CoClass
	# MGCPCB Placement Keepout Class
	CLSID = IID('{EDEDED38-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlacementObstruct,
	]
	default_interface = IMGCPCBPlacementObstruct

class PlacementObstructs(CoClassBaseClass): # A CoClass
	# MGCPCB Placement Keepouts Class
	CLSID = IID('{EDEDED39-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlacementObstructs,
	]
	default_interface = IMGCPCBPlacementObstructs

class PlacementOutline(CoClassBaseClass): # A CoClass
	# MGCPCB Placement Outline Class
	CLSID = IID('{EDEDED3E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlacementOutline,
	]
	default_interface = IMGCPCBPlacementOutline

class PlacementOutlines(CoClassBaseClass): # A CoClass
	# MGCPCB Placement Outlines Class
	CLSID = IID('{EDEDED3F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlacementOutlines,
	]
	default_interface = IMGCPCBPlacementOutlines

class PlaneAssignment(CoClassBaseClass): # A CoClass
	# MGCPCB Plane Assignment Class
	CLSID = IID('{A2316731-42FD-4B3A-9006-F76599AD13A0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlaneAssignment,
	]
	default_interface = IMGCPCBPlaneAssignment

class PlaneAssignments(CoClassBaseClass): # A CoClass
	# MGCPCB Plane Assignments Class
	CLSID = IID('{B36B9D7C-B29E-409B-BA12-58FE415F6429}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlaneAssignments,
	]
	default_interface = IMGCPCBPlaneAssignments

class PlaneClass(CoClassBaseClass): # A CoClass
	# MGCPCB Plane Class Class
	CLSID = IID('{78CBB863-1042-4845-B8C4-843764CD8C10}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlaneClass,
	]
	default_interface = IMGCPCBPlaneClass

class PlaneClasses(CoClassBaseClass): # A CoClass
	# MGCPCB Plane Classes Class
	CLSID = IID('{C9584331-8E6C-4186-B77C-224A771F9FA9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlaneClasses,
	]
	default_interface = IMGCPCBPlaneClasses

class PlaneEditingSketch(CoClassBaseClass): # A CoClass
	# MGCPCB Plane Editing Sketch Class
	CLSID = IID('{FAD5FFCC-73AF-468F-ACA9-5F0F48FE1978}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlaneEditingSketch,
	]
	default_interface = IMGCPCBPlaneEditingSketch

class PlaneEditingSketches(CoClassBaseClass): # A CoClass
	# MGCPCB Plane Editing Sketches Class
	CLSID = IID('{47834540-ADA2-4C09-887C-8EFCF724F59C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlaneEditingSketches,
	]
	default_interface = IMGCPCBPlaneEditingSketches

class PlaneShape(CoClassBaseClass): # A CoClass
	# MGCPCB Plane Shape Class
	CLSID = IID('{EDEDED3C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlaneShape,
	]
	default_interface = IMGCPCBPlaneShape

class PlaneShapes(CoClassBaseClass): # A CoClass
	# MGCPCB Plane Shapes Class
	CLSID = IID('{EDEDED3D-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBPlaneShapes,
	]
	default_interface = IMGCPCBPlaneShapes

# This CoClass is known by the name 'MGCPCB.PlannerPCBApplication.119'
class PlannerPCBApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Xpedition Layout Planner Application Class
	CLSID = IID('{8B456792-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class Properties(CoClassBaseClass): # A CoClass
	# MGCPCB Properties Class
	CLSID = IID('{EDEDED45-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBProperties,
	]
	default_interface = IMGCPCBProperties

class RFHazard(CoClassBaseClass): # A CoClass
	# MGCPCB Test Fixture Outline class.
	CLSID = IID('{A43DB03C-72FD-425F-92DF-1BB5516B8DC1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRFHazard,
	]
	default_interface = IMGCPCBRFHazard

class RadialGrid(CoClassBaseClass): # A CoClass
	# MGCPCB Radial Grid Object Class
	CLSID = IID('{CDF6343B-6DD7-4573-9411-EFF95322DBE6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRadialGrid,
	]
	default_interface = IMGCPCBRadialGrid

class ReservedArea(CoClassBaseClass): # A CoClass
	# MGCPCB Reserved Area Class
	CLSID = IID('{DE842064-5FF0-4FA0-BB09-9EA774EF6417}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBReservedArea,
	]
	default_interface = IMGCPCBReservedArea

class ReservedAreas(CoClassBaseClass): # A CoClass
	# MGCPCB Reserved Areas Class
	CLSID = IID('{863F1725-6431-48E7-B656-4D80383AA334}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBReservedAreas,
	]
	default_interface = IMGCPCBReservedAreas

class ResistorShape(CoClassBaseClass): # A CoClass
	# MGCPCB Resistor Shape Class
	CLSID = IID('{8717F36C-1B10-4AE7-BEE0-93C9BD63FA03}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBResistorShape,
	]
	default_interface = IMGCPCBResistorShape

class ResistorShapes(CoClassBaseClass): # A CoClass
	# MGCPCB Resistor Shapes Class
	CLSID = IID('{A7141DD4-4024-4DBC-AEAB-20F8712F2C1A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBResistorShapes,
	]
	default_interface = IMGCPCBResistorShapes

class ReusableBlock(CoClassBaseClass): # A CoClass
	# MGCPCB ReusableBlock Class
	CLSID = IID('{E7751A10-BD2B-48BA-8C2C-788374F67904}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBReusableBlock,
	]
	default_interface = IMGCPCBReusableBlock

class ReuseArea(CoClassBaseClass): # A CoClass
	# MGCPCB Reuse Area(Managed Block area) Class.
	CLSID = IID('{887911D8-607E-4A56-AE98-47F3DF6C0D07}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBReuseArea,
	]
	default_interface = IMGCPCBReuseArea

class ReuseAreas(CoClassBaseClass): # A CoClass
	# MGCPCB Reuse Areas(Managed Block areas) Class
	CLSID = IID('{D0E409CC-42BA-471E-83C0-E7D034966335}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBReuseAreas,
	]
	default_interface = IMGCPCBReuseAreas

class Room(CoClassBaseClass): # A CoClass
	# MGCPCB Room Class
	CLSID = IID('{EDEDED3A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRoom,
	]
	default_interface = IMGCPCBRoom

class Rooms(CoClassBaseClass): # A CoClass
	# MGCPCB Rooms Class
	CLSID = IID('{EDEDED3B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRooms,
	]
	default_interface = IMGCPCBRooms

class RouteBorder(CoClassBaseClass): # A CoClass
	# MGCPCB Route Border Class
	CLSID = IID('{EDEDED37-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRouteBorder,
	]
	default_interface = IMGCPCBRouteBorder

class RouteFence(CoClassBaseClass): # A CoClass
	# MGCPCB Route Fence Class
	CLSID = IID('{EDEDED9B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRouteFence,
	]
	default_interface = IMGCPCBRouteFence

class RouteFences(CoClassBaseClass): # A CoClass
	# MGCPCB Route Fences Class
	CLSID = IID('{EDEDED9C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRouteFences,
	]
	default_interface = IMGCPCBRouteFences

class RoutePass(CoClassBaseClass): # A CoClass
	# MGCPCB Route Pass Class
	CLSID = IID('{EDEDED7F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRoutePass,
	]
	default_interface = IMGCPCBRoutePass

class RouteTarget(CoClassBaseClass): # A CoClass
	# MGCPCB Route Target class
	CLSID = IID('{EDEDEDA3-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRouteTarget,
	]
	default_interface = IMGCPCBRouteTarget

class RouteTargets(CoClassBaseClass): # A CoClass
	# MGCPCB Route Targets class
	CLSID = IID('{EDEDEDA4-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRouteTargets,
	]
	default_interface = IMGCPCBRouteTargets

class RuleArea(CoClassBaseClass): # A CoClass
	# MGCPCB RuleArea Class
	CLSID = IID('{EDEDED1D-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRuleArea,
	]
	default_interface = IMGCPCBRuleArea

class RuleAreas(CoClassBaseClass): # A CoClass
	# MGCPCB RuleAreas Class
	CLSID = IID('{EDEDED1E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBRuleAreas,
	]
	default_interface = IMGCPCBRuleAreas

class SFXREApplication(CoClassBaseClass): # A CoClass
	# MGCPCB SFXRE Application Class
	CLSID = IID('{8B45634F-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class Sandbox(CoClassBaseClass): # A CoClass
	# MGCPCB Sandbox Class
	CLSID = IID('{6C4DEA98-587A-41EE-9BC9-1FD19AE3C883}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSandbox,
	]
	default_interface = IMGCPCBSandbox

class Sandboxes(CoClassBaseClass): # A CoClass
	# MGCPCB Sandboxes  Class
	CLSID = IID('{6E49B9FA-AFE5-471B-A7B6-3537D2753266}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSandboxes,
	]
	default_interface = IMGCPCBSandboxes

class Settings(CoClassBaseClass): # A CoClass
	# MGCPCB Settings Class
	CLSID = IID('{2D0374E9-4948-4CE9-912F-DCCD33BDF0E3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSettings,
	]
	default_interface = IMGCPCBSettings

class SetupParameter(CoClassBaseClass): # A CoClass
	# MGCPCB SetupParameter class.
	CLSID = IID('{EDEDED6F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSetupParameter,
	]
	default_interface = IMGCPCBSetupParameter

class ShearingHole(CoClassBaseClass): # A CoClass
	# MGCPCB Shearing Hole class.
	CLSID = IID('{EDEDED8D-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBShearingHole,
	]
	default_interface = IMGCPCBShearingHole

class ShearingHoles(CoClassBaseClass): # A CoClass
	# MGCPCB Shearing Holes class.
	CLSID = IID('{EDEDED8E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBShearingHoles,
	]
	default_interface = IMGCPCBShearingHoles

class Sheet(CoClassBaseClass): # A CoClass
	# MGCPCB Sheet class
	CLSID = IID('{FBAD0390-893C-42E4-A427-82B628D8A021}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSheet,
	]
	default_interface = IMGCPCBSheet

class SheetOutline(CoClassBaseClass): # A CoClass
	# MGCPCB Sheet Outline class
	CLSID = IID('{E3CE28CA-2EAC-4695-B4F3-6D38423F7F13}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSheetOutline,
	]
	default_interface = IMGCPCBSheetOutline

class Sheets(CoClassBaseClass): # A CoClass
	# MGCPCB Sheets class
	CLSID = IID('{0B9C6959-78B6-4BF2-B0B2-24D356BAE93E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSheets,
	]
	default_interface = IMGCPCBSheets

class SketchPlan(CoClassBaseClass): # A CoClass
	# MGCPCB Sketch Plan class
	CLSID = IID('{1D127C3B-0C83-49F0-8974-F64B30D1E33B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSketchPlan,
	]
	default_interface = IMGCPCBSketchPlan

class SketchPlanVia(CoClassBaseClass): # A CoClass
	# MGCPCB Sketch Plan Via class
	CLSID = IID('{087AE75B-81DC-41DF-ABAD-978E425B3AD9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSketchPlanVia,
	]
	default_interface = IMGCPCBSketchPlanVia

class SketchPlanVias(CoClassBaseClass): # A CoClass
	# MGCPCB Sketch Plan Vias class
	CLSID = IID('{EA861E6A-16B1-4A85-A174-5AB9AF229FBD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSketchPlanVias,
	]
	default_interface = IMGCPCBSketchPlanVias

class SketchPlans(CoClassBaseClass): # A CoClass
	# MGCPCB Sketch Plans class
	CLSID = IID('{3693B0E6-CA38-4811-82EA-F78D4BA04A95}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBSketchPlans,
	]
	default_interface = IMGCPCBSketchPlans

class SolidEdgePCBApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Solid Edge PCB Application Class
	CLSID = IID('{8B456EA8-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class StackupScheme(CoClassBaseClass): # A CoClass
	# MGCPCB Stackup Scheme Class
	CLSID = IID('{722E36DF-2BD1-4988-A670-96048FBC5FF0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBStackupScheme,
	]
	default_interface = IMGCPCBStackupScheme

class StackupSchemes(CoClassBaseClass): # A CoClass
	# MGCPCB Stackup Schemes Class
	CLSID = IID('{7AF637B3-357E-41AD-990E-49C61B6A605A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBStackupSchemes,
	]
	default_interface = IMGCPCBStackupSchemes

class TargetArea(CoClassBaseClass): # A CoClass
	# MGCPCB Target Area class
	CLSID = IID('{EDEDEDA1-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTargetArea,
	]
	default_interface = IMGCPCBTargetArea

class TargetAreas(CoClassBaseClass): # A CoClass
	# MGCPCB Target Areas class
	CLSID = IID('{EDEDEDA2-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTargetAreas,
	]
	default_interface = IMGCPCBTargetAreas

class Teardrop(CoClassBaseClass): # A CoClass
	# MGCPCB Teardrop class.
	CLSID = IID('{EDEDED68-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTeardrop,
	]
	default_interface = IMGCPCBTeardrop

class TeardropDefault(CoClassBaseClass): # A CoClass
	# MGCPCB Teardrop Default class.
	CLSID = IID('{EDEDED6A-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTeardropDefault,
	]
	default_interface = IMGCPCBTeardropDefault

class TeardropDefaults(CoClassBaseClass): # A CoClass
	# MGCPCB Teardrop Defaults class.
	CLSID = IID('{EDEDED6B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTeardropDefaults,
	]
	default_interface = IMGCPCBTeardropDefaults

class Teardrops(CoClassBaseClass): # A CoClass
	# MGCPCB Teardrops class.
	CLSID = IID('{EDEDED69-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTeardrops,
	]
	default_interface = IMGCPCBTeardrops

class TestFixtureOutline(CoClassBaseClass): # A CoClass
	# MGCPCB Test Fixture Outline class.
	CLSID = IID('{5F43EC13-8A7A-4D88-BBC9-B310BD2F6743}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTestFixtureOutline,
	]
	default_interface = IMGCPCBTestFixtureOutline

class TieLeg(CoClassBaseClass): # A CoClass
	# MGCPCB Tie Leg class.
	CLSID = IID('{EDEDED95-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTieLeg,
	]
	default_interface = IMGCPCBTieLeg

class TieLegs(CoClassBaseClass): # A CoClass
	# MGCPCB Tie Legs class.
	CLSID = IID('{EDEDED96-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTieLegs,
	]
	default_interface = IMGCPCBTieLegs

class Tiebar(CoClassBaseClass): # A CoClass
	# MGCPCB Tiebar Class
	CLSID = IID('{42DF9F9D-8B9E-475C-8024-B68AF6AAA3CB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTiebar,
	]
	default_interface = IMGCPCBTiebar

class Tiebars(CoClassBaseClass): # A CoClass
	# MGCPCB Tiebars Collection Class
	CLSID = IID('{64FE251C-549A-4B0B-BBF5-E7EE6E32ECF4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTiebars,
	]
	default_interface = IMGCPCBTiebars

class ToolingHole(CoClassBaseClass): # A CoClass
	# MGCPCB Tooling Hole class.
	CLSID = IID('{EDEDED85-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBToolingHole,
	]
	default_interface = IMGCPCBToolingHole

class ToolingHoles(CoClassBaseClass): # A CoClass
	# MGCPCB Tooling Holes class.
	CLSID = IID('{EDEDED86-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBToolingHoles,
	]
	default_interface = IMGCPCBToolingHoles

class Trace(CoClassBaseClass): # A CoClass
	# MGCPCB Trace Class
	CLSID = IID('{EDEDED0E-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTrace,
	]
	default_interface = IMGCPCBTrace

class TraceSegment(CoClassBaseClass): # A CoClass
	# MGCPCB TraceSegment Class
	CLSID = IID('{B96D1270-A555-4AD2-9A59-EE5A4943F47A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTraceSegment,
	]
	default_interface = IMGCPCBTraceSegment

class TraceSegments(CoClassBaseClass): # A CoClass
	# MGCPCB TraceSegments Collection Class
	CLSID = IID('{BA6106DA-5EA2-42AA-AD89-A2F3C050B80C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTraceSegments,
	]
	default_interface = IMGCPCBTraceSegments

class Tracedrop(CoClassBaseClass): # A CoClass
	# MGCPCB Tracedrop class.
	CLSID = IID('{EDEDEDA9-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTracedrop,
	]
	default_interface = IMGCPCBTracedrop

class Tracedrops(CoClassBaseClass): # A CoClass
	# MGCPCB Tracedrops class.
	CLSID = IID('{EDEDEDAA-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTracedrops,
	]
	default_interface = IMGCPCBTracedrops

class Traces(CoClassBaseClass): # A CoClass
	# MGCPCB Traces Collection Class
	CLSID = IID('{EDEDED0D-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTraces,
	]
	default_interface = IMGCPCBTraces

class TuningMeter(CoClassBaseClass): # A CoClass
	# MGCPCB Tuning Meter Class
	CLSID = IID('{112EBB48-A7FC-4993-BFDC-207DACB7EF41}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBTuningMeter,
	]
	default_interface = IMGCPCBTuningMeter

class UserLayer(CoClassBaseClass): # A CoClass
	# MGCPCB UserLayer class.
	CLSID = IID('{EDEDED70-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUserLayer,
	]
	default_interface = IMGCPCBUserLayer

class UserLayerGfx(CoClassBaseClass): # A CoClass
	# MGCPCB UserLayerGfx Class
	CLSID = IID('{EDEDED51-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUserLayerGfx,
	]
	default_interface = IMGCPCBUserLayerGfx

class UserLayerGfxs(CoClassBaseClass): # A CoClass
	# MGCPCB UserLayerGfxs Class
	CLSID = IID('{EDEDED52-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUserLayerGfxs,
	]
	default_interface = IMGCPCBUserLayerGfxs

class UserLayerText(CoClassBaseClass): # A CoClass
	# MGCPCB UserLayerText Class
	CLSID = IID('{EDEDED57-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUserLayerText,
	]
	default_interface = IMGCPCBUserLayerText

class UserLayerTexts(CoClassBaseClass): # A CoClass
	# MGCPCB UserLayerTexts Class
	CLSID = IID('{EDEDED58-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUserLayerTexts,
	]
	default_interface = IMGCPCBUserLayerTexts

class UserLayers(CoClassBaseClass): # A CoClass
	# MGCPCB UserLayers collection class.
	CLSID = IID('{EDEDED71-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUserLayers,
	]
	default_interface = IMGCPCBUserLayers

class UserPad(CoClassBaseClass): # A CoClass
	# MGCPCB User Pad Class
	CLSID = IID('{A5EF4AE4-C5B1-4DFF-811A-2B55EB8A78EB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUserPad,
	]
	default_interface = IMGCPCBUserPad

class UserPads(CoClassBaseClass): # A CoClass
	# MGCPCB User Pads Class
	CLSID = IID('{19561159-3A13-4D58-AEEA-7FD328997BD2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUserPads,
	]
	default_interface = IMGCPCBUserPads

class Utility(CoClassBaseClass): # A CoClass
	# MGCPCB Utility Class
	CLSID = IID('{EDEDED4C-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBUtility,
	]
	default_interface = IMGCPCBUtility

class Via(CoClassBaseClass): # A CoClass
	# MGCPCB Via Class
	CLSID = IID('{EDEDED10-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBVia,
	]
	default_interface = IMGCPCBVia

class ViaSpan(CoClassBaseClass): # A CoClass
	# MGCPCB ViaSpan Class
	CLSID = IID('{19165111-34B6-48A8-ADAC-DFCE46334755}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBViaSpan,
	]
	default_interface = IMGCPCBViaSpan

class ViaUtility(CoClassBaseClass): # A CoClass
	# MGCPCB Via Utility Class
	CLSID = IID('{64167F8C-BA98-4DB3-B48F-9D5CDC0FDE50}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBViaUtility,
	]
	default_interface = IMGCPCBViaUtility

class Vias(CoClassBaseClass): # A CoClass
	# MGCPCB Vias Collection Class
	CLSID = IID('{EDEDED0F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBVias,
	]
	default_interface = IMGCPCBVias

class View(CoClassBaseClass): # A CoClass
	# MGCPCB View Class
	CLSID = IID('{EDEDED06-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBView,
	]
	default_interface = IMGCPCBView

# This CoClass is known by the name 'MGCPCB.ViewerPCBApplication.119'
class ViewerPCBApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Xpedition Layout Viewer Application Class
	CLSID = IID('{8B4568A7-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class Views(CoClassBaseClass): # A CoClass
	# MGCPCB Views class
	CLSID = IID('{42818231-BDC7-4236-AAF8-179AF482F1AE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBViews,
	]
	default_interface = IMGCPCBViews

class WireBondGuide(CoClassBaseClass): # A CoClass
	# MGCPCB Bond wire Guide Class
	CLSID = IID('{2C63C8B0-5B8F-499C-8C8E-A3361EED9017}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBWireBondGuide,
	]
	default_interface = IMGCPCBWireBondGuide

class WireBondGuides(CoClassBaseClass): # A CoClass
	# MGCPCB Bond Wire Guides Class
	CLSID = IID('{7499ED95-4CE6-4A33-99D5-E4C8C1DC6D1D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBWireBondGuides,
	]
	default_interface = IMGCPCBWireBondGuides

class XProbe(CoClassBaseClass): # A CoClass
	# MGCPCB XProbe Class
	CLSID = IID('{EDEDED2B-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBXProbe,
	]
	default_interface = IMGCPCBXProbe

# This CoClass is known by the name 'MGCPCB.XpeditionPDApplication.119'
class XpeditionPDApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Xpedition Package Designer Application Class
	CLSID = IID('{8B463BA6-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

# This CoClass is known by the name 'MGCPCB.XtremeDesignSessionApplication.119'
class XtremeDesignSessionApplication(CoClassBaseClass): # A CoClass
	# MGCPCB Team Server Application Class
	CLSID = IID('{8B456FB0-6CF5-1014-857A-77B9EECCF0AC}')
	coclass_sources = [
		_IMGCPCBApplicationEvents,
	]
	default_source = _IMGCPCBApplicationEvents
	coclass_interfaces = [
		IMGCPCBApplication,
	]
	default_interface = IMGCPCBApplication

class button(CoClassBaseClass): # A CoClass
	# MGCPCB Dialog Button class.
	CLSID = IID('{EDEDED5F-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBButton,
	]
	default_interface = IMGCPCBButton

class checkbox(CoClassBaseClass): # A CoClass
	# MGCPCB Check Box Button Class
	CLSID = IID('{EDEDED80-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBCheckBox,
	]
	default_interface = IMGCPCBCheckBox

class property(CoClassBaseClass): # A CoClass
	# MGCPCB Property Class
	CLSID = IID('{EDEDED44-D5F6-4B04-8FE7-EDEDEDEDED00}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IMGCPCBProperty,
	]
	default_interface = IMGCPCBProperty

IMGCPCBActiveClearanceEngine_vtables_dispatch_ = 1
IMGCPCBActiveClearanceEngine_vtables_ = [
	(( 'Enabled' , 'pVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'Enabled' , 'pVal' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ActiveObject' , ), 2, (2, (), [ (9, 1, None, None) , ], 1 , 8 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AreaDiameter' , 'eUnit' , ), 4, (4, (), [ (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AreaDiameter' , 'eUnit' , ), 4, (4, (), [ (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'RedrawMethod' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Draw' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBActualPlaneShape_vtables_dispatch_ = 1
IMGCPCBActualPlaneShape_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'Subnet' , 'pSubnet' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'PlaneShape' , 'ppPlaneShape' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 64 , )),
	(( 'GeneratedPlanes' , 'ppGeneratedPlanes' , ), 49, (49, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'TieLegs' , 'ppTieLegs' , ), 50, (50, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
	(( 'Parent' , 'ppParent' , ), 51, (51, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IMGCPCBActualPlaneShapes_vtables_dispatch_ = 1
IMGCPCBActualPlaneShapes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppActualPlaneShape' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pActualPlaneShape' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBApplication_vtables_dispatch_ = 1
IMGCPCBApplication_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDocument' , 'ppDoc' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DefaultFilePath' , 'pPath' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'pVisible' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'pVisible' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'OpenDocument' , 'filename' , 'ppDoc' , ), 6, (6, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Quit' , ), 7, (7, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LockServer' , 'bReservedForFutureUse' , 'pSuccess' , ), 8, (8, (), [ (11, 49, 'False', None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UnlockServer' , 'bReservedForFutureUse' , 'pSuccess' , ), 9, (9, (), [ (11, 49, 'True', None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ProcessScript' , 'filename' , 'bSilent' , 'pSuccess' , ), 10, (10, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Utility' , 'ppUtility' , ), 11, (11, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4B}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Gui' , 'ppGui' , ), 12, (12, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5B}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'LockCount' , 'pCount' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'AppClosing' , 'eApp' , ), 15, (15, (), [ (3, 0, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'AcquireLicense' , 'eType' , 'bSuccess' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 64 , )),
	(( 'Addins' , 'pVal' , ), 17, (17, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'IsXtremeClient' , 'ret' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'ret' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'InstanceGuid' , 'sGUID' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'IsXtremeServer' , 'ret' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ProcessScriptEx' , 'Script' , 'isFile' , 'ArgumentArray' , 'languageFileExtension' , 
			 'bSilent' , 'pReturnValue' , ), 22, (22, (), [ (8, 1, None, None) , (11, 49, 'True', None) , 
			 (12, 49, "''", None) , (8, 49, "'vbs'", None) , (11, 49, 'True', None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 32, None, None) , 64 , )),
	(( 'ProductConfigDirectory' , 'psName' , ), 23, (23, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ProductBinDirectory' , 'psName' , ), 24, (24, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ProductHelpDirectory' , 'psName' , ), 25, (25, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ProductStandardDirectory' , 'psName' , ), 26, (26, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AcquireLicenseEx' , 'eType' , 'bSuccess' , ), 27, (27, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReleaseLicense' , 'eType' , 'bSuccess' , ), 28, (28, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'EditorType' , 'eType' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'SetAddinVersionInfo' , 'AddinName' , 'VersionInformation' , ), 30, (30, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'RemoveAddinVersionInfo' , 'AddinName' , ), 31, (31, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'AutomationInit' , '_arguments' , '_dispPtr' , ), 32, (32, (), [ (12, 1, None, None) , 
			 (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 64 , )),
	(( 'IsLicenseAcquired' , 'eType' , 'bAcquired' , ), 33, (33, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'UserHandle' , 'pUserHandle' , ), 34, (34, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'IsDBLocked' , 'Locked' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'EDXImport' , 'ppDispatch' , ), 36, (36, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'IsOpenGLOn' , 'bOn' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'RecentFiles' , 'RecentFiles' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'InvokingApplication' , 'pInvokingApplication' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'IsReferenceApplication' , 'bRefApp' , ), 40, (40, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'IsDocumentReady' , 'bDocReady' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'OpenReference' , 'refDesign' , 'ppApplication' , ), 42, (42, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'IsLicenseAvailable' , 'eType' , 'bAvailable' , ), 43, (43, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'IsEngineThreadBusy' , 'Busy' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 64 , )),
	(( 'DataManagement' , 'DataManagement' , ), 45, (45, (), [ (16393, 10, None, "IID('{E6C0D2B9-F966-4A54-AEB3-AFB0DBC97986}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 64 , )),
	(( 'UsingEmbeddedDataManagement' , 'UsingEmbeddedDataManagement' , ), 46, (46, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 64 , )),
	(( 'UsingTeamCenterDataManagement' , 'usingTcDataManagement' , ), 47, (47, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 64 , )),
	(( 'UsingTeamCenterDataManagementWithActiveWorkspace' , 'usingTcDataManagementWithActiveWorkspace' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 64 , )),
	(( 'OpenDocumentMultiThreaded' , 'filename' , 'ppDoc' , ), 50, (50, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 64 , )),
	(( 'DocumentOpenAllowed' , 'bDocumentOpenAllowed' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 64 , )),
	(( 'FindWritableWDIR' , 'wdir' , ), 52, (52, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 64 , )),
	(( 'IsExitInProgress' , 'exitInProgress' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 64 , )),
	(( 'EarlyLoadedActiveDocument' , 'ppDoc' , ), 54, (54, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 64 , )),
	(( 'AnalyticsParticipation' , 'pParticipate' , ), 55, (55, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 64 , )),
	(( 'AnalyticsParticipation' , 'pParticipate' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 64 , )),
	(( 'GlobalAnalyticsOptOutEnabled' , 'pOptOut' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 64 , )),
	(( 'NewProject' , ), 57, (57, (), [ ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 64 , )),
]

IMGCPCBBaseCollection_vtables_dispatch_ = 1
IMGCPCBBaseCollection_vtables_ = [
	(( '_NewEnum' , 'retval' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 65 , )),
	(( 'Count' , 'pCount' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'vIndex' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBaseGfx_vtables_dispatch_ = 1
IMGCPCBBaseGfx_vtables_ = [
	(( 'Selected' , 'pSelected' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Component' , 'cmp' , ), 5, (5, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 6, (6, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 7, (7, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'ppGeometry' , ), 8, (8, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( '_Handle' , 'pHandleAddress' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 65 , )),
	(( 'IsValid' , 'pValid' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Dimensions' , 'ppDimensions' , ), 12, (12, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( '_Handle' , 'pHandleAddress' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 65 , )),
	(( 'CloneInternal' , ), 14, (14, (), [ ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 65 , )),
	(( 'MoveRelative' , 'XOffset' , 'YOffset' , 'eUnit' , ), 15, (15, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Document' , 'ppDocument' , ), 16, (16, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
]

IMGCPCBBaseText_vtables_dispatch_ = 1
IMGCPCBBaseText_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'pText' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TextType' , 'pType' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 8, (8, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Format' , 'ppFormat' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Component' , 'ppComponent' , ), 11, (11, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( '_Handle' , 'pHandleAddress' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 65 , )),
	(( 'ObjectClass' , 'pClass' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'TextString' , 'pText' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( '_Handle' , 'pHandleAddress' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 65 , )),
	(( 'CloneInternal' , ), 15, (15, (), [ ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 65 , )),
	(( 'Move' , 'x' , 'y' , 'eUnit' , ), 16, (16, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'MoveRelative' , 'XOffset' , 'YOffset' , 'eUnit' , ), 17, (17, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Document' , 'ppDocument' , ), 18, (18, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 64 , )),
]

IMGCPCBBendArea_vtables_dispatch_ = 1
IMGCPCBBendArea_vtables_ = [
	(( 'LineGeometry' , 'ppGeometry' , ), 40, (40, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BendOrder' , 'pBendOrder' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'BendOrder' , 'pBendOrder' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AreaTolerance' , 'eUnit' , 'pAreaTolerance' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'AreaTolerance' , 'eUnit' , 'pAreaTolerance' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FirstCorner' , 'eUnit' , 'pFirstCorner' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'FirstCorner' , 'eUnit' , 'pFirstCorner' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'FirstCorner' , 'eUnit' , 'pFirstCorner' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'FirstCorner' , 'eUnit' , 'pFirstCorner' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AllowCorners' , 'pAllowCorners' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AllowCorners' , 'pAllowCorners' , ), 44, (44, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'AllowWidthChanges' , 'pAllowWidthChanges' , ), 45, (45, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AllowWidthChanges' , 'pAllowWidthChanges' , ), 45, (45, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'AllowNonPerpendicular' , 'pAllowNonPerpendicular' , ), 46, (46, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AllowNonPerpendicular' , 'pAllowNonPerpendicular' , ), 46, (46, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AllowVias' , 'pAllowVias' , ), 47, (47, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AllowVias' , 'pAllowVias' , ), 47, (47, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'AllowSolidFill' , 'pAllowSolidFill' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'AllowSolidFill' , 'pAllowSolidFill' , ), 48, (48, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'AllowParts' , 'pAllowParts' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'AllowParts' , 'pAllowParts' , ), 49, (49, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'LeftSlideDistance' , 'eUnit' , 'pLeftSlideDistance' , ), 50, (50, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'LeftSlideDistance' , 'eUnit' , 'pLeftSlideDistance' , ), 50, (50, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'RightSlideDistance' , 'eUnit' , 'pRightSlideDistance' , ), 51, (51, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'RightSlideDistance' , 'eUnit' , 'pRightSlideDistance' , ), 51, (51, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'BindingLength' , 'eUnit' , 'pBindingLength' , ), 52, (52, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'BindingLength' , 'eUnit' , 'pBindingLength' , ), 52, (52, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'BindingLength' , 'eUnit' , 'pBindingLength' , ), 52, (52, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'BindingLength' , 'eUnit' , 'pBindingLength' , ), 52, (52, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ModifyBendAreaLine' , 'X1' , 'Y1' , 'X2' , 'Y2' , 
			 'dBendRadius' , 'BoardOutlineName' , 'dBendAngle' , 'BendOrigin' , 'dAreaTolerance' , 
			 'dLeftSlideDistance' , 'dRightSlideDistance' , 'eUnit' , 'eAngleUnit' , 'ppBendAreas' , 
			 ), 53, (53, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (8, 49, "''", None) , (5, 49, '90.0', None) , (3, 49, '0', None) , (5, 49, '0.0', None) , 
			 (5, 49, '0.0', None) , (5, 49, '0.0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{6B76C06F-2E50-491B-B845-D70A57247DB0}')") , ], 1 , 1 , 4 , 0 , 432 , (3, 32, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 54, (54, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 64 , )),
	(( 'BoardOutlineName' , 'pName' , ), 55, (55, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'BendRadius' , 'eUnit' , 'pBendRadius' , ), 56, (56, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'BendRadius' , 'eUnit' , 'pBendRadius' , ), 56, (56, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'BendAngle' , 'eUnit' , 'pBendAngle' , ), 57, (57, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'BendAngle' , 'eUnit' , 'pBendAngle' , ), 57, (57, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'BendOrigin' , 'pBendOrigin' , ), 58, (58, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'BendLineGroupId' , 'sBendLineGroupId' , ), 59, (59, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 60, (60, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'DynamicBend' , 'pDynamicBend' , ), 61, (61, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'DynamicBend' , 'pDynamicBend' , ), 61, (61, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 62, (62, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBendAreas_vtables_dispatch_ = 1
IMGCPCBBendAreas_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppBendArea' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pBendArea' , ), 30, (30, (), [ (9, 1, None, "IID('{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBoard_vtables_dispatch_ = 1
IMGCPCBBoard_vtables_ = [
	(( 'InstanceName' , 'pInstanceName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eUnit' , 'dOriginX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eUnit' , 'dOriginX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eUnit' , 'dOriginY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eUnit' , 'dOriginY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'bMirrored' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'bMirrored' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'Move' , 'dX' , 'dY' , 'eUnit' , ), 8, (8, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 11, (11, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TransformPointX' , 'dBrdX' , 'dBrdY' , 'eUnit' , 'dPnlX' , 
			 ), 12, (12, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TransformPointY' , 'dBrdX' , 'dBrdY' , 'eUnit' , 'dPnlY' , 
			 ), 13, (13, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TransformPointsArray' , 'nPnts' , 'pBrdSafeArrayOfPnts' , 'eUnit' , 'pPnlSafeArrayOfPnts' , 
			 ), 14, (14, (), [ (3, 1, None, None) , (16396, 1, None, None) , (3, 49, '0', None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LocalName' , 'pName' , ), 15, (15, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DisplayControl' , 'ppDC' , ), 16, (16, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'dScale' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'dScale' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DimensionDesignWithInstanceOrigin' , 'bDimensionDesignWithInstanceOrigin' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DimensionDesignWithInstanceOrigin' , 'bDimensionDesignWithInstanceOrigin' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'VariantNames' , 'Variants' , ), 19, (19, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AssignVariant' , 'variantName' , ), 20, (20, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 21, (21, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 22, (22, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 23, (23, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'CurrentVariant' , 'variantName' , ), 24, (24, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ReReferenceDesign' , 'variantNewSrcDesignPath' , 'regenerateVariantData' , 'replaceExistingDesigns' , ), 25, (25, (), [ 
			 (8, 1, None, None) , (11, 49, 'False', None) , (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 27, (27, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 28, (28, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'RelativePath' , 'pPath' , ), 29, (29, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBoardOutline_vtables_dispatch_ = 1
IMGCPCBBoardOutline_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBoards_vtables_dispatch_ = 1
IMGCPCBBoards_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppBoard' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pBoard' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBondPad_vtables_dispatch_ = 1
IMGCPCBBondPad_vtables_ = [
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Teardrops' , 'ppTeardrops' , ), 44, (44, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutTraces' , 'ppBreakoutTraces' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 47, (47, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 50, (50, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 52, (52, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 32, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 52, (52, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 32, None, None) , 0 , )),
	(( 'TieLegType' , 'nLayer' , 'pTieLegNumber' , ), 53, (53, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'TieLegType' , 'nLayer' , 'pTieLegNumber' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'TieLegRotation' , 'nLayer' , 'pTieLegRotation' , ), 54, (54, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'TieLegRotation' , 'nLayer' , 'pTieLegRotation' , ), 54, (54, (), [ (3, 49, '0', None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 55, (55, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 55, (55, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 55, (55, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 56, (56, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 56, (56, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 56, (56, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'UsePadstackThermalDefaults' , 'nLayer' , 'pUsePadstackThermalDefault' , ), 57, (57, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'UsePadstackThermalDefaults' , 'nLayer' , 'pUsePadstackThermalDefault' , ), 57, (57, (), [ (3, 49, '0', None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 58, (58, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 60, (60, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 61, (61, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 61, (61, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Tracedrops' , 'ppTracedrops' , ), 62, (62, (), [ (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')") , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'MoveEx' , 'dX' , 'dY' , 'dRotation' , 'eUnit' , 
			 'eAngleUnit' , ), 63, (63, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'AddShortedNets' , 'nLayer' , 'shortedNets' , ), 64, (64, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'RemoveShortedNets' , 'nLayer' , 'shortedNets' , ), 65, (65, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'GetShortedNets' , 'nLayer' , 'shortNets' , ), 66, (66, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 67, (67, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBondPads_vtables_dispatch_ = 1
IMGCPCBBondPads_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppBondPad' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pBondPad' , ), 30, (30, (), [ (9, 1, None, "IID('{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'MoveData' , 'eUnit' , 'eAngleUnit' , ), 35, (35, (), [ 
			 (16396, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBreakoutDefault_vtables_dispatch_ = 1
IMGCPCBBreakoutDefault_vtables_ = [
	(( 'Width' , 'eUnit' , 'pWidth' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'eUnit' , 'pWidth' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'eUnit' , 'pLength' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'eUnit' , 'pLength' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IncludeFixLockTraces' , 'pInclude' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBreakoutDefaults_vtables_dispatch_ = 1
IMGCPCBBreakoutDefaults_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppBreakoutDefault' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pBreakoutDefault' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBreakoutTrace_vtables_dispatch_ = 1
IMGCPCBBreakoutTrace_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'PadstackObjects' , 'ppPadstackObjects' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 44, (44, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 45, (45, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 46, (46, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 47, (47, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 49, (49, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBreakoutTraces_vtables_dispatch_ = 1
IMGCPCBBreakoutTraces_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppBreakoutTrace' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pBreakoutTrace' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBBusPath_vtables_dispatch_ = 1
IMGCPCBBusPath_vtables_ = [
	(( 'BusName' , 'pName' , ), 41, (41, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BitWidth' , 'pBitWidth' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Packed' , 'pPacked' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'BusShielding' , 'pBusShielding' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingBits' , 'pShieldingBits' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNet' , 'ppNet' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNetClass' , 'ppNetClass' , ), 47, (47, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 48, (48, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 50, (50, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintClass' , 'ConstraintClass' , ), 51, (51, (), [ (16393, 10, None, "IID('{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Nets' , 'ppNets' , ), 52, (52, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 53, (53, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 54, (54, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 54, (54, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ShieldGroup' , 'ppShieldNetGroup' , ), 55, (55, (), [ (9, 1, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 8 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ShieldGroup' , 'ppShieldNetGroup' , ), 55, (55, (), [ (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Markers' , 'Markers' , ), 56, (56, (), [ (16393, 10, None, "IID('{3CCA32E2-09D7-42AB-9D14-565025B422B2}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 64 , )),
	(( 'FromTos' , 'FromTos' , ), 57, (57, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 64 , )),
]

IMGCPCBBusPaths_vtables_dispatch_ = 1
IMGCPCBBusPaths_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppBusPath' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pBusPath' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBButton_vtables_dispatch_ = 1
IMGCPCBButton_vtables_ = [
	(( 'Click' , ), 1, (1, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Click2' , 'bWait' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCavities_vtables_dispatch_ = 1
IMGCPCBCavities_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppCavity' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9826B261-A768-44F9-A0B9-1C289FB5D797}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pCavity' , ), 30, (30, (), [ (9, 1, None, "IID('{9826B261-A768-44F9-A0B9-1C289FB5D797}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCavity_vtables_dispatch_ = 1
IMGCPCBCavity_vtables_ = [
	(( 'StartLayer' , 'pStartLayer' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'StartLayer' , 'pStartLayer' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pEndLayer' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pEndLayer' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'AllowMetalOnStartLayer' , 'eAllowMetal' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AllowMetalOnStartLayer' , 'eAllowMetal' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AllowMetalOnEndLayer' , 'eAllowMetal' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AllowMetalOnEndLayer' , 'eAllowMetal' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Milled' , 'bVal' , ), 45, (45, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Hole' , 'ppHole' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Hole' , 'ppHole' , ), 46, (46, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , ], 1 , 8 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 47, (47, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 49, (49, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 50, (50, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 51, (51, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 51, (51, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 52, (52, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 52, (52, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 54, (54, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCell_vtables_dispatch_ = 1
IMGCPCBCell_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Celltype' , 'pType' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PackageGroup' , 'pPackageGroup' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MountType' , 'pMountType' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 6, (6, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PanelGroup' , 'pPanelGroup' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Components' , 'ppComponents' , ), 8, (8, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ClearanceType' , 'pClearanceType' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PackageGroupName' , 'pVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
]

IMGCPCBCells_vtables_dispatch_ = 1
IMGCPCBCells_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppCell' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pCell' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBChangeData_vtables_dispatch_ = 1
IMGCPCBChangeData_vtables_ = [
	(( 'ModifiedIds' , 'ids' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DeletedIds' , 'ids' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CreatedIds' , 'ids' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ObjectFilter' , 'ppObjectFilter' , ), 4, (4, (), [ (9, 1, None, "IID('{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}')") , ], 1 , 8 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ObjectFilter' , 'ppObjectFilter' , ), 4, (4, (), [ (16393, 10, None, "IID('{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FromRecord' , 'identifier' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ToRecord' , 'identifier' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCheckBox_vtables_dispatch_ = 1
IMGCPCBCheckBox_vtables_ = [
	(( 'Checked' , 'pChecked' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Checked' , 'pChecked' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCheckpoint_vtables_dispatch_ = 1
IMGCPCBCheckpoint_vtables_ = [
	(( 'IsValid' , 'Valid' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
]

IMGCPCBClearance_vtables_dispatch_ = 1
IMGCPCBClearance_vtables_ = [
	(( 'GetNetClearanceRuleByType' , 'Object1Type' , 'Object1' , 'Object1Layer' , 'Object2Type' , 
			 'Object2' , 'Object2Layer' , 'Scheme' , 'eUnit' , 'pClearance' , 
			 ), 0, (0, (), [ (3, 1, None, None) , (9, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (9, 1, None, None) , (3, 1, None, None) , (8, 49, "'(Master)'", None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 32, None, None) , 0 , )),
	(( 'GetGeneralClearanceRuleByType' , 'Object1Type' , 'Object2Type' , 'eUnit' , 'pClearance' , 
			 ), 1, (1, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetComponentClearanceRuleByType' , 'ClearanceType1' , 'ClearanceType2' , 'eSide' , 'eAlignment' , 
			 'eUnit' , 'pClearance' , ), 2, (2, (), [ (8, 1, None, None) , (8, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PackageClearanceTypes' , 'pClearanceTypes' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetClearanceRule' , 'firstObject' , 'secondObject' , 'firstObjectLayer' , 'secondObjectLayer' , 
			 'eUnit' , 'val' , ), 4, (4, (), [ (9, 1, None, None) , (9, 1, None, None) , 
			 (3, 49, '-1', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetActualMinClearance' , 'firstObject' , 'secondObject' , 'eUnit' , 'val' , 
			 ), 5, (5, (), [ (9, 1, None, None) , (9, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MVOInternalClearance' , 'pNet' , 'pPadstack' , 'Scheme' , 'eUnit' , 
			 'dValue' , ), 6, (6, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (8, 1, None, None) , 
			 (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCluster_vtables_dispatch_ = 1
IMGCPCBCluster_vtables_ = [
	(( 'Name' , 'pViaSpan' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IncludedComponent' , 'pComp' , ), 41, (41, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IncludedComponents' , 'ppComps' , ), 42, (42, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ObjectType' , 'pType' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pViaSpan' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBClusters_vtables_dispatch_ = 1
IMGCPCBClusters_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppCluster' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pCluster' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBColor_vtables_dispatch_ = 1
IMGCPCBColor_vtables_ = [
	(( 'Red' , 'pRed' , ), 1, (1, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Red' , 'pRed' , ), 1, (1, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Green' , 'pGreen' , ), 2, (2, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Green' , 'pGreen' , ), 2, (2, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Blue' , 'pBlue' , ), 3, (3, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Blue' , 'pBlue' , ), 3, (3, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBColorPattern_vtables_dispatch_ = 1
IMGCPCBColorPattern_vtables_ = [
	(( 'Index' , 'pIndex' , ), 0, (0, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'pIndex' , ), 0, (0, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Outline' , 'pOutline' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Outline' , 'pOutline' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Transparent' , 'pTransparent' , ), 2, (2, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Transparent' , 'pTransparent' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Red' , 'pRed' , ), 3, (3, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Red' , 'pRed' , ), 3, (3, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Green' , 'pGreen' , ), 4, (4, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Green' , 'pGreen' , ), 4, (4, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Blue' , 'pBlue' , ), 5, (5, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Blue' , 'pBlue' , ), 5, (5, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'pState' , ), 6, (6, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'pState' , ), 6, (6, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AlphaBlend' , 'pAlpha' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AlphaBlend' , 'pAlpha' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCommand_vtables_dispatch_ = 1
IMGCPCBCommand_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'pUnit' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'pUnit' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eUnit' , 'pVal' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'Grid' , 'eUnit' , 'pVal' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'Grid' , 'eUnit' , 'pVal' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'Grid' , 'eUnit' , 'pVal' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'GridOriginX' , 'eUnit' , 'pVal' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'GridOriginX' , 'eUnit' , 'pVal' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'GridOriginX' , 'eUnit' , 'pVal' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'GridOriginX' , 'eUnit' , 'pVal' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'GridOriginY' , 'eUnit' , 'pVal' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'GridOriginY' , 'eUnit' , 'pVal' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'GridOriginY' , 'eUnit' , 'pVal' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
	(( 'GridOriginY' , 'eUnit' , 'pVal' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
	(( 'AngleLock' , 'eAngleUnit' , 'pVal' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'AngleLock' , 'eAngleUnit' , 'pVal' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'AngleLockOriginX' , 'eUnit' , 'pVal' , ), 32, (32, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'AngleLockOriginX' , 'eUnit' , 'pVal' , ), 32, (32, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'AngleLockOriginY' , 'eUnit' , 'pVal' , ), 33, (33, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'AngleLockOriginY' , 'eUnit' , 'pVal' , ), 33, (33, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'PutAngleLock' , 'dAngle' , 'dOriginX' , 'dOriginY' , 'eAngleUnit' , 
			 'eUnit' , ), 35, (35, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'SnapLocation' , 'Event' , 'button' , ), 36, (36, (), [ (3, 1, None, None) , 
			 (3, 49, '1', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ShowGrid' , 'eType' , ), 37, (37, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
]

IMGCPCBCommandListener_vtables_dispatch_ = 1
IMGCPCBCommandListener_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'id' , 'nId' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'pUnit' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'pUnit' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'KeyboardFlags' , 'eFlags' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCommon_vtables_dispatch_ = 0
IMGCPCBCommon_vtables_ = [
	(( 'FixLock' , 'pAnchorType' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 24 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( 'Placed' , 'pPlaced' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
]

IMGCPCBComplexVia_vtables_dispatch_ = 1
IMGCPCBComplexVia_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'StartLayer' , 'pLayer' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pLayer' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ObjectType' , 'pType' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pObj' , ), 10, (10, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'x' , 'y' , 'eUnit' , ), 12, (12, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 13, (13, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 13, (13, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 8 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 14, (14, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 16, (16, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IsDiffPairComplexVia' , 'pDiffPairCV' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'ppVias' , ), 18, (18, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Traces' , 'ppTraces' , ), 19, (19, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'ppConductiveAreas' , ), 20, (20, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShapes' , 'ppPlaneShapes' , ), 21, (21, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'ppObstructs' , ), 22, (22, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'ppObstructs' , ), 22, (22, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'PlacementObstructs' , 'ppPlacementObstructs' , ), 23, (23, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 24, (24, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Frozen' , 'pFrozen' , ), 25, (25, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Frozen' , 'pFrozen' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 26, (26, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionPoints' , 'pNet' , 'FromLayer' , 'ToLayer' , 'eUnit' , 
			 'pPointsArray' , 'pObjects' , ), 27, (27, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 2, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'ConnectionPointsOnLayer' , 'pNet' , 'Layer' , 'eUnit' , 'pPointsArray' , 
			 'pObjects' , ), 28, (28, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 1, None, None) , (3, 1, None, None) , 
			 (16396, 2, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 64 , )),
	(( 'UserDefinedConnectionPoints' , 'pNet' , 'FromLayer' , 'ToLayer' , 'eUnit' , 
			 'pPointsArray' , 'pObjects' , ), 29, (29, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 2, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'UserDefinedConnectionPointsOnLayer' , 'pNet' , 'Layer' , 'eUnit' , 'pPointsArray' , 
			 'pObjects' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 1, None, None) , (3, 1, None, None) , 
			 (16396, 2, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 31, (31, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 33, (33, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNets' , 'pShieldingNets' , ), 34, (34, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
]

IMGCPCBComplexViaPattern_vtables_dispatch_ = 1
IMGCPCBComplexViaPattern_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'StartLayer' , 'pLayer' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pLayer' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Geometries' , 'ppGeometries' , ), 3, (3, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 4, (4, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsDiffPairPattern' , 'pDiffPair' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GeometriesByLayer' , 'nLayer' , 'eObjectClass' , 'ppGeometries' , ), 6, (6, (), [ 
			 (3, 1, None, None) , (3, 49, '-1', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'UserDefinedConnectionPointsOnLayer' , 'nNetIdx' , 'Layer' , 'eUnit' , 'pPointsArray' , 
			 ), 7, (7, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'UserDefinedConnectionPointsForLayerRange' , 'nNetIdx' , 'LayerFrom' , 'LayerTo' , 'eUnit' , 
			 'pPointsArray' , ), 8, (8, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBComplexViaPatterns_vtables_dispatch_ = 1
IMGCPCBComplexViaPatterns_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppVia' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{392E8A72-90FA-4B22-8214-7CEE80816541}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 30, (30, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBComplexVias_vtables_dispatch_ = 1
IMGCPCBComplexVias_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppVia' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DA0209B0-DA9A-4145-B0B5-8174B59835ED}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pVia' , ), 30, (30, (), [ (9, 1, None, "IID('{DA0209B0-DA9A-4145-B0B5-8174B59835ED}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBComponent_vtables_dispatch_ = 1
IMGCPCBComponent_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PartName' , 'pName' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'Layer' , 'pLayer' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Pins' , 'Name' , 'ppPins' , ), 9, (9, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 32, None, None) , 0 , )),
	(( 'Pins' , 'Name' , 'ppPins' , ), 9, (9, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 32, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pAngle' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pAngle' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pAngle' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pAngle' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IsSMD' , 'pSMD' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Celltype' , 'pType' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'CellName' , 'pName' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
	(( 'Placed' , 'pPlaced' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CenterX' , 'eUnit' , 'pX' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CenterX' , 'eUnit' , 'pX' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CenterY' , 'eUnit' , 'pY' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CenterY' , 'eUnit' , 'pY' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Room' , 'ppRoom' , ), 19, (19, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Contours' , 'ppContours' , ), 21, (21, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'InsertionOutlines' , 'ppGfxs' , ), 22, (22, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ResistorShapes' , 'ppGfxs' , ), 23, (23, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'PlacementObstructs' , 'ppPlacementObstructs' , ), 26, (26, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PlacementOutlines' , 'ppPlacementOutlines' , ), 28, (28, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'ppObstructs' , ), 29, (29, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'ppObstructs' , ), 29, (29, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Fiducials' , 'ppFiducials' , ), 32, (32, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'MountingHoles' , 'ppMountingHoles' , ), 33, (33, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'ppConductiveAreas' , ), 34, (34, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Traces' , 'ppTraces' , ), 35, (35, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShapes' , 'ppPlaneShapes' , ), 36, (36, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'ppVias' , ), 37, (37, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Cell' , 'ppCell' , ), 38, (38, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 39, (39, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'dX' , 'dY' , 'eUnit' , ), 40, (40, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DrillDrawings' , 'ppDrillDrawings' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 42, (42, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 42, (42, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppGfxs' , 
			 ), 43, (43, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppGfxs' , 
			 ), 43, (43, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 44, (44, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 44, (44, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'ppTexts' , ), 45, (45, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'ppTexts' , ), 45, (45, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppTexts' , 
			 ), 47, (47, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppTexts' , 
			 ), 47, (47, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'ppTexts' , ), 48, (48, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'ppTexts' , ), 48, (48, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 32, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 49, (49, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Place' , 'dX' , 'dY' , 'dOrientation' , 'bTop' , 
			 'eFixType' , 'eUnit' , 'eAngleUnit' , ), 50, (50, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 51, (51, (), [ ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'FindPin' , 'strPinName' , 'ppPin' , ), 52, (52, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 53, (53, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 54, (54, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'IsNested' , 'ppComponent' , ), 56, (56, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'pMirrored' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 58, (58, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 59, (59, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'PutPin' , 'sName' , 'pPadstack' , 'pNet' , 'dX' , 
			 'dY' , 'dRotation' , 'bMirror' , 'eUnit' , 'eAngleUnit' , 
			 'ppPin' , ), 60, (60, (), [ (8, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 49, '0.0', None) , (11, 49, 'False', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 64 , )),
	(( 'GlueSpotX' , 'eUnit' , 'pX' , ), 61, (61, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'GlueSpotX' , 'eUnit' , 'pX' , ), 61, (61, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'GlueSpotY' , 'eUnit' , 'pY' , ), 62, (62, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'GlueSpotY' , 'eUnit' , 'pY' , ), 62, (62, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'AssemblyOriginX' , 'eUnit' , 'pX' , ), 63, (63, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'AssemblyOriginX' , 'eUnit' , 'pX' , ), 63, (63, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'AssemblyOriginY' , 'eUnit' , 'pY' , ), 64, (64, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'AssemblyOriginY' , 'eUnit' , 'pY' , ), 64, (64, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'Distributed' , 'pDistributed' , ), 65, (65, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveType' , 'eType' , ), 66, (66, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ResistorForm' , 'eForm' , ), 67, (67, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'CapacitorForm' , 'eForm' , ), 68, (68, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapes' , 'eSelectOnly' , 'eType' , 'nLayerOnly' , 'ppEPShapes' , 
			 ), 69, (69, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')") , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapes' , 'eSelectOnly' , 'eType' , 'nLayerOnly' , 'ppEPShapes' , 
			 ), 69, (69, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')") , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'MoveRelative' , 'OffsetX' , 'OffsetY' , 'eUnit' , ), 70, (70, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Document' , 'ppDocument' , ), 71, (71, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 72, (72, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 72, (72, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 32, None, None) , 0 , )),
	(( 'Destroy' , ), 73, (73, (), [ ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'CloneInternal' , ), 74, (74, (), [ ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 65 , )),
	(( 'VariantInfo' , 'retval' , ), 75, (75, (), [ (16393, 10, None, "IID('{75404CBD-630D-4F46-A588-6251B8FE7514}')") , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 64 , )),
	(( 'Parent' , 'ppParent' , ), 76, (76, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'RuleAreas' , 'ppGfxs' , ), 77, (77, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 78, (78, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'ObjectType' , 'pType' , ), 79, (79, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'MetalizationAreas' , 'ppMetalizationAreas' , ), 80, (80, (), [ (16393, 10, None, "IID('{F48923B1-F092-42C5-8108-1256A55CDB86}')") , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'PartNumber' , 'pName' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'PartNumber' , 'pName' , ), 81, (81, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 64 , )),
	(( 'ReplacementCells' , 'retval' , ), 82, (82, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'ReplaceCell' , 'pCell' , ), 83, (83, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'ResetCell' , ), 84, (84, (), [ ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 64 , )),
	(( 'ClearanceType' , 'pClearanceType' , ), 85, (85, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'ClearanceType' , 'pClearanceType' , ), 85, (85, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'RefDes' , 'pName' , ), 86, (86, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'RefDes' , 'pName' , ), 86, (86, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'GlueSpotX' , 'eUnit' , 'pX' , ), 61, (61, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'GlueSpotX' , 'eUnit' , 'pX' , ), 61, (61, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'GlueSpotY' , 'eUnit' , 'pY' , ), 62, (62, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'GlueSpotY' , 'eUnit' , 'pY' , ), 62, (62, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 87, (87, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'IsModified' , 'Modified' , ), 88, (88, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 64 , )),
	(( 'Level' , 'Level' , ), 89, (89, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'Level' , 'Level' , ), 89, (89, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'WireGraphic' , 'ppWireGraphic' , ), 90, (90, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')") , ], 1 , 2 , 4 , 0 , 776 , (3, 0, None, None) , 64 , )),
	(( 'IsSpare' , 'Spare' , ), 91, (91, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'ResetCellEx' , 'KeepChangedText' , ), 92, (92, (), [ (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'GlueSpots' , 'retval' , ), 93, (93, (), [ (16393, 10, None, "IID('{EDAD6DA3-1AE5-4B8E-94F0-2A3F9B69553D}')") , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'AddGlueSpot' , 'PositionX' , 'PositionY' , 'eUnit' , 'retval' , 
			 ), 94, (94, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}')") , ], 1 , 1 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'ReuseBlockName' , 'pReuseBlockName' , ), 95, (95, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 96, (96, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 97, (97, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'AssemblyOriginX' , 'eUnit' , 'pX' , ), 63, (63, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'AssemblyOriginX' , 'eUnit' , 'pX' , ), 63, (63, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'AssemblyOriginY' , 'eUnit' , 'pY' , ), 64, (64, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'AssemblyOriginY' , 'eUnit' , 'pY' , ), 64, (64, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'DeleteAssemblyOrigin' , ), 98, (98, (), [ ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'IsAssemblyOriginPlaced' , 'bVal' , ), 99, (99, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'PutPropertyEx' , 'sName' , 'sValue' , 'sSource' , 'ppProperty' , 
			 ), 100, (100, (), [ (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 872 , (3, 0, None, None) , 64 , )),
	(( 'CreateMotionGfx' , 'motionType' , 'MotionObject' , ), 101, (101, (), [ (3, 49, '3', None) , 
			 (16393, 10, None, "IID('{892F84E5-2360-4C62-BA83-B10CFECE180F}')") , ], 1 , 1 , 4 , 0 , 880 , (3, 0, None, None) , 64 , )),
	(( 'Push' , ), 102, (102, (), [ ], 1 , 1 , 4 , 0 , 888 , (3, 0, None, None) , 64 , )),
	(( 'Marked' , 'pMarked' , ), 103, (103, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , 'pMarked' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pPath' , ), 104, (104, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 64 , )),
	(( 'Sheet' , 'pSheet' , ), 105, (105, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 64 , )),
	(( 'ConnectionCount' , 'pConnections' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'BurnedByFilter' , 'pVal' , ), 107, (107, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 936 , (3, 0, None, None) , 64 , )),
	(( 'BurnedByFilter' , 'pVal' , ), 107, (107, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 944 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 108, (108, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 108, (108, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreaName' , 'pName' , ), 109, (109, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 64 , )),
	(( 'CESheet' , 'pName' , ), 110, (110, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 64 , )),
	(( 'MarkedAllNets' , ), 111, (111, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'EnableMarkedAllNets' , 'Enabled' , ), 112, (112, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 992 , (3, 0, None, None) , 64 , )),
	(( 'UnPlace' , ), 113, (113, (), [ ], 1 , 1 , 4 , 0 , 1000 , (3, 0, None, None) , 64 , )),
	(( 'HasPinsWithTargets' , 'bVal' , ), 114, (114, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'ChangePropertyTextString' , 'PropertyName' , 'TextString' , ), 115, (115, (), [ (8, 0, None, None) , 
			 (8, 0, None, None) , ], 1 , 1 , 4 , 0 , 1016 , (3, 0, None, None) , 64 , )),
	(( 'BottomHeight' , 'eUnit' , 'pHgt' , ), 116, (116, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'BottomHeight' , 'eUnit' , 'pHgt' , ), 116, (116, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'NestedCells' , 'ppComponents' , ), 117, (117, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 118, (118, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Value' , ), 119, (119, (), [ (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 1048 , (3, 0, None, None) , 64 , )),
	(( 'PlaceEx' , 'dX' , 'dY' , 'dOrientation' , 'Layer' , 
			 'eFixType' , 'eUnit' , 'eAngleUnit' , ), 120, (120, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'IsSchematicShort' , 'SchematicShort' , ), 121, (121, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'OnCrossProbeSelection' , ), 122, (122, (), [ ], 1 , 1 , 4 , 0 , 1072 , (3, 0, None, None) , 64 , )),
	(( 'IsEmbeddedDie' , 'EmbeddedDie' , ), 123, (123, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'MirroredHV' , 'pMirroredHV' , ), 124, (124, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'MirroredHV' , 'pMirroredHV' , ), 124, (124, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1096 , (3, 0, None, None) , 64 , )),
	(( 'PlaceExEx' , 'dX' , 'dY' , 'dOrientation' , 'Layer' , 
			 'bTop' , 'bFlip' , 'eFixType' , 'eUnit' , 'eAngleUnit' , 
			 ), 125, (125, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (11, 49, 'True', None) , (11, 49, 'False', None) , (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBComponents_vtables_dispatch_ = 1
IMGCPCBComponents_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppCmp' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pCmp' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Place' , 'eMethod' , ), 35, (35, (), [ (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , ), 36, (36, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PlaceAutoArrange' , ), 37, (37, (), [ ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConductiveArea_vtables_dispatch_ = 1
IMGCPCBConductiveArea_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 8 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'IsMultiViaMember' , 'bVal' , ), 45, (45, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PutSegmentID' , 'id' , ), 46, (46, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'SegmentIDs' , 'ids' , ), 47, (47, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 64 , )),
	(( 'DeleteSegmentID' , 'id' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'Parent' , 'ppParent' , ), 49, (49, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 50, (50, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 51, (51, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 51, (51, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 52, (52, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 54, (54, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 52, (52, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 55, (55, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 55, (55, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 56, (56, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 56, (56, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 57, (57, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 57, (57, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Placed' , 'pPlaced' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 59, (59, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'DRCType' , 'pDRCType' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'DRCType' , 'pDRCType' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConductiveAreas_vtables_dispatch_ = 1
IMGCPCBConductiveAreas_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppConductiveArea' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pConductiveArea' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConductorLayerGfx_vtables_dispatch_ = 1
IMGCPCBConductorLayerGfx_vtables_ = [
	(( 'Name' , 'pName' , ), 30, (30, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'pLayerName' , ), 32, (32, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 33, (33, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 64 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 34, (34, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 35, (35, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Type2' , 'pType' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConductorLayerGfxs_vtables_dispatch_ = 1
IMGCPCBConductorLayerGfxs_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppGfx' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pGfx' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConductorLayerText_vtables_dispatch_ = 1
IMGCPCBConductorLayerText_vtables_ = [
	(( 'Layer' , 'pLayer' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'pLayerName' , ), 31, (31, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 30, (30, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SetTextType' , 'pType' , ), 32, (32, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 33, (33, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 34, (34, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 35, (35, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 35, (35, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 37, (37, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 38, (38, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 39, (39, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 40, (40, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 41, (41, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 36, (36, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 43, (43, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'IsFlexTextValid' , 'pValid' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'StrokeText' , 'units' , 'textPoints' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConductorLayerTexts_vtables_dispatch_ = 1
IMGCPCBConductorLayerTexts_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppText' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pText' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConstraint_vtables_dispatch_ = 1
IMGCPCBConstraint_vtables_ = [
	(( 'MaxNumberOfVias' , 'pMaxVias' , ), 0, (0, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'MinLength' , 'Unit' , 'pMinLength' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'MinLength' , 'Unit' , 'pMinLength' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'MaxLength' , 'Unit' , 'pMaxLength' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MaxLength' , 'Unit' , 'pMaxLength' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MinTOF' , 'pMinTOF' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MaxTOF' , 'pMaxTOF' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DelayFormula' , 'pDFormula' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConstraintClass_vtables_dispatch_ = 1
IMGCPCBConstraintClass_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Nets' , 'ppNets' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsBus' , 'pIsBus' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'BusName' , 'pName' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConstraintClasses_vtables_dispatch_ = 1
IMGCPCBConstraintClasses_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppConstraintClass' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'ppConstraintClass' , ), 30, (30, (), [ (9, 1, None, "IID('{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConstructionLine_vtables_dispatch_ = 1
IMGCPCBConstructionLine_vtables_ = [
	(( 'Name' , 'pName' , ), 30, (30, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'pLayerName' , ), 32, (32, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsDimensionGfx' , 'pDimensionGfx' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 34, (34, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 35, (35, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 36, (36, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 36, (36, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 8 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 37, (37, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'IsConstructionElement' , 'val' , ), 38, (38, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Infinite' , 'val' , ), 40, (40, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'eAngleUnit' , 'val' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'eAngleUnit' , 'val' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 42, (42, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 44, (44, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConstructionLines_vtables_dispatch_ = 1
IMGCPCBConstructionLines_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppConstructionLine' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pConstructionLine' , ), 30, (30, (), [ (9, 1, None, "IID('{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConstructionPoint_vtables_dispatch_ = 1
IMGCPCBConstructionPoint_vtables_ = [
	(( 'Name' , 'pName' , ), 30, (30, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'pLayerName' , ), 32, (32, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsDimensionGfx' , 'pDimensionGfx' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 34, (34, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 35, (35, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 36, (36, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 36, (36, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 8 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 37, (37, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'IsConstructionElement' , 'val' , ), 38, (38, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'x' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'x' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'x' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'x' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'y' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'y' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'y' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'y' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'eUnit' , 'Radius' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'eUnit' , 'Radius' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'eUnit' , 'Radius' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'eUnit' , 'Radius' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 43, (43, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 45, (45, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 46, (46, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

IMGCPCBConstructionPoints_vtables_dispatch_ = 1
IMGCPCBConstructionPoints_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppConstructionPoint' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pConstructionPoint' , ), 30, (30, (), [ (9, 1, None, "IID('{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBContour_vtables_dispatch_ = 1
IMGCPCBContour_vtables_ = [
	(( 'Compensation' , 'pCompensation' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Compensation' , 'pCompensation' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'pReverse' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'pReverse' , ), 42, (42, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ContourType' , 'pType' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ContourType' , 'pType' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Hole' , 'ppHole' , ), 44, (44, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 45, (45, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'StartLayer' , 'pStartLayer' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'StartLayer' , 'pStartLayer' , ), 46, (46, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pEndLayer' , ), 47, (47, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pEndLayer' , ), 47, (47, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 48, (48, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 50, (50, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 51, (51, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 51, (51, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 58, (58, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

IMGCPCBContours_vtables_dispatch_ = 1
IMGCPCBContours_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppContour' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pContour' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCopper_vtables_dispatch_ = 0
IMGCPCBCopper_vtables_ = [
	(( 'Net' , 'ppNet' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 24 , (3, 0, None, None) , 65 , )),
]

IMGCPCBCopperBalancing_vtables_dispatch_ = 1
IMGCPCBCopperBalancing_vtables_ = [
	(( 'SetupFileName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Go' , ), 2, (2, (), [ ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'WriteSetupFile' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'Pattern' , 'Layer' , ), 4, (4, (), [ (3, 49, '0', None) , (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Pattern' , 'Layer' , ), 4, (4, (), [ (3, 49, '0', None) , (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Clearance' , 'Layer' , 'eUnit' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Clearance' , 'Layer' , 'eUnit' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OffsetX' , 'Layer' , 'eUnit' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'OffsetX' , 'Layer' , 'eUnit' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'OffsetY' , 'Layer' , 'eUnit' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'OffsetY' , 'Layer' , 'eUnit' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Layer' , 'eUnit' , ), 8, (8, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Layer' , 'eUnit' , ), 8, (8, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'Layer' , 'eUnit' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'Layer' , 'eUnit' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'MetalPercentage' , 'Layer' , ), 10, (10, (), [ (3, 49, '0', None) , (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MetalPercentage' , 'Layer' , ), 10, (10, (), [ (3, 49, '0', None) , (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FillNonSquareHatch' , 'Layer' , ), 11, (11, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FillNonSquareHatch' , 'Layer' , ), 11, (11, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SnapToHatchGrid' , 'Layer' , ), 12, (12, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SnapToHatchGrid' , 'Layer' , ), 12, (12, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AutoBalance' , 'Layer' , ), 13, (13, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AutoBalance' , 'Layer' , ), 13, (13, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalClearance' , 'eType' , 'eUnit' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaX' , 'eUnit' , ), 15, (15, (), [ (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaX' , 'eUnit' , ), 15, (15, (), [ (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaY' , 'eUnit' , ), 16, (16, (), [ (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaY' , 'eUnit' , ), 16, (16, (), [ (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ProcessLayer' , 'Layer' , ), 17, (17, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ProcessLayer' , 'Layer' , ), 17, (17, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Layer' , ), 18, (18, (), [ (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Errors' , 'ppErrors' , ), 19, (19, (), [ (16393, 10, None, "IID('{E7852DF4-9F9F-456E-8861-17AF75A62595}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'RestrictToOrthogonal' , 'Layer' , ), 20, (20, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'RestrictToOrthogonal' , 'Layer' , ), 20, (20, (), [ (3, 49, '0', None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LocalRegenerate' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCopperBalancingData_vtables_dispatch_ = 1
IMGCPCBCopperBalancingData_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Pattern' , 'val' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 43, (43, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCopperBalancingDatas_vtables_dispatch_ = 1
IMGCPCBCopperBalancingDatas_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppCopperBalancingData' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pCopperBalancingData' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCopperBalancingShape_vtables_dispatch_ = 1
IMGCPCBCopperBalancingShape_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 43, (43, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 45, (45, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IMGCPCBCopperBalancingShapes_vtables_dispatch_ = 1
IMGCPCBCopperBalancingShapes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppCopperBalancingShape' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pCopperBalancingShape' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDFFSliverAnalysis_vtables_dispatch_ = 1
IMGCPCBDFFSliverAnalysis_vtables_ = [
	(( 'SetupFileName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Go' , ), 2, (2, (), [ ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Errors' , 'ppErrors' , ), 4, (4, (), [ (16393, 10, None, "IID('{E7852DF4-9F9F-456E-8861-17AF75A62595}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDRCWindow_vtables_dispatch_ = 1
IMGCPCBDRCWindow_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 41, (41, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 43, (43, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDXFImport_vtables_dispatch_ = 1
IMGCPCBDXFImport_vtables_ = [
	(( 'Go' , ), 1, (1, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Errors' , 'ppErrors' , ), 2, (2, (), [ (16393, 10, None, "IID('{E7852DF4-9F9F-456E-8861-17AF75A62595}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ImportFileName' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Scheme' , 'eSchemeType' , ), 4, (4, (), [ (3, 49, '0', None) , (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Scheme' , 'eSchemeType' , ), 4, (4, (), [ (3, 49, '0', None) , (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CellName' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'units' , ), 6, (6, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'eUnit' , ), 7, (7, (), [ (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'eUnit' , ), 7, (7, (), [ (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ImportMode' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DXFLayerNames' , 'bstrArray' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DXFFontNames' , 'bstrArray' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MapDXFLayerNameToUserLayer' , 'sDXFLayerName' , 'sUserLayer' , ), 11, (11, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'MapDXFFontNameToTrueTypeFontName' , 'sDXFFontName' , 'sTrueTypeFontName' , ), 12, (12, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'FindDXFMappedUserLayer' , 'sDXFLayerName' , 'pVal' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FindDXFMappedTrueTypeFontName' , 'sDXFFontName' , 'pVal' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDataManagement_vtables_dispatch_ = 1
IMGCPCBDataManagement_vtables_ = [
	(( 'entities' , 'types' , 'entities' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{B6B6919E-4B12-4132-8866-FB68697C6CD6}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RecentEntities' , 'entities' , ), 1, (1, (), [ (16393, 10, None, "IID('{B6B6919E-4B12-4132-8866-FB68697C6CD6}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CachedEntities' , 'types' , 'entities' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{B6B6919E-4B12-4132-8866-FB68697C6CD6}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CachedRecentEntities' , 'entities' , ), 3, (3, (), [ (16393, 10, None, "IID('{B6B6919E-4B12-4132-8866-FB68697C6CD6}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FindEntityByPath' , 'Path' , 'entity' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{52D5D12D-8051-483C-8BDD-E9B195CE294D}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Option' , 'Name' , 'Value' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (8, 0, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Option' , 'Name' , 'Value' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Connect' , 'server_address' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsConnected' , 'Value' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ServerAddress' , 'Value' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LastErrorMessage' , 'Value' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ValidEntityTypes' , 'Type' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalProperties' , 'types' , 'collection' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{1B2EFA70-4BC4-4F20-BB58-77E7FC2CDEEC}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FindCachedEntityByPath' , 'Path' , 'AdditionalProperties' , 'entity' , ), 12, (12, (), [ 
			 (8, 1, None, None) , (9, 0, None, "IID('{1B2EFA70-4BC4-4F20-BB58-77E7FC2CDEEC}')") , (16393, 10, None, "IID('{52D5D12D-8051-483C-8BDD-E9B195CE294D}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'OptionIsReadonly' , 'Name' , 'Value' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'FeatureAvailability' , 'feature' , 'Value' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'FindEntityByPathAndVersion' , 'Path' , 'Version' , 'entity' , ), 15, (15, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{52D5D12D-8051-483C-8BDD-E9B195CE294D}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'OpenComponentView' , 'PartNumber' , ), 16, (16, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'OpenManagedBlockView' , 'Name' , 'Version' , ), 17, (17, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDataManagementAdditionalProperties_vtables_dispatch_ = 1
IMGCPCBDataManagementAdditionalProperties_vtables_ = [
	(( 'Item' , 'vIndex' , 'property' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{862C7303-2D1E-44EF-8B42-02192C0307B8}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDataManagementAdditionalProperty_vtables_dispatch_ = 1
IMGCPCBDataManagementAdditionalProperty_vtables_ = [
	(( 'id' , 'property_id' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Label' , 'property_label' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDataManagementEntities_vtables_dispatch_ = 1
IMGCPCBDataManagementEntities_vtables_ = [
	(( 'Item' , 'vIndex' , 'project' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{52D5D12D-8051-483C-8BDD-E9B195CE294D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SortByPath' , ), 30, (30, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SortByProjectAndName' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDataManagementEntity_vtables_dispatch_ = 1
IMGCPCBDataManagementEntity_vtables_ = [
	(( 'Path' , 'Path' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'Name' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ProjectName' , 'Name' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AccessType' , 'AccessType' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Status' , 'Status' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Users' , 'Users' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'Version' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CheckedInDate' , 'CheckedInDate' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'EditExclusive' , 'ppDoc' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'EditShared' , 'pSucc' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'CancelEditing' , ), 11, (11, (), [ ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'OpenReference' , ), 12, (12, (), [ ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'View' , 'ppDoc' , ), 13, (13, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Export' , 'destination' , ), 14, (14, (), [ (16392, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CheckIn' , 'Comment' , ), 15, (15, (), [ (16392, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'LaunchWebView' , ), 16, (16, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalPropertyValue' , 'property' , 'Value' , ), 17, (17, (), [ (9, 1, None, "IID('{862C7303-2D1E-44EF-8B42-02192C0307B8}')") , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CheckInWithDialog' , ), 18, (18, (), [ ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'RelatedEntities' , 'types' , 'entities' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{B6B6919E-4B12-4132-8866-FB68697C6CD6}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LocalPath' , 'Path' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 64 , )),
	(( 'EditExclusiveAvailability' , 'availability' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'EditSharedAvailability' , 'availability' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ViewAvailability' , 'availability' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'WebViewAvailability' , 'availability' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'CancelEditingAvailability' , 'availability' , ), 25, (25, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ExportAvailability' , 'availability' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'OpenReferenceAvailability' , 'availability' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'UnlockAvailability' , 'availability' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Unlock' , ), 29, (29, (), [ ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DumpProperties' , 'outputDirectory' , 'filter' , 'includeParents' , 'outputFilePath' , 
			 ), 30, (30, (), [ (8, 1, None, None) , (3, 49, '0', None) , (11, 49, 'False', None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'RunConfigurationRules' , 'detailsFilePath' , ), 31, (31, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ViewForOutputsGeneration' , 'ppDoc' , ), 32, (32, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PropertyValueById' , 'id' , 'Value' , ), 33, (33, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDetailedView_vtables_dispatch_ = 1
IMGCPCBDetailedView_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DisplayControl' , 'ppDC' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'ppGeometry' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 3, (3, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'NameFont' , 'pNameFont' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'NameHeight' , 'eUnit' , 'pNameHeight' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NameHeight' , 'eUnit' , 'pNameHeight' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DisplayBorder' , 'pDisplayBorder' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BorderWidth' , 'eUnit' , 'pBorderWidth' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'BorderWidth' , 'eUnit' , 'pBorderWidth' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'pScale' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'pMirrored' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pActiveAngle' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pActiveAngle' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'WorkSurfaceOriginX' , 'eUnit' , 'pOriginX' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'WorkSurfaceOriginX' , 'eUnit' , 'pOriginX' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'WorkSurfaceOriginY' , 'eUnit' , 'pOriginY' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'WorkSurfaceOriginY' , 'eUnit' , 'pOriginY' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'WorkSurfaceExpansionFactor' , 'pExpansionFactor' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 15, (15, (), [ ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 16, (16, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 17, (17, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SourceExtrema' , 'ppSrcExtrema' , ), 18, (18, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 19, (19, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDetailedViews_vtables_dispatch_ = 1
IMGCPCBDetailedViews_vtables_ = [
	(( 'Item' , 'Index' , 'ppDetailedView' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pDetailedView' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDialog_vtables_dispatch_ = 1
IMGCPCBDialog_vtables_ = [
	(( 'ProcessCommand' , 'vCommand' , 'pSuccess' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'FindButton' , 'vButton' , 'ppButton' , ), 2, (2, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5D}')") , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FindCheckBox' , 'vButton' , 'ppCheckBox' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED80}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FindEditBox' , 'vEditBox' , 'ppEditBox' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9A}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'LoadRouteScheme' , 'schemeName' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
]

IMGCPCBDifferentialPair_vtables_dispatch_ = 1
IMGCPCBDifferentialPair_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'FirstNet' , 'ppNet' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SecondNet' , 'ppNet' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LengthTolerance' , 'eUnit' , 'pLength' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'LengthTolerance' , 'eUnit' , 'pLength' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DelayTolerance' , 'pDelay' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MaxConvergenceTolerance' , 'eUnit' , 'pConvergence' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MaxConvergenceTolerance' , 'eUnit' , 'pConvergence' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MaxDistanceToConvergence' , 'eUnit' , 'pDistance' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MaxDistanceToConvergence' , 'eUnit' , 'pDistance' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MaxSeparationDistance' , 'eUnit' , 'pDistance' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'MaxSeparationDistance' , 'eUnit' , 'pDistance' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDifferentialPairs_vtables_dispatch_ = 1
IMGCPCBDifferentialPairs_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppDiffPair' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9A2E2DB0-60CA-45A0-8788-43D139963F55}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pDiffPair' , ), 30, (30, (), [ (9, 1, None, "IID('{9A2E2DB0-60CA-45A0-8788-43D139963F55}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDimension_vtables_dispatch_ = 1
IMGCPCBDimension_vtables_ = [
	(( 'Name' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DimensionScheme' , 'ppDimensionScheme' , ), 4, (4, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsFabricationLayer' , 'pFabrication' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsUserLayer' , 'pUser' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FabricationType' , 'pType' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'pLayer' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerName' , 'pLayerName' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'ppText' , ), 13, (13, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Geometries' , 'ppGeometries' , ), 14, (14, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'FromObject' , 'ppDimensionedObject' , ), 15, (15, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7E}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ToObject' , 'ppDimensionedObject' , ), 16, (16, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7E}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 23, (23, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'eUnit' , 'pOffset' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'eUnit' , 'pOffset' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'LayerObject' , 'ppLayerObject' , ), 25, (25, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LayerObject' , 'ppLayerObject' , ), 25, (25, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 8 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DimensionID' , 'pID' , ), 26, (26, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 64 , )),
]

IMGCPCBDimensionScheme_vtables_dispatch_ = 1
IMGCPCBDimensionScheme_vtables_ = [
	(( 'Name' , 'pName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'pUnit' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'pUnit' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Precision' , 'pPrecision' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Precision' , 'pPrecision' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PositiveTolerance' , 'pTolerance' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PositiveTolerance' , 'pTolerance' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'NegativeTolerance' , 'pTolerance' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'NegativeTolerance' , 'pTolerance' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DiameterPrefix' , 'pPrefix' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DiameterPrefix' , 'pPrefix' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'RadiusPrefix' , 'pPrefix' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RadiusPrefix' , 'pPrefix' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'LeadingZero' , 'pLeadingZero' , ), 8, (8, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'LeadingZero' , 'pLeadingZero' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'TrailingZeros' , 'pTrailingZeros' , ), 9, (9, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TrailingZeros' , 'pTrailingZeros' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CommaForDecimal' , 'pComma' , ), 10, (10, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'CommaForDecimal' , 'pComma' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IncludeUnit' , 'pInclude' , ), 11, (11, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IncludeUnit' , 'pInclude' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'pLineStyle' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'pLineStyle' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'LineWidth' , 'eUnit' , 'pWidth' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'LineWidth' , 'eUnit' , 'pWidth' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'LineWidth' , 'eUnit' , 'pWidth' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'LineWidth' , 'eUnit' , 'pWidth' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TerminatorStyle' , 'pType' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'TerminatorStyle' , 'pType' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'TextJustification' , 'pJustification' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'TextJustification' , 'pJustification' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'StackedTextDistance' , 'eUnit' , 'pDist' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'StackedTextDistance' , 'eUnit' , 'pDist' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'StackedTextDistance' , 'eUnit' , 'pDist' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'StackedTextDistance' , 'eUnit' , 'pDist' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionGap' , 'eUnit' , 'pGap' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionGap' , 'eUnit' , 'pGap' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionGap' , 'eUnit' , 'pGap' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionGap' , 'eUnit' , 'pGap' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'DimensionOrientation' , 'pOrientation' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DimensionOrientation' , 'pOrientation' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ArrowHeight' , 'eUnit' , 'pHeight' , ), 19, (19, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ArrowHeight' , 'eUnit' , 'pHeight' , ), 19, (19, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ArrowHeight' , 'eUnit' , 'pHeight' , ), 19, (19, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ArrowHeight' , 'eUnit' , 'pHeight' , ), 19, (19, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ArrowWidth' , 'eUnit' , 'pWidth' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ArrowWidth' , 'eUnit' , 'pWidth' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ArrowWidth' , 'eUnit' , 'pWidth' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ArrowWidth' , 'eUnit' , 'pWidth' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TextPenWidth' , 'eUnit' , 'pWidth' , ), 21, (21, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TextPenWidth' , 'eUnit' , 'pWidth' , ), 21, (21, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TextPenWidth' , 'eUnit' , 'pWidth' , ), 21, (21, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'TextPenWidth' , 'eUnit' , 'pWidth' , ), 21, (21, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'eUnit' , 'pHeight' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'eUnit' , 'pHeight' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'eUnit' , 'pHeight' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'TextHeight' , 'eUnit' , 'pHeight' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'TextFont' , 'pName' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'TextFont' , 'pName' , ), 23, (23, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'ppValid' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'Name' , 'bLocal' , ), 25, (25, (), [ (8, 49, "''", None) , 
			 (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 432 , (3, 32, None, None) , 0 , )),
	(( 'SpaceBetweenValueAndUnit' , 'pSpaceBtwValAndUnit' , ), 26, (26, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'SpaceBetweenValueAndUnit' , 'pSpaceBtwValAndUnit' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDimensionSchemes_vtables_dispatch_ = 1
IMGCPCBDimensionSchemes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppDimensionScheme' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pDimensionScheme' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDimensionedObject_vtables_dispatch_ = 1
IMGCPCBDimensionedObject_vtables_ = [
	(( 'Name' , 'Name' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Object' , 'ppObject' , ), 3, (3, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsToObject' , 'pTo' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SegmentType' , 'pType' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SegmentStartX' , 'eUnit' , 'pX' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SegmentStartX' , 'eUnit' , 'pX' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SegmentStartY' , 'eUnit' , 'pY' , ), 8, (8, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SegmentStartY' , 'eUnit' , 'pY' , ), 8, (8, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SegmentEndX' , 'eUnit' , 'pX' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SegmentEndX' , 'eUnit' , 'pX' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SegmentEndY' , 'eUnit' , 'pY' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SegmentEndY' , 'eUnit' , 'pY' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SegmentCenterX' , 'eUnit' , 'pX' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SegmentCenterX' , 'eUnit' , 'pX' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SegmentCenterY' , 'eUnit' , 'pY' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SegmentCenterY' , 'eUnit' , 'pY' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DimensionPointX' , 'eUnit' , 'pX' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DimensionPointX' , 'eUnit' , 'pX' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DimensionPointY' , 'eUnit' , 'pY' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DimensionPointY' , 'eUnit' , 'pY' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IsBoardOrigin' , 'pBoardOrgin' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDimensions_vtables_dispatch_ = 1
IMGCPCBDimensions_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppDimension' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pDimension' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDisplayControl_vtables_dispatch_ = 1
IMGCPCBDisplayControl_vtables_ = [
	(( 'Global' , 'ppGlobalSettings' , ), 0, (0, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED74}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayer' , 'nLayer' , 'eType' , 'pOn' , ), 1, (1, (), [ 
			 (2, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayer' , 'nLayer' , 'eType' , 'pOn' , ), 1, (1, (), [ 
			 (2, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'GeneralItems' , 'eType' , 'pOn' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'GeneralItems' , 'eType' , 'pOn' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'MiscItems' , 'eType' , 'pOn' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'MiscItems' , 'eType' , 'pOn' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'PartItems' , 'eType' , 'eSide' , 'pOn' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'PartItems' , 'eType' , 'eSide' , 'pOn' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'UserLayer' , 'Name' , 'pOn' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
	(( 'UserLayer' , 'Name' , 'pOn' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'EnableSection' , 'eType' , ), 6, (6, (), [ (3, 1, None, None) , (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'EnableSection' , 'eType' , ), 6, (6, (), [ (3, 1, None, None) , (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'LoadScheme' , 'sSchemeName' , 'pSuccess' , ), 7, (7, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Section' , 'eType' , 'pEnabled' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'Section' , 'eType' , 'pEnabled' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'Section' , 'eType' , 'pEnabled' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
	(( 'DetailedView' , 'Name' , 'pEnabled' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'DetailedView' , 'Name' , 'pEnabled' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'Material' , 'Name' , 'pEnabled' , ), 10, (10, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 64 , )),
	(( 'Material' , 'Name' , 'pEnabled' , ), 10, (10, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 64 , )),
	(( 'SaveScheme' , 'sSchemeName' , 'pSuccess' , ), 11, (11, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Selectable' , 'itemName' , 'pSelectable' , ), 12, (12, (), [ (8, 1, None, None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Selectable' , 'itemName' , 'pSelectable' , ), 12, (12, (), [ (8, 1, None, None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Selectable' , 'itemName' , 'pSelectable' , ), 12, (12, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'itemName' , 'pVisible' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'itemName' , 'pVisible' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'itemName' , 'pVisible' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Option' , 'itemName' , 'pOption' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Option' , 'itemName' , 'pOption' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Option' , 'itemName' , 'pOption' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pViaSpan' , ), 15, (15, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SaveUserScheme' , 'sSchemeName' , 'pSuccess' , ), 16, (16, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'LoadUserScheme' , 'sSchemeName' , 'pSuccess' , ), 17, (17, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'StringOption' , 'itemName' , 'pOptionValue' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'StringOption' , 'itemName' , 'pOptionValue' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'IsOptionDefined' , 'itemName' , 'pIsSet' , ), 19, (19, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'IsStringOptionDefined' , 'itemName' , 'pIsSet' , ), 20, (20, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'DeleteScheme' , 'sSchemeName' , 'pSuccess' , ), 21, (21, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SetParentChild' , 'parentName' , 'childName' , ), 22, (22, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'SaveSchemeEx' , 'sSchemeName' , 'bSaveToolbarState' , 'pSuccess' , ), 23, (23, (), [ 
			 (8, 1, None, None) , (11, 49, 'False', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'SaveUserSchemeEx' , 'sSchemeName' , 'bSaveToolbarState' , 'pSuccess' , ), 24, (24, (), [ 
			 (8, 1, None, None) , (11, 49, 'False', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'IsItemAvailable' , 'itemName' , 'pIsAvailable' , ), 25, (25, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'Lock' , ), 26, (26, (), [ ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Unlock' , ), 27, (27, (), [ ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'LoadSelectionScheme' , 'sSchemeName' , 'pSuccess' , ), 28, (28, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'SaveSelectionScheme' , 'sSchemeName' , 'pSuccess' , ), 29, (29, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 64 , )),
	(( 'DeleteSelectionScheme' , 'sSchemeName' , 'pSuccess' , ), 30, (30, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 64 , )),
	(( 'SaveUserSelectionScheme' , 'sSchemeName' , 'pSuccess' , ), 31, (31, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 64 , )),
	(( 'LoadUserSelectionScheme' , 'sSchemeName' , 'pSuccess' , ), 32, (32, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 64 , )),
]

IMGCPCBDocument_vtables_dispatch_ = 1
IMGCPCBDocument_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'pPath' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ActiveView' , 'ppView' , ), 3, (3, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'IsSaved' , 'pSaved' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'pSucc' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Close' , 'bSave' , 'pSucc' , ), 6, (6, (), [ (11, 49, 'True', None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CurrentUnit' , 'pUnit' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CurrentUnit' , 'pUnit' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eType' , 'eUnit' , 'pX' , ), 8, (8, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eType' , 'eUnit' , 'pX' , ), 8, (8, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eType' , 'eUnit' , 'pY' , ), 9, (9, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eType' , 'eUnit' , 'pY' , ), 9, (9, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'XProbe' , 'XProbe' , ), 16, (16, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED28}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'LayerCount' , 'pCount' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Components' , 'eSelectOnly' , 'eCompType' , 'eCelltype' , 'sRefDes' , 
			 'ppComps' , ), 22, (22, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '4', None) , 
			 (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 32, None, None) , 0 , )),
	(( 'Components' , 'eSelectOnly' , 'eCompType' , 'eCelltype' , 'sRefDes' , 
			 'ppComps' , ), 22, (22, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '4', None) , 
			 (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 32, None, None) , 0 , )),
	(( 'Nets' , 'eSelectOnly' , 'bIncludeNetsForUnconnectedPins' , 'sNetName' , 'ppNets' , 
			 ), 23, (23, (), [ (3, 49, '0', None) , (11, 49, 'False', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 32, None, None) , 0 , )),
	(( 'Nets' , 'eSelectOnly' , 'bIncludeNetsForUnconnectedPins' , 'sNetName' , 'ppNets' , 
			 ), 23, (23, (), [ (3, 49, '0', None) , (11, 49, 'False', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 32, None, None) , 0 , )),
	(( 'NetClasses' , 'sNetClassName' , 'ppNetClasses' , ), 24, (24, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED11}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 32, None, None) , 0 , )),
	(( 'NetClasses' , 'sNetClassName' , 'ppNetClasses' , ), 24, (24, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED11}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 32, None, None) , 0 , )),
	(( 'Parts' , 'sPartName' , 'ppParts' , ), 25, (25, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED20}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 32, None, None) , 0 , )),
	(( 'Parts' , 'sPartName' , 'ppParts' , ), 25, (25, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED20}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 32, None, None) , 0 , )),
	(( 'Pins' , 'eSelectOnly' , 'ppPins' , ), 26, (26, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Pins' , 'eSelectOnly' , 'ppPins' , ), 26, (26, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Traces' , 'eSelectOnly' , 'nLayerOnly' , 'ppTraces' , ), 27, (27, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Traces' , 'eSelectOnly' , 'nLayerOnly' , 'ppTraces' , ), 27, (27, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'eSelectOnly' , 'ppVias' , ), 28, (28, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'eSelectOnly' , 'ppVias' , ), 28, (28, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'FromTos' , 'eSelectOnly' , 'eFromToType' , 'ppFromTos' , ), 29, (29, (), [ 
			 (3, 49, '0', None) , (3, 49, '1', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'FromTos' , 'eSelectOnly' , 'eFromToType' , 'ppFromTos' , ), 29, (29, (), [ 
			 (3, 49, '0', None) , (3, 49, '1', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Cells' , 'CellName' , 'ppCells' , ), 30, (30, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED19}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 32, None, None) , 0 , )),
	(( 'Cells' , 'CellName' , 'ppCells' , ), 30, (30, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED19}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 32, None, None) , 0 , )),
	(( 'Fiducials' , 'eSelectOnly' , 'ppFiducials' , ), 31, (31, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Fiducials' , 'eSelectOnly' , 'ppFiducials' , ), 31, (31, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'bIncludeComponentGfx' , 
			 'ppGfxs' , ), 35, (35, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'bIncludeComponentGfx' , 
			 'ppGfxs' , ), 35, (35, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 64 , )),
	(( 'Padstacks' , 'sPadstackName' , 'ppPadstacks' , ), 36, (36, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 32, None, None) , 0 , )),
	(( 'Padstacks' , 'sPadstackName' , 'ppPadstacks' , ), 36, (36, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 32, None, None) , 0 , )),
	(( 'Holes' , 'sHoleName' , 'ppHoles' , ), 37, (37, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 32, None, None) , 0 , )),
	(( 'Holes' , 'sHoleName' , 'ppHoles' , ), 37, (37, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 32, None, None) , 0 , )),
	(( 'BoardOutline' , 'ppBoardOutline' , ), 38, (38, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED33}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'RouteBorder' , 'ppRouteBorder' , ), 39, (39, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PlacementObstructs' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlacementObstructs' , ), 40, (40, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PlacementObstructs' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlacementObstructs' , ), 40, (40, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppObstructs' , 
			 ), 41, (41, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppObstructs' , 
			 ), 41, (41, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Contours' , 'eSelectOnly' , 'ppContours' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Contours' , 'eSelectOnly' , 'ppContours' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'RuleAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppRuleAreas' , ), 43, (43, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1B}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'RuleAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppRuleAreas' , ), 43, (43, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1B}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppConductiveAreas' , ), 44, (44, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppConductiveAreas' , ), 44, (44, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'MountingHoles' , 'eSelectOnly' , 'ppMountingHoles' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'MountingHoles' , 'eSelectOnly' , 'ppMountingHoles' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Rooms' , 'eSelectOnly' , 'eLayerOnly' , 'ppRooms' , ), 46, (46, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Rooms' , 'eSelectOnly' , 'eLayerOnly' , 'ppRooms' , ), 46, (46, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlaneShapes' , ), 47, (47, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlaneShapes' , ), 47, (47, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'PlacementOutlines' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlacementOutlines' , ), 48, (48, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'PlacementOutlines' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlacementOutlines' , ), 48, (48, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlanes' , 'eSelectOnly' , 'nLayerOnly' , 'ppGeneratedPlanes' , ), 49, (49, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlanes' , 'eSelectOnly' , 'nLayerOnly' , 'ppGeneratedPlanes' , ), 49, (49, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'FindComponent' , 'BRefDes' , 'ppCmp' , ), 51, (51, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'FindNet' , 'BNetName' , 'ppNet' , ), 52, (52, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'UnSelectAll' , ), 53, (53, (), [ ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'UnSelectAllComponents' , ), 54, (54, (), [ ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'UnSelectAllNets' , ), 55, (55, (), [ ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'UnSelectAllPins' , ), 56, (56, (), [ ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'PutConductiveArea' , 'nLayer' , 'pNet' , 'nPnts' , 'pSafeArrayOfPnts' , 
			 'pComponent' , 'eFixType' , 'eUnit' , 'ppArea' , ), 57, (57, (), [ 
			 (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 1, None, None) , (16396, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Print' , 'pSucc' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'DrillDrawings' , 'eSelectOnly' , 'ppDrillDrawings' , ), 61, (61, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'DrillDrawings' , 'eSelectOnly' , 'ppDrillDrawings' , ), 61, (61, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'PutBoardOutline' , 'nPnts' , 'pSafeArrayOfPnts' , 'dGraphicsWidth' , 'eUnit' , 
			 'ppBoardOutline' , ), 63, (63, (), [ (3, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED33}')") , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'PutRouteBorder' , 'nPnts' , 'pSafeArrayOfPnts' , 'dGraphicsWidth' , 'eUnit' , 
			 'ppRouteBorder' , ), 64, (64, (), [ (3, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}')") , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'PutTrace' , 'nLayer' , 'pNet' , 'dWidth' , 'nPnts' , 
			 'pSafeArrayOfPoints' , 'pComponent' , 'eFixType' , 'eUnit' , 'ppTrace' , 
			 ), 65, (65, (), [ (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (5, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Dimensions' , 'eSelectOnly' , 'ppDimensions' , ), 66, (66, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Dimensions' , 'eSelectOnly' , 'ppDimensions' , ), 66, (66, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'PutOrdinateDimension' , 'pObj' , 'dX' , 'dY' , 'dOffset' , 
			 'eDimensionDirection' , 'pLayerObject' , 'pScheme' , 'eUnit' , 'ppDimension' , 
			 ), 67, (67, (), [ (9, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 49, '0.0', None) , 
			 (3, 49, '1', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')") , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'GetDimensionScheme' , 'sSchemeName' , 'bLocal' , 'ppDimensionScheme' , ), 68, (68, (), [ 
			 (8, 49, "''", None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , ], 1 , 1 , 4 , 0 , 488 , (3, 32, None, None) , 0 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'bIncludeComponentGfx' , 
			 'ppGfxs' , ), 69, (69, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'bIncludeComponentGfx' , 
			 'ppGfxs' , ), 69, (69, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'bIncludeComponentGfx' , 'ppGfxs' , 
			 ), 70, (70, (), [ (3, 49, '0', None) , (8, 49, "'*'", None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 504 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'bIncludeComponentGfx' , 'ppGfxs' , 
			 ), 70, (70, (), [ (3, 49, '0', None) , (8, 49, "'*'", None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 504 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'bIncludeComponentText' , 'ppTexts' , 
			 ), 71, (71, (), [ (3, 49, '0', None) , (3, 49, '0', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'bIncludeComponentText' , 'ppTexts' , 
			 ), 71, (71, (), [ (3, 49, '0', None) , (3, 49, '0', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'bIncludeComponentText' , 
			 'ppTexts' , ), 72, (72, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'bIncludeComponentText' , 
			 'ppTexts' , ), 72, (72, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'bIncludeComponentText' , 'ppTexts' , 
			 ), 73, (73, (), [ (3, 49, '0', None) , (8, 49, "'*'", None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 528 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'bIncludeComponentText' , 'ppTexts' , 
			 ), 73, (73, (), [ (3, 49, '0', None) , (8, 49, "'*'", None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 528 , (3, 32, None, None) , 0 , )),
	(( 'PlaceLayerEnabled' , 'eLayer' , 'pEnabled' , ), 74, (74, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayerEnabled' , 'nLayer' , 'pEnabled' , ), 75, (75, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Pick' , 'dXMin' , 'dYMin' , 'dXMax' , 'dYMax' , 
			 'eObjectClass' , 'pLayerObjects' , 'bDisplayedObjectsOnly' , 'bIncludeComponentData' , 'eUnit' , 
			 'ppObjects' , ), 76, (76, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 49, '-1', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , (11, 49, 'False', None) , (11, 49, 'True', None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'PutObstruct' , 'nLayer' , 'dGraphicsWidth' , 'nPnts' , 'pSafeArrayOfPnts' , 
			 'eType' , 'bFilled' , 'pComponent' , 'eUnit' , 'ppObstruct' , 
			 ), 77, (77, (), [ (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , 
			 (3, 1, None, None) , (11, 49, 'False', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}')") , ], 1 , 1 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'PutContour' , 'nPnts' , 'pSafeArrayOfPnts' , 'pHole' , 'eCompensation' , 
			 'eType' , 'bReverse' , 'pComponent' , 'eUnit' , 'ppContour' , 
			 ), 78, (78, (), [ (3, 1, None, None) , (16396, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , (3, 1, None, None) , 
			 (3, 1, None, None) , (11, 49, 'False', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')") , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 64 , )),
	(( 'PutPlacementObstruct' , 'nLayer' , 'dGraphicsWidth' , 'nPnts' , 'pSafeArrayOfPnts' , 
			 'dHeight' , 'pComponent' , 'eUnit' , 'ppPlacementObstruct' , ), 79, (79, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}')") , ], 1 , 1 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutTraces' , 'eSelectOnly' , 'nLayerOnly' , 'ppBreakoutTraces' , ), 80, (80, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 64 , )),
	(( 'BreakoutTraces' , 'eSelectOnly' , 'nLayerOnly' , 'ppBreakoutTraces' , ), 80, (80, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 64 , )),
	(( 'Teardrops' , 'eSelectOnly' , 'nLayerOnly' , 'ppTeardrops' , ), 81, (81, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')") , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'Teardrops' , 'eSelectOnly' , 'nLayerOnly' , 'ppTeardrops' , ), 81, (81, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')") , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'PadstackObjects' , 'eSelectType' , 'eSelectOnly' , 'ppPadstackObjects' , ), 82, (82, (), [ 
			 (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')") , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'PadstackObjects' , 'eSelectType' , 'eSelectOnly' , 'ppPadstackObjects' , ), 82, (82, (), [ 
			 (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')") , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'UnHighlightAll' , ), 83, (83, (), [ ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'UnHighlightAllComponents' , ), 84, (84, (), [ ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'UnHighlightAllNets' , ), 85, (85, (), [ ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'UnHighlightAllPins' , ), 86, (86, (), [ ], 1 , 1 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'UserLayers' , 'ppUserLayers' , ), 87, (87, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED70}')") , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'FindUserLayer' , 'BUserLayerName' , 'ppUserLayer' , ), 88, (88, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'PutUserLayerGfx' , 'pUserlayer' , 'dGraphicsWidth' , 'nPnts' , 'pSafeArrayOfPnts' , 
			 'bFilled' , 'pComponent' , 'eUnit' , 'ppGfx' , ), 89, (89, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , (5, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , (11, 49, 'False', None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}')") , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'SetupParameter' , 'ppSetupParam' , ), 90, (90, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6E}')") , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 91, (91, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'PutPadstack' , 'nFrom' , 'nTo' , 'sPadstackName' , 'bMirrored' , 
			 'bFromCentralLib' , 'ppPadstack' , ), 92, (92, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (8, 1, None, None) , (11, 49, 'False', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'PutVia' , 'dX' , 'dY' , 'pPadstack' , 'pNet' , 
			 'pComponent' , 'eFixed' , 'eUnit' , 'ppVia' , ), 93, (93, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')") , ], 1 , 1 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'PutFabricationLayerText' , 'sString' , 'dPositionX' , 'dPositionY' , 'eType' , 
			 'eSide' , 'dHeight' , 'dRotation' , 'dPenWidth' , 'sFont' , 
			 'eAttr' , 'eHoriz' , 'eVert' , 'pComponent' , 'eUnit' , 
			 'eAngleUnit' , 'ppFabricationLayerText' , ), 94, (94, (), [ (8, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 49, '80.0', None) , (5, 49, '0.0', None) , 
			 (5, 49, '10.0', None) , (8, 49, "'VeriBest Gerber 0'", None) , (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 696 , (3, 32, None, None) , 0 , )),
	(( 'PutConductorLayerText' , 'sString' , 'dPositionX' , 'dPositionY' , 'nLayer' , 
			 'dHeight' , 'dRotation' , 'dPenWidth' , 'sFont' , 'eAttr' , 
			 'eHoriz' , 'eVert' , 'pComponent' , 'eUnit' , 'eAngleUnit' , 
			 'ppConductorLayerText' , ), 95, (95, (), [ (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 1, None, None) , (5, 49, '80.0', None) , (5, 49, '0.0', None) , (5, 49, '10.0', None) , (8, 49, "'VeriBest Gerber 0'", None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')") , ], 1 , 1 , 4 , 0 , 704 , (3, 32, None, None) , 0 , )),
	(( 'PutUserLayerText' , 'sString' , 'dPositionX' , 'dPositionY' , 'pUserlayer' , 
			 'dHeight' , 'dRotation' , 'dPenWidth' , 'sFont' , 'eAttr' , 
			 'eHoriz' , 'eVert' , 'pComponent' , 'eUnit' , 'eAngleUnit' , 
			 'ppUserLayerText' , ), 96, (96, (), [ (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , (5, 49, '80.0', None) , (5, 49, '0.0', None) , (5, 49, '10.0', None) , (8, 49, "'VeriBest Gerber 0'", None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')") , ], 1 , 1 , 4 , 0 , 712 , (3, 32, None, None) , 0 , )),
	(( 'PutFabricationLayerGfx' , 'eType' , 'eSide' , 'dGraphicsWidth' , 'nPnts' , 
			 'safeArrayOfPnts' , 'bFilled' , 'pComponent' , 'eUnit' , 'ppGfx' , 
			 ), 97, (97, (), [ (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (11, 49, 'False', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')") , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'PutPlaneShape' , 'nLayer' , 'nPnts' , 'safeArrayOfPnts' , 'pNet' , 
			 'bRouteObstruct' , 'eHatchPattern' , 'dHatchWidth' , 'dHatchDistance' , 'pComponent' , 
			 'eUnit' , 'ppPlaneShape' , ), 98, (98, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (11, 49, 'True', None) , (3, 49, '0', None) , (5, 49, '0.0', None) , 
			 (5, 49, '0.0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')") , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'PutRoom' , 'eSide' , 'dGraphicsWidth' , 'sRoomName' , 'nPnts' , 
			 'safeArrayOfPnts' , 'eUnit' , 'ppRoom' , ), 99, (99, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')") , ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'PutRuleArea' , 'nLayer' , 'dGraphicsWidth' , 'nPnts' , 'safeArrayOfPnts' , 
			 'sRuleSchemaName' , 'eUnit' , 'ppRuleArea' , ), 100, (100, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , (8, 49, "'Master'", None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}')") , ], 1 , 1 , 4 , 0 , 744 , (3, 32, None, None) , 0 , )),
	(( 'PutFiducial' , 'dX' , 'dY' , 'pPadstack' , 'pNet' , 
			 'pComponent' , 'eFixed' , 'eUnit' , 'ppFiducial' , ), 101, (101, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}')") , ], 1 , 1 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'PutMountingHole' , 'dX' , 'dY' , 'pPadstack' , 'pNet' , 
			 'pComponent' , 'eFixed' , 'eUnit' , 'ppMountingHole' , ), 102, (102, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')") , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'PutPointToPointDimension' , 'pFromObj' , 'dFromX' , 'dFromY' , 'pToObj' , 
			 'dToX' , 'dToY' , 'dOffset' , 'eOrientation' , 'pLayerObject' , 
			 'pScheme' , 'eUnit' , 'ppDimension' , ), 103, (103, (), [ (9, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (9, 49, 'None', None) , (5, 49, '0.0', None) , (5, 49, '0.0', None) , 
			 (5, 49, '0.0', None) , (3, 49, '1', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')") , ], 1 , 1 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'PutLinearDimension' , 'pObj' , 'dFromX' , 'dFromY' , 'dToX' , 
			 'dToY' , 'dOffset' , 'pLayerObject' , 'pScheme' , 'eUnit' , 
			 'ppDimension' , ), 104, (104, (), [ (9, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 49, '0.0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')") , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'PutAngularDimension' , 'pFromObj' , 'dFromX1' , 'dFromY1' , 'dFromX2' , 
			 'dFromY2' , 'pToObj' , 'dToX1' , 'dToY1' , 'dToX2' , 
			 'dToY2' , 'dOffset' , 'pLayerObject' , 'pScheme' , 'eUnit' , 
			 'ppDimension' , ), 105, (105, (), [ (9, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (9, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 49, '0.0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')") , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'PutXAngleDimension' , 'pObj' , 'dX1' , 'dY1' , 'dX2' , 
			 'dY2' , 'dOffset' , 'pLayerObject' , 'pScheme' , 'eUnit' , 
			 'ppDimension' , ), 106, (106, (), [ (9, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 49, '0.0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}')") , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}')") , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'NewRoutePass' , 'ppRoutePass' , ), 107, (107, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7F}')") , ], 1 , 1 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'EditorControl' , 'ppEC' , ), 108, (108, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7D}')") , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'LayerRanges' , 'ppLayerRanges' , ), 109, (109, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')") , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'ImportAscii' , 'sSourceDir' , 'eHKPType' , 'sLogFile' , ), 110, (110, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (8, 49, "''", None) , ], 1 , 1 , 4 , 0 , 824 , (3, 32, None, None) , 64 , )),
	(( 'ExportAscii' , 'sDestinationDir' , 'eHKPType' , 'sLogFile' , ), 111, (111, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (8, 49, "''", None) , ], 1 , 1 , 4 , 0 , 832 , (3, 32, None, None) , 64 , )),
	(( 'Validate' , 'nLicenseToken' , 'pKey' , ), 112, (112, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'Checksum' , 'Type' , 'pVal' , ), 113, (113, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 848 , (3, 0, None, None) , 64 , )),
	(( 'ReplayFile' , 'BFileName' , ), 114, (114, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 64 , )),
	(( 'PutResistorShape' , 'nLayer' , 'nPnts' , 'safeArrayOfPnts' , 'pComponent' , 
			 'eUnit' , 'ppResShape' , ), 115, (115, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')") , ], 1 , 1 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'PutReservedArea' , 'nLayer' , 'nPnts' , 'safeArrayOfPnts' , 'bUserName' , 
			 'eUnit' , 'ppResArea' , ), 116, (116, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (8, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')") , ], 1 , 1 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
	(( 'TransactionStart' , 'eMode' , 'pSucc' , ), 117, (117, (), [ (3, 49, '1', None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'TransactionEnd' , 'bKeepChanges' , 'pSucc' , ), 118, (118, (), [ (11, 49, 'True', None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsInBetween' , 'pObject1' , 'pObject2' , 'ppObjects' , ), 119, (119, (), [ 
			 (9, 1, None, None) , (9, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 1 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'SessionType' , 'eSessionType' , ), 120, (120, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'PickComponents' , 'dXMin' , 'dYMin' , 'dXMax' , 'dYMax' , 
			 'eCompType' , 'eCelltype' , 'nLayerOnly' , 'bDisplayedObjectsOnly' , 'eUnit' , 
			 'ppComponents' , ), 121, (121, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 49, '-1', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (11, 49, 'False', None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 1 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'PutHole' , 'sHoleName' , 'ppHole' , ), 122, (122, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , ], 1 , 1 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'PutComponent' , 'sCellname' , 'bFromCentralLib' , 'dX' , 'dY' , 
			 'dRotation' , 'sRefDes' , 'sPartName' , 'nLayer' , 'bMirror' , 
			 'eFixType' , 'eUnit' , 'eAngleUnit' , 'ppComponent' , ), 123, (123, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (8, 49, "''", None) , (8, 49, "''", None) , (3, 49, '1', None) , (11, 49, 'False', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 928 , (3, 32, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 124, (124, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'PutPanelOutline' , 'nPnts' , 'safeArrayOfPnts' , 'graphicsWidth' , 'eUnit' , 
			 'ppPanelOutline' , ), 125, (125, (), [ (3, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED83}')") , ], 1 , 1 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'PanelOutline' , 'ppPanelOutline' , ), 126, (126, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED83}')") , ], 1 , 2 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'PutPanelBorder' , 'nPnts' , 'safeArrayOfPnts' , 'graphicsWidth' , 'eUnit' , 
			 'ppPanelBorder' , ), 127, (127, (), [ (3, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED84}')") , ], 1 , 1 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'PanelBorder' , 'ppPanelBorder' , ), 128, (128, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED84}')") , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'ToolingHoles' , 'SelectOnly' , 'ppToolingHoles' , ), 129, (129, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED86}')") , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'ToolingHoles' , 'SelectOnly' , 'ppToolingHoles' , ), 129, (129, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED86}')") , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'CustomProperties' , 'Type' , 'userData' , 'eSelectOnly' , 'eUnit' , 
			 'pSafeArrayOfData' , ), 130, (130, (), [ (3, 1, None, None) , (12, 1, None, None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 984 , (3, 0, None, None) , 64 , )),
	(( 'ShearingHoles' , 'SelectOnly' , 'ppShearingHoles' , ), 131, (131, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8E}')") , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'ShearingHoles' , 'SelectOnly' , 'ppShearingHoles' , ), 131, (131, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8E}')") , ], 1 , 2 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'CopperBalancingShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppCopperBalancingShapes' , ), 132, (132, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED88}')") , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'CopperBalancingShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppCopperBalancingShapes' , ), 132, (132, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED88}')") , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'CopperBalancingDatas' , 'eSelectOnly' , 'nLayerOnly' , 'ppCopperBalancingDatas' , ), 133, (133, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8A}')") , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'CopperBalancingDatas' , 'eSelectOnly' , 'nLayerOnly' , 'ppCopperBalancingDatas' , ), 133, (133, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8A}')") , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'Boards' , 'eSelectOnly' , 'ppBoards' , ), 134, (134, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')") , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'Boards' , 'eSelectOnly' , 'ppBoards' , ), 134, (134, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')") , ], 1 , 2 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'DetailedViews' , 'eSelectOnly' , 'ppDetailedViews' , ), 135, (135, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}')") , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'DetailedViews' , 'eSelectOnly' , 'ppDetailedViews' , ), 135, (135, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}')") , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'PutBoard' , 'sOriginalDesignName' , 'dXLoc' , 'dYLoc' , 'dRotation' , 
			 'bFlip' , 'eAttachPt' , 'eBrdContent' , 'eUnit' , 'eAngleUnit' , 
			 'ppBoard' , ), 136, (136, (), [ (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (11, 49, 'False', None) , (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')") , ], 1 , 1 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'PutDetailedView' , 'nPnts' , 'safeArrayOfPnts' , 'sName' , 'pUserlayer' , 
			 'dWorkSurfaceOriginX' , 'dWorkSurfaceOriginY' , 'dScale' , 'dWorkSurfaceExpansionFactor' , 'dRotation' , 
			 'bMirror' , 'sNameFont' , 'nNameHeight' , 'bDisplayBorder' , 'dBorderWidth' , 
			 'eUnit' , 'eAngleUnit' , 'ppDetailedView' , ), 137, (137, (), [ (3, 1, None, None) , 
			 (16396, 1, None, None) , (8, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 49, '1.0', None) , (5, 49, '0.10000000149011612', None) , (5, 49, '0.0', None) , (11, 49, 'False', None) , (8, 49, "'Courier New'", None) , 
			 (5, 49, '50.0', None) , (11, 49, 'True', None) , (5, 49, '0.0', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}')") , ], 1 , 1 , 4 , 0 , 1040 , (3, 32, None, None) , 0 , )),
	(( 'PutToolingHole' , 'dX' , 'dY' , 'pPadstack' , 'eFixed' , 
			 'eUnit' , 'ppToolingHole' , ), 138, (138, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}')") , ], 1 , 1 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'PutShearingHole' , 'dX' , 'dY' , 'pPadstack' , 'eFixed' , 
			 'eUnit' , 'ppShearingHole' , ), 139, (139, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}')") , ], 1 , 1 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'ManufacturingOutline' , 'ppManufacturingOutline' , ), 140, (140, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED91}')") , ], 1 , 2 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'PutManufacturingOutline' , 'nPnts' , 'safeArrayOfPnts' , 'eUnit' , 'ppManufacturingOutline' , 
			 ), 141, (141, (), [ (3, 1, None, None) , (16396, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED91}')") , ], 1 , 1 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'PutCopperBalancingShape' , 'nLayer' , 'nPnts' , 'safeArrayOfPnts' , 'eUnit' , 
			 'ppCuBalShape' , ), 142, (142, (), [ (3, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}')") , ], 1 , 1 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'PutTestPoint' , 'sCellname' , 'bFromCentralLib' , 'dX' , 'dY' , 
			 'dRotation' , 'pNet' , 'sRefDes' , 'sPartName' , 'eSide' , 
			 'eFixType' , 'eUnit' , 'eAngleUnit' , 'ppTestPoint' , ), 143, (143, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (8, 49, "''", None) , (8, 49, "''", None) , (3, 49, '1', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 1088 , (3, 32, None, None) , 0 , )),
	(( 'PutJumper' , 'sCellname' , 'bFromCentralLib' , 'dX' , 'dY' , 
			 'dRotation' , 'Length' , 'pNet' , 'sRefDes' , 'sPartName' , 
			 'eSide' , 'eFixType' , 'eUnit' , 'eAngleUnit' , 'ppJumper' , 
			 ), 144, (144, (), [ (8, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (8, 49, "''", None) , (8, 49, "''", None) , 
			 (3, 49, '1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 1096 , (3, 32, None, None) , 64 , )),
	(( 'NewPadstack' , 'sPadstackName' , 'eType' , 'ppPadstack' , ), 145, (145, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 1 , 4 , 0 , 1104 , (3, 0, None, None) , 64 , )),
	(( 'NewComponent' , 'sCellname' , 'eType' , 'ePackageGroup' , 'eMountType' , 
			 'dX' , 'dY' , 'dRotation' , 'sRefDes' , 'sPartName' , 
			 'nLayer' , 'bMirror' , 'eFixType' , 'eUnit' , 'eAngleUnit' , 
			 'ppComponent' , ), 146, (146, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (8, 49, "''", None) , 
			 (8, 49, "''", None) , (3, 49, '1', None) , (11, 49, 'False', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 1112 , (3, 32, None, None) , 64 , )),
	(( 'NewNet' , 'sNetName' , 'pNetClass' , 'ppNet' , ), 147, (147, (), [ 
			 (8, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 1 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'Environment' , 'ppEnv' , ), 148, (148, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED92}')") , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'InterruptXtremeSession' , 'nReason' , 'sMessage' , 'bBegin' , 'pAccepted' , 
			 ), 149, (149, (), [ (3, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1136 , (3, 0, None, None) , 64 , )),
	(( 'ReloadDatabase' , 'eDatabase' , ), 150, (150, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 1144 , (3, 0, None, None) , 64 , )),
	(( 'RequestWriteAccess' , 'eDatabase' , 'bRequest' , 'pResult' , ), 151, (151, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 1152 , (3, 0, None, None) , 64 , )),
	(( 'InterTool' , 'nApplication' , 'nNotifyCode' , 'vInfo' , 'pRetInfo' , 
			 ), 152, (152, (), [ (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 1160 , (3, 0, None, None) , 64 , )),
	(( 'ActualPlaneShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppActualPlaneShapes' , ), 153, (153, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')") , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'ActualPlaneShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppActualPlaneShapes' , ), 153, (153, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')") , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'TieLegs' , 'eSelectOnly' , 'nLayerOnly' , 'ppTieLegs' , ), 154, (154, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')") , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'TieLegs' , 'eSelectOnly' , 'nLayerOnly' , 'ppTieLegs' , ), 154, (154, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')") , ], 1 , 2 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 155, (155, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'BaseUnit' , 'pUnit' , ), 156, (156, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'LayerStack' , 'bIncludeInsulationLayer' , 'ppLayerObjects' , ), 157, (157, (), [ (11, 49, 'True', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'LayerStack' , 'bIncludeInsulationLayer' , 'ppLayerObjects' , ), 157, (157, (), [ (11, 49, 'True', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , ], 1 , 2 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapes' , 'eSelectOnly' , 'eType' , 'nLayerOnly' , 'ppEPShapes' , 
			 ), 158, (158, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')") , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapes' , 'eSelectOnly' , 'eType' , 'nLayerOnly' , 'ppEPShapes' , 
			 ), 158, (158, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')") , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'VerifyControl' , 'pVerifyControl' , ), 159, (159, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'VerifyResults' , 'pVerifyResults' , ), 160, (160, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'VerifyStatus' , 'pVerifyStatus' , ), 161, (161, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'RouteFences' , 'eType' , 'eSelectOnly' , 'ppRouteFences' , ), 162, (162, (), [ 
			 (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9C}')") , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'RouteFences' , 'eType' , 'eSelectOnly' , 'ppRouteFences' , ), 162, (162, (), [ 
			 (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9C}')") , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'bIncludeComponentGfx' , 
			 'ppGfxs' , ), 163, (163, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 1248 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'bIncludeComponentGfx' , 
			 'ppGfxs' , ), 163, (163, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 1248 , (3, 32, None, None) , 0 , )),
	(( 'PutRouteFence' , 'sName' , 'eType' , 'nPnts' , 'safeArrayOfPnts' , 
			 'eUnit' , 'ppRouteFence' , ), 164, (164, (), [ (8, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16396, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}')") , ], 1 , 1 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'Hazards' , 'eType' , 'ppHazards' , ), 165, (165, (), [ (16396, 49, "''", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}')") , ], 1 , 2 , 4 , 0 , 1264 , (3, 32, None, None) , 0 , )),
	(( 'Hazards' , 'eType' , 'ppHazards' , ), 165, (165, (), [ (16396, 49, "''", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}')") , ], 1 , 2 , 4 , 0 , 1264 , (3, 32, None, None) , 0 , )),
	(( 'MultiVias' , 'eSelectOnly' , 'ppMultiVias' , ), 166, (166, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}')") , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'MultiVias' , 'eSelectOnly' , 'ppMultiVias' , ), 166, (166, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}')") , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'PutMultiVia' , 'x' , 'y' , 'nRowCount' , 'nColumnCount' , 
			 'dRotation' , 'pPadstack' , 'pNet' , 'pComponent' , 'eFixed' , 
			 'eUnit' , 'eAngleUnit' , 'ppMultiVia' , ), 167, (167, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}')") , ], 1 , 1 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'TargetAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppTargetAreas' , ), 168, (168, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA2}')") , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'TargetAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppTargetAreas' , ), 168, (168, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA2}')") , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'BusPaths' , 'eSelectOnly' , 'nLayerOnly' , 'ppBusPaths' , ), 169, (169, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA6}')") , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'BusPaths' , 'eSelectOnly' , 'nLayerOnly' , 'ppBusPaths' , ), 169, (169, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA6}')") , ], 1 , 2 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'PutRuleAreaEx' , 'nLayer' , 'dGraphicsWidth' , 'nPnts' , 'safeArrayOfPnts' , 
			 'sRuleSchemaName' , 'pComponent' , 'eUnit' , 'ppRuleArea' , ), 170, (170, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , (8, 49, "'Master'", None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}')") , ], 1 , 1 , 4 , 0 , 1304 , (3, 32, None, None) , 0 , )),
	(( 'RecentlyUnPlacedComponents' , 'ppComps' , ), 171, (171, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'Groups' , 'eSelectOnly' , 'eGroupType' , 'bRootGroupsOnly' , 'ppGroups' , 
			 ), 172, (172, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')") , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'Groups' , 'eSelectOnly' , 'eGroupType' , 'bRootGroupsOnly' , 'ppGroups' , 
			 ), 172, (172, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')") , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'PutGroup' , 'eGroupType' , 'sGroupName' , 'pGroup' , ), 173, (173, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 1 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'ClearUndoStack' , ), 174, (174, (), [ ], 1 , 1 , 4 , 0 , 1336 , (3, 0, None, None) , 64 , )),
	(( 'FindGroup' , 'Name' , 'ppGroup' , ), 175, (175, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 1 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'FindPart' , 'Part' , 'ppPart' , ), 176, (176, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}')") , ], 1 , 1 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'FindCell' , 'Cell' , 'ppCell' , ), 177, (177, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')") , ], 1 , 1 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlaneOutlines' , 'eSelectOnly' , 'nLayerOnly' , 'ppGeneratedPlanes' , ), 178, (178, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlaneOutlines' , 'eSelectOnly' , 'nLayerOnly' , 'ppGeneratedPlanes' , ), 178, (178, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'PlaneEditingSketches' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlaneEditingSketches' , ), 179, (179, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{6C221751-C228-4D62-9393-F0E4A5169EFB}')") , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'PlaneEditingSketches' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlaneEditingSketches' , ), 179, (179, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{6C221751-C228-4D62-9393-F0E4A5169EFB}')") , ], 1 , 2 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'PutPlaneEditingSketch' , 'nPnts' , 'pSafeArrayOfPnts' , 'nLayer' , 'eMetalSide' , 
			 'eUnit' , 'ppPlaneEditingSketch' , ), 180, (180, (), [ (3, 1, None, None) , (16396, 1, None, None) , 
			 (3, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}')") , ], 1 , 1 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'CopperBalancing' , 'retval' , ), 181, (181, (), [ (16393, 10, None, "IID('{9028C42A-551A-40C4-A596-C7A7058DC671}')") , ], 1 , 2 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'PutDRCWindow' , 'dGraphicsWidth' , 'nPnts' , 'safeArrayOfPnts' , 'eUnit' , 
			 'ppDRCWindow' , ), 182, (182, (), [ (5, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')") , ], 1 , 1 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaPadstack' , 'x' , 'y' , 'FromLayer' , 'ToLayer' , 
			 'ppNet' , 'eUnit' , 'ppPadstack' , ), 183, (183, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 2 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'Panels' , 'eSelectOnly' , 'ppPanels' , ), 184, (184, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')") , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'Panels' , 'eSelectOnly' , 'ppPanels' , ), 184, (184, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')") , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'SheetOutline' , 'ppSheetOutline' , ), 185, (185, (), [ (16393, 10, None, "IID('{8906B110-98F5-44A5-BD6C-DCE96AC36C87}')") , ], 1 , 2 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'PutSheetOutline' , 'nPnts' , 'safeArrayOfPnts' , 'graphicsWidth' , 'eUnit' , 
			 'ppSheetOutline' , ), 186, (186, (), [ (3, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{8906B110-98F5-44A5-BD6C-DCE96AC36C87}')") , ], 1 , 1 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'PutPanel' , 'sOriginalDesignName' , 'dXLoc' , 'dYLoc' , 'dRotation' , 
			 'bFlip' , 'eAttachPt' , 'dScale' , 'bCenter' , 'bDimensionPanelWithInstanceOrigin' , 
			 'eUnit' , 'eAngleUnit' , 'ppPanel' , ), 187, (187, (), [ (8, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 49, 'False', None) , (3, 49, '0', None) , 
			 (5, 49, '1.0', None) , (11, 49, 'False', None) , (11, 49, 'False', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{6B941F88-756B-4734-B3B2-EAB2861ECB7C}')") , ], 1 , 1 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'PutBoardOnSheet' , 'sOriginalDesignName' , 'dXLoc' , 'dYLoc' , 'dRotation' , 
			 'bFlip' , 'eAttachPt' , 'eBrdContent' , 'dScale' , 'bCenter' , 
			 'bDimensionDesignWithInstanceOrigin' , 'eUnit' , 'eAngleUnit' , 'ppBoard' , ), 188, (188, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 49, 'False', None) , 
			 (3, 49, '0', None) , (3, 49, '-1', None) , (5, 49, '1.0', None) , (11, 49, 'False', None) , (11, 49, 'False', None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}')") , ], 1 , 1 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'PutPanelArray' , 'sOriginalDesignName' , 'dXLoc' , 'dYLoc' , 'dRotation' , 
			 'bFlip' , 'eAttachPt' , 'dScale' , 'bCenter' , 'bDimensionPanelWithInstanceOrigin' , 
			 'nArrayRows' , 'nArrayCols' , 'dRowClearance' , 'dColClearance' , 'eUnit' , 
			 'eAngleUnit' , 'ppPanels' , ), 189, (189, (), [ (8, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (11, 49, 'False', None) , (3, 49, '0', None) , (5, 49, '1.0', None) , 
			 (11, 49, 'False', None) , (11, 49, 'False', None) , (3, 49, '0', None) , (3, 49, '0', None) , (5, 49, '0.0', None) , 
			 (5, 49, '0.0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')") , ], 1 , 1 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'PutBoardArray' , 'sOriginalDesignName' , 'dXLoc' , 'dYLoc' , 'dRotation' , 
			 'bFlip' , 'eAttachPt' , 'eBrdContent' , 'dScale' , 'bCenter' , 
			 'bDimensionDesignWithInstanceOrigin' , 'nArrayRows' , 'nArrayCols' , 'dRowClearance' , 'dColClearance' , 
			 'eUnit' , 'eAngleUnit' , 'ppBoards' , ), 190, (190, (), [ (8, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 49, 'False', None) , (3, 49, '0', None) , 
			 (3, 49, '-1', None) , (5, 49, '1.0', None) , (11, 49, 'False', None) , (11, 49, 'False', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (5, 49, '0.0', None) , (5, 49, '0.0', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')") , ], 1 , 1 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'PutDrillTable' , 'pObj' , 'dXLoc' , 'dYLoc' , 'dRotation' , 
			 'bTop' , 'eFixed' , 'eUnit' , 'eAngleUnit' , 'ppDrillTables' , 
			 ), 191, (191, (), [ (9, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (11, 49, 'True', None) , (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}')") , ], 1 , 1 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'Views' , 'eViewSelect' , 'viewName' , 'ppViews' , ), 192, (192, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{05700A92-D895-44BB-96C1-9D5BCCAE050F}')") , ], 1 , 2 , 4 , 0 , 1480 , (3, 32, None, None) , 64 , )),
	(( 'Views' , 'eViewSelect' , 'viewName' , 'ppViews' , ), 192, (192, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{05700A92-D895-44BB-96C1-9D5BCCAE050F}')") , ], 1 , 2 , 4 , 0 , 1480 , (3, 32, None, None) , 64 , )),
	(( 'PutSheet' , 'sheetName' , 'drawingTemplateName' , 'instanceNames' , 'schemeNames' , 
			 'ppSheetView' , ), 193, (193, (), [ (8, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16393, 10, None, "IID('{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')") , ], 1 , 1 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'DrillTables' , 'eSelectOnly' , 'ppDrillTables' , ), 194, (194, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}')") , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'DrillTables' , 'eSelectOnly' , 'ppDrillTables' , ), 194, (194, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}')") , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 0 , )),
	(( 'DisplaySchemes' , 'eSchemeType' , 'pSafeArrayOfData' , ), 195, (195, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'DisplaySchemes' , 'eSchemeType' , 'pSafeArrayOfData' , ), 195, (195, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1504 , (3, 0, None, None) , 0 , )),
	(( 'DFFSliverAnalysis' , 'retval' , ), 196, (196, (), [ (16393, 10, None, "IID('{CCFAFD52-099E-4BD6-B0DE-BC496050ED45}')") , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 0 , )),
	(( 'IDFImport' , 'retval' , ), 197, (197, (), [ (16393, 10, None, "IID('{6F314C25-CF10-405C-ADBD-F9D1CC8733CD}')") , ], 1 , 2 , 4 , 0 , 1520 , (3, 0, None, None) , 0 , )),
	(( 'MetalizationAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppMetalizationAreas' , ), 198, (198, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{F48923B1-F092-42C5-8108-1256A55CDB86}')") , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'MetalizationAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppMetalizationAreas' , ), 198, (198, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{F48923B1-F092-42C5-8108-1256A55CDB86}')") , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 0 , )),
	(( 'FireOnChangeForDynamics' , ), 199, (199, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 0 , )),
	(( 'ProjectIntegration' , 'ppRetVal' , ), 200, (200, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'PlaneClasses' , 'ppPlaneClasses' , ), 201, (201, (), [ (16393, 10, None, "IID('{A86800CB-BF55-4C68-ACD4-23E5E63A8F78}')") , ], 1 , 2 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'FindPlaneClass' , 'sName' , 'ppPlaneClass' , ), 202, (202, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')") , ], 1 , 1 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'PlaneAssignments' , 'nLayerOnly' , 'ppPlaneAssignments' , ), 203, (203, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}')") , ], 1 , 2 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'PlaneAssignments' , 'nLayerOnly' , 'ppPlaneAssignments' , ), 203, (203, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}')") , ], 1 , 2 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'FindPlaneAssignment' , 'nLayer' , 'pNet' , 'ppPlaneAssignment' , ), 204, (204, (), [ 
			 (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (16393, 10, None, "IID('{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}')") , ], 1 , 1 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'ConstructionPoints' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 205, (205, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{70468F79-8CB4-4E7B-B6AE-9B167F349DC3}')") , ], 1 , 2 , 4 , 0 , 1584 , (3, 32, None, None) , 0 , )),
	(( 'ConstructionPoints' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 205, (205, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{70468F79-8CB4-4E7B-B6AE-9B167F349DC3}')") , ], 1 , 2 , 4 , 0 , 1584 , (3, 32, None, None) , 0 , )),
	(( 'PutConstructionPoint' , 'pUserlayer' , 'XPosition' , 'YPosition' , 'Diameter' , 
			 'eUnit' , 'ppConstructionPoint' , ), 206, (206, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}')") , ], 1 , 1 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 207, (207, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'XtremeUpdateFile' , 'PCBRelativeFilePath' , 'val' , ), 208, (208, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'XtremeCheckoutFile' , 'PCBRelativeFilePath' , 'val' , ), 209, (209, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
	(( 'XtremeCheckinFile' , 'PCBRelativeFilePath' , ), 210, (210, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
	(( 'XtremeGetCheckoutOwner' , 'PCBRelativeFilePath' , 'pHandle' , ), 211, (211, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
	(( 'ConstructionLines' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 212, (212, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{9F40B36F-3CB4-48B6-AC53-8F42E432C5C5}')") , ], 1 , 2 , 4 , 0 , 1640 , (3, 32, None, None) , 0 , )),
	(( 'ConstructionLines' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 212, (212, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{9F40B36F-3CB4-48B6-AC53-8F42E432C5C5}')") , ], 1 , 2 , 4 , 0 , 1640 , (3, 32, None, None) , 0 , )),
	(( 'PutInfiniteConstructionLine' , 'pUserlayer' , 'XPosition' , 'YPosition' , 'Angle' , 
			 'eUnit' , 'eAngleUnit' , 'ppConstructionLine' , ), 213, (213, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')") , ], 1 , 1 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
	(( 'PutConstructionLine' , 'pUserlayer' , 'X1' , 'Y1' , 'X2' , 
			 'Y2' , 'Infinite' , 'eUnit' , 'ppConstructionLine' , ), 214, (214, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (11, 49, 'False', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}')") , ], 1 , 1 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
	(( 'ParametricUtility' , 'pVal' , ), 215, (215, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1664 , (3, 0, None, None) , 0 , )),
	(( 'GetClearanceRule' , 'firstObject' , 'secondObject' , 'firstObjectLayer' , 'secondObjectLayer' , 
			 'eUnit' , 'val' , ), 216, (216, (), [ (9, 1, None, None) , (9, 1, None, None) , 
			 (3, 49, '-1', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1672 , (3, 0, None, None) , 64 , )),
	(( 'GetActualMinClearance' , 'firstObject' , 'secondObject' , 'eUnit' , 'val' , 
			 ), 217, (217, (), [ (9, 1, None, None) , (9, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 1680 , (3, 0, None, None) , 64 , )),
	(( 'Sheets' , 'sheetName' , 'ppSheets' , ), 218, (218, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}')") , ], 1 , 2 , 4 , 0 , 1688 , (3, 32, None, None) , 0 , )),
	(( 'Sheets' , 'sheetName' , 'ppSheets' , ), 218, (218, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}')") , ], 1 , 2 , 4 , 0 , 1688 , (3, 32, None, None) , 0 , )),
	(( 'ActiveSheet' , 'ppSheet' , ), 219, (219, (), [ (16393, 10, None, "IID('{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')") , ], 1 , 2 , 4 , 0 , 1696 , (3, 0, None, None) , 0 , )),
	(( 'ActiveSheet' , 'ppSheet' , ), 219, (219, (), [ (9, 1, None, "IID('{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')") , ], 1 , 4 , 4 , 0 , 1704 , (3, 0, None, None) , 0 , )),
	(( 'CellNames' , 'Celltype' , 'PkgGrpType' , 'NameRegularExpression' , 'bReservedForFutureUse' , 
			 'CellNames' , ), 220, (220, (), [ (3, 49, '-1', None) , (3, 49, '-1', None) , (8, 49, "'*'", None) , 
			 (11, 49, 'False', None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 32, None, None) , 0 , )),
	(( 'CellNames' , 'Celltype' , 'PkgGrpType' , 'NameRegularExpression' , 'bReservedForFutureUse' , 
			 'CellNames' , ), 220, (220, (), [ (3, 49, '-1', None) , (3, 49, '-1', None) , (8, 49, "'*'", None) , 
			 (11, 49, 'False', None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1712 , (3, 32, None, None) , 0 , )),
	(( 'ClientName' , 'Name' , ), 221, (221, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1720 , (3, 0, None, None) , 0 , )),
	(( 'ClientName' , 'Name' , ), 221, (221, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 1728 , (3, 0, None, None) , 0 , )),
	(( 'FlowType' , 'eFlowType' , ), 222, (222, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1736 , (3, 0, None, None) , 64 , )),
	(( 'PickScheme' , 'x' , 'y' , 'Layer' , 'ToLayer' , 
			 'Unit' , 'schemeName' , ), 223, (223, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 1, None, None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 1744 , (3, 0, None, None) , 0 , )),
	(( 'DifferentialPairs' , 'eSelectOnly' , 'ppDiffPairs' , ), 224, (224, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{B7CBBAF8-984C-4358-998E-F3FD7C2F761D}')") , ], 1 , 2 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
	(( 'DifferentialPairs' , 'eSelectOnly' , 'ppDiffPairs' , ), 224, (224, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{B7CBBAF8-984C-4358-998E-F3FD7C2F761D}')") , ], 1 , 2 , 4 , 0 , 1752 , (3, 0, None, None) , 0 , )),
	(( 'MatchLengthGroups' , 'eMatchType' , 'ppGroups' , ), 225, (225, (), [ (3, 49, '1', None) , 
			 (16393, 10, None, "IID('{62A90059-38AB-4024-8A7C-0829DE185371}')") , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 64 , )),
	(( 'MatchLengthGroups' , 'eMatchType' , 'ppGroups' , ), 225, (225, (), [ (3, 49, '1', None) , 
			 (16393, 10, None, "IID('{62A90059-38AB-4024-8A7C-0829DE185371}')") , ], 1 , 2 , 4 , 0 , 1760 , (3, 0, None, None) , 64 , )),
	(( 'Clearance' , 'ppClearance' , ), 226, (226, (), [ (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8B}')") , ], 1 , 2 , 4 , 0 , 1768 , (3, 0, None, None) , 0 , )),
	(( 'PadstackNames' , 'SelectPadstackType' , 'SelectPinClassType' , 'NameRegularExpression' , 'FromCentralLib' , 
			 'PadstackNames' , ), 227, (227, (), [ (3, 49, '-1', None) , (3, 49, '-1', None) , (8, 49, "'*'", None) , 
			 (11, 49, 'False', None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 32, None, None) , 0 , )),
	(( 'PadstackNames' , 'SelectPadstackType' , 'SelectPinClassType' , 'NameRegularExpression' , 'FromCentralLib' , 
			 'PadstackNames' , ), 227, (227, (), [ (3, 49, '-1', None) , (3, 49, '-1', None) , (8, 49, "'*'", None) , 
			 (11, 49, 'False', None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1776 , (3, 32, None, None) , 0 , )),
	(( 'HoleNames' , 'NameRegularExpression' , 'FromCentralLib' , 'PadstackNames' , ), 228, (228, (), [ 
			 (8, 49, "'*'", None) , (11, 49, 'False', None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1784 , (3, 32, None, None) , 0 , )),
	(( 'HoleNames' , 'NameRegularExpression' , 'FromCentralLib' , 'PadstackNames' , ), 228, (228, (), [ 
			 (8, 49, "'*'", None) , (11, 49, 'False', None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1784 , (3, 32, None, None) , 0 , )),
	(( 'PutAssemblyRefDes' , 'dPositionX' , 'dPositionY' , 'eUnit' , 'ppFabricationLayerText' , 
			 ), 229, (229, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 1792 , (3, 0, None, None) , 0 , )),
	(( 'PutSilkscreenRefDes' , 'dPositionX' , 'dPositionY' , 'eUnit' , 'ppFabricationLayerText' , 
			 ), 230, (230, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 1800 , (3, 0, None, None) , 0 , )),
	(( 'PutAssemblyPartNumber' , 'dPositionX' , 'dPositionY' , 'eUnit' , 'ppFabricationLayerText' , 
			 ), 231, (231, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 1808 , (3, 0, None, None) , 0 , )),
	(( 'PutSilkscreenPartNumber' , 'dPositionX' , 'dPositionY' , 'eUnit' , 'ppFabricationLayerText' , 
			 ), 232, (232, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 1816 , (3, 0, None, None) , 0 , )),
	(( 'PutPlacementOutline' , 'nLayer' , 'nPnts' , 'pSafeArrayOfPnts' , 'dHeight' , 
			 'dUndersideSpace' , 'pComponent' , 'eUnit' , 'ppPlacementOutline' , ), 233, (233, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , (5, 49, '0.0', None) , (5, 49, '0.0', None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}')") , ], 1 , 1 , 4 , 0 , 1824 , (3, 0, None, None) , 0 , )),
	(( 'PutInsertionOutline' , 'nLayer' , 'nPnts' , 'pSafeArrayOfPnts' , 'pComponent' , 
			 'eUnit' , 'ppInsertionOutline' , ), 234, (234, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{045F3585-5036-40BA-97E0-EB9EF5098737}')") , ], 1 , 1 , 4 , 0 , 1832 , (3, 0, None, None) , 0 , )),
	(( 'InsertionOutlines' , 'eSelectOnly' , 'nLayerOnly' , 'ppInsertionOutlines' , ), 235, (235, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{B9781283-DCA6-44C7-975D-DB76652A3391}')") , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
	(( 'InsertionOutlines' , 'eSelectOnly' , 'nLayerOnly' , 'ppInsertionOutlines' , ), 235, (235, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{B9781283-DCA6-44C7-975D-DB76652A3391}')") , ], 1 , 2 , 4 , 0 , 1840 , (3, 0, None, None) , 0 , )),
	(( 'NewPin' , 'sPinName' , 'pPadstack' , 'ppPin' , ), 236, (236, (), [ 
			 (8, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 1 , 4 , 0 , 1848 , (3, 0, None, None) , 0 , )),
	(( 'CellEditor' , 'pVal' , ), 237, (237, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1856 , (3, 0, None, None) , 0 , )),
	(( 'PutMetalizationArea' , 'nLayer' , 'pNet' , 'nNumPnts' , 'pPointsArray' , 
			 'pComponent' , 'eUnit' , 'ppArea' , ), 238, (238, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 1, None, None) , (16396, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{315D2489-54AB-4C47-9927-5D1EB59FC6E7}')") , ], 1 , 1 , 4 , 0 , 1864 , (3, 0, None, None) , 0 , )),
	(( 'PadstackEditor' , 'pVal' , ), 239, (239, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1872 , (3, 0, None, None) , 0 , )),
	(( 'PartEditor' , 'ppPartEditor' , ), 240, (240, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1880 , (3, 0, None, None) , 0 , )),
	(( 'FindObjectById' , 'UniqueId' , 'ret' , ), 241, (241, (), [ (12, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 1888 , (3, 0, None, None) , 0 , )),
	(( 'PutContourEx' , 'nPnts' , 'pSafeArrayOfPnts' , 'StartLayer' , 'EndLayer' , 
			 'pHole' , 'eCompensation' , 'eType' , 'bReverse' , 'pComponent' , 
			 'eUnit' , 'ppContour' , ), 242, (242, (), [ (3, 1, None, None) , (16396, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , (3, 1, None, None) , (3, 1, None, None) , 
			 (11, 49, 'False', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}')") , ], 1 , 1 , 4 , 0 , 1896 , (3, 0, None, None) , 0 , )),
	(( 'ReturnUniqueIdsAsIntegers' , 'val' , ), 243, (243, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1904 , (3, 0, None, None) , 0 , )),
	(( 'ReturnUniqueIdsAsIntegers' , 'val' , ), 243, (243, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1912 , (3, 0, None, None) , 0 , )),
	(( 'VariantManagerControl' , 'ppDispatch' , ), 244, (244, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 1920 , (3, 0, None, None) , 0 , )),
	(( 'PutSandbox' , 'sName' , 'PlacementLayers' , 'RouteLayers' , 'dGraphicsWidth' , 
			 'nPnts' , 'safeArrayOfPnts' , 'eUnit' , 'ppSandbox' , ), 245, (245, (), [ 
			 (8, 1, None, None) , (16396, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}')") , ], 1 , 1 , 4 , 0 , 1928 , (3, 0, None, None) , 0 , )),
	(( 'Sandboxes' , 'sSandboxName' , 'eSelectOnly' , 'ppSandboxes' , ), 246, (246, (), [ 
			 (8, 49, "'*'", None) , (3, 49, '0', None) , (16393, 10, None, "IID('{BD848A19-1634-4C73-BADF-459C5B94BA4C}')") , ], 1 , 2 , 4 , 0 , 1936 , (3, 32, None, None) , 0 , )),
	(( 'Sandboxes' , 'sSandboxName' , 'eSelectOnly' , 'ppSandboxes' , ), 246, (246, (), [ 
			 (8, 49, "'*'", None) , (3, 49, '0', None) , (16393, 10, None, "IID('{BD848A19-1634-4C73-BADF-459C5B94BA4C}')") , ], 1 , 2 , 4 , 0 , 1936 , (3, 32, None, None) , 0 , )),
	(( 'IsVariantMode' , 'bVariantMode' , ), 247, (247, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 1944 , (3, 0, None, None) , 0 , )),
	(( 'ChangeData' , 'FromRecord' , 'ToRecord' , 'ChangeData' , ), 248, (248, (), [ 
			 (12, 49, '-1.0', None) , (12, 49, '-1.0', None) , (16393, 10, None, "IID('{3637D13B-92C5-41E2-BC84-8B8815A8041C}')") , ], 1 , 2 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
	(( 'ChangeData' , 'FromRecord' , 'ToRecord' , 'ChangeData' , ), 248, (248, (), [ 
			 (12, 49, '-1.0', None) , (12, 49, '-1.0', None) , (16393, 10, None, "IID('{3637D13B-92C5-41E2-BC84-8B8815A8041C}')") , ], 1 , 2 , 4 , 0 , 1952 , (3, 0, None, None) , 0 , )),
	(( 'ChangedGeneratedPlaneData' , 'retval' , ), 249, (249, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1960 , (3, 0, None, None) , 64 , )),
	(( 'NextRefDes' , 'prefix' , 'RefDes' , ), 250, (250, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1968 , (3, 0, None, None) , 0 , )),
	(( 'HazardsEx' , 'eType' , 'eAcceptType' , 'ppHazards' , ), 251, (251, (), [ 
			 (16396, 49, "''", None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}')") , ], 1 , 2 , 4 , 0 , 1976 , (3, 32, None, None) , 0 , )),
	(( 'HazardsEx' , 'eType' , 'eAcceptType' , 'ppHazards' , ), 251, (251, (), [ 
			 (16396, 49, "''", None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}')") , ], 1 , 2 , 4 , 0 , 1976 , (3, 32, None, None) , 0 , )),
	(( 'PartitionName' , 'pName' , ), 252, (252, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 1984 , (3, 0, None, None) , 0 , )),
	(( 'PutBondWire' , 'FromObject' , 'XFrom' , 'YFrom' , 'ToObject' , 
			 'XTo' , 'YTo' , 'Unit' , 'BondWire' , ), 253, (253, (), [ 
			 (9, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (9, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 1992 , (3, 0, None, None) , 0 , )),
	(( 'PutBondPad' , 'x' , 'y' , 'Padstack' , 'Net' , 
			 'Side' , 'FixLock' , 'Unit' , 'BondPad' , ), 254, (254, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 49, '1', None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')") , ], 1 , 1 , 4 , 0 , 2000 , (3, 0, None, None) , 0 , )),
	(( 'BondWires' , 'SelectType' , 'BondWires' , ), 255, (255, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 2008 , (3, 0, None, None) , 0 , )),
	(( 'BondWires' , 'SelectType' , 'BondWires' , ), 255, (255, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 2008 , (3, 0, None, None) , 0 , )),
	(( 'BondPads' , 'SelectType' , 'BondPads' , ), 256, (256, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}')") , ], 1 , 2 , 4 , 0 , 2016 , (3, 0, None, None) , 0 , )),
	(( 'BondPads' , 'SelectType' , 'BondPads' , ), 256, (256, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}')") , ], 1 , 2 , 4 , 0 , 2016 , (3, 0, None, None) , 0 , )),
	(( 'PutWireGraphic' , 'dWidth' , 'nPnts' , 'pSafeArrayOfPoints' , 'ReservedForFutureUse' , 
			 'pComponent' , 'eUnit' , 'ppWire' , ), 257, (257, (), [ (5, 1, None, None) , 
			 (3, 1, None, None) , (16396, 1, None, None) , (12, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}')") , ], 1 , 1 , 4 , 0 , 2024 , (3, 0, None, None) , 64 , )),
	(( 'Application' , 'ppApplication' , ), 258, (258, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}')") , ], 1 , 2 , 4 , 0 , 2032 , (3, 0, None, None) , 0 , )),
	(( 'PutCavity' , 'nPnts' , 'pSafeArrayOfPnts' , 'StartLayer' , 'EndLayer' , 
			 'eAllowMetalOnStartLayer' , 'eAllowMetalOnEndLayer' , 'bMilled' , 'pHole' , 'eUnit' , 
			 'ppCavity' , ), 259, (259, (), [ (3, 1, None, None) , (16396, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , (11, 49, 'False', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{9826B261-A768-44F9-A0B9-1C289FB5D797}')") , ], 1 , 1 , 4 , 0 , 2040 , (3, 0, None, None) , 0 , )),
	(( 'Cavities' , 'SelectType' , 'Cavities' , ), 260, (260, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{F6D6B8DF-76C9-425E-80A0-9DA8D54B1612}')") , ], 1 , 2 , 4 , 0 , 2048 , (3, 0, None, None) , 0 , )),
	(( 'Cavities' , 'SelectType' , 'Cavities' , ), 260, (260, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{F6D6B8DF-76C9-425E-80A0-9DA8D54B1612}')") , ], 1 , 2 , 4 , 0 , 2048 , (3, 0, None, None) , 0 , )),
	(( 'PutTargetArea' , 'nLayer' , 'dMaxDeviationDist' , 'dX' , 'dY' , 
			 'eUnit' , 'bDisplyRouteTargets' , 'bVisibility' , 'sRefDes' , 'ppTargetArea' , 
			 ), 261, (261, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (11, 49, 'True', None) , (11, 49, 'True', None) , (8, 49, "''", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}')") , ], 1 , 1 , 4 , 0 , 2056 , (3, 32, None, None) , 64 , )),
	(( 'LibraryServices' , 'ppLibraryServices' , ), 262, (262, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 2064 , (3, 0, None, None) , 64 , )),
	(( 'GetObjectClass' , 'vObject' , 'eClass' , ), 263, (263, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2072 , (3, 0, None, None) , 0 , )),
	(( 'GetObjectType' , 'vObject' , 'oType' , ), 264, (264, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2080 , (3, 0, None, None) , 0 , )),
	(( 'ResistorShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppResistorShapes' , ), 265, (265, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{DC0CD70D-0F4E-4DB7-9D0B-6AD595D27C1F}')") , ], 1 , 2 , 4 , 0 , 2088 , (3, 0, None, None) , 0 , )),
	(( 'ResistorShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppResistorShapes' , ), 265, (265, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{DC0CD70D-0F4E-4DB7-9D0B-6AD595D27C1F}')") , ], 1 , 2 , 4 , 0 , 2088 , (3, 0, None, None) , 0 , )),
	(( 'AllowEditBoardGeometry' , 'bAllowEditBoardGeometry' , ), 266, (266, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2096 , (3, 0, None, None) , 0 , )),
	(( 'MasterPath' , 'pPath' , ), 267, (267, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2104 , (3, 0, None, None) , 0 , )),
	(( 'MasterFullName' , 'pName' , ), 268, (268, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2112 , (3, 0, None, None) , 0 , )),
	(( 'CCZExportControl' , 'ppDispatch' , ), 269, (269, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 2120 , (3, 0, None, None) , 0 , )),
	(( 'TestFixtureOutline' , 'ppTestFixtureOutline' , ), 270, (270, (), [ (16393, 10, None, "IID('{585FFB16-62CC-4252-BE51-45D541FA8266}')") , ], 1 , 2 , 4 , 0 , 2128 , (3, 0, None, None) , 64 , )),
	(( 'PutTestFixtureOutline' , 'nPnts' , 'safeArrayOfPnts' , 'eUnit' , 'ppTestFixtureOutline' , 
			 ), 271, (271, (), [ (3, 1, None, None) , (16396, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{585FFB16-62CC-4252-BE51-45D541FA8266}')") , ], 1 , 1 , 4 , 0 , 2136 , (3, 0, None, None) , 64 , )),
	(( 'PutFabricationLayerTextEx' , 'sString' , 'PositionX' , 'PositionY' , 'eTextType' , 
			 'eType' , 'eSide' , 'pComponent' , 'eUnit' , 'Text' , 
			 ), 272, (272, (), [ (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 2144 , (3, 0, None, None) , 0 , )),
	(( 'PutConductorLayerTextEx' , 'sString' , 'PositionX' , 'PositionY' , 'eTextType' , 
			 'nLayer' , 'pComponent' , 'eUnit' , 'Text' , ), 273, (273, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')") , ], 1 , 1 , 4 , 0 , 2152 , (3, 0, None, None) , 0 , )),
	(( 'PutUserLayerTextEx' , 'sString' , 'PositionX' , 'PositionY' , 'eTextType' , 
			 'pUserlayer' , 'pComponent' , 'eUnit' , 'Text' , ), 274, (274, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')") , ], 1 , 1 , 4 , 0 , 2160 , (3, 0, None, None) , 0 , )),
	(( 'FindNetByID' , 'UniqueNumber' , 'ppNet' , ), 275, (275, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 1 , 4 , 0 , 2168 , (3, 0, None, None) , 0 , )),
	(( 'SaveToTemp' , 'Success' , ), 276, (276, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2176 , (3, 0, None, None) , 0 , )),
	(( 'DXFImport' , 'retval' , ), 277, (277, (), [ (16393, 10, None, "IID('{E9B3363C-F1A7-4947-ABF3-3FE59EFFD055}')") , ], 1 , 2 , 4 , 0 , 2184 , (3, 0, None, None) , 0 , )),
	(( 'CreateCustomView' , '_ocxId' , '_customView' , ), 278, (278, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')") , ], 1 , 1 , 4 , 0 , 2192 , (3, 0, None, None) , 64 , )),
	(( 'ActiveViewEx' , 'ppView' , ), 279, (279, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')") , ], 1 , 2 , 4 , 0 , 2200 , (3, 0, None, None) , 0 , )),
	(( 'ViewsEx' , 'eViewSelect' , 'viewName' , 'ppViews' , ), 280, (280, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{05700A92-D895-44BB-96C1-9D5BCCAE050F}')") , ], 1 , 2 , 4 , 0 , 2208 , (3, 32, None, None) , 0 , )),
	(( 'ViewsEx' , 'eViewSelect' , 'viewName' , 'ppViews' , ), 280, (280, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{05700A92-D895-44BB-96C1-9D5BCCAE050F}')") , ], 1 , 2 , 4 , 0 , 2208 , (3, 32, None, None) , 0 , )),
	(( 'VariantDataExists' , 'eVariantDataType' , ), 281, (281, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2216 , (3, 0, None, None) , 0 , )),
	(( 'EDXExportControl' , 'ppDispatch' , ), 282, (282, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 2224 , (3, 0, None, None) , 64 , )),
	(( 'PutPadstacksInXtreme' , 'nFrom' , 'nTo' , 'padstackName' , 'bMirrored' , 
			 'bFromCentralLib' , 'ppPadstack' , ), 283, (283, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (12, 1, None, None) , (11, 49, 'False', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}')") , ], 1 , 1 , 4 , 0 , 2232 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintClasses' , 'Name' , 'ppConstraintClasses' , ), 284, (284, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{AEDD489A-9A64-4842-ADF9-72F22B82C33C}')") , ], 1 , 2 , 4 , 0 , 2240 , (3, 32, None, None) , 64 , )),
	(( 'ConstraintClasses' , 'Name' , 'ppConstraintClasses' , ), 284, (284, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{AEDD489A-9A64-4842-ADF9-72F22B82C33C}')") , ], 1 , 2 , 4 , 0 , 2240 , (3, 32, None, None) , 64 , )),
	(( 'PutBusPath' , 'nLayer' , 'pConstraintClass' , 'nPnts' , 'safeArrayOfPnts' , 
			 'busPathCreationData' , 'Packed' , 'eUnit' , 'pBusPath' , ), 285, (285, (), [ 
			 (3, 1, None, None) , (9, 1, None, "IID('{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}')") , (3, 1, None, None) , (16396, 1, None, None) , (12, 1, None, None) , 
			 (11, 49, 'False', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}')") , ], 1 , 1 , 4 , 0 , 2248 , (3, 0, None, None) , 64 , )),
	(( 'CreateComponent' , 'PartName' , 'CellName' , 'RefDes' , 'bSearchCentralLibrary' , 
			 'ppComponent' , ), 286, (286, (), [ (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 2256 , (3, 0, None, None) , 0 , )),
	(( 'PlowUtilities' , 'ppPlowUtilities' , ), 287, (287, (), [ (16393, 10, None, "IID('{C2DF1786-E310-4E24-B331-225D0EB92338}')") , ], 1 , 2 , 4 , 0 , 2264 , (3, 0, None, None) , 64 , )),
	(( 'AcquireToCheckpoint' , 'Checkpoint' , ), 288, (288, (), [ (9, 1, None, "IID('{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}')") , ], 1 , 1 , 4 , 0 , 2272 , (3, 0, None, None) , 0 , )),
	(( 'Checkpoint' , 'Checkpoint' , ), 289, (289, (), [ (16393, 10, None, "IID('{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}')") , ], 1 , 2 , 4 , 0 , 2280 , (3, 0, None, None) , 0 , )),
	(( 'Checkpoint' , 'Checkpoint' , ), 289, (289, (), [ (9, 1, None, "IID('{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}')") , ], 1 , 8 , 4 , 0 , 2288 , (3, 0, None, None) , 0 , )),
	(( 'LocateCheckpoint' , 'Checkpoint' , 'Location' , ), 290, (290, (), [ (9, 1, None, "IID('{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}')") , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2296 , (3, 0, None, None) , 0 , )),
	(( 'PutFromTo' , 'pObject1' , 'pObject2' , 'ppFromTo' , ), 291, (291, (), [ 
			 (9, 1, None, None) , (9, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , ], 1 , 1 , 4 , 0 , 2304 , (3, 0, None, None) , 64 , )),
	(( 'PutMarker' , 'x' , 'y' , 'Layer' , 'pNet' , 
			 'Unit' , 'Marker' , ), 292, (292, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , ], 1 , 1 , 4 , 0 , 2312 , (3, 0, None, None) , 64 , )),
	(( 'ActiveClearanceEngine' , 'val' , ), 293, (293, (), [ (16393, 10, None, "IID('{D650CB6A-FA51-4F22-9F2C-F7900A4B304C}')") , ], 1 , 2 , 4 , 0 , 2320 , (3, 0, None, None) , 0 , )),
	(( 'NetGroups' , 'eSelectOnly' , 'eGroupType' , 'bRootGroupsOnly' , 'ppGroups' , 
			 ), 294, (294, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{DF8FC11D-AFBD-41A9-AF29-8821B9164732}')") , ], 1 , 2 , 4 , 0 , 2328 , (3, 0, None, None) , 0 , )),
	(( 'NetGroups' , 'eSelectOnly' , 'eGroupType' , 'bRootGroupsOnly' , 'ppGroups' , 
			 ), 294, (294, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{DF8FC11D-AFBD-41A9-AF29-8821B9164732}')") , ], 1 , 2 , 4 , 0 , 2328 , (3, 0, None, None) , 0 , )),
	(( 'PutNetGroup' , 'eGroupType' , 'sGroupName' , 'pGroup' , ), 295, (295, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 1 , 4 , 0 , 2336 , (3, 0, None, None) , 0 , )),
	(( 'FindNetGroup' , 'Name' , 'ppGroup' , ), 296, (296, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 1 , 4 , 0 , 2344 , (3, 0, None, None) , 0 , )),
	(( 'GetGroupSortInfo' , 'key' , 'ascending' , ), 297, (297, (), [ (16387, 2, None, None) , 
			 (16395, 2, None, None) , ], 1 , 1 , 4 , 0 , 2352 , (3, 0, None, None) , 0 , )),
	(( 'SetGroupSortInfo' , 'key' , 'ascending' , ), 298, (298, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 2360 , (3, 0, None, None) , 0 , )),
	(( 'ActiveGroup' , 'pVal' , ), 299, (299, (), [ (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 2 , 4 , 0 , 2368 , (3, 0, None, None) , 0 , )),
	(( 'ActiveGroup' , 'pVal' , ), 299, (299, (), [ (9, 1, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 4 , 4 , 0 , 2376 , (3, 0, None, None) , 0 , )),
	(( 'BusNets' , 'eSelectOnly' , 'ppNets' , ), 300, (300, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 2384 , (3, 0, None, None) , 64 , )),
	(( 'BusNets' , 'eSelectOnly' , 'ppNets' , ), 300, (300, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 2384 , (3, 0, None, None) , 64 , )),
	(( 'ConnectionCountOption' , 'sortChannelIndex' , 'eCountConnectionsBy' , ), 301, (301, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 2392 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionCountOption' , 'sortChannelIndex' , 'eCountConnectionsBy' , ), 301, (301, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2400 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionCountOption' , 'sortChannelIndex' , 'eCountConnectionsBy' , ), 301, (301, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2400 , (3, 0, None, None) , 0 , )),
	(( 'FindGroupByHierarchicalName' , 'Name' , 'ppGroup' , ), 302, (302, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 1 , 4 , 0 , 2408 , (3, 0, None, None) , 0 , )),
	(( 'DBCached' , '_db' , 'pVal' , ), 303, (303, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2416 , (3, 0, None, None) , 64 , )),
	(( 'DBCached' , '_db' , 'pVal' , ), 303, (303, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2424 , (3, 0, None, None) , 64 , )),
	(( 'DefaultRFGroup' , 'pVal' , ), 304, (304, (), [ (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 2 , 4 , 0 , 2432 , (3, 0, None, None) , 0 , )),
	(( 'Materials' , 'eMaterialType' , 'ppMaterials' , ), 305, (305, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{427B888F-9F9E-4408-B28C-8ECD4A5B696C}')") , ], 1 , 2 , 4 , 0 , 2440 , (3, 0, None, None) , 0 , )),
	(( 'Materials' , 'eMaterialType' , 'ppMaterials' , ), 305, (305, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{427B888F-9F9E-4408-B28C-8ECD4A5B696C}')") , ], 1 , 2 , 4 , 0 , 2440 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionCountNets' , '_nets' , ), 306, (306, (), [ (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 4 , 4 , 0 , 2448 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionCountNets' , '_nets' , ), 306, (306, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 2456 , (3, 0, None, None) , 0 , )),
	(( 'CreateSortChannel' , 'sortChannelIndex' , ), 307, (307, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2464 , (3, 0, None, None) , 0 , )),
	(( 'ReleaseSortChannel' , 'sortChannelIndex' , ), 308, (308, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 2472 , (3, 0, None, None) , 0 , )),
	(( 'PlanningGroupsBubbleShape' , 'eShape' , ), 309, (309, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 2480 , (3, 0, None, None) , 64 , )),
	(( 'PlanningGroupsBubbleShape' , 'eShape' , ), 309, (309, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 2488 , (3, 0, None, None) , 64 , )),
	(( 'ReservedAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppReservedAreas' , ), 310, (310, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{9C207921-4551-473E-94BC-1C7EDB8B5A1B}')") , ], 1 , 2 , 4 , 0 , 2496 , (3, 0, None, None) , 0 , )),
	(( 'ReservedAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppReservedAreas' , ), 310, (310, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{9C207921-4551-473E-94BC-1C7EDB8B5A1B}')") , ], 1 , 2 , 4 , 0 , 2496 , (3, 0, None, None) , 0 , )),
	(( 'CreateDefaultRFGroup' , 'pVal' , ), 311, (311, (), [ (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 1 , 4 , 0 , 2504 , (3, 0, None, None) , 0 , )),
	(( 'DisabledCreateBAChanges' , 'pDisabled' , ), 312, (312, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2512 , (3, 0, None, None) , 0 , )),
	(( 'DRCWindow' , 'ppDRCWindow' , ), 313, (313, (), [ (16393, 10, None, "IID('{B73D0A93-E85F-4B22-9CA8-E59101A04DC0}')") , ], 1 , 2 , 4 , 0 , 2520 , (3, 0, None, None) , 0 , )),
	(( 'UseSelectionFilter' , 'pVal' , ), 314, (314, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2528 , (3, 0, None, None) , 0 , )),
	(( 'UseSelectionFilter' , 'pVal' , ), 314, (314, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2536 , (3, 0, None, None) , 0 , )),
	(( 'FindNetGroupByHierarchicalName' , 'Name' , 'ppNetGroup' , ), 315, (315, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 1 , 4 , 0 , 2544 , (3, 0, None, None) , 0 , )),
	(( 'SelectedObjectIds' , 'pObjectFilter' , 'ids' , ), 316, (316, (), [ (9, 49, '0', "IID('{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}')") , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 2552 , (3, 0, None, None) , 0 , )),
	(( 'System3D' , 'ppDispatch' , ), 317, (317, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 2560 , (3, 0, None, None) , 0 , )),
	(( 'SwapPins' , 'pin1' , 'pin2' , ), 318, (318, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 1 , 4 , 0 , 2568 , (3, 0, None, None) , 0 , )),
	(( 'PutReuseArea' , 'sName' , 'dGraphicsWidth' , 'nPnts' , 'safeArrayOfPnts' , 
			 'eUnit' , 'ppReuseArea' , ), 319, (319, (), [ (8, 1, None, None) , (5, 1, None, None) , 
			 (3, 1, None, None) , (16396, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}')") , ], 1 , 1 , 4 , 0 , 2576 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreas' , 'eSelectOnly' , 'ePublishableState' , 'eReuseAreaState' , 'ppReuseAreas' , 
			 ), 320, (320, (), [ (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{3575F847-F278-44C6-BBC8-F79FA9E37CDB}')") , ], 1 , 2 , 4 , 0 , 2584 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreas' , 'eSelectOnly' , 'ePublishableState' , 'eReuseAreaState' , 'ppReuseAreas' , 
			 ), 320, (320, (), [ (3, 49, '0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{3575F847-F278-44C6-BBC8-F79FA9E37CDB}')") , ], 1 , 2 , 4 , 0 , 2584 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreaBlocks' , 'eSelectionType' , 'pReuseAreaBlockNames' , ), 321, (321, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2592 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreaBlocks' , 'eSelectionType' , 'pReuseAreaBlockNames' , ), 321, (321, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2592 , (3, 0, None, None) , 0 , )),
	(( 'PublishableReuseAreaNames' , 'pReuseAreaNames' , ), 322, (322, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2600 , (3, 0, None, None) , 0 , )),
	(( 'SaveAndPublishReuseBlocks' , 'ReuseAreaNames' , 'doPublishInSave' , 'pSucc' , ), 323, (323, (), [ 
			 (12, 49, '0', None) , (11, 49, 'True', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2608 , (3, 0, None, None) , 0 , )),
	(( 'GetNetclassNameForNet' , 'sNetName' , 'pNetClassName' , ), 324, (324, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 2616 , (3, 0, None, None) , 0 , )),
	(( 'Tracedrops' , 'eSelectOnly' , 'nLayerOnly' , 'ppTracedrops' , ), 325, (325, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')") , ], 1 , 2 , 4 , 0 , 2624 , (3, 0, None, None) , 0 , )),
	(( 'Tracedrops' , 'eSelectOnly' , 'nLayerOnly' , 'ppTracedrops' , ), 325, (325, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')") , ], 1 , 2 , 4 , 0 , 2624 , (3, 0, None, None) , 0 , )),
	(( 'MaskEngine' , 'ppMaskEngine' , ), 326, (326, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 2632 , (3, 0, None, None) , 0 , )),
	(( 'VerifyLayerMapChange' , 'vLayerMap' , 'nNumberOfNewLayers' , 'oRetCode' , ), 327, (327, (), [ 
			 (12, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2640 , (3, 0, None, None) , 64 , )),
	(( 'GetLayerStackupLayerType' , 'pLayerTypes' , ), 328, (328, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 2648 , (3, 0, None, None) , 64 , )),
	(( 'SyncLayerStackAndPlaneLayers' , 'pVal' , ), 329, (329, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2656 , (3, 0, None, None) , 64 , )),
	(( 'SyncLayerStackAndPlaneLayers' , 'pVal' , ), 329, (329, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2664 , (3, 0, None, None) , 64 , )),
	(( 'DataTag' , 'pDataTag' , ), 330, (330, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 2672 , (3, 0, None, None) , 0 , )),
	(( 'ExportHypRefFile' , ), 339, (339, (), [ ], 1 , 1 , 4 , 0 , 2680 , (3, 0, None, None) , 64 , )),
	(( 'DataTag' , 'pDataTag' , ), 330, (330, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 2688 , (3, 0, None, None) , 64 , )),
	(( 'PutBondPadEx' , 'x' , 'y' , 'dRotation' , 'Padstack' , 
			 'Net' , 'Side' , 'FixLock' , 'Unit' , 'eAngleUnit' , 
			 'BondPad' , ), 340, (340, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (3, 49, '1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}')") , ], 1 , 1 , 4 , 0 , 2696 , (3, 0, None, None) , 0 , )),
	(( 'PutShieldingNetGroup' , 'sGroupName' , 'pNet' , 'pNetClass' , 'ppGroup' , 
			 ), 341, (341, (), [ (8, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 1 , 4 , 0 , 2704 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingGroups' , 'ShieldingGroupName' , 'ppShieldNetGroups' , ), 342, (342, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{DF8FC11D-AFBD-41A9-AF29-8821B9164732}')") , ], 1 , 2 , 4 , 0 , 2712 , (3, 32, None, None) , 0 , )),
	(( 'ShieldingGroups' , 'ShieldingGroupName' , 'ppShieldNetGroups' , ), 342, (342, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{DF8FC11D-AFBD-41A9-AF29-8821B9164732}')") , ], 1 , 2 , 4 , 0 , 2712 , (3, 32, None, None) , 0 , )),
	(( 'CopySheet' , 'sheetName' , 'copySheetName' , 'numberOfCopies' , 'ppSheets' , 
			 ), 343, (343, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}')") , ], 1 , 1 , 4 , 0 , 2720 , (3, 0, None, None) , 0 , )),
	(( 'UseOnPreComponentsPlaced' , ), 344, (344, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 2728 , (3, 0, None, None) , 64 , )),
	(( 'WireBondGuides' , 'eSelectOnly' , 'ppWireBondGuides' , ), 345, (345, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{405FFFFA-4B23-4032-AC7F-4170EE726100}')") , ], 1 , 2 , 4 , 0 , 2736 , (3, 0, None, None) , 0 , )),
	(( 'WireBondGuides' , 'eSelectOnly' , 'ppWireBondGuides' , ), 345, (345, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{405FFFFA-4B23-4032-AC7F-4170EE726100}')") , ], 1 , 2 , 4 , 0 , 2736 , (3, 0, None, None) , 0 , )),
	(( 'PartNames' , 'NameRegularExpression' , 'bReservedForFutureUse' , 'PartNames' , ), 347, (347, (), [ 
			 (8, 49, "'*'", None) , (11, 49, 'False', None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2744 , (3, 32, None, None) , 0 , )),
	(( 'PartNames' , 'NameRegularExpression' , 'bReservedForFutureUse' , 'PartNames' , ), 347, (347, (), [ 
			 (8, 49, "'*'", None) , (11, 49, 'False', None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2744 , (3, 32, None, None) , 0 , )),
	(( 'HazardExplorer' , 'ppHExp' , ), 348, (348, (), [ (16393, 10, None, "IID('{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}')") , ], 1 , 2 , 4 , 0 , 2752 , (3, 0, None, None) , 0 , )),
	(( 'BendAreas' , 'eSelectOnly' , 'ppBendAreas' , ), 349, (349, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{6B76C06F-2E50-491B-B845-D70A57247DB0}')") , ], 1 , 2 , 4 , 0 , 2760 , (3, 0, None, None) , 0 , )),
	(( 'BendAreas' , 'eSelectOnly' , 'ppBendAreas' , ), 349, (349, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{6B76C06F-2E50-491B-B845-D70A57247DB0}')") , ], 1 , 2 , 4 , 0 , 2760 , (3, 0, None, None) , 0 , )),
	(( 'PutBendArea' , 'X1' , 'Y1' , 'X2' , 'Y2' , 
			 'dBendRadius' , 'BoardOutlineName' , 'dBendAngle' , 'BendOrigin' , 'dAreaTolerance' , 
			 'dLeftSlideDistance' , 'dRightSlideDistance' , 'eUnit' , 'eAngleUnit' , 'ppBendAreas' , 
			 ), 350, (350, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (8, 49, "''", None) , (5, 49, '90.0', None) , (3, 49, '0', None) , (5, 49, '0.0', None) , 
			 (5, 49, '0.0', None) , (5, 49, '0.0', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{6B76C06F-2E50-491B-B845-D70A57247DB0}')") , ], 1 , 1 , 4 , 0 , 2768 , (3, 32, None, None) , 0 , )),
	(( 'HangerProtectionNets' , 'bstrArray' , ), 351, (351, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2776 , (3, 0, None, None) , 0 , )),
	(( 'HangerProtectionNets' , 'bstrArray' , ), 351, (351, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 2784 , (3, 0, None, None) , 64 , )),
	(( 'ProhibitViaMergingNets' , 'bstrArray' , ), 352, (352, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2792 , (3, 0, None, None) , 0 , )),
	(( 'ProhibitViaMergingNets' , 'bstrArray' , ), 352, (352, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 2800 , (3, 0, None, None) , 64 , )),
	(( 'PutPlaneShapeAnyAngle' , 'nLayer' , 'nPnts' , 'safeArrayOfPnts' , 'pNet' , 
			 'bRouteObstruct' , 'eHatchPattern' , 'dHatchWidth' , 'dHatchDistance' , 'dHatchAngle' , 
			 'pComponent' , 'eUnit' , 'ppPlaneShape' , ), 353, (353, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (16396, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (11, 49, 'True', None) , (3, 49, '0', None) , 
			 (5, 49, '0.0', None) , (5, 49, '0.0', None) , (5, 49, '0.0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')") , ], 1 , 1 , 4 , 0 , 2808 , (3, 0, None, None) , 0 , )),
	(( 'PutWireBondGuide' , 'nPnts' , 'pSafeArrayOfPoints' , 'eUnit' , 'nLineWidth' , 
			 'sNetName' , 'Facement' , 'ppWireBondGuide' , ), 354, (354, (), [ (3, 1, None, None) , 
			 (16396, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 49, "''", None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}')") , ], 1 , 1 , 4 , 0 , 2816 , (3, 32, None, None) , 0 , )),
	(( 'SketchPlansInDesign' , 'bSketchPlansExist' , ), 355, (355, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 2824 , (3, 0, None, None) , 0 , )),
	(( 'RunIncrementalConnectivityUpdate' , ), 356, (356, (), [ ], 1 , 1 , 4 , 0 , 2832 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutlines' , 'eSelectOnly' , 'BoardOutlineName' , 'ppMultiBoardOutlines' , ), 357, (357, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{D69EB1A8-F5FC-4897-AD3C-676C50CF60AC}')") , ], 1 , 2 , 4 , 0 , 2840 , (3, 32, None, None) , 0 , )),
	(( 'MultiBoardOutlines' , 'eSelectOnly' , 'BoardOutlineName' , 'ppMultiBoardOutlines' , ), 357, (357, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{D69EB1A8-F5FC-4897-AD3C-676C50CF60AC}')") , ], 1 , 2 , 4 , 0 , 2840 , (3, 32, None, None) , 0 , )),
	(( 'PutMultiBoardOutline' , 'Name' , 'nPnts' , 'pSafeArrayOfPnts' , 'graphicsWidth' , 
			 'eMultiBoardOutlineType' , 'pLayerObjects' , 'eUnit' , 'ppMultiBoardOutline' , ), 358, (358, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 1 , 4 , 0 , 2848 , (3, 0, None, None) , 0 , )),
	(( 'FindMultiBoardOutlineByName' , 'BoardOutlineName' , 'ppMultiBoardOutline' , ), 359, (359, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 1 , 4 , 0 , 2856 , (3, 0, None, None) , 0 , )),
	(( 'PutFabricationLayerGfxEx' , 'eType' , 'eSide' , 'dGraphicsWidth' , 'nPnts' , 
			 'safeArrayOfPnts' , 'bFilled' , 'pLayerObject' , 'pComponent' , 'eUnit' , 
			 'ppGfx' , ), 360, (360, (), [ (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , 
			 (3, 1, None, None) , (16396, 1, None, None) , (11, 49, 'False', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')") , ], 1 , 1 , 4 , 0 , 2864 , (3, 0, None, None) , 0 , )),
	(( 'FindLayerById' , 'layerUniqueId' , 'pLayerObject' , ), 361, (361, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 1 , 4 , 0 , 2872 , (3, 0, None, None) , 64 , )),
	(( 'PutFabricationLayerTextOnLayer' , 'sString' , 'PositionX' , 'PositionY' , 'eTextType' , 
			 'eType' , 'eSide' , 'pLayerObject' , 'pComponent' , 'eUnit' , 
			 'Text' , ), 362, (362, (), [ (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 2880 , (3, 0, None, None) , 0 , )),
	(( 'CanDeleteLayer' , 'nLayerNdx' , 'eCanDelete' , ), 363, (363, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 2888 , (3, 0, None, None) , 64 , )),
	(( 'ReuseBlockNames' , 'includeFlattenedBlocks' , 'BlockNames' , ), 364, (364, (), [ (11, 49, 'False', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2896 , (3, 0, None, None) , 0 , )),
	(( 'ReuseBlockNames' , 'includeFlattenedBlocks' , 'BlockNames' , ), 364, (364, (), [ (11, 49, 'False', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 2896 , (3, 0, None, None) , 0 , )),
	(( 'IsModifiable' , 'pObj' , 'bModifiable' , ), 365, (365, (), [ (9, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2904 , (3, 0, None, None) , 0 , )),
	(( 'PutComponentEx' , 'sCellname' , 'bFromCentralLib' , 'dX' , 'dY' , 
			 'dRotation' , 'sRefDes' , 'sPartName' , 'nLayer' , 'bMirror' , 
			 'eFixType' , 'eUnit' , 'eAngleUnit' , 'ppComponent' , ), 366, (366, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (8, 49, "''", None) , (8, 49, "''", None) , (3, 49, '1', None) , (11, 49, 'False', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 2912 , (3, 32, None, None) , 0 , )),
	(( 'SketchPlans' , 'eSelectOnly' , 'nLayerOnly' , 'ppBusPaths' , ), 376, (376, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{2F037114-93ED-4C02-B835-6EC2ECD32E3C}')") , ], 1 , 2 , 4 , 0 , 2920 , (3, 0, None, None) , 0 , )),
	(( 'SketchPlans' , 'eSelectOnly' , 'nLayerOnly' , 'ppBusPaths' , ), 376, (376, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{2F037114-93ED-4C02-B835-6EC2ECD32E3C}')") , ], 1 , 2 , 4 , 0 , 2920 , (3, 0, None, None) , 0 , )),
	(( 'AreLocksAvailable' , 'lockMask' , 'result' , ), 377, (377, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2928 , (3, 0, None, None) , 64 , )),
	(( 'AcquireLocks' , 'lockMask' , ), 378, (378, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 2936 , (3, 0, None, None) , 64 , )),
	(( 'ReleaseLocks' , 'lockMask' , ), 379, (379, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 2944 , (3, 0, None, None) , 64 , )),
	(( 'Images' , 'eSelectOnly' , 'ppImages' , ), 380, (380, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E35CE437-C28B-4021-85A6-EEB20664B18B}')") , ], 1 , 2 , 4 , 0 , 2952 , (3, 0, None, None) , 0 , )),
	(( 'Images' , 'eSelectOnly' , 'ppImages' , ), 380, (380, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E35CE437-C28B-4021-85A6-EEB20664B18B}')") , ], 1 , 2 , 4 , 0 , 2952 , (3, 0, None, None) , 0 , )),
	(( 'PutImage' , 'sImagePath' , 'pLayerObject' , 'PositionX' , 'PositionY' , 
			 'eUnit' , 'ppImage' , ), 381, (381, (), [ (8, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{33704F23-0EB7-47D7-AB6F-F4337D5F823F}')") , ], 1 , 1 , 4 , 0 , 2960 , (3, 0, None, None) , 0 , )),
	(( 'PutMountingHoleEx' , 'dX' , 'dY' , 'sPadstackName' , 'bFromCentralLib' , 
			 'nDepth' , 'bMirrored' , 'pNet' , 'pComponent' , 'eFixed' , 
			 'eUnit' , 'ppMountingHole' , ), 382, (382, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (8, 1, None, None) , (11, 49, 'False', None) , (3, 49, '0', None) , (11, 49, 'False', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')") , ], 1 , 1 , 4 , 0 , 2968 , (3, 0, None, None) , 0 , )),
	(( 'OutgassingVoidsSettings' , 'ppOutgassingVoidsSettings' , ), 383, (383, (), [ (16393, 10, None, "IID('{B23A65B4-1FAE-4B6C-B55D-DF78F9D3735A}')") , ], 1 , 2 , 4 , 0 , 2976 , (3, 0, None, None) , 64 , )),
	(( 'ReportMixedShielding' , 'pSuccess' , ), 384, (384, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 2984 , (3, 0, None, None) , 0 , )),
	(( 'ComplexViaPatterns' , 'ppViaPatterns' , ), 385, (385, (), [ (16393, 10, None, "IID('{FE804AAF-0865-4606-BD7C-E26536BD81F9}')") , ], 1 , 2 , 4 , 0 , 2992 , (3, 0, None, None) , 0 , )),
	(( 'ComplexVias' , 'eSelectOnly' , 'ppVias' , ), 386, (386, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}')") , ], 1 , 2 , 4 , 0 , 3000 , (3, 0, None, None) , 0 , )),
	(( 'ComplexVias' , 'eSelectOnly' , 'ppVias' , ), 386, (386, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}')") , ], 1 , 2 , 4 , 0 , 3000 , (3, 0, None, None) , 0 , )),
	(( 'PutComplexVia' , 'sTemplName' , 'dX' , 'dY' , 'dAngle' , 
			 'pNet' , 'eUnit' , 'eAngleUnit' , 'pComplexVia' , ), 387, (387, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{DA0209B0-DA9A-4145-B0B5-8174B59835ED}')") , ], 1 , 1 , 4 , 0 , 3008 , (3, 0, None, None) , 0 , )),
	(( 'AddinControl' , 'sAddinName' , 'ppDispatch' , ), 388, (388, (), [ (8, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 3016 , (3, 0, None, None) , 0 , )),
	(( 'SketchPlanVias' , 'eSelectOnly' , 'ppSketchPlanVias' , ), 389, (389, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{DFE5ADA4-8560-4DCB-B850-D84BBEF0562B}')") , ], 1 , 2 , 4 , 0 , 3024 , (3, 0, None, None) , 0 , )),
	(( 'SketchPlanVias' , 'eSelectOnly' , 'ppSketchPlanVias' , ), 389, (389, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{DFE5ADA4-8560-4DCB-B850-D84BBEF0562B}')") , ], 1 , 2 , 4 , 0 , 3024 , (3, 0, None, None) , 0 , )),
	(( 'AddViaSchemes' , 'pSafeArrayOfData' , ), 390, (390, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 3032 , (3, 0, None, None) , 0 , )),
	(( 'PutAddViaUserScheme' , 'filename' , ), 391, (391, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 3040 , (3, 0, None, None) , 0 , )),
	(( 'AddViaSchemePath' , 'Scheme' , 'Path' , ), 392, (392, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 3048 , (3, 0, None, None) , 0 , )),
	(( 'ViaUtility' , 'pVal' , ), 393, (393, (), [ (16393, 10, None, "IID('{64167F8C-BA98-4CB3-B48F-9D5CDC0FDE50}')") , ], 1 , 2 , 4 , 0 , 3056 , (3, 0, None, None) , 0 , )),
	(( 'PutSketchPlan' , 'nLayer' , 'nPnts' , 'pSafeArrayOfPoints' , 'ppFromTos' , 
			 'eUnit' , 'ppSketchPlan' , ), 394, (394, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , (3, 49, '0', None) , (16393, 10, None, "IID('{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')") , ], 1 , 1 , 4 , 0 , 3064 , (3, 0, None, None) , 64 , )),
	(( 'StackupSchemes' , 'ppStackupSchemes' , ), 395, (395, (), [ (16393, 10, None, "IID('{E17DBE7F-A013-4E92-9F62-E20CE0AEB25D}')") , ], 1 , 2 , 4 , 0 , 3072 , (3, 0, None, None) , 0 , )),
	(( 'PutStackupScheme' , 'Name' , 'ppStackupScheme' , ), 396, (396, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{0D170493-3863-40A7-B222-C70CDC73B07A}')") , ], 1 , 1 , 4 , 0 , 3080 , (3, 0, None, None) , 0 , )),
	(( 'AllowLoopsNets' , 'ppNets' , ), 397, (397, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 3088 , (3, 0, None, None) , 0 , )),
	(( 'GenerateEDMOutputs' , 'result' , ), 398, (398, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 3096 , (3, 0, None, None) , 0 , )),
	(( 'IsObjectLoaded' , 'ObjectClass' , 'isLoaded' , ), 399, (399, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3104 , (3, 0, None, None) , 64 , )),
	(( 'BaseNetGroup' , 'ppGroup' , ), 400, (400, (), [ (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 2 , 4 , 0 , 3112 , (3, 0, None, None) , 64 , )),
	(( 'PutVirtualPinsOnLocations' , 'nPins' , 'pSafeArrayOfPoints' , 'pFromTo' , 'eUnit' , 
			 'ppPins' , ), 401, (401, (), [ (3, 1, None, None) , (16396, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 1 , 4 , 0 , 3120 , (3, 0, None, None) , 64 , )),
	(( 'PutVirtualPinsOnFromTos' , 'nPins' , 'pFromTos' , 'maxLengthVPtoVP' , 'maxLengthVPtoPin' , 
			 'eUnit' , 'ppPins' , ), 402, (402, (), [ (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , 
			 (5, 49, '-1.0', None) , (5, 49, '-1.0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 1 , 4 , 0 , 3128 , (3, 0, None, None) , 64 , )),
	(( 'ExportSccz' , 'sDestinationDir' , 'sLogFile' , ), 403, (403, (), [ (8, 1, None, None) , 
			 (8, 49, "'exportSccz'", None) , ], 1 , 1 , 4 , 0 , 3136 , (3, 32, None, None) , 64 , )),
	(( 'ExportHypRefFileEx' , ), 404, (404, (), [ ], 1 , 1 , 4 , 0 , 3144 , (3, 0, None, None) , 64 , )),
	(( 'ImportComplexViaUpdates' , ), 405, (405, (), [ ], 1 , 1 , 4 , 0 , 3152 , (3, 0, None, None) , 0 , )),
	(( 'DataManagementEntity' , 'ppEntity' , ), 406, (406, (), [ (16393, 10, None, "IID('{52D5D12D-8051-483C-8BDD-E9B195CE294D}')") , ], 1 , 2 , 4 , 0 , 3160 , (3, 0, None, None) , 0 , )),
	(( 'LogAnalyticsEvent' , 'sEventName' , 'eventProperties' , ), 407, (407, (), [ (8, 1, None, None) , 
			 (16396, 1, None, None) , ], 1 , 1 , 4 , 0 , 3168 , (3, 0, None, None) , 64 , )),
	(( 'PhysicalReuseLibraryCircuits' , 'ppPhysicalReuseLibraryCircuits' , ), 408, (408, (), [ (16393, 10, None, "IID('{4E0A6DAF-4C0D-415C-B43D-A6A1ED666FE6}')") , ], 1 , 2 , 4 , 0 , 3176 , (3, 0, None, None) , 0 , )),
	(( 'FindPhysicalReuseLibraryCircuit' , 'pName' , 'ppPhysicalReuseLibraryCircuit' , ), 409, (409, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}')") , ], 1 , 1 , 4 , 0 , 3184 , (3, 0, None, None) , 0 , )),
	(( 'UpdatePhysicalReuseInstances' , ), 410, (410, (), [ ], 1 , 1 , 4 , 0 , 3192 , (3, 0, None, None) , 0 , )),
	(( 'SaveAndCheckIn' , 'pComment' , 'pSucc' , ), 411, (411, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 3200 , (3, 0, None, None) , 0 , )),
	(( 'RespectComponentPlacementDRC' , 'bRespectComponentPlacementDRC' , ), 412, (412, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 3208 , (3, 0, None, None) , 64 , )),
	(( 'RespectComponentPlacementDRC' , 'bRespectComponentPlacementDRC' , ), 412, (412, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 3216 , (3, 0, None, None) , 64 , )),
	(( 'LoadPhysicalReuseLibraryCircuit' , 'pPath' , ), 413, (413, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 3224 , (3, 0, None, None) , 0 , )),
	(( 'FindGroupsByManagedBlockName' , 'ManagedBlockName' , 'bReturnAllInstances' , 'ppGroups' , ), 414, (414, (), [ 
			 (8, 1, None, None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')") , ], 1 , 1 , 4 , 0 , 3232 , (3, 0, None, None) , 0 , )),
	(( 'Tiebars' , 'eSelectOnly' , 'ppTiebars' , ), 415, (415, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{0B2A45D4-326B-493F-A476-16B04123A8CB}')") , ], 1 , 2 , 4 , 0 , 3240 , (3, 0, None, None) , 0 , )),
	(( 'Tiebars' , 'eSelectOnly' , 'ppTiebars' , ), 415, (415, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{0B2A45D4-326B-493F-A476-16B04123A8CB}')") , ], 1 , 2 , 4 , 0 , 3240 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDrillDrawing_vtables_dispatch_ = 1
IMGCPCBDrillDrawing_vtables_ = [
	(( 'Name' , 'pName' , ), 30, (30, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SideName' , 'pSideName' , ), 32, (32, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 33, (33, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IsDimensionGfx' , 'pDimensionGfx' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 35, (35, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 36, (36, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'FromLayer' , 'pLayer' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ToLayer' , 'pLayer' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 42, (42, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 44, (44, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 45, (45, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDrillDrawings_vtables_dispatch_ = 1
IMGCPCBDrillDrawings_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppDrillDrawing' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pDrillDrawing' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDrillTable_vtables_dispatch_ = 1
IMGCPCBDrillTable_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'dOriginX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'dOriginX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'dOriginY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'dOriginY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'Move' , 'dX' , 'dY' , 'eUnit' , ), 8, (8, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 11, (11, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IMGCPCBDrillTables_vtables_dispatch_ = 1
IMGCPCBDrillTables_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppDrillTable' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pDrillTable' , ), 30, (30, (), [ (9, 1, None, "IID('{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBEditBox_vtables_dispatch_ = 1
IMGCPCBEditBox_vtables_ = [
	(( 'Text' , 'pText' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'pText' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SetCursorPosition' , 'cursorPosition' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IMGCPCBEditorControl_vtables_dispatch_ = 1
IMGCPCBEditorControl_vtables_ = [
	(( 'AutoSave' , 'eRouteMode' , 'pIntervalInMin' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (3, 49, '60', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AutoSave' , 'eRouteMode' , 'pIntervalInMin' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (3, 49, '60', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AutoSave' , 'eRouteMode' , 'pIntervalInMin' , ), 0, (0, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RouteOptions' , 'eRouteOptions' , 'pRouteLevel' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RouteOptions' , 'eRouteOptions' , 'pRouteLevel' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RouteOptions' , 'eRouteOptions' , 'pRouteLevel' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RouteMaxVias' , 'pMaxVias' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'RouteMaxVias' , 'pMaxVias' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'RouteDoubleClickToAddVia' , 'pValue' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'RouteDoubleClickToAddVia' , 'pValue' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RoutePushAndShove' , 'ePushAndShove' , 'pVal' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RoutePushAndShove' , 'ePushAndShove' , 'pVal' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'RoutePushAndShove' , 'ePushAndShove' , 'pVal' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayerEnable' , 'nLayer' , 'pIsEnable' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayerEnable' , 'nLayer' , 'pIsEnable' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'RouteDirBias' , 'nLayer' , 'pDirBias' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RouteDirBias' , 'nLayer' , 'pDirBias' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayerPair' , 'nLayer' , 'pPairName' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayerPair' , 'nLayer' , 'pPairName' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayerDiffPair' , 'nLayer' , 'pDiffPair' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayerDiffPair' , 'nLayer' , 'pDiffPair' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveDRC' , 'pValue' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveDRC' , 'pValue' , ), 53, (53, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'PartsOnlineDRC' , 'pOnlineDRC' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'PartsOnlineDRC' , 'pOnlineDRC' , ), 9, (9, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PartsWhileMoving' , 'bOption' , 'pVal' , ), 10, (10, (), [ (3, 49, '1', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PartsWhileMoving' , 'bOption' , 'pVal' , ), 10, (10, (), [ (3, 49, '1', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PartsWhileMoving' , 'bOption' , 'pVal' , ), 10, (10, (), [ (3, 49, '1', None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'PartsGridSnap' , 'pGridSnap' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PartsGridSnap' , 'pGridSnap' , ), 11, (11, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PartsAlignment' , 'pPartAlign' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'PartsAlignment' , 'pPartAlign' , ), 12, (12, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PartsNumRotation' , 'pPartRot' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PartsNumRotation' , 'pPartRot' , ), 13, (13, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PartsRefdesHorzOrientation' , 'bIsTopLevelOrientation' , 'pHRules' , ), 14, (14, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PartsRefdesHorzOrientation' , 'bIsTopLevelOrientation' , 'pHRules' , ), 14, (14, (), [ (11, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PartsRefdesHorzOrientation' , 'bIsTopLevelOrientation' , 'pHRules' , ), 14, (14, (), [ (11, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PartsRefdesVertOrientation' , 'bIsTopLevelOrientation' , 'pVRules' , ), 15, (15, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PartsRefdesVertOrientation' , 'bIsTopLevelOrientation' , 'pVRules' , ), 15, (15, (), [ (11, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PartsRefdesVertOrientation' , 'bIsTopLevelOrientation' , 'pVRules' , ), 15, (15, (), [ (11, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'UseRefdesPartNumberOrientationRules' , 'pUseRefdesPartNumberOrientationrules' , ), 68, (68, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'UseRefdesPartNumberOrientationRules' , 'pUseRefdesPartNumberOrientationrules' , ), 68, (68, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PartCellRotation' , 'pCell' , 'eRotation' , 'pVal' , ), 16, (16, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')") , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PartCellRotation' , 'pCell' , 'eRotation' , 'pVal' , ), 16, (16, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')") , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Rooms' , 'ppRooms' , ), 17, (17, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'PutRoom' , 'sName' , 'ppRoom' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')") , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Clusters' , 'ppClusters' , ), 19, (19, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED78}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'PutCluster' , 'sName' , 'ppCluster' , ), 20, (20, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}')") , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 64 , )),
	(( 'Routes' , 'eRoute' , 'pVal' , ), 21, (21, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Routes' , 'eRoute' , 'pVal' , ), 21, (21, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Routes' , 'eRoute' , 'pVal' , ), 21, (21, (), [ (3, 49, '0', None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'RouteNetRules' , 'eNetRules' , 'pVal' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'RouteNetRules' , 'eNetRules' , 'pVal' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'RouteNetRules' , 'eNetRules' , 'pVal' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'RouteViasRules' , 'eViasRules' , 'pVal' , ), 23, (23, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'RouteViasRules' , 'eViasRules' , 'pVal' , ), 23, (23, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'RouteViasRules' , 'eViasRules' , 'pVal' , ), 23, (23, (), [ (3, 49, '0', None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'RouteViasMaxPinsPerPlane' , 'pMaxPinsPerPlaneLabel' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'RouteViasMaxPinsPerPlane' , 'pMaxPinsPerPlaneLabel' , ), 24, (24, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'RouteViasMaxFanoutOnRstrdLayers' , 'bIsInternal' , 'eUnit' , 'pValue' , ), 25, (25, (), [ 
			 (11, 49, 'True', None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'RouteViasMaxFanoutOnRstrdLayers' , 'bIsInternal' , 'eUnit' , 'pValue' , ), 25, (25, (), [ 
			 (11, 49, 'True', None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'RouteViasMaxFanoutOnRstrdLayers' , 'bIsInternal' , 'eUnit' , 'pValue' , ), 25, (25, (), [ 
			 (11, 49, 'True', None) , (3, 49, '0', None) , (5, 49, '0.0', None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'RoutePadEntry' , 'ePadEntry' , 'eUnit' , 'pVal' , ), 26, (26, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'RoutePadEntry' , 'ePadEntry' , 'eUnit' , 'pVal' , ), 26, (26, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'RouteExpandTraces' , 'pVal' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'RouteExpandTraces' , 'pVal' , ), 27, (27, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'RouteDiffPairParmVal' , 'eParm' , 'eUnit' , 'pDist' , ), 28, (28, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'RouteDiffPairParmVal' , 'eParm' , 'eUnit' , 'pDist' , ), 28, (28, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'RouteDiffPairBehavior' , 'pDiffPairBhvr' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'RouteDiffPairBehavior' , 'pDiffPairBhvr' , ), 29, (29, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'AdvancedGlossOption' , 'eGloss' , 'pVal' , ), 54, (54, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'AdvancedGlossOption' , 'eGloss' , 'pVal' , ), 54, (54, (), [ (3, 49, '0', None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'AdvancedGlossOption' , 'eGloss' , 'pVal' , ), 54, (54, (), [ (3, 49, '0', None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'PadEntryGlobalRules' , 'ePadShape' , 'eRules' , 'pVal' , ), 30, (30, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'PadEntryGlobalRules' , 'ePadShape' , 'eRules' , 'pVal' , ), 30, (30, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'PadEntryGlobalRules' , 'ePadShape' , 'eRules' , 'pVal' , ), 30, (30, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Pads' , 'ePadShape' , 'ppPads' , ), 31, (31, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')") , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Pads' , 'ePadShape' , 'ppPads' , ), 31, (31, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')") , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'SelPadsTracePosRules' , 'pPad' , 'ePadShape' , 'eRules' , 'pVal' , 
			 ), 32, (32, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'SelPadsTracePosRules' , 'pPad' , 'ePadShape' , 'eRules' , 'pVal' , 
			 ), 32, (32, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'SelPadsViaPosRules' , 'pPad' , 'ePadShape' , 'eRules' , 'pVal' , 
			 ), 33, (33, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'SelPadsViaPosRules' , 'pPad' , 'ePadShape' , 'eRules' , 'pVal' , 
			 ), 33, (33, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'PadEntryAllowedPadsViaSpan' , 'pPad' , 'ePadShape' , 'ppLayerRanges' , ), 34, (34, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , (3, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')") , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'PadEntryAllowedPadsViaSpan' , 'pPad' , 'ePadShape' , 'ppLayerRanges' , ), 34, (34, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')") , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'GridlessPadEntry' , 'pOption' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'GridlessPadEntry' , 'pOption' , ), 35, (35, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eType' , 'eUnit' , 'pVal' , ), 36, (36, (), [ 
			 (3, 49, '2', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eType' , 'eUnit' , 'pVal' , ), 36, (36, (), [ 
			 (3, 49, '2', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eType' , 'eUnit' , 'pVal' , ), 36, (36, (), [ 
			 (3, 49, '2', None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eType' , 'eUnit' , 'pVal' , ), 36, (36, (), [ 
			 (3, 49, '2', None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'IncludedFilterNets' , 'ppFilterNets' , ), 37, (37, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'ExcludedFilterNets' , 'ppFilterNets' , ), 38, (38, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'IncludeFilterNet' , 'pFilterNet' , ), 39, (39, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeFilterNet' , 'pFilterNet' , ), 40, (40, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 1 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'EnableFilter' , 'pOption' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'EnableFilter' , 'pOption' , ), 41, (41, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'FilterNetlineDisplay' , 'pOption' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'FilterNetlineDisplay' , 'pOption' , ), 42, (42, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'TuningPatternDist' , 'eTuningPattern' , 'eUnit' , 'pLength' , ), 43, (43, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'TuningPatternDist' , 'eTuningPattern' , 'eUnit' , 'pLength' , ), 43, (43, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 49, '0.0', None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'TuningPatternDist' , 'eTuningPattern' , 'eUnit' , 'pLength' , ), 43, (43, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 49, '0.0', None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'TuningAllowVias' , 'pOption' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'TuningAllowVias' , 'pOption' , ), 44, (44, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'TuningPatterns' , 'eTuningPatterns' , 'pOption' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'TuningPatterns' , 'eTuningPatterns' , 'pOption' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'TuningPatterns' , 'eTuningPatterns' , 'pOption' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'AutoTuneEffort' , 'pOption' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'AutoTuneEffort' , 'pOption' , ), 46, (46, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveAutoTuneLevel' , 'pOption' , ), 47, (47, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveAutoTuneLevel' , 'pOption' , ), 47, (47, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'AutoRouteAutoTuneLevel' , 'pOption' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'AutoRouteAutoTuneLevel' , 'pOption' , ), 48, (48, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'JumperGraphicOption' , 'eOption' , 'eUnit' , 'pLength' , ), 49, (49, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'JumperGraphicOption' , 'eOption' , 'eUnit' , 'pLength' , ), 49, (49, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 49, '0.0', None) , ], 1 , 4 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'JumperGraphicOption' , 'eOption' , 'eUnit' , 'pLength' , ), 49, (49, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 49, '0.0', None) , ], 1 , 4 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'JumperAngle' , 'pIsOrthogonal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'JumperAngle' , 'pIsOrthogonal' , ), 50, (50, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'JumperTable' , 'ppJumpers' , ), 51, (51, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7C}')") , ], 1 , 2 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 52, (52, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'GridMinNumberOfPins' , 'pNumberOfPins' , ), 55, (55, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'GridMinNumberOfPins' , 'pNumberOfPins' , ), 55, (55, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
	(( 'GridMountStyle' , 'pMountStyle' , ), 56, (56, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'GridMountStyle' , 'pMountStyle' , ), 56, (56, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'JumperPressSpaceBarToAdd' , 'pPressSpace' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'JumperPressSpaceBarToAdd' , 'pPressSpace' , ), 57, (57, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'AutoTuneReduceLength' , 'pOption' , ), 58, (58, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'AutoTuneReduceLength' , 'pOption' , ), 58, (58, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'AutoTuneAddLength' , 'pOption' , ), 59, (59, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'AutoTuneAddLength' , 'pOption' , ), 59, (59, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'RouteMinimizeSplitting' , 'pVal' , ), 60, (60, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'RouteMinimizeSplitting' , 'pVal' , ), 60, (60, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 0 , )),
	(( 'FitView' , 'pOption' , ), 61, (61, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'FitView' , 'pOption' , ), 61, (61, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 968 , (3, 0, None, None) , 0 , )),
	(( 'TuningPreventStairSteps' , 'pOption' , ), 62, (62, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'TuningPreventStairSteps' , 'pOption' , ), 62, (62, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
	(( 'FilterDisplayClassType' , 'pClassType' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 992 , (3, 0, None, None) , 0 , )),
	(( 'FilterDisplayClassType' , 'pClassType' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1000 , (3, 0, None, None) , 0 , )),
	(( 'EnableDynamicTeardrops' , 'pVal' , ), 64, (64, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1008 , (3, 0, None, None) , 0 , )),
	(( 'EnableDynamicTeardrops' , 'pVal' , ), 64, (64, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1016 , (3, 0, None, None) , 0 , )),
	(( 'EnableDynamicBreakoutTraces' , 'pVal' , ), 65, (65, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1024 , (3, 0, None, None) , 0 , )),
	(( 'EnableDynamicBreakoutTraces' , 'pVal' , ), 65, (65, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1032 , (3, 0, None, None) , 0 , )),
	(( 'CurveTraceRadius' , 'eUnit' , 'pVal' , ), 66, (66, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'CurveTraceRadius' , 'eUnit' , 'pVal' , ), 66, (66, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1040 , (3, 0, None, None) , 0 , )),
	(( 'CurveTraceRadius' , 'eUnit' , 'pVal' , ), 66, (66, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'CurveTraceRadius' , 'eUnit' , 'pVal' , ), 66, (66, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1048 , (3, 0, None, None) , 0 , )),
	(( 'CurveTraceMinRadius' , 'eUnit' , 'pVal' , ), 67, (67, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'CurveTraceMinRadius' , 'eUnit' , 'pVal' , ), 67, (67, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1056 , (3, 0, None, None) , 0 , )),
	(( 'CurveTraceMinRadius' , 'eUnit' , 'pVal' , ), 67, (67, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'CurveTraceMinRadius' , 'eUnit' , 'pVal' , ), 67, (67, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1064 , (3, 0, None, None) , 0 , )),
	(( 'GlossMode' , 'pGlossMode' , ), 69, (69, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1072 , (3, 0, None, None) , 0 , )),
	(( 'GlossMode' , 'pGlossMode' , ), 69, (69, (), [ (3, 49, '2', None) , ], 1 , 4 , 4 , 0 , 1080 , (3, 0, None, None) , 0 , )),
	(( 'PadEntryViaSpans' , 'ppLayerRanges' , ), 70, (70, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')") , ], 1 , 2 , 4 , 0 , 1088 , (3, 0, None, None) , 0 , )),
	(( 'RemoveRoom' , 'pRoom' , ), 71, (71, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1096 , (3, 0, None, None) , 0 , )),
	(( 'RemoveCluster' , 'pCluster' , ), 72, (72, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 1104 , (3, 0, None, None) , 0 , )),
	(( 'MaxPinsOnCmpForNetlineDisplay' , 'pMaxPins' , ), 73, (73, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1112 , (3, 0, None, None) , 0 , )),
	(( 'MaxPinsOnCmpForNetlineDisplay' , 'pMaxPins' , ), 73, (73, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1120 , (3, 0, None, None) , 0 , )),
	(( 'ExposedMetalClearances' , 'eSide' , 'eUnit' , 'pClearance' , ), 74, (74, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1128 , (3, 0, None, None) , 0 , )),
	(( 'ExposedMetalClearances' , 'eSide' , 'eUnit' , 'pClearance' , ), 74, (74, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1136 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveDRCEx' , 'bValue' , ), 75, (75, (), [ (11, 1, None, None) , (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 64 , )),
	(( 'InteractiveDRCEx' , 'bValue' , ), 75, (75, (), [ (11, 1, None, None) , (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 1144 , (3, 0, None, None) , 64 , )),
	(( 'TuningMiterRatio' , 'pRatio' , ), 76, (76, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1152 , (3, 0, None, None) , 0 , )),
	(( 'TuningMiterRatio' , 'pRatio' , ), 76, (76, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1160 , (3, 0, None, None) , 0 , )),
	(( 'TuningUseArcs' , 'pVal' , ), 77, (77, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1168 , (3, 0, None, None) , 0 , )),
	(( 'TuningUseArcs' , 'pVal' , ), 77, (77, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1176 , (3, 0, None, None) , 0 , )),
	(( 'UseCellLibrarySettings' , 'pVal' , ), 78, (78, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1184 , (3, 0, None, None) , 0 , )),
	(( 'UseCellLibrarySettings' , 'pVal' , ), 78, (78, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1192 , (3, 0, None, None) , 0 , )),
	(( 'JumperCreation' , 'bVal' , ), 79, (79, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1200 , (3, 0, None, None) , 0 , )),
	(( 'JumperCreation' , 'bVal' , ), 79, (79, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1208 , (3, 0, None, None) , 0 , )),
	(( 'PadEntryViaSpansForPad' , 'pPad' , 'ppLayerRanges' , ), 80, (80, (), [ (9, 0, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')") , ], 1 , 2 , 4 , 0 , 1216 , (3, 0, None, None) , 0 , )),
	(( 'PlowMouseUpStyle' , 'val' , ), 81, (81, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1224 , (3, 0, None, None) , 0 , )),
	(( 'PlowMouseUpStyle' , 'val' , ), 81, (81, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1232 , (3, 0, None, None) , 0 , )),
	(( 'PlowDragStyle' , 'val' , ), 82, (82, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1240 , (3, 0, None, None) , 0 , )),
	(( 'PlowDragStyle' , 'val' , ), 82, (82, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1248 , (3, 0, None, None) , 0 , )),
	(( 'PlowDRC' , 'val' , ), 83, (83, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1256 , (3, 0, None, None) , 0 , )),
	(( 'PlowDRC' , 'val' , ), 83, (83, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1264 , (3, 0, None, None) , 0 , )),
	(( 'PlowAngle' , 'val' , ), 84, (84, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1272 , (3, 0, None, None) , 0 , )),
	(( 'PlowAngle' , 'val' , ), 84, (84, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1280 , (3, 0, None, None) , 0 , )),
	(( 'PlowPreventLoops' , 'val' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1288 , (3, 0, None, None) , 0 , )),
	(( 'PlowPreventLoops' , 'val' , ), 85, (85, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1296 , (3, 0, None, None) , 0 , )),
	(( 'Allow45DegreeCorners' , 'val' , ), 86, (86, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1304 , (3, 0, None, None) , 0 , )),
	(( 'Allow45DegreeCorners' , 'val' , ), 86, (86, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1312 , (3, 0, None, None) , 0 , )),
	(( 'NetlineOptimizationModeForPlace' , 'pNetlineOptMode' , ), 87, (87, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1320 , (3, 0, None, None) , 0 , )),
	(( 'NetlineOptimizationModeForPlace' , 'pNetlineOptMode' , ), 87, (87, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 1328 , (3, 0, None, None) , 0 , )),
	(( 'NetlineOptimizationModeForMove' , 'pNetlineOptMode' , ), 88, (88, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1336 , (3, 0, None, None) , 0 , )),
	(( 'NetlineOptimizationModeForMove' , 'pNetlineOptMode' , ), 88, (88, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 1344 , (3, 0, None, None) , 0 , )),
	(( 'NetlineOptimizationModeForPlow' , 'pNetlineOptMode' , ), 89, (89, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1352 , (3, 0, None, None) , 0 , )),
	(( 'NetlineOptimizationModeForPlow' , 'pNetlineOptMode' , ), 89, (89, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 1360 , (3, 0, None, None) , 0 , )),
	(( 'AllowCellTextEdits' , 'pValue' , ), 90, (90, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1368 , (3, 0, None, None) , 0 , )),
	(( 'AllowCellTextEdits' , 'pValue' , ), 90, (90, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 1376 , (3, 0, None, None) , 0 , )),
	(( 'AllowCellGraphicsEdits' , 'pValue' , ), 91, (91, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1384 , (3, 0, None, None) , 0 , )),
	(( 'AllowCellGraphicsEdits' , 'pValue' , ), 91, (91, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 1392 , (3, 0, None, None) , 0 , )),
	(( 'PlowAngleShift' , 'pShift' , ), 92, (92, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 1400 , (3, 0, None, None) , 0 , )),
	(( 'PlowAngleShift' , 'pShift' , ), 92, (92, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 1408 , (3, 0, None, None) , 0 , )),
	(( 'SawtoothTuning' , 'pOption' , ), 93, (93, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1416 , (3, 0, None, None) , 0 , )),
	(( 'SawtoothTuning' , 'pOption' , ), 93, (93, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 1424 , (3, 0, None, None) , 0 , )),
	(( 'UncoupledTuning' , 'pOption' , ), 94, (94, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1432 , (3, 0, None, None) , 0 , )),
	(( 'UncoupledTuning' , 'pOption' , ), 94, (94, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 1440 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveRouteMode' , 'pInterRouteMode' , ), 95, (95, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1448 , (3, 0, None, None) , 0 , )),
	(( 'InteractiveRouteMode' , 'pInterRouteMode' , ), 95, (95, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1456 , (3, 0, None, None) , 0 , )),
	(( 'MoveFixedObject' , 'pOption' , ), 96, (96, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1464 , (3, 0, None, None) , 0 , )),
	(( 'MoveFixedObject' , 'pOption' , ), 96, (96, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 1472 , (3, 0, None, None) , 0 , )),
	(( 'Parts3DDRC' , 'p3DDRC' , ), 97, (97, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1480 , (3, 0, None, None) , 0 , )),
	(( 'Parts3DDRC' , 'p3DDRC' , ), 97, (97, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 1488 , (3, 0, None, None) , 0 , )),
	(( 'EDMOutputGenerationMode_PDF' , 'pOption' , ), 98, (98, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1496 , (3, 0, None, None) , 64 , )),
	(( 'EDMOutputGenerationMode_PDF' , 'pOption' , ), 98, (98, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1504 , (3, 0, None, None) , 64 , )),
	(( 'EDMOutputGenerationMode_ODB' , 'pOption' , ), 99, (99, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1512 , (3, 0, None, None) , 64 , )),
	(( 'EDMOutputGenerationMode_ODB' , 'pOption' , ), 99, (99, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1520 , (3, 0, None, None) , 64 , )),
	(( 'EDMOutputGenerationMode_BILL_OF_Material' , 'pOption' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1528 , (3, 0, None, None) , 64 , )),
	(( 'EDMOutputGenerationMode_BILL_OF_Material' , 'pOption' , ), 100, (100, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1536 , (3, 0, None, None) , 64 , )),
	(( 'SilverJumpersEnabled' , 'pEnabled' , ), 101, (101, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1544 , (3, 0, None, None) , 0 , )),
	(( 'SilverJumpersEnabled' , 'pEnabled' , ), 101, (101, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 1552 , (3, 0, None, None) , 0 , )),
	(( 'DraftGridChoices' , 'eUnit' , 'pChoices' , ), 102, (102, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'DraftGridChoices' , 'eUnit' , 'pChoices' , ), 102, (102, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 1560 , (3, 0, None, None) , 0 , )),
	(( 'GlossSpreadPercent' , 'eOption' , 'pValue' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1568 , (3, 0, None, None) , 0 , )),
	(( 'GlossSpreadPercent' , 'eOption' , 'pValue' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1576 , (3, 0, None, None) , 0 , )),
	(( 'PreferGlossSpread' , 'eOption' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1584 , (3, 0, None, None) , 0 , )),
	(( 'PreferGlossSpread' , 'eOption' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 1592 , (3, 0, None, None) , 0 , )),
	(( 'EnableGlossSpread' , 'eOption' , 'pValue' , ), 105, (105, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1600 , (3, 0, None, None) , 0 , )),
	(( 'EnableGlossSpread' , 'eOption' , 'pValue' , ), 105, (105, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 1608 , (3, 0, None, None) , 0 , )),
	(( 'ZAxisRouteDRC' , 'pValue' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1616 , (3, 0, None, None) , 0 , )),
	(( 'ZAxisRouteDRC' , 'pValue' , ), 106, (106, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 1624 , (3, 0, None, None) , 0 , )),
	(( 'BondWireDRC' , 'pBondWireDRC' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 1632 , (3, 0, None, None) , 0 , )),
	(( 'BondWireDRC' , 'pBondWireDRC' , ), 107, (107, (), [ (3, 49, '3', None) , ], 1 , 4 , 4 , 0 , 1640 , (3, 0, None, None) , 0 , )),
	(( 'BondFingerOverlap' , 'pValue' , ), 108, (108, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 1648 , (3, 0, None, None) , 0 , )),
	(( 'BondFingerOverlap' , 'pValue' , ), 108, (108, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 1656 , (3, 0, None, None) , 0 , )),
]

IMGCPCBEmbeddedPassiveShape_vtables_dispatch_ = 1
IMGCPCBEmbeddedPassiveShape_vtables_ = [
	(( 'Material' , 'MaterialName' , ), 41, (41, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapeType' , 'pType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 43, (43, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 45, (45, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 46, (46, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IMGCPCBEmbeddedPassiveShapes_vtables_dispatch_ = 1
IMGCPCBEmbeddedPassiveShapes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppEmbeddedPassiveShape' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pEmbeddedPassiveShape' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBEnvironment_vtables_dispatch_ = 1
IMGCPCBEnvironment_vtables_ = [
	(( 'ProjectFileFullName' , 'psName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'LocalLibraryFullName' , 'psName' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LocalCellLibraryFullName' , 'psName' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LocalPadstackLibraryFullName' , 'psName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'LocalPDBFullName' , 'psName' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CentralLibraryFullName' , 'psName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'UsingCES' , 'pUsingCES' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'iCDBDirectory' , 'psDir' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'RootBlock' , 'psBlock' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'LibrarySearchOrder' , 'eLibraryType' , 'pPartitionNames' , ), 10, (10, (), [ (3, 49, '4', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LibrarySearchOrder' , 'eLibraryType' , 'pPartitionNames' , ), 10, (10, (), [ (3, 49, '4', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LogFilesDirectory' , 'val' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'UsingDesignManager' , 'pUsingDesignManager' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'EDMApplicationID' , 'pAppId' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'EDMObjectID' , 'pObjId' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'LayoutDrivenDesignEnabled' , 'pLDDEnabled' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ShadowMovePartEnabled' , 'bVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'ShadowMovePartEnabled' , 'bVal' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'DesignName' , 'psDesignName' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DesignTechnology' , 'pDesignTechnology' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DesignTechnology' , 'pDesignTechnology' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ExportCCZOnSaveEnabled' , 'bVal' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ExportCCZOnSaveEnabled' , 'bVal' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'IsForeigniCDB' , 'pIsForeigniCDB' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 64 , )),
	(( 'IsUsingiCDB' , 'pIsUsingCDB' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 64 , )),
	(( 'BendRadiusLimitSingleLayer' , 'pValue' , ), 22, (22, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BendRadiusLimitSingleLayer' , 'pValue' , ), 22, (22, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BendRadiusLimitTwoLayer' , 'pValue' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'BendRadiusLimitTwoLayer' , 'pValue' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'BendRadiusLimitMultiLayer' , 'pValue' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BendRadiusLimitMultiLayer' , 'pValue' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BendRadiusLimitDynamicLayer' , 'pValue' , ), 25, (25, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BendRadiusLimitDynamicLayer' , 'pValue' , ), 25, (25, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'TestPointCheckingProcess' , 'pTestPointCheckingProcess' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'TestPointCheckingProcess' , 'pTestPointCheckingProcess' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeCCZOnSaveInstanceSpecificCells' , 'bVal' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeCCZOnSaveInstanceSpecificCells' , 'bVal' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PADSProFeatureType' , 'pPADSProFeatureType' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Open3dViewBasedOnLastViews' , 'bVal' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Open3dViewBasedOnLastViews' , 'bVal' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'CESRunning' , 'pCESRunning' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
	(( 'IsMultiBoardDrawing' , 'pIsMultiBoardDrawing' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'ProductLicenseLevel' , 'pProductLicenseLevel' , ), 32, (32, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IMGCPCBError_vtables_dispatch_ = 1
IMGCPCBError_vtables_ = [
	(( 'ErrorString' , 'sError' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Severity' , 'eErrorSeverity' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IMGCPCBErrors_vtables_dispatch_ = 1
IMGCPCBErrors_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppError' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pError' , ), 20, (20, (), [ (9, 1, None, "IID('{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBExpansionMode_vtables_dispatch_ = 1
IMGCPCBExpansionMode_vtables_ = [
	(( 'ViaExpansion' , 'pMode' , ), 0, (0, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'ViaExpansion' , 'pMode' , ), 0, (0, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 64 , )),
	(( 'TraceExpansion' , 'pMode' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'TraceExpansion' , 'pMode' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'HardObstacleExpansion' , 'pMode' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'HardObstacleExpansion' , 'pMode' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
]

IMGCPCBExtrema_vtables_dispatch_ = 1
IMGCPCBExtrema_vtables_ = [
	(( 'MinX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'MinX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'MinY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'MinY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'MaxX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MaxX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MaxY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MaxY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFabricationLayerGfx_vtables_dispatch_ = 1
IMGCPCBFabricationLayerGfx_vtables_ = [
	(( 'Name' , 'pName' , ), 30, (30, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SideName' , 'pSideName' , ), 32, (32, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 33, (33, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IsDimensionGfx' , 'pDimensionGfx' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 35, (35, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 36, (36, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ChangeType' , 'eObjectClass' , 'pLayerObject' , 'ppChangedObject' , ), 37, (37, (), [ 
			 (3, 0, None, None) , (9, 0, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 38, (38, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 39, (39, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 40, (40, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 43, (43, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 46, (46, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 46, (46, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 47, (47, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'Layer' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'StackupLayerName' , ), 49, (49, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'IsFlexGraphicsValid' , 'pValid' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFabricationLayerGfxs_vtables_dispatch_ = 1
IMGCPCBFabricationLayerGfxs_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppGfx' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pGfx' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFabricationLayerText_vtables_dispatch_ = 1
IMGCPCBFabricationLayerText_vtables_ = [
	(( 'Side' , 'pSide' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SideName' , 'pSideName' , ), 31, (31, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 32, (32, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'IsDimensionText' , 'pDimensionText' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SetTextType' , 'pType' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'ChangeType' , 'eObjectClass' , 'pLayerObject' , 'ppChangedText' , ), 35, (35, (), [ 
			 (3, 0, None, None) , (9, 0, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 36, (36, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 37, (37, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 38, (38, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 38, (38, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'Side' , 'pSide' , ), 30, (30, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 40, (40, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 41, (41, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 42, (42, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 44, (44, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 39, (39, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 46, (46, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pStackupLayer' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'pStackupLayerName' , ), 49, (49, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'IsFlexTextValid' , 'pValid' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'StrokeText' , 'units' , 'textPoints' , ), 51, (51, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFabricationLayerTexts_vtables_dispatch_ = 1
IMGCPCBFabricationLayerTexts_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppText' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pText' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFabricationPad_vtables_dispatch_ = 1
IMGCPCBFabricationPad_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Geometries' , 'ppGeometries' , ), 3, (3, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ShapeType' , 'eShapeType' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 6, (6, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AddGeometry' , 'PointsArray' , 'RemoveExisting' , 'Unit' , ), 7, (7, (), [ 
			 (16396, 1, None, None) , (11, 49, 'True', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'Layer' , 'pStackupLayer' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'pStackupLayerName' , ), 49, (49, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFabricationPads_vtables_dispatch_ = 1
IMGCPCBFabricationPads_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppFabricationPad' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pFabricationPad' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFiducial_vtables_dispatch_ = 1
IMGCPCBFiducial_vtables_ = [
	(( 'Side' , 'pSide' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 41, (41, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 32, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 41, (41, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 32, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 42, (42, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 44, (44, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 45, (45, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 46, (46, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 47, (47, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFiducials_vtables_dispatch_ = 1
IMGCPCBFiducials_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppFiducial' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pFiducial' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFormat_vtables_dispatch_ = 1
IMGCPCBFormat_vtables_ = [
	(( 'Bold' , 'pBold' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Italic' , 'pItalic' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Underline' , 'pUnderline' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PenWidth' , 'eUnit' , 'pPenWidth' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PenWidth' , 'eUnit' , 'pPenWidth' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Font' , 'pFont' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalJust' , 'pHorizontalJust' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'VerticalJust' , 'pVerticalJust' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'pMirror' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Attributes' , 'pAttributes' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Bold' , 'pBold' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Italic' , 'pItalic' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Underline' , 'pUnderline' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PenWidth' , 'eUnit' , 'pPenWidth' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PenWidth' , 'eUnit' , 'pPenWidth' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Font' , 'pFont' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'HorizontalJust' , 'pHorizontalJust' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'VerticalJust' , 'pVerticalJust' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'pMirror' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AspectRatio' , 'AspectRatio' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AspectRatio' , 'AspectRatio' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'IsVectorFont' , 'IsVectorFont' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 64 , )),
	(( 'LineSpacing' , 'LineSpacing' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'LineSpacing' , 'LineSpacing' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IMGCPCBFromTo_vtables_dispatch_ = 1
IMGCPCBFromTo_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelect' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelect' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlight' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlight' , ), 2, (2, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FromX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FromX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FromY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FromY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ToX' , 'eUnit' , 'pX' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ToX' , 'eUnit' , 'pX' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ToY' , 'eUnit' , 'pY' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ToY' , 'eUnit' , 'pY' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FromLayer' , 'pLayer' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ToLayer' , 'pLayer' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FromObject' , 'bPinsOnly' , 'ppObject' , ), 11, (11, (), [ (11, 49, 'True', None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'FromObject' , 'bPinsOnly' , 'ppObject' , ), 11, (11, (), [ (11, 49, 'True', None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ToObject' , 'bPinsOnly' , 'ppObject' , ), 12, (12, (), [ (11, 49, 'True', None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ToObject' , 'bPinsOnly' , 'ppObject' , ), 12, (12, (), [ (11, 49, 'True', None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'FromMarker' , 'Marker' , ), 14, (14, (), [ (16393, 10, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'ToMarker' , 'Marker' , ), 15, (15, (), [ (16393, 10, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 64 , )),
	(( 'IsFromSketchPlan' , 'pIsFromSketchPlan' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 64 , )),
	(( 'SketchPlan' , 'ppSketchPlan' , ), 17, (17, (), [ (16393, 10, None, "IID('{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 64 , )),
]

IMGCPCBFromTos_vtables_dispatch_ = 1
IMGCPCBFromTos_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppFromTo' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pFromTo' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AddFromTos' , 'FromTos' , ), 33, (33, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
]

IMGCPCBGeneratedPlane_vtables_dispatch_ = 1
IMGCPCBGeneratedPlane_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShape' , 'ppPlaneShape' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'ActualPlaneShape' , 'ppActualPlaneShape' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 47, (47, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 49, (49, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 50, (50, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'HatchWidth' , 'eUnit' , 'HatchWidth' , ), 51, (51, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'HatchWidth' , 'eUnit' , 'HatchWidth' , ), 51, (51, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'HatchDistance' , 'eUnit' , 'HatchDistance' , ), 52, (52, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'HatchDistance' , 'eUnit' , 'HatchDistance' , ), 52, (52, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'HatchAngle' , 'eUnit' , 'HatchAngle' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'HatchAngle' , 'eUnit' , 'HatchAngle' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'HatchPattern' , 'HatchPattern' , ), 54, (54, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'FillNonSquareHatchAreas' , 'FillNonSquareHatchAreas' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGeneratedPlanes_vtables_dispatch_ = 1
IMGCPCBGeneratedPlanes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppGeneratedPlane' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pGeneratedPlane' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGeometries_vtables_dispatch_ = 1
IMGCPCBGeometries_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppGeometry' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pGeometry' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGeometry_vtables_dispatch_ = 1
IMGCPCBGeometry_vtables_ = [
	(( 'PointsArray' , 'eUnit' , 'pSafeArrayOfPoints' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PointsArray' , 'eUnit' , 'pSafeArrayOfPoints' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DisplayFilled' , 'pFilled' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'pStyle' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsArced' , 'pArced' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'LineWidth' , 'eUnit' , 'pWidth' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LineWidth' , 'eUnit' , 'pWidth' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsCircle' , 'pIsCircle' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsRect' , 'pIsRect' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsClosed' , 'pIsClosed' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsPath' , 'pIsPath' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CircleX' , 'eUnit' , 'pCircleX' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CircleX' , 'eUnit' , 'pCircleX' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CircleY' , 'eUnit' , 'pCircleY' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CircleY' , 'eUnit' , 'pCircleY' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CircleR' , 'eUnit' , 'pCircleR' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'CircleR' , 'eUnit' , 'pCircleR' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'RectMinX' , 'eUnit' , 'pRectMinX' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RectMinX' , 'eUnit' , 'pRectMinX' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RectMinY' , 'eUnit' , 'pRectMinY' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RectMinY' , 'eUnit' , 'pRectMinY' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RectMaxX' , 'eUnit' , 'pRectMaxX' , ), 15, (15, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RectMaxX' , 'eUnit' , 'pRectMaxX' , ), 15, (15, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RectMaxY' , 'eUnit' , 'pRectMaxY' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RectMaxY' , 'eUnit' , 'pRectMaxY' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Attributes' , 'pAttributes' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'IsPointInside' , 'dX' , 'dY' , 'eUnit' , 'pInside' , 
			 ), 18, (18, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LineDisplayWidth' , 'eUnit' , 'pDisplayWidth' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LineDisplayWidth' , 'eUnit' , 'pDisplayWidth' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LineDisplayWidth' , 'eUnit' , 'pDisplayWidth' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'LineDisplayWidth' , 'eUnit' , 'pDisplayWidth' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'LineWidth' , 'eUnit' , 'pWidth' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LineWidth' , 'eUnit' , 'pWidth' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PointsArray' , 'eUnit' , 'pSafeArrayOfPoints' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PointsArray' , 'eUnit' , 'pSafeArrayOfPoints' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Filled' , 'Filled' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Cutouts' , 'ppCutouts' , ), 22, (22, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PutCutout' , 'pSafeArrayOfPoints' , 'eUnit' , 'ppObjects' , ), 23, (23, (), [ 
			 (16396, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Outline' , 'eUnit' , 'SafeArrayOfPoints' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Outline' , 'eUnit' , 'SafeArrayOfPoints' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Outline' , 'eUnit' , 'SafeArrayOfPoints' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Outline' , 'eUnit' , 'SafeArrayOfPoints' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'IsCutout' , 'IsCutout' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 26, (26, (), [ ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'pStyle' , ), 3, (3, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'IsPointEnclosed' , 'dX' , 'dY' , 'eUnit' , 'pEnclosed' , 
			 ), 27, (27, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'FillStyle' , 'pStyle' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'FillStyle' , 'pStyle' , ), 28, (28, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FilledEx' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGlobalDisplayControl_vtables_dispatch_ = 1
IMGCPCBGlobalDisplayControl_vtables_ = [
	(( 'DeferUpdate' , 'pDefer' , ), 0, (0, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'DeferUpdate' , 'pDefer' , ), 0, (0, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayerColor' , 'nLayer' , 'eType' , 'ppColorPattern' , ), 1, (1, (), [ 
			 (2, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 8 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayerColor' , 'nLayer' , 'eType' , 'ppColorPattern' , ), 1, (1, (), [ 
			 (2, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'GeneralItemsColor' , 'eType' , 'ppColorPattern' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 8 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'GeneralItemsColor' , 'eType' , 'ppColorPattern' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'MiscItems' , 'eType' , 'pOn' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'MiscItems' , 'eType' , 'pOn' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'MiscItemsColor' , 'eType' , 'ppColorPattern' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 8 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'MiscItemsColor' , 'eType' , 'ppColorPattern' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
	(( 'PartItemsColor' , 'eType' , 'eSide' , 'ppColorPattern' , ), 5, (5, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 8 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'PartItemsColor' , 'eType' , 'eSide' , 'ppColorPattern' , ), 5, (5, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'UserLayerColor' , 'Name' , 'ppColorPattern' , ), 6, (6, (), [ (8, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 8 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'UserLayerColor' , 'Name' , 'ppColorPattern' , ), 6, (6, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'NetColor' , 'bIsNetOrNetClass' , 'Name' , 'ppColorPattern' , ), 7, (7, (), [ 
			 (11, 1, None, None) , (8, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 8 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
	(( 'NetColor' , 'bIsNetOrNetClass' , 'Name' , 'ppColorPattern' , ), 7, (7, (), [ 
			 (11, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'Net' , 'bIsNetOrNetClass' , 'Name' , 'pOn' , ), 8, (8, (), [ 
			 (11, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'Net' , 'bIsNetOrNetClass' , 'Name' , 'pOn' , ), 8, (8, (), [ 
			 (11, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 64 , )),
	(( 'HazardsColor' , 'eType' , 'ppColor' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , ], 1 , 8 , 4 , 0 , 200 , (3, 0, None, None) , 64 , )),
	(( 'HazardsColor' , 'eType' , 'ppColor' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 64 , )),
	(( 'Hazards' , 'eType' , 'pOn' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 64 , )),
	(( 'Hazards' , 'eType' , 'pOn' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 64 , )),
	(( 'MaterialColor' , 'Name' , 'ppColorPattern' , ), 11, (11, (), [ (8, 1, None, None) , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 8 , 4 , 0 , 232 , (3, 0, None, None) , 64 , )),
	(( 'MaterialColor' , 'Name' , 'ppColorPattern' , ), 11, (11, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 64 , )),
	(( 'UserLayerDisplayLevel' , 'Name' , 'pLevel' , ), 12, (12, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerDisplayLevel' , 'Name' , 'pLevel' , ), 12, (12, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'RaiseUserLayerDisplayLevel' , 'Name' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'LowerUserLayerDisplayLevel' , 'Name' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PanSensitivity' , 'pPanSensitivity' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 64 , )),
	(( 'PanSensitivity' , 'pPanSensitivity' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'ColorHazardsBySeverity' , 'pOn' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
	(( 'ColorHazardsBySeverity' , 'pOn' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'FillSliverSymbols' , 'pOn' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'FillSliverSymbols' , 'pOn' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 64 , )),
	(( 'Color' , 'itemName' , 'ppColorPattern' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (9, 0, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'itemName' , 'ppColorPattern' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'SetParentChild' , 'parentName' , 'childName' , ), 19, (19, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 64 , )),
]

IMGCPCBGlueSpot_vtables_dispatch_ = 1
IMGCPCBGlueSpot_vtables_ = [
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Component' , 'ppRet' , ), 4, (4, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGlueSpots_vtables_dispatch_ = 1
IMGCPCBGlueSpots_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppGlueSpot' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pGlueSpot' , ), 33, (33, (), [ (9, 1, None, "IID('{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 35, (35, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGroup_vtables_dispatch_ = 1
IMGCPCBGroup_vtables_ = [
	(( 'Name' , 'sName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'sName' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RefPointX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RefPointX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RefPointX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RefPointX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RefPointY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'RefPointY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'RefPointY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'RefPointY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RefLayer' , 'pLayer' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RefLayer' , 'pLayer' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Pins' , 'Name' , 'ppPins' , ), 5, (5, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 32, None, None) , 0 , )),
	(( 'Pins' , 'Name' , 'ppPins' , ), 5, (5, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 32, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pAngle' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pAngle' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pAngle' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'Orientation' , 'eUnit' , 'pAngle' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
	(( 'CenterX' , 'eUnit' , 'pX' , ), 8, (8, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CenterX' , 'eUnit' , 'pX' , ), 8, (8, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CenterY' , 'eUnit' , 'pY' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CenterY' , 'eUnit' , 'pY' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Contours' , 'ppContours' , ), 11, (11, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'InsertionOutlines' , 'ppGfxs' , ), 12, (12, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ResistorShapes' , 'ppGfxs' , ), 13, (13, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PlacementObstructs' , 'ppPlacementObstructs' , ), 14, (14, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PlacementOutlines' , 'ppPlacementOutlines' , ), 15, (15, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'ppObstructs' , ), 16, (16, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'ppObstructs' , ), 16, (16, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Fiducials' , 'ppFiducials' , ), 17, (17, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'MountingHoles' , 'ppMountingHoles' , ), 18, (18, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'ppConductiveAreas' , ), 19, (19, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Traces' , 'ppTraces' , ), 20, (20, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShapes' , 'ppPlaneShapes' , ), 21, (21, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'ppVias' , ), 22, (22, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 23, (23, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'x' , 'y' , 'eUnit' , ), 24, (24, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DrillDrawings' , 'ppDrillDrawings' , ), 25, (25, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 26, (26, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 26, (26, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppGfxs' , 
			 ), 27, (27, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppGfxs' , 
			 ), 27, (27, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 28, (28, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 28, (28, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'ppTexts' , ), 29, (29, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'ppTexts' , ), 29, (29, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppTexts' , 
			 ), 30, (30, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppTexts' , 
			 ), 30, (30, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'ppTexts' , ), 31, (31, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'ppTexts' , ), 31, (31, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 32, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 32, (32, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 34, (34, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 35, (35, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 36, (36, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'pMirrored' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 38, (38, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 39, (39, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapes' , 'eSelectOnly' , 'eType' , 'nLayerOnly' , 'ppEPShapes' , 
			 ), 40, (40, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapes' , 'eSelectOnly' , 'eType' , 'nLayerOnly' , 'ppEPShapes' , 
			 ), 40, (40, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'MoveRelative' , 'OffsetX' , 'OffsetY' , 'eUnit' , ), 41, (41, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Document' , 'ppDocument' , ), 42, (42, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 43, (43, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 464 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 43, (43, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 464 , (3, 32, None, None) , 0 , )),
	(( 'Add' , 'pObj' , ), 44, (44, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Groups' , 'ppGroups' , ), 45, (45, (), [ (16393, 10, None, "IID('{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')") , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Components' , 'ppComponents' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'pObj' , ), 47, (47, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'RefPin' , 'ppPin' , ), 48, (48, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'RefPin' , 'ppPin' , ), 48, (48, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 8 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ActualPlaneShapes' , 'ppActualPlaneShapes' , ), 49, (49, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')") , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 64 , )),
	(( 'PadstackObjects' , 'eSelectType' , 'ppPadstackObjects' , ), 50, (50, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')") , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'PadstackObjects' , 'eSelectType' , 'ppPadstackObjects' , ), 50, (50, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')") , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'CloneInternal' , ), 51, (51, (), [ ], 1 , 1 , 4 , 0 , 536 , (3, 0, None, None) , 65 , )),
	(( 'MultiVias' , 'ppMultiVias' , ), 52, (52, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}')") , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 53, (53, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'ObjectType' , 'pType' , ), 54, (54, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 55, (55, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Frozen' , 'pFrozen' , ), 56, (56, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Frozen' , 'pFrozen' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 58, (58, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'AnchorFromDescendant' , 'pAnchorType' , ), 59, (59, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 64 , )),
	(( 'ExcludeFromLDDBackAnno' , ), 60, (60, (), [ ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 64 , )),
	(( 'Type' , 'pType' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Planned' , 'pPlanned' , ), 61, (61, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'Planned' , 'pPlanned' , ), 61, (61, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'State' , ), 62, (62, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'PutGroup' , 'eGroupType' , 'sGroupName' , 'pGroup' , ), 63, (63, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , 'pMarked' , ), 64, (64, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , 'pMarked' , ), 64, (64, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'HierarchicalName' , 'pName' , ), 65, (65, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'PlacementSide' , 'pSide' , ), 66, (66, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'PlacementSide' , 'pSide' , ), 66, (66, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 64 , )),
	(( 'PlacementLayer' , 'pLayer' , ), 67, (67, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'PlacementLayer' , 'pLayer' , ), 67, (67, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 64 , )),
	(( 'PlacementAngle' , 'eUnit' , 'pAngle' , ), 68, (68, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'PlacementAngle' , 'eUnit' , 'pAngle' , ), 68, (68, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'PlacementAngle' , 'eUnit' , 'pAngle' , ), 68, (68, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 64 , )),
	(( 'PlacementAngle' , 'eUnit' , 'pAngle' , ), 68, (68, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 64 , )),
	(( 'BubbleSelected' , 'pSelected' , ), 69, (69, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'Cell' , 'pVal' , ), 70, (70, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}')") , ], 1 , 2 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionCount' , 'pConnections' , ), 71, (71, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'ChildIds' , 'pObjectFilter' , 'ids' , ), 72, (72, (), [ (9, 49, '0', "IID('{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}')") , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'ChildIds' , 'pObjectFilter' , 'ids' , ), 72, (72, (), [ (9, 49, '0', "IID('{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}')") , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'PartStack' , 'pIsPartStack' , ), 73, (73, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'PartStack' , 'pIsPartStack' , ), 73, (73, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 74, (74, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 74, (74, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'FixLockFromDescendant' , 'pFixLockType' , ), 75, (75, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'CompoundRBName' , 'pName' , ), 76, (76, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'HierarchicalRBName' , 'pName' , ), 77, (77, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'GroupOutline' , 'pGroupOutline' , ), 78, (78, (), [ (16393, 10, None, "IID('{C35F5B71-49BA-4499-9EFB-7DDE542F9503}')") , ], 1 , 2 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'GroupPlannedOutline' , 'pGroupOutline' , ), 79, (79, (), [ (16393, 10, None, "IID('{C35F5B71-49BA-4499-9EFB-7DDE542F9503}')") , ], 1 , 2 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'NextRefDesForPlacement' , 'pName' , ), 80, (80, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'NextSubGroupForPlacement' , 'pName' , ), 81, (81, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'MovePlannedBubble' , 'x' , 'y' , 'eUnit' , ), 82, (82, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'ChildIdsForActiveSheet' , 'ids' , ), 83, (83, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 864 , (3, 0, None, None) , 64 , )),
	(( 'SandboxLock' , 'bVal' , ), 84, (84, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
	(( 'ReservedByHierarchy' , 'bVal' , ), 85, (85, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'ComplexVias' , 'ppVias' , ), 86, (86, (), [ (16393, 10, None, "IID('{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}')") , ], 1 , 2 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'IsPhysicalReuseSourcePublished' , 'bPublished' , ), 87, (87, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'IsPhysicalReuseInstanceOutOfDate' , 'bOutOfDate' , ), 88, (88, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'PublishPhysicalReuseSource' , 'bSuppressMsg' , 'ppPhysicalReuseCircuitSourceGroup' , ), 89, (89, (), [ (11, 49, 'False', None) , 
			 (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 1 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'PhysicalReuseTimestamp' , 'pTimeStamp' , ), 90, (90, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'UpdatePhysicalReuseInstance' , ), 91, (91, (), [ ], 1 , 1 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'CanAddToPhRS' , 'pObj' , 'suppressMsg' , 'canAdd' , ), 92, (92, (), [ 
			 (9, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'CanRemoveFromPhRS' , 'pObj' , 'suppressMsg' , 'canRemove' , ), 93, (93, (), [ 
			 (9, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'pMirrored' , ), 37, (37, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 952 , (3, 0, None, None) , 64 , )),
	(( 'MirroredHV' , 'pMirroredHV' , ), 94, (94, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 960 , (3, 0, None, None) , 0 , )),
	(( 'IsDesignObject' , 'bDesignObject' , ), 95, (95, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 968 , (3, 0, None, None) , 64 , )),
	(( 'ManagedBlockVersion' , 'pManagedBlockVersion' , ), 96, (96, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 976 , (3, 0, None, None) , 0 , )),
	(( 'DeletePhRInstance' , ), 97, (97, (), [ ], 1 , 1 , 4 , 0 , 984 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGroupOutline_vtables_dispatch_ = 1
IMGCPCBGroupOutline_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 42, (42, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Planned' , 'pPlanned' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 44, (44, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGroups_vtables_dispatch_ = 1
IMGCPCBGroups_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppCmp' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pGroup' , ), 30, (30, (), [ (9, 1, None, "IID('{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Place' , 'eMethod' , ), 35, (35, (), [ (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PublishPhysicalReuseSources' , 'bSuppressMsg' , ), 36, (36, (), [ (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IMGCPCBGui_vtables_dispatch_ = 1
IMGCPCBGui_vtables_ = [
	(( 'StatusBarText' , 'bValue' , 'eField' , ), 1, (1, (), [ (8, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Display' , 'Text' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PopToFront' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ProcessCommand' , 'vCommand' , 'bSynchronous' , 'pSuccess' , ), 5, (5, (), [ 
			 (12, 1, None, None) , (11, 49, 'True', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ProcessEvent' , 'nFlags' , 'dX' , 'dY' , 'eUnit' , 
			 ), 6, (6, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'ProcessPointer' , 'eButton' , 'dX' , 'dY' , 'eUnit' , 
			 ), 7, (7, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'ProcessUserInput' , 'bAllow' , ), 8, (8, (), [ (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'FindDialog' , 'vDialog' , 'ppDialog' , ), 9, (9, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5C}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RegisterCommand' , 'cmdName' , 'bTerminateCurrent' , 'ppCmd' , ), 10, (10, (), [ 
			 (8, 1, None, None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED30}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TerminateCommand' , ), 11, (11, (), [ ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SuppressTrivialDialogs' , 'bSuppress' , ), 12, (12, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SuppressNotepadDialogs' , ), 13, (13, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SingleThreaded' , ), 14, (14, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'ActivePlaceLayer' , 'pLayer' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ActivePlaceLayer' , 'pLayer' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ActiveRouteLayer' , 'pLayer' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ActiveRouteLayer' , 'pLayer' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ActiveMode' , 'pMode' , ), 17, (17, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ActiveMode' , 'pMode' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'CursorBusy' , 'bCursorBusy' , ), 18, (18, (), [ (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'InputBox' , 'sDescription' , 'sTitle' , 'sDefault' , 'pReturn' , 
			 ), 19, (19, (), [ (8, 1, None, None) , (8, 49, "''", None) , (8, 49, "''", None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 32, None, None) , 0 , )),
	(( 'ProgressBarInitialize' , 'bDisplay' , 'BCaption' , 'nMaxVal' , 'nMinVal' , 
			 ), 20, (20, (), [ (11, 49, 'True', None) , (8, 49, "'Progress'", None) , (3, 49, '100', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 224 , (3, 32, None, None) , 0 , )),
	(( 'ProgressBar' , 'val' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'HWND' , 'pHWND' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'CommandBars' , 'pVal' , ), 24, (24, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Bindings' , 'BTableName' , 'pVal' , ), 25, (25, (), [ (8, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ShowWindow' , 'eWS' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ProcessKeyin' , 'KeyinString' , ), 27, (27, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'CommandListener' , 'ppListner' , ), 28, (28, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA7}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DisplayActionKeybar' , 'keybarName' , 'State' , 'bSuccess' , ), 29, (29, (), [ 
			 (8, 1, None, None) , (3, 49, '0', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'KeyInCommandText' , 'val' , ), 30, (30, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'KeyInCommandText' , 'val' , ), 30, (30, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Cursor' , 'cType' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 64 , )),
	(( 'Cursor' , 'cType' , ), 31, (31, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'DisplayMessage' , 'Message' , 'ReservedForFutureUse' , 'Type' , 'Icon' , 
			 'DefaultButton' , 'Answer' , ), 32, (32, (), [ (8, 1, None, None) , (8, 49, "''", None) , 
			 (3, 49, '1', None) , (3, 49, '3', None) , (3, 49, '1', None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 32, None, None) , 0 , )),
	(( 'TerminateCommandEx' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ProcessMouseEvent' , 'eMouseEvent' , 'eMouseButton' , 'x' , 'y' , 
			 'eKeyboardFlags' , 'eUnit' , ), 34, (34, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'ProcessKeyPressEvent' , 'sKeyName' , 'eModifiers' , ), 35, (35, (), [ (8, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'DisableControl' , 'ControlId' , 'DialogId' , 'ModuleId' , ), 36, (36, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
	(( 'Settings' , 'ppVal' , ), 37, (37, (), [ (16393, 10, None, "IID('{AA01E86F-E470-4E69-AAB6-AE16DC30E3D0}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DisplayPropertiesDialog' , 'bDisplay' , ), 38, (38, (), [ (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 64 , )),
	(( 'SuppressVariantDataOutOfDateDialog' , ), 39, (39, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 64 , )),
	(( 'PutToCursor' , '_objects' , ), 40, (40, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 64 , )),
	(( 'IsActionObjectCmd' , 'pActObjCmd' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'XYReadoutText' , 'val' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'XYReadoutText' , 'val' , ), 42, (42, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'MeasureReadoutText' , 'val' , ), 43, (43, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'MeasureReadoutText' , 'val' , ), 43, (43, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'SuppressTrivialDialogs' , 'bSuppress' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'BeginDragMoveFromSelection' , 'nFlags' , 'dX' , 'dY' , 'eUnit' , 
			 'moveOnce' , 'selectWhenDone' , ), 44, (44, (), [ (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 64 , )),
	(( 'BeginMoveFromSelection' , 'nFlags' , 'dX' , 'dY' , 'eUnit' , 
			 'moveOnce' , 'selectWhenDone' , ), 45, (45, (), [ (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 64 , )),
	(( 'DirectoryBrowser' , 'initialDirectory' , 'title' , 'outputDirectory' , ), 46, (46, (), [ 
			 (8, 49, "''", None) , (8, 49, "'Select Directory'", None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 32, None, None) , 0 , )),
	(( 'FileBrowser' , 'OpenFileDialog' , 'initialDirectory' , 'filter' , 'Extension' , 
			 'filename' , 'eOptions' , 'title' , 'OutputFileName' , ), 47, (47, (), [ 
			 (11, 49, 'True', None) , (8, 49, "''", None) , (8, 49, "'All Files (*.*)|*.*||'", None) , (8, 49, "''", None) , (8, 49, "''", None) , 
			 (3, 49, '14', None) , (8, 49, "'Select File'", None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 32, None, None) , 0 , )),
	(( 'MainWindowTitle' , 'val' , ), 48, (48, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 64 , )),
]

IMGCPCBHThing_vtables_dispatch_ = 0
IMGCPCBHThing_vtables_ = [
	(( 'Selected' , 'pSelected' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 24 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( 'Pins' , 'Name' , 'ppPins' , ), 2, (2, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 40 , (3, 32, None, None) , 0 , )),
	(( 'Pins' , 'Name' , 'ppPins' , ), 2, (2, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 40 , (3, 32, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 48 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'CenterX' , 'eUnit' , 'pX' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CenterX' , 'eUnit' , 'pX' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CenterY' , 'eUnit' , 'pY' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CenterY' , 'eUnit' , 'pY' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Contours' , 'ppContours' , ), 7, (7, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'InsertionOutlines' , 'ppGfxs' , ), 8, (8, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ResistorShapes' , 'ppGfxs' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PlacementObstructs' , 'ppPlacementObstructs' , ), 10, (10, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PlacementOutlines' , 'ppPlacementOutlines' , ), 11, (11, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'ppObstructs' , ), 12, (12, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Obstructs' , 'eSelectType' , 'ppObstructs' , ), 12, (12, (), [ (3, 49, '-1', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Fiducials' , 'ppFiducials' , ), 13, (13, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'MountingHoles' , 'ppMountingHoles' , ), 14, (14, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'ppConductiveAreas' , ), 15, (15, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Traces' , 'ppTraces' , ), 16, (16, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShapes' , 'ppPlaneShapes' , ), 17, (17, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'ppVias' , ), 18, (18, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 19, (19, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'dX' , 'dY' , 'eUnit' , ), 20, (20, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DrillDrawings' , 'ppDrillDrawings' , ), 21, (21, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 22, (22, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 22, (22, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 64 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppGfxs' , 
			 ), 23, (23, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppGfxs' , 
			 ), 23, (23, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 24, (24, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 24, (24, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'ppTexts' , ), 25, (25, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'ppTexts' , ), 25, (25, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppTexts' , 
			 ), 26, (26, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppTexts' , 
			 ), 26, (26, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'ppTexts' , ), 27, (27, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'ppTexts' , ), 27, (27, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 32, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 28, (28, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 29, (29, (), [ ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'pMirrored' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 32, (32, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 33, (33, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapes' , 'eSelectOnly' , 'eType' , 'nLayerOnly' , 'ppEPShapes' , 
			 ), 34, (34, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'EmbeddedPassiveShapes' , 'eSelectOnly' , 'eType' , 'nLayerOnly' , 'ppEPShapes' , 
			 ), 34, (34, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'MoveRelative' , 'OffsetX' , 'OffsetY' , 'eUnit' , ), 35, (35, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Document' , 'ppDocument' , ), 36, (36, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 37, (37, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 37, (37, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 32, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 38, (38, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'CloneInternal' , ), 39, (39, (), [ ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 65 , )),
	(( 'RuleAreas' , 'ppGfxs' , ), 40, (40, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ObjectType' , 'pType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 43, (43, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 45, (45, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'PutPropertyEx' , 'sName' , 'sValue' , 'sSource' , 'ppProperty' , 
			 ), 46, (46, (), [ (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 64 , )),
	(( 'Side' , 'pSide' , ), 47, (47, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 64 , )),
	(( 'Place' , 'dX' , 'dY' , 'dOrientation' , 'bTop' , 
			 'eFixType' , 'eUnit' , 'eAngleUnit' , ), 48, (48, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 64 , )),
	(( 'PlaceEx' , 'dX' , 'dY' , 'dOrientation' , 'Layer' , 
			 'eFixType' , 'eUnit' , 'eAngleUnit' , ), 49, (49, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 64 , )),
]

IMGCPCBHazard_vtables_dispatch_ = 1
IMGCPCBHazard_vtables_ = [
	(( 'Description' , 'pDescription' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Objects' , 'pObjects' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Accepted' , 'pAccepted' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AcceptComment' , 'pAcceptComment' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AcceptDate' , 'pAcceptDate' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AcceptUser' , 'pAcceptUser' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Accept' , 'pComment' , ), 7, (7, (), [ (8, 49, "''", None) , ], 1 , 1 , 4 , 0 , 112 , (3, 32, None, None) , 0 , )),
	(( 'UnAccept' , ), 8, (8, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'x' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'x' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'y' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'y' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FirstObjectPositionX' , 'eUnit' , 'x' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'FirstObjectPositionX' , 'eUnit' , 'x' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'FirstObjectPositionY' , 'eUnit' , 'y' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FirstObjectPositionY' , 'eUnit' , 'y' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SecondObjectPositionX' , 'eUnit' , 'x' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SecondObjectPositionX' , 'eUnit' , 'x' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SecondObjectPositionY' , 'eUnit' , 'y' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SecondObjectPositionY' , 'eUnit' , 'y' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Severity' , 'pSeverity' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ActualClearance' , 'eUnit' , 'pActualClearance' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ActualClearance' , 'eUnit' , 'pActualClearance' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'RequiredClearance' , 'eUnit' , 'pRequiredClearance' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RequiredClearance' , 'eUnit' , 'pRequiredClearance' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TypeSpecificData' , 'ppTypeSpecificData' , ), 18, (18, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IMGCPCBHazardExplorer_vtables_dispatch_ = 1
IMGCPCBHazardExplorer_vtables_ = [
	(( 'Document' , 'ppDoc' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RegisterHazardType' , 'ppHzdType' , 'ppHzdTreeItem' , ), 2, (2, (), [ (9, 1, None, None) , 
			 (16393, 10, None, "IID('{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}')") , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'UnregisterHazardType' , 'ppHzdType' , ), 3, (3, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FitHazardOnRowSelection' , 'pSelect' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SelectObjOnRowSelection' , 'pSelect' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'HightlightOnRowSelection' , 'pSelect' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SelectSymbolOnRowSelection' , 'pSelect' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ClearGrid' , ), 8, (8, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ResetGrid' , 'header' , 'clickable' , ), 9, (9, (), [ (12, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GridData' , ), 10, (10, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UpdateRows' , 'add_replace' , 'del' , ), 11, (11, (), [ (12, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AddOrReplaceRows' , 'data' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DeleteRows' , 'ids' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RowSelected' , 'hzd_id' , 'sel' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RowSelected' , 'hzd_id' , 'sel' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SelectedRows' , 'ids' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SelectedRows' , 'ids' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'RowAccepted' , 'hzd_id' , 'Accepted' , ), 16, (16, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RowAccepted' , 'hzd_id' , 'Accepted' , ), 16, (16, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AcceptedRows' , 'ids' , ), 17, (17, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AcceptedRows' , 'ids' , ), 17, (17, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AddDRCOptionMenuItem' , 'Name' , ), 18, (18, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ActiveTreeItem' , ), 19, (19, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IMGCPCBHazardSymbol_vtables_dispatch_ = 1
IMGCPCBHazardSymbol_vtables_ = [
	(( 'HazardTreeItem' , 'pHazardTreeItem' , ), 0, (0, (), [ (16393, 10, None, "IID('{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'HazardID' , 'pHazardID' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'pColor' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'pColor' , ), 2, (2, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBHazardTreeItem_vtables_dispatch_ = 1
IMGCPCBHazardTreeItem_vtables_ = [
	(( 'HazardExplorer' , 'ppHzdExpl' , ), 0, (0, (), [ (16393, 10, None, "IID('{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Checked' , 'pChecked' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'pColor' , ), 3, (3, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Stat' , 'Count' , 'delta' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AddRMBMenuItem' , 'Name' , 'checkbox' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PutSymbol' , 'hzd_id' , 'x' , 'y' , 'eUnit' , 
			 'ppHzdSymbol' , ), 6, (6, (), [ (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{8FEE430F-5A97-4BAF-8D0D-E931AF9CA2DA}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'PutSpecialSymbol' , 'hzd_id' , 'x' , 'y' , 'dWidth' , 
			 'nPnts' , 'pSafeArrayOfPoints' , 'eUnit' , 'ppHzdSymbol' , ), 7, (7, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (16396, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{8FEE430F-5A97-4BAF-8D0D-E931AF9CA2DA}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'ColorObject' , 'hzd_id' , 'pObj' , 'pColor' , ), 8, (8, (), [ 
			 (8, 1, None, None) , (9, 1, None, None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'ColorSegment' , 'hzd_id' , 'pObj' , 'X1' , 'Y1' , 
			 'X2' , 'Y2' , 'eUnit' , 'pColor' , ), 9, (9, (), [ 
			 (8, 1, None, None) , (9, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 49, '0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
]

IMGCPCBHazards_vtables_dispatch_ = 1
IMGCPCBHazards_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppHazard' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pHazard' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBHole_vtables_dispatch_ = 1
IMGCPCBHole_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DrillSize' , 'eUnit' , 'pSize' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DrillSize' , 'eUnit' , 'pSize' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Plated' , 'pPlated' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Geometries' , 'ppGeometries' , ), 6, (6, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ShapeType' , 'eShapeType' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBHoles_vtables_dispatch_ = 1
IMGCPCBHoles_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppHole' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pHole' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBIDFImport_vtables_dispatch_ = 1
IMGCPCBIDFImport_vtables_ = [
	(( 'Go' , ), 1, (1, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Errors' , 'ppErrors' , ), 2, (2, (), [ (16393, 10, None, "IID('{E7852DF4-9F9F-456E-8861-17AF75A62595}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'BoardFile' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ContourHoleName' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'HoleX' , 'eUnit' , 'x' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'HoleX' , 'eUnit' , 'x' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'HoleY' , 'eUnit' , 'y' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'HoleY' , 'eUnit' , 'y' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'HoleDiameter' , 'eUnit' , 'val' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'HoleDiameter' , 'eUnit' , 'val' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'HolePadstackOptions' , 'bstrArray' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'HoleAssignmentRequired' , 'val' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AssignHole' , 'padstackName' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CreateMissingMountingHoles' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'NoToolAssignmentToContours' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'UpdateComponentPlacementStatus' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ForceUpdateOfFixedMCADComponents' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ReplaceRouteObstructs' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MapOtherOutlinesToUserLayers' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'MapContoursToSlotHoleMountingHole' , ), 17, (17, (), [ (11, 0, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ImportMechanicalComponent' , ), 18, (18, (), [ (11, 0, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ReplaceOnlyExternalPlacementObstructs' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'MapToolingHoleToMountingHole' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ProcessOtherOutlineCutouts' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'PanelFile' , ), 22, (22, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'CreateMissingPanelHoles' , ), 23, (23, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ReplaceOnlyExternalPanelObstructs' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IMGCPCBImage_vtables_dispatch_ = 1
IMGCPCBImage_vtables_ = [
	(( 'ImagePath' , 'pImagePath' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'ppGeometry' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LayerObject' , 'ppLayerObject' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LayerObject' , 'ppLayerObject' , ), 2, (2, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 8 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 6, (6, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'x' , 'y' , 'eUnit' , ), 10, (10, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'eUnit' , 'pWidth' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'eUnit' , 'pWidth' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'eUnit' , 'pWidth' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'eUnit' , 'pWidth' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IMGCPCBImages_vtables_dispatch_ = 1
IMGCPCBImages_vtables_ = [
	(( 'Item' , 'Index' , 'ppImage' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{33704F23-0EB7-47D7-AB6F-F4337D5F823F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pImage' , ), 30, (30, (), [ (9, 1, None, "IID('{33704F23-0EB7-47D7-AB6F-F4337D5F823F}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBInsertionOutline_vtables_dispatch_ = 1
IMGCPCBInsertionOutline_vtables_ = [
	(( 'DisplayCondition' , 'eCondition' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 40, (40, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 42, (42, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 44, (44, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'Parent' , 'ppParent' , ), 45, (45, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pFixLockType' , ), 46, (46, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pFixLockType' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 47, (47, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 64 , )),
]

IMGCPCBInsertionOutlines_vtables_dispatch_ = 1
IMGCPCBInsertionOutlines_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppInsertionOutline' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{045F3585-5036-40BA-97E0-EB9EF5098737}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pInsertionOutline' , ), 30, (30, (), [ (9, 1, None, "IID('{045F3585-5036-40BA-97E0-EB9EF5098737}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBInternal_vtables_dispatch_ = 0
IMGCPCBInternal_vtables_ = [
	(( '_Handle' , 'HandleAddress' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 24 , (3, 0, None, None) , 65 , )),
	(( '_Handle' , 'HandleAddress' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 32 , (3, 0, None, None) , 65 , )),
	(( 'CloneInternal' , ), 2, (2, (), [ ], 1 , 1 , 4 , 0 , 40 , (3, 0, None, None) , 65 , )),
	(( 'ValidateObject' , 'bKeepChanges' , ), 3, (3, (), [ (11, 0, None, None) , ], 1 , 1 , 4 , 0 , 48 , (3, 0, None, None) , 65 , )),
	(( 'UniqueId' , 'identifier' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 65 , )),
]

IMGCPCBJumperTableEntries_vtables_dispatch_ = 1
IMGCPCBJumperTableEntries_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppJumpTable' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IMGCPCBJumperTableEntry_vtables_dispatch_ = 1
IMGCPCBJumperTableEntry_vtables_ = [
	(( 'Enable' , 'pOption' , ), 0, (0, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Enable' , 'pOption' , ), 0, (0, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'pAngle' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PartNum' , 'pPartNum' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CellName' , 'pCellName' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'eUnit' , 'pLength' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'eUnit' , 'pLength' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBLayerObject_vtables_dispatch_ = 1
IMGCPCBLayerObject_vtables_ = [
	(( 'UserLayer' , 'ppUserLayer' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 1, (1, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayer' , 'pConductorLayer' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayer' , 'pConductorLayer' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FabricationSide' , 'pFabricationSide' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FabricationType' , 'pFabricationType' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SetFabricationLayer' , 'eFabricationType' , 'eFabricationSide' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'InsulationType' , 'pType' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'BoardLayer' , 'pBoardLayer' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'BoardLayer' , 'pBoardLayer' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'LayerProperties' , 'ppLayerProperties' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED97}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ConductorType' , 'pType' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'PlaneType' , 'pType' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
]

IMGCPCBLayerObjects_vtables_dispatch_ = 1
IMGCPCBLayerObjects_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppLayerObject' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pLayerObject' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBLayerProperties_vtables_dispatch_ = 1
IMGCPCBLayerProperties_vtables_ = [
	(( 'Thickness' , 'eUnit' , 'pThickness' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'eUnit' , 'pThickness' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'pDescription' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DielectricConstant' , 'DielectricConstant' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Resistivity' , 'Resistivity' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'VpForWidth' , 'Width' , 'widthUnit' , 'vpUnit' , 'Vp' , 
			 ), 5, (5, (), [ (5, 1, None, None) , (3, 49, '0', None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Z0ForWidth' , 'Width' , 'widthUnit' , 'Z0' , ), 6, (6, (), [ 
			 (5, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'StackupLayerName' , 'pStackupLayerName' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LayerUsage' , 'pLayerUsage' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBLayerRange_vtables_dispatch_ = 1
IMGCPCBLayerRange_vtables_ = [
	(( 'Name' , 'pViaSpan' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'StartLayer' , 'pStartLayer' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pEndLayer' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ViaPadstackName' , 'pViaName' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AllowedVias' , 'bIncludeCentralLib' , 'AllowedViaPadstackNames' , ), 5, (5, (), [ (11, 49, 'False', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'AllowedVias' , 'bIncludeCentralLib' , 'AllowedViaPadstackNames' , ), 5, (5, (), [ (11, 49, 'False', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
]

IMGCPCBLayerRanges_vtables_dispatch_ = 1
IMGCPCBLayerRanges_vtables_ = [
	(( 'Item' , 'Index' , 'ppLayerRange' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IMGCPCBManufacturingOutline_vtables_dispatch_ = 1
IMGCPCBManufacturingOutline_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 43, (43, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMarker_vtables_dispatch_ = 1
IMGCPCBMarker_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 4, (4, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 7, (7, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FromTos' , 'FromTos' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'Layer' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMarkers_vtables_dispatch_ = 1
IMGCPCBMarkers_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppMarker' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pMarker' , ), 30, (30, (), [ (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMatchLengthGroup_vtables_dispatch_ = 1
IMGCPCBMatchLengthGroup_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Members' , 'ppObjects' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Tolerance' , 'eUnit' , 'pTolerance' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Tolerance' , 'eUnit' , 'pTolerance' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'eType' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMatchLengthGroups_vtables_dispatch_ = 1
IMGCPCBMatchLengthGroups_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppGroup' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5D4AF6CF-7583-490E-89D2-7000976F2151}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pGroup' , ), 30, (30, (), [ (9, 1, None, "IID('{5D4AF6CF-7583-490E-89D2-7000976F2151}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMaterial_vtables_dispatch_ = 1
IMGCPCBMaterial_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMaterials_vtables_dispatch_ = 1
IMGCPCBMaterials_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppMaterial' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{24B5B850-C62F-41AE-B405-018D644055AD}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pMaterial' , ), 30, (30, (), [ (9, 1, None, "IID('{24B5B850-C62F-41AE-B405-018D644055AD}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMetalizationArea_vtables_dispatch_ = 1
IMGCPCBMetalizationArea_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 49, (49, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 50, (50, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 51, (51, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 51, (51, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 52, (52, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 53, (53, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 54, (54, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 52, (52, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 55, (55, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 55, (55, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 56, (56, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMetalizationAreas_vtables_dispatch_ = 1
IMGCPCBMetalizationAreas_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppMetalizationArea' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{315D2489-54AB-4C47-9927-5D1EB59FC6E7}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pMetalizationArea' , ), 30, (30, (), [ (9, 1, None, "IID('{315D2489-54AB-4C47-9927-5D1EB59FC6E7}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMotionObject_vtables_dispatch_ = 1
IMGCPCBMotionObject_vtables_ = [
	(( 'PositionX' , 'eUnit' , 'val' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'val' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'val' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'val' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'val' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'val' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'val' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'val' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'val' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'val' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'val' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'val' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Push' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsPushed' , 'val' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMountingHole_vtables_dispatch_ = 1
IMGCPCBMountingHole_vtables_ = [
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Teardrops' , 'ppTeardrops' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutTraces' , 'ppBreakoutTraces' , ), 44, (44, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 47, (47, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 32, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 47, (47, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 32, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 48, (48, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 50, (50, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 51, (51, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 52, (52, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 52, (52, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Tracedrops' , 'ppTracedrops' , ), 53, (53, (), [ (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')") , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'AddShortedNets' , 'nLayer' , 'shortedNets' , ), 54, (54, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'RemoveShortedNets' , 'nLayer' , 'shortedNets' , ), 55, (55, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'GetShortedNets' , 'nLayer' , 'shortNets' , ), 56, (56, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 57, (57, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'IsConnectedToPathOrAreaOnLayer' , 'nLayer' , 'bConnected' , ), 58, (58, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'PadGrowError' , 'nLayer' , 'bPadGrowFailed' , ), 59, (59, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMountingHoles_vtables_dispatch_ = 1
IMGCPCBMountingHoles_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppMountingHole' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pMountingHole' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMultiBoardOutline_vtables_dispatch_ = 1
IMGCPCBMultiBoardOutline_vtables_ = [
	(( 'BoardOutlineName' , 'pBoardOutlineName' , ), 40, (40, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BoardOutlineName' , 'pBoardOutlineName' , ), 40, (40, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'LayerStack' , 'ppLayerObjects' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'LayerStack' , 'ppLayerObjects' , ), 41, (41, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , ], 1 , 8 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BoardOutlineType' , 'pMultiBoardOutlineType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BoardOutlineType' , 'pMultiBoardOutlineType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'LayerRangeTop' , 'pTop' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'LayerRangeBottom' , 'pBottom' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 46, (46, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 47, (47, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 48, (48, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'SolderMaskLayerTop' , 'ppLayerObject' , ), 50, (50, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'SolderMaskLayerBottom' , 'ppLayerObject' , ), 51, (51, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'CoverLayerTop' , 'ppLayerObject' , ), 52, (52, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'CoverLayerBottom' , 'ppLayerObject' , ), 53, (53, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'RouteBorder' , 'ppRouteBorder' , ), 54, (54, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'PutRouteBorder' , 'nPnts' , 'pSafeArrayOfPnts' , 'dGraphicsWidth' , 'eUnit' , 
			 'ppRouteBorder' , ), 55, (55, (), [ (3, 1, None, None) , (16396, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'StiffenerLayer' , 'ppLayerObject' , ), 56, (56, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'StackupScheme' , 'ppStackupScheme' , ), 57, (57, (), [ (16393, 10, None, "IID('{0D170493-3863-40A7-B222-C70CDC73B07A}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'StackupScheme' , 'ppStackupScheme' , ), 57, (57, (), [ (9, 1, None, "IID('{0D170493-3863-40A7-B222-C70CDC73B07A}')") , ], 1 , 8 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMultiBoardOutlines_vtables_dispatch_ = 1
IMGCPCBMultiBoardOutlines_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppMultiBoardOutline' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pMultiBoardOutline' , ), 30, (30, (), [ (9, 1, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMultiVia_vtables_dispatch_ = 1
IMGCPCBMultiVia_vtables_ = [
	(( 'StartLayer' , 'pLayer' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pLayer' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Teardrops' , 'ppTeardrops' , ), 44, (44, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutTraces' , 'ppBreakoutTraces' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 47, (47, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'ppVias' , ), 48, (48, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'ppConductiveAreas' , ), 49, (49, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ColumnCount' , 'ColumnCount' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'RowCount' , 'RowCount' , ), 51, (51, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'SetPattern' , 'nRowCount' , 'nColCount' , ), 52, (52, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 64 , )),
	(( 'Dissolve' , ), 53, (53, (), [ ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 54, (54, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 55, (55, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 57, (57, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 58, (58, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 58, (58, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'Tracedrops' , 'ppTracedrops' , ), 59, (59, (), [ (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')") , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 60, (60, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
]

IMGCPCBMultiVias_vtables_dispatch_ = 1
IMGCPCBMultiVias_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppMultiVia' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pMultiVia' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBNet_vtables_dispatch_ = 1
IMGCPCBNet_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelect' , ), 2, (2, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelect' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlight' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlight' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Pins' , 'eSelectOnly' , 'ppPins' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Pins' , 'eSelectOnly' , 'ppPins' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Traces' , 'eSelectOnly' , 'nLayerOnly' , 'ppTraces' , ), 10, (10, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Traces' , 'eSelectOnly' , 'nLayerOnly' , 'ppTraces' , ), 10, (10, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'eSelectOnly' , 'ppVias' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'eSelectOnly' , 'ppVias' , ), 11, (11, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'NetClass' , 'ppNetClass' , ), 12, (12, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlanes' , 'eSelectOnly' , 'nLayerOnly' , 'ppGeneratedPlanes' , ), 13, (13, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlanes' , 'eSelectOnly' , 'nLayerOnly' , 'ppGeneratedPlanes' , ), 13, (13, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MountingHoles' , 'eSelectOnly' , 'ppMountingHoles' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'MountingHoles' , 'eSelectOnly' , 'ppMountingHoles' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppConductiveAreas' , ), 15, (15, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ConductiveAreas' , 'eSelectOnly' , 'nLayerOnly' , 'ppConductiveAreas' , ), 15, (15, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'FromTos' , 'eSelectOnly' , 'eFromToType' , 'ppFromTos' , ), 16, (16, (), [ 
			 (3, 49, '0', None) , (3, 49, '1', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FromTos' , 'eSelectOnly' , 'eFromToType' , 'ppFromTos' , ), 16, (16, (), [ 
			 (3, 49, '0', None) , (3, 49, '1', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlaneShapes' , ), 17, (17, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PlaneShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppPlaneShapes' , ), 17, (17, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IsRouted' , 'pRouted' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 19, (19, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfOpens' , 'pNumberOfOpens' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DiffPair' , 'ppNet' , ), 23, (23, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ActualPlaneShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppActualPlaneShapes' , ), 24, (24, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ActualPlaneShapes' , 'eSelectOnly' , 'nLayerOnly' , 'ppActualPlaneShapes' , ), 24, (24, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'TieLegs' , 'eSelectOnly' , 'nLayerOnly' , 'ppTieLegs' , ), 25, (25, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 64 , )),
	(( 'TieLegs' , 'eSelectOnly' , 'nLayerOnly' , 'ppTieLegs' , ), 25, (25, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 64 , )),
	(( 'RequiredNumberOfTestPoints' , 'num' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RequiredNumberOfTestPoints' , 'num' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlaneOutlines' , 'eSelectOnly' , 'nLayerOnly' , 'ppGeneratedPlanes' , ), 28, (28, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlaneOutlines' , 'eSelectOnly' , 'nLayerOnly' , 'ppGeneratedPlanes' , ), 28, (28, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PlaneAssignments' , 'Layer' , 'ppPlaneAssignments' , ), 203, (203, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'PlaneAssignments' , 'Layer' , 'ppPlaneAssignments' , ), 203, (203, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Constraint' , 'ppConstraint' , ), 29, (29, (), [ (16393, 10, None, "IID('{EAFAC376-315E-407D-A294-7DB8A2222C40}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DifferentialPair' , 'ppDiffPair' , ), 31, (31, (), [ (16393, 10, None, "IID('{9A2E2DB0-60CA-45A0-8788-43D139963F55}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'MatchLengthGroup' , 'ppGroup' , ), 32, (32, (), [ (16393, 10, None, "IID('{5D4AF6CF-7583-490E-89D2-7000976F2151}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'BondWires' , 'SelectType' , 'BondWires' , ), 33, (33, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BondWires' , 'SelectType' , 'BondWires' , ), 33, (33, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BondPads' , 'SelectType' , 'BondPads' , ), 34, (34, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'BondPads' , 'SelectType' , 'BondPads' , ), 34, (34, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 35, (35, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 36, (36, (), [ ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Markers' , 'Markers' , ), 37, (37, (), [ (16393, 10, None, "IID('{3CCA32E2-09D7-42AB-9D14-565025B422B2}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 64 , )),
	(( 'Merge' , 'ThisPin' , 'OtherNet' , 'OtherPin' , ), 38, (38, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , 'pMarked' , ), 39, (39, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , 'pMarked' , ), 39, (39, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'CstrClassName' , 'pName' , ), 40, (40, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
	(( 'BusName' , 'pName' , ), 41, (41, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'IsNoConnect' , 'pVal' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'IsNet0' , 'pVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Split' , 'OldNetPin' , 'NewNetPin' , 'NetName' , 'NewNet' , 
			 ), 44, (44, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'NetGroup' , 'ppNetGroup' , ), 45, (45, (), [ (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ShieldGroup' , 'ppShieldNetGroup' , ), 46, (46, (), [ (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'PinsEx' , 'eSelectOnly' , 'ppPins' , ), 47, (47, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'PinsEx' , 'eSelectOnly' , 'ppPins' , ), 47, (47, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'AllowLoops' , 'AllowLoops' , ), 48, (48, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'AllowLoops' , 'AllowLoops' , ), 48, (48, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'InFilter' , 'InFilter' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'pComment' , ), 50, (50, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 456 , (3, 32, None, None) , 64 , )),
	(( 'Comment' , 'pComment' , ), 50, (50, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
]

IMGCPCBNetClass_vtables_dispatch_ = 1
IMGCPCBNetClass_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Nets' , 'ppNets' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'TypicalWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 2, (2, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'IsValid' , 'pValid' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DiffPairSpacing' , 'nLayer' , 'sScheme' , 'eUnit' , 'pDPSpacing' , 
			 ), 6, (6, (), [ (3, 1, None, None) , (8, 49, "'(Master)'", None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 32, None, None) , 0 , )),
	(( 'MinTraceWidth' , 'nLayer' , 'sScheme' , 'eUnit' , 'pWidth' , 
			 ), 7, (7, (), [ (3, 1, None, None) , (8, 49, "'(Master)'", None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 32, None, None) , 0 , )),
	(( 'TypicalTraceWidth' , 'nLayer' , 'sScheme' , 'eUnit' , 'pWidth' , 
			 ), 8, (8, (), [ (3, 1, None, None) , (8, 49, "'(Master)'", None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 32, None, None) , 0 , )),
	(( 'ExpansionTraceWidth' , 'nLayer' , 'sScheme' , 'eUnit' , 'pWidth' , 
			 ), 9, (9, (), [ (3, 1, None, None) , (8, 49, "'(Master)'", None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 32, None, None) , 0 , )),
	(( 'RoutingEnabled' , 'nLayer' , 'pIsEnabled' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ViaPadstackToUse' , 'nFromLayer' , 'nToLayer' , 'sScheme' , 'ppPadstack' , 
			 ), 11, (11, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 49, "'(Master)'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 32, None, None) , 0 , )),
]

IMGCPCBNetClasses_vtables_dispatch_ = 1
IMGCPCBNetClasses_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppNetClass' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pNetClass' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBNetGroup_vtables_dispatch_ = 1
IMGCPCBNetGroup_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , 'pMarked' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , 'pMarked' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Nets' , 'ppNets' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SubGroups' , 'ppNetGrps' , ), 4, (4, (), [ (16393, 10, None, "IID('{DF8FC11D-AFBD-41A9-AF29-8821B9164732}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 5, (5, (), [ (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 7, (7, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pObj' , ), 8, (8, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , 'pObj' , ), 9, (9, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 11, (11, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNet' , 'pNetName' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNet' , 'pNetName' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNetClass' , 'pNetClassName' , ), 13, (13, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNetClass' , 'pNetClassName' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingPerBit' , 'bit' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingPerBit' , 'bit' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingEnabled' , 'Layer' , 'bEnable' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingEnabled' , 'Layer' , 'bEnable' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IsShieldingGroup' , 'issldgrp' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'IsBus' , 'pIsBus' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'HierarchicalName' , 'pName' , ), 18, (18, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'IncludeInNetFilter' , 'pInFilter' , ), 19, (19, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'IncludeInNetFilter' , 'pInFilter' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'StitchingStep' , 'eUnit' , 'pStep' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'StitchingStep' , 'eUnit' , 'pStep' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'StitchingStep' , 'eUnit' , 'pStep' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'StitchingStep' , 'eUnit' , 'pStep' , ), 20, (20, (), [ (3, 49, '0', None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingOutsideTraces' , 'pShieldingOutsideTraces' , ), 21, (21, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingOutsideTraces' , 'pShieldingOutsideTraces' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingStitching' , 'pShieldingStitching' , ), 22, (22, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingStitching' , 'pShieldingStitching' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ShieldGroup' , ), 23, (23, (), [ (9, 1, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 8 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IMGCPCBNetGroups_vtables_dispatch_ = 1
IMGCPCBNetGroups_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppNetGroup' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pNetGrp' , ), 30, (30, (), [ (9, 1, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBNets_vtables_dispatch_ = 1
IMGCPCBNets_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppNet' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pNet' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 34, (34, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Marked' , ), 35, (35, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IncludeInNetFilter' , ), 36, (36, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 37, (37, (), [ ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AllowLoops' , ), 38, (38, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IMGCPCBObjectFilter_vtables_dispatch_ = 1
IMGCPCBObjectFilter_vtables_ = [
	(( 'IncludeAllTypes' , ), 1, (1, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeAllTypes' , ), 2, (2, (), [ ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeObjectTypes' , 'ObjectClass' , 'ObjectType' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16396, 49, "''", None) , ], 1 , 1 , 4 , 0 , 72 , (3, 32, None, None) , 0 , )),
	(( 'IncludeObjectTypes' , 'ObjectClass' , 'ObjectType' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16396, 49, "''", None) , ], 1 , 1 , 4 , 0 , 80 , (3, 32, None, None) , 0 , )),
	(( 'ExcludeComponentData' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeIfParentSelect' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IncludeOnlyObjectsOnActiveSheet' , ), 7, (7, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
]

IMGCPCBObjects_vtables_dispatch_ = 1
IMGCPCBObjects_vtables_ = [
	(( 'Item' , 'Index' , 'ppDisp' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Item' , ), 34, (34, (), [ (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MoveRelative' , 'XOffset' , 'YOffset' , 'eUnit' , ), 35, (35, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Rotate' , 'dRotation' , 'eAngleUnit' , ), 36, (36, (), [ (5, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
]

IMGCPCBObstruct_vtables_dispatch_ = 1
IMGCPCBObstruct_vtables_ = [
	(( 'ObstructType' , 'eType' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PutSegmentID' , 'id' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'SegmentIDs' , 'ids' , ), 43, (43, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'DeleteSegmentID' , 'id' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 64 , )),
	(( 'Pin' , 'pVal' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Pin' , 'pVal' , ), 45, (45, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 8 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 46, (46, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 47, (47, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 48, (48, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 50, (50, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 51, (51, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 52, (52, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 52, (52, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 54, (54, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 54, (54, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 55, (55, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'OutgassingVoid' , 'pVal' , ), 56, (56, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'OutgassingVoid' , 'pVal' , ), 56, (56, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'AllowedNet' , 'pNet' , ), 57, (57, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'AllowedNet' , 'pNet' , ), 57, (57, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
]

IMGCPCBObstructs_vtables_dispatch_ = 1
IMGCPCBObstructs_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppObstruct' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pObstruct' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBOutgassingVoidsSettings_vtables_dispatch_ = 1
IMGCPCBOutgassingVoidsSettings_vtables_ = [
	(( 'SetupOutgassing' , 'pSuccess' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'GenerateOutgassing' , 'pSuccess' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 64 , )),
	(( 'ModifyLayerOutgassingVoidsScheme' , 'pLayer' , 'ogvScheme' , 'Enabled' , ), 3, (3, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'DeleteOutgassingVoidsBeforeGeneration' , 'Enabled' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'UnsetAllOutgassingVoids' , 'pSuccess' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'ModifyLayerRuleAreaOutgassingVoidsScheme' , 'pLayer' , 'ogvScheme' , 'ruleAreaSchemeName' , 'Enabled' , 
			 ), 6, (6, (), [ (3, 1, None, None) , (8, 1, None, None) , (8, 49, "''", None) , (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 96 , (3, 32, None, None) , 64 , )),
	(( 'MaintainOutgassingVoidsProperty' , 'Enabled' , ), 7, (7, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'MaintainOutgassingVoidsProperty' , 'Enabled' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
]

IMGCPCBPad_vtables_dispatch_ = 1
IMGCPCBPad_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IsNegative' , 'pIsNegative' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Geometries' , 'ppGeometries' , ), 4, (4, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ShapeType' , 'eShapeType' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 7, (7, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddGeometry' , 'PointsArray' , 'RemoveExisting' , 'Unit' , ), 8, (8, (), [ 
			 (16396, 1, None, None) , (11, 49, 'True', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'IsNoConnect' , 'pIsNoConnect' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPads_vtables_dispatch_ = 1
IMGCPCBPads_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPad' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPad' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPadstack_vtables_dispatch_ = 1
IMGCPCBPadstack_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'IsSMD' , 'pIsSMD' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'MirrorType' , 'pType' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Holes' , 'ppHoles' , ), 3, (3, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Pads' , 'nLayer' , 'ppPads' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Pads' , 'nLayer' , 'ppPads' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FabricationPads' , 'ppPads' , ), 5, (5, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Pins' , 'ppPins' , ), 6, (6, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Vias' , 'ppVias' , ), 7, (7, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsModified' , 'pIsModified' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pObjectType' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Clone' , 'bMirror' , 'ppPadstack' , ), 11, (11, (), [ (11, 49, 'False', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'PutPad' , 'sPadName' , 'pLayerObject' , 'bFromCentralLibrary' , ), 12, (12, (), [ 
			 (8, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DeletePad' , 'pLayerObject' , ), 13, (13, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IsEqual' , 'pPadstack' , 'bEqual' , ), 14, (14, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IsSkipVia' , 'bVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 16, (16, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 32, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 16, (16, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 32, None, None) , 0 , )),
	(( 'PinClass' , 'PinClass' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'PinClass' , 'PinClass' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 64 , )),
	(( 'NoConnectPad' , 'nLayer' , 'pPadName' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'HoleRangeFromLayer' , 'pFromLayer' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'HoleRangeToLayer' , 'pToLayer' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedNCPad' , 'nLayer' , 'pPadName' , ), 21, (21, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPadstackObject_vtables_dispatch_ = 1
IMGCPCBPadstackObject_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OriginalPadstack' , 'pPadstack' , ), 4, (4, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
	(( 'Net' , 'ppNet' , ), 8, (8, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 11, (11, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 15, (15, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 15, (15, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Component' , 'ppComp' , ), 16, (16, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IsPointInside' , 'dX' , 'dY' , 'eUnit' , 'pInside' , 
			 ), 17, (17, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'IsSMD' , 'pIsSMD' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 19, (19, (), [ ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Pads' , 'nLayer' , 'bIncludeNegativePads' , 'ppPads' , ), 20, (20, (), [ 
			 (3, 49, '0', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Pads' , 'nLayer' , 'bIncludeNegativePads' , 'ppPads' , ), 20, (20, (), [ 
			 (3, 49, '0', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'IsPadstackModified' , 'pIsModified' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( '_Handle' , 'pHandleAddress' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 65 , )),
	(( 'FabricationPads' , 'ppFabricationPads' , ), 23, (23, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Holes' , 'ppHoles' , ), 25, (25, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'pType' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Dimensions' , 'ppDimensions' , ), 27, (27, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CurrentPadstack' , 'pPadstack' , ), 28, (28, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'CurrentPadstack' , 'pPadstack' , ), 28, (28, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 29, (29, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 30, (30, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 31, (31, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Move' , 'x' , 'y' , 'eUnit' , ), 32, (32, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 8, (8, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 8 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'MoveRelative' , 'XOffset' , 'YOffset' , 'eUnit' , ), 33, (33, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Document' , 'ppDocument' , ), 34, (34, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 64 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 15, (15, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'pOrientation' , ), 15, (15, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPadstackObjects_vtables_dispatch_ = 1
IMGCPCBPadstackObjects_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPadstackObject' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPadstackObject' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CurrentPadstack' , ), 35, (35, (), [ (9, 0, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPadstacks_vtables_dispatch_ = 1
IMGCPCBPadstacks_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPadstack' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPadstack' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPanel_vtables_dispatch_ = 1
IMGCPCBPanel_vtables_ = [
	(( 'InstanceName' , 'pInstanceName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eUnit' , 'dOriginX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eUnit' , 'dOriginX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eUnit' , 'dOriginY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eUnit' , 'dOriginY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'eUnit' , 'dOrientation' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'bMirrored' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Mirrored' , 'bMirrored' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FullName' , 'pName' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'Move' , 'dX' , 'dY' , 'eUnit' , ), 8, (8, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 11, (11, (), [ ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TransformPointX' , 'dBrdX' , 'dBrdY' , 'eUnit' , 'dPnlX' , 
			 ), 12, (12, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TransformPointY' , 'dBrdX' , 'dBrdY' , 'eUnit' , 'dPnlY' , 
			 ), 13, (13, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TransformPointsArray' , 'nPnts' , 'pBrdSafeArrayOfPnts' , 'eUnit' , 'pPnlSafeArrayOfPnts' , 
			 ), 14, (14, (), [ (3, 1, None, None) , (16396, 1, None, None) , (3, 49, '0', None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LocalName' , 'pName' , ), 15, (15, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DisplayControl' , 'ppDC' , ), 16, (16, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'dScale' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'dScale' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DimensionPanelWithInstanceOrigin' , 'bDimensionPanelWithInstanceOrigin' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DimensionPanelWithInstanceOrigin' , 'bDimensionPanelWithInstanceOrigin' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 19, (19, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 20, (20, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 21, (21, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReReferenceDesign' , 'variantNewSrcDesignPath' , 'regenerateVariantData' , 'replaceExistingDesigns' , ), 22, (22, (), [ 
			 (8, 1, None, None) , (11, 49, 'False', None) , (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 24, (24, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 24, (24, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 25, (25, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'RelativePath' , 'pPath' , ), 26, (26, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPanelBorder_vtables_dispatch_ = 1
IMGCPCBPanelBorder_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPanelOutline_vtables_dispatch_ = 1
IMGCPCBPanelOutline_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPanels_vtables_dispatch_ = 1
IMGCPCBPanels_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPanel' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{6B941F88-756B-4734-B3B2-EAB2861ECB7C}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pBoard' , ), 30, (30, (), [ (9, 1, None, "IID('{6B941F88-756B-4734-B3B2-EAB2861ECB7C}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPart_vtables_dispatch_ = 1
IMGCPCBPart_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Components' , 'ppComps' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHgt' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHgt' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'UndersideHeight' , 'eUnit' , 'pHgt' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'UndersideHeight' , 'eUnit' , 'pHgt' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 6, (6, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PartName' , 'pPartName' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Cells' , 'pVal' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
]

IMGCPCBParts_vtables_dispatch_ = 1
IMGCPCBParts_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPart' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPart' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPhysicalReuseLibraryCircuit_vtables_dispatch_ = 1
IMGCPCBPhysicalReuseLibraryCircuit_vtables_ = [
	(( 'Name' , 'sName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'TimeStamp' , 'sTimeStamp' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Place' , ), 2, (2, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PlaceAtLocation' , 'dX' , 'dY' , 'dAngle' , 'bMirror' , 
			 'eUnit' , 'eAngleUnit' , ), 3, (3, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 49, '0.0', None) , (11, 49, 'False', None) , (3, 49, '0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PlaceAtLocationEx' , 'dX' , 'dY' , 'dAngle' , 'bMirror' , 
			 'bMirrorHor' , 'eUnit' , 'eAngleUnit' , ), 4, (4, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 49, '0.0', None) , (11, 49, 'False', None) , (11, 49, 'False', None) , (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Remove' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PlaceAtLocationWithMapping' , 'dX' , 'dY' , 'dAngle' , 'bMirror' , 
			 'bMirrorHor' , 'layerMap' , 'netMap' , 'eUnit' , 'eAngleUnit' , 
			 ), 6, (6, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 49, '0.0', None) , (11, 49, 'False', None) , 
			 (11, 49, 'False', None) , (8, 49, "''", None) , (8, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 104 , (3, 32, None, None) , 0 , )),
]

IMGCPCBPhysicalReuseLibraryCircuits_vtables_dispatch_ = 1
IMGCPCBPhysicalReuseLibraryCircuits_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPhysicalReuseLibraryCircuit' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPhysicalReuseLibraryCircuit' , ), 30, (30, (), [ (9, 1, None, "IID('{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPin_vtables_dispatch_ = 1
IMGCPCBPin_vtables_ = [
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Teardrops' , 'ppTeardrops' , ), 42, (42, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutTraces' , 'ppBreakoutTraces' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 44, (44, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'TypeChained' , 'pType' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'PutTestPoint' , 'ppTestPoint' , ), 47, (47, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'PutSegmentID' , 'id' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 64 , )),
	(( 'SegmentIDs' , 'ids' , ), 50, (50, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 64 , )),
	(( 'DeleteSegmentID' , 'id' , ), 51, (51, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 64 , )),
	(( 'Parent' , 'ppParent' , ), 52, (52, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 53, (53, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 32, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 53, (53, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 32, None, None) , 0 , )),
	(( 'TieLegType' , 'nLayer' , 'pTieLegType' , ), 54, (54, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'TieLegType' , 'nLayer' , 'pTieLegType' , ), 54, (54, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'TieLegRotation' , 'nLayer' , 'pTieLegRotation' , ), 55, (55, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'TieLegRotation' , 'nLayer' , 'pTieLegRotation' , ), 55, (55, (), [ (3, 49, '0', None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 56, (56, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 56, (56, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 56, (56, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 57, (57, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 57, (57, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 57, (57, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'UsePadstackThermalDefaults' , 'nLayer' , 'pUsePadstackThermalDefault' , ), 58, (58, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'UsePadstackThermalDefaults' , 'nLayer' , 'pUsePadstackThermalDefault' , ), 58, (58, (), [ (3, 49, '0', None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'Placed' , 'pPlaced' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 60, (60, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 60, (60, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'NetClass' , 'ppNetClass' , ), 61, (61, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'NetClass' , 'ppNetClass' , ), 61, (61, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'Place' , 'x' , 'y' , 'dOrientation' , 'eUnit' , 
			 'eAngleUnit' , ), 62, (62, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 49, '0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , ), 63, (63, (), [ ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 64, (64, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'SetName' , 'pName' , ), 65, (65, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'Level' , 'pLayer' , ), 66, (66, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'PutFabricationLayerText' , 'sString' , 'PositionX' , 'PositionY' , 'eTextType' , 
			 'eType' , 'eSide' , 'eUnit' , 'Text' , ), 67, (67, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}')") , ], 1 , 1 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppTexts' , 
			 ), 68, (68, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'ppTexts' , 
			 ), 68, (68, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'PutConductorLayerText' , 'sString' , 'PositionX' , 'PositionY' , 'eTextType' , 
			 'Layer' , 'eUnit' , 'Text' , ), 69, (69, (), [ (8, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}')") , ], 1 , 1 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'ppTexts' , ), 70, (70, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'ppTexts' , ), 70, (70, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'PutUserLayerText' , 'sString' , 'PositionX' , 'PositionY' , 'eTextType' , 
			 'pUserlayer' , 'eUnit' , 'Text' , ), 71, (71, (), [ (8, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')") , ], 1 , 1 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'ppTexts' , ), 72, (72, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 680 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'ppTexts' , ), 72, (72, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 680 , (3, 32, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 73, (73, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 74, (74, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionType' , 'pConnectType' , ), 75, (75, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 64 , )),
	(( 'IsNoConnect' , 'pNoConnect' , ), 76, (76, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'IsNoRoute' , 'pNoRoute' , ), 77, (77, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'SelectOnly' , ), 78, (78, (), [ ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'BreakBack' , ), 79, (79, (), [ ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 80, (80, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 80, (80, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'IsDiePin' , 'bVal' , ), 81, (81, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'Tracedrops' , 'ppTracedrops' , ), 82, (82, (), [ (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')") , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'AddShortedNets' , 'nLayer' , 'shortedNets' , ), 83, (83, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'RemoveShortedNets' , 'nLayer' , 'shortedNets' , ), 84, (84, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'GetShortedNets' , 'nLayer' , 'shortNets' , ), 85, (85, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 86, (86, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'IsConnectedToPathOrAreaOnLayer' , 'nLayer' , 'bConnected' , ), 87, (87, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'PadGrowError' , 'nLayer' , 'bPadGrowFailed' , ), 88, (88, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'IsTopSidePin' , 'bTopSidePin' , ), 89, (89, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'MoveSchematicShortToLayer' , 'new_layer' , ), 90, (90, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 832 , (3, 0, None, None) , 64 , )),
]

IMGCPCBPins_vtables_dispatch_ = 1
IMGCPCBPins_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPin' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPin' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Net' , ), 34, (34, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 8 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CurrentPadstack' , ), 35, (35, (), [ (9, 0, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlacementObstruct_vtables_dispatch_ = 1
IMGCPCBPlacementObstruct_vtables_ = [
	(( 'Height' , 'eUnit' , 'pHeight' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 42, (42, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 43, (43, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 44, (44, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 46, (46, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 47, (47, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 45, (45, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 49, (49, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 64 , )),
]

IMGCPCBPlacementObstructs_vtables_dispatch_ = 1
IMGCPCBPlacementObstructs_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPlacementObstruct' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPlacementObstruct' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlacementOutline_vtables_dispatch_ = 1
IMGCPCBPlacementOutline_vtables_ = [
	(( 'Height' , 'eUnit' , 'pHeight' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'eUnit' , 'pHeight' , ), 40, (40, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'UndersideSpace' , 'eUnit' , 'pUndersideSpace' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'UndersideSpace' , 'eUnit' , 'pUndersideSpace' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'UndersideSpace' , 'eUnit' , 'pUndersideSpace' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'UndersideSpace' , 'eUnit' , 'pUndersideSpace' , ), 41, (41, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 42, (42, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 43, (43, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 45, (45, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 46, (46, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 64 , )),
	(( 'Parent' , 'ppParent' , ), 47, (47, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 49, (49, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
]

IMGCPCBPlacementOutlines_vtables_dispatch_ = 1
IMGCPCBPlacementOutlines_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPlacementOutline' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPlacementOutline' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlaneAssignment_vtables_dispatch_ = 1
IMGCPCBPlaneAssignment_vtables_ = [
	(( 'LayerObject' , 'ppLayerObject' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'pNet' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PlaneClass' , 'ppPlaneClass' , ), 3, (3, (), [ (16393, 10, None, "IID('{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'InheritedPlaneClass' , 'pVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'PlaneDataState' , 'pState' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'InheritedPlaneDataState' , 'pInherited' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'UseRouteBorderAsPlaneShape' , 'pVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PlaneDataState' , 'pState' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlaneAssignments_vtables_dispatch_ = 1
IMGCPCBPlaneAssignments_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPlaneAssignment' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPlaneAssignment' , ), 30, (30, (), [ (9, 1, None, "IID('{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlaneClass_vtables_dispatch_ = 1
IMGCPCBPlaneClass_vtables_ = [
	(( 'Name' , 'Name' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'UsePadstackThermalDefinition' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'UsePadstackThermalDefinition' , 'pVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'EnableTieBridging' , 'pVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'EnableTieBridging' , 'pVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaTieLegWidth' , 'eUnit' , 'pVal' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaTieLegWidth' , 'eUnit' , 'pVal' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaTieLegWidth' , 'eUnit' , 'pVal' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaTieLegWidth' , 'eUnit' , 'pVal' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaThermalClearance' , 'eUnit' , 'pVal' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaThermalClearance' , 'eUnit' , 'pVal' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaThermalClearance' , 'eUnit' , 'pVal' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaThermalClearance' , 'eUnit' , 'pVal' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaTieLegType' , 'pVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaTieLegType' , 'pVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaTieLegRotation' , 'pVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaTieLegRotation' , 'pVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleTieLegWidth' , 'eUnit' , 'pVal' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleTieLegWidth' , 'eUnit' , 'pVal' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleTieLegWidth' , 'eUnit' , 'pVal' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleTieLegWidth' , 'eUnit' , 'pVal' , ), 9, (9, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleThermalClearance' , 'eUnit' , 'pVal' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleThermalClearance' , 'eUnit' , 'pVal' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleThermalClearance' , 'eUnit' , 'pVal' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleThermalClearance' , 'eUnit' , 'pVal' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleTieLegType' , 'pVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleTieLegType' , 'pVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleTieLegRotation' , 'pVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DefaultThroughHoleTieLegRotation' , 'pVal' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDTieLegWidth' , 'eUnit' , 'pVal' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDTieLegWidth' , 'eUnit' , 'pVal' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDTieLegWidth' , 'eUnit' , 'pVal' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDTieLegWidth' , 'eUnit' , 'pVal' , ), 13, (13, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDThermalClearance' , 'eUnit' , 'pVal' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDThermalClearance' , 'eUnit' , 'pVal' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDThermalClearance' , 'eUnit' , 'pVal' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDThermalClearance' , 'eUnit' , 'pVal' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDTieLegType' , 'pVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDTieLegType' , 'pVal' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDTieLegRotation' , 'pVal' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DefaultSMDTieLegRotation' , 'pVal' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DefaultContourMountingHoleClearance' , 'eUnit' , 'pVal' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'DefaultContourMountingHoleClearance' , 'eUnit' , 'pVal' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'DefaultContourMountingHoleClearance' , 'eUnit' , 'pVal' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DefaultContourMountingHoleClearance' , 'eUnit' , 'pVal' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DefaultOtherObjectMinimumClearance' , 'eUnit' , 'pVal' , ), 18, (18, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DefaultOtherObjectMinimumClearance' , 'eUnit' , 'pVal' , ), 18, (18, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DefaultOtherObjectMinimumClearance' , 'eUnit' , 'pVal' , ), 18, (18, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'DefaultOtherObjectMinimumClearance' , 'eUnit' , 'pVal' , ), 18, (18, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAllUntiedAreas' , 'pVal' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAllUntiedAreas' , 'pVal' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreasTiedToSinglePad' , 'pVal' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreasTiedToSinglePad' , 'pVal' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreasLessThanDefinedArea' , 'pVal' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreasLessThanDefinedArea' , 'pVal' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaLength' , 'eUnit' , 'pVal' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaLength' , 'eUnit' , 'pVal' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaLength' , 'eUnit' , 'pVal' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaLength' , 'eUnit' , 'pVal' , ), 22, (22, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaWidth' , 'eUnit' , 'pVal' , ), 23, (23, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaWidth' , 'eUnit' , 'pVal' , ), 23, (23, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaWidth' , 'eUnit' , 'pVal' , ), 23, (23, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'DiscardAreaWidth' , 'eUnit' , 'pVal' , ), 23, (23, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'HatchWidth' , 'eUnit' , 'pVal' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'HatchWidth' , 'eUnit' , 'pVal' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'HatchWidth' , 'eUnit' , 'pVal' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'HatchWidth' , 'eUnit' , 'pVal' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'HatchDistance' , 'eUnit' , 'pVal' , ), 25, (25, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'HatchDistance' , 'eUnit' , 'pVal' , ), 25, (25, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'HatchDistance' , 'eUnit' , 'pVal' , ), 25, (25, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'HatchDistance' , 'eUnit' , 'pVal' , ), 25, (25, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'HatchPattern' , 'pVal' , ), 26, (26, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'HatchPattern' , 'pVal' , ), 26, (26, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'FillNonSquareHatchAreas' , 'pVal' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'FillNonSquareHatchAreas' , 'pVal' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'RestrictPlaneToOrthogonalPatterns' , 'pVal' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'RestrictPlaneToOrthogonalPatterns' , 'pVal' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'SnapToHatchGrid' , 'pVal' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'SnapToHatchGrid' , 'pVal' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'HasOverrides' , 'pVal' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'RemoveScallops' , 'pVal' , ), 31, (31, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'RemoveScallops' , 'pVal' , ), 31, (31, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ClearPadIfOriginOutsideShape' , 'pVal' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ClearPadIfOriginOutsideShape' , 'pVal' , ), 32, (32, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'HatchAngle' , 'eUnit' , 'pVal' , ), 33, (33, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'HatchAngle' , 'eUnit' , 'pVal' , ), 33, (33, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'HatchAngle' , 'eUnit' , 'pVal' , ), 33, (33, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'HatchAngle' , 'eUnit' , 'pVal' , ), 33, (33, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlaneClasses_vtables_dispatch_ = 1
IMGCPCBPlaneClasses_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPlaneClass' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPlaneClass' , ), 30, (30, (), [ (9, 1, None, "IID('{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlaneEditingSketch_vtables_dispatch_ = 1
IMGCPCBPlaneEditingSketch_vtables_ = [
	(( 'MetalSide' , 'retval' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'MetalSide' , 'retval' , ), 40, (40, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 41, (41, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 43, (43, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 44, (44, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlaneEditingSketches_vtables_dispatch_ = 1
IMGCPCBPlaneEditingSketches_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPlaneEditingSketch' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPlaneEditingSketch' , ), 30, (30, (), [ (9, 1, None, "IID('{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlaneShape_vtables_dispatch_ = 1
IMGCPCBPlaneShape_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 8 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'HatchPattern' , 'pType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'HatchPattern' , 'pType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 64 , )),
	(( 'HatchWidth' , 'eUnit' , 'pWidth' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'HatchWidth' , 'eUnit' , 'pWidth' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'HatchWidth' , 'eUnit' , 'pWidth' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
	(( 'HatchWidth' , 'eUnit' , 'pWidth' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 64 , )),
	(( 'HatchDistance' , 'eUnit' , 'pDistance' , ), 44, (44, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'HatchDistance' , 'eUnit' , 'pDistance' , ), 44, (44, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'HatchDistance' , 'eUnit' , 'pDistance' , ), 44, (44, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'HatchDistance' , 'eUnit' , 'pDistance' , ), 44, (44, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 64 , )),
	(( 'Subnet' , 'pSubnet' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 47, (47, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 47, (47, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 64 , )),
	(( 'ActualPlaneShapes' , 'ppActualPlaneShapes' , ), 48, (48, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 64 , )),
	(( 'GeneratedPlanes' , 'ppGeneratedPlanes' , ), 49, (49, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 64 , )),
	(( 'TieLegs' , 'ppTieLegs' , ), 50, (50, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
	(( 'RouteObstructed' , 'pVal' , ), 51, (51, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'RouteObstructed' , 'pVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 52, (52, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'GeneratedPlaneOutlines' , 'ppGeneratedPlanes' , ), 53, (53, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 64 , )),
	(( 'PlaneClass' , 'ppPlaneClass' , ), 54, (54, (), [ (16393, 10, None, "IID('{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'PlaneClass' , 'ppPlaneClass' , ), 54, (54, (), [ (9, 1, None, "IID('{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}')") , ], 1 , 8 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'InheritedPlaneClass' , 'pVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 56, (56, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 57, (57, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 57, (57, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 58, (58, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 64 , )),
	(( 'ObstructType' , 'eObstructType' , ), 59, (59, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'ObstructType' , 'eObstructType' , ), 59, (59, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 60, (60, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 61, (61, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'IsolatePlane' , 'pVal' , ), 62, (62, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'IsolatePlane' , 'pVal' , ), 62, (62, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 58, (58, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 63, (63, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 63, (63, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 64, (64, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 64, (64, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 65, (65, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 65, (65, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 66, (66, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'AllowOutGassingVoids' , 'pVal' , ), 67, (67, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'AllowOutGassingVoids' , 'pVal' , ), 67, (67, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreRouteBorder' , 'pVal' , ), 68, (68, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreRouteBorder' , 'pVal' , ), 68, (68, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'Priority' , 'pVal' , ), 69, (69, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 64 , )),
]

IMGCPCBPlaneShapes_vtables_dispatch_ = 1
IMGCPCBPlaneShapes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppPlaneShape' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pPlaneShape' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPlowUtilities_vtables_dispatch_ = 1
IMGCPCBPlowUtilities_vtables_ = [
	(( 'ExpansionMode' , 'ppMode' , ), 0, (0, (), [ (9, 1, None, "IID('{90BA08EC-F7F1-4338-9AAA-F2384EB35423}')") , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'ExpansionMode' , 'ppMode' , ), 0, (0, (), [ (16393, 10, None, "IID('{90BA08EC-F7F1-4338-9AAA-F2384EB35423}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 64 , )),
	(( 'PushAndShoveMode' , 'pMode' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'PushAndShoveMode' , 'pMode' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'CurrentUnit' , 'pUnit' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'CurrentUnit' , 'pUnit' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
	(( 'NewPoint' , 'ppPoint' , ), 3, (3, (), [ (16393, 10, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'SnapPoint' , 'pNet' , 'pFromTo' , 'dWidth' , 'iLayer' , 
			 'pExtrema' , 'dMaxJump' , 'pBasePosition' , 'pCursorPosition' , 'eUnit' , 
			 'ppPoint' , ), 4, (4, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , (5, 1, None, None) , 
			 (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , (5, 1, None, None) , (9, 1, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , (9, 1, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , 
			 (3, 49, '0', None) , (16393, 10, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 64 , )),
	(( 'FindPath' , 'pNet' , 'pFromTo' , 'dWidth' , 'iLayer' , 
			 'vPointsArray' , 'dDeviation' , 'eUnit' , 'ppPath' , ), 5, (5, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , (5, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , 
			 (5, 49, '-1.0', None) , (3, 49, '0', None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'GlossPath' , 'pNet' , 'pFromTo' , 'dWidth' , 'iLayer' , 
			 'vPointsArray' , 'dDeviation' , 'eUnit' , 'ppPath' , ), 6, (6, (), [ 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , (5, 1, None, None) , (3, 1, None, None) , (16396, 1, None, None) , 
			 (5, 49, '-1.0', None) , (3, 49, '0', None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 64 , )),
	(( 'ResolveTraceConflicts' , 'pTrace' , 'dWidth' , 'pEndPosition' , 'dDeviation' , 
			 'eUnit' , ), 7, (7, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , (5, 1, None, None) , (9, 1, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , 
			 (5, 49, '-1.0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'ResolveTracesConflicts' , 'pTrace1' , 'pEndPosition1' , 'pTrace2' , 'pEndPosition2' , 
			 'dDeviation' , 'eUnit' , ), 8, (8, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , (9, 1, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , (9, 1, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , (5, 49, '-1.0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 64 , )),
	(( 'ResolveViaConflicts' , 'pVia' , ), 9, (9, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 64 , )),
	(( 'Gloss' , 'pNet' , 'Checkpoint' , ), 10, (10, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , 
			 (9, 1, None, "IID('{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 64 , )),
	(( 'GrowDiffPairTracesByCenterLine' , 'pTrace1' , 'pEndPosition1' , 'pTrace2' , 'pEndPosition2' , 
			 'vCenterLine' , 'eUnit' , ), 11, (11, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , (9, 1, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , (9, 1, None, "IID('{6ADF1858-A878-47E5-B3B2-5820C27712DB}')") , (16396, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 64 , )),
	(( 'Connect' , 'pNet' , 'pFromTo' , 'pStart' , 'pEnd' , 
			 'dWidth' , 'iLayer' , 'eUnit' , ), 12, (12, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , (5, 1, None, None) , (3, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'DiffPairConnect' , 'pNet1' , 'pFromTo1' , 'pStart1' , 'pEnd1' , 
			 'pNet2' , 'pFromTo2' , 'pStart2' , 'pEnd2' , 'dWidth' , 
			 'iLayer' , 'eUnit' , ), 13, (13, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , 
			 (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}')") , (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , 
			 (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , (5, 1, None, None) , (3, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 64 , )),
	(( 'ReRoute' , 'pStart' , 'pEnd' , 'pTrace' , 'ppPaths' , 
			 ), 14, (14, (), [ (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , (9, 1, None, "IID('{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}')") , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 64 , )),
	(( 'GetPlowWidthSetting' , 'currentwidth' , 'minimumwidth' , 'TypicalWidth' , 'expansionwidth' , 
			 ), 15, (15, (), [ (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IMGCPCBPoint_vtables_dispatch_ = 1
IMGCPCBPoint_vtables_ = [
	(( 'x' , 'Unit' , 'pX' , ), 0, (0, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'x' , 'Unit' , 'pX' , ), 0, (0, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'x' , 'Unit' , 'pX' , ), 0, (0, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 64 , )),
	(( 'x' , 'Unit' , 'pX' , ), 0, (0, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 64 , )),
	(( 'y' , 'Unit' , 'pY' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'y' , 'Unit' , 'pY' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 64 , )),
	(( 'y' , 'Unit' , 'pY' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'y' , 'Unit' , 'pY' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'InFreeArea' , 'pFreeArea' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 64 , )),
	(( 'InFreeArea' , 'pFreeArea' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 64 , )),
]

IMGCPCBProperties_vtables_dispatch_ = 1
IMGCPCBProperties_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppProperty' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pProperty' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBProperty_vtables_dispatch_ = 1
IMGCPCBProperty_vtables_ = [
	(( 'Name' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 64 , )),
	(( 'Value' , 'pValue' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'pValue' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Source' , 'pSource' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
]

IMGCPCBRFHazard_vtables_dispatch_ = 1
IMGCPCBRFHazard_vtables_ = [
	(( 'Description' , 'pDescription' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RFHazardType' , 'pType' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ShapeGenerationDescription' , 'pShapeGenerationDescription' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ShapeReferenceDesignator' , 'pShapeReferenceDesignator' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ShapeType' , 'pShapeType' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'x' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'x' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'y' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'y' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PinName' , 'pPinName' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GroupName' , 'pGroupName' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SubstrateName' , 'pSubstrateName' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'RFGenerationFormats' , 'RFGenerationFormats' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
	(( 'Arguments' , 'Arguments' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRadialGrid_vtables_dispatch_ = 1
IMGCPCBRadialGrid_vtables_ = [
	(( 'Enabled' , 'val' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Enabled' , 'val' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eUnit' , 'val' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eUnit' , 'val' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eUnit' , 'val' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'OriginX' , 'eUnit' , 'val' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eUnit' , 'val' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eUnit' , 'val' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eUnit' , 'val' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'OriginY' , 'eUnit' , 'val' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'InnerRadius' , 'eUnit' , 'val' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'InnerRadius' , 'eUnit' , 'val' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'InnerRadius' , 'eUnit' , 'val' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'InnerRadius' , 'eUnit' , 'val' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DeltaRadius' , 'eUnit' , 'val' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DeltaRadius' , 'eUnit' , 'val' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DeltaRadius' , 'eUnit' , 'val' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DeltaRadius' , 'eUnit' , 'val' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DeltaAngle' , 'eUnit' , 'val' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DeltaAngle' , 'eUnit' , 'val' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DeltaAngle' , 'eUnit' , 'val' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DeltaAngle' , 'eUnit' , 'val' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IMGCPCBReservedArea_vtables_dispatch_ = 1
IMGCPCBReservedArea_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 42, (42, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 49, (49, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IMGCPCBReservedAreas_vtables_dispatch_ = 1
IMGCPCBReservedAreas_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppReservedArea' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pReservedArea' , ), 30, (30, (), [ (9, 1, None, "IID('{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBResistorShape_vtables_dispatch_ = 1
IMGCPCBResistorShape_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 44, (44, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IMGCPCBResistorShapes_vtables_dispatch_ = 1
IMGCPCBResistorShapes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppResistorShape' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pResistorShape' , ), 30, (30, (), [ (9, 1, None, "IID('{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBReusableBlock_vtables_dispatch_ = 1
IMGCPCBReusableBlock_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ObjectType' , 'pType' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBReuseArea_vtables_dispatch_ = 1
IMGCPCBReuseArea_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 41, (41, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreaName' , 'pName' , ), 42, (42, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreaName' , 'pName' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Publishable' , 'pVal' , ), 43, (43, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Publishable' , 'pVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreaState' , 'eReuseAreaState' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ReuseAreaState' , 'eReuseAreaState' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IMGCPCBReuseAreas_vtables_dispatch_ = 1
IMGCPCBReuseAreas_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppReuseArea' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pReuseArea' , ), 30, (30, (), [ (9, 1, None, "IID('{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRoom_vtables_dispatch_ = 1
IMGCPCBRoom_vtables_ = [
	(( 'IsTopAndBottom' , 'TopAndBottom' , ), 40, (40, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'IncludedComponent' , 'pComp' , ), 41, (41, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'IncludedComponents' , 'ppComps' , ), 42, (42, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'IsPlaced' , 'pOption' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'SetName' , 'pName' , ), 44, (44, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 45, (45, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 46, (46, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 47, (47, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 48, (48, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'pSide' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 64 , )),
]

IMGCPCBRooms_vtables_dispatch_ = 1
IMGCPCBRooms_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppRoom' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pRoom' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRouteBorder_vtables_dispatch_ = 1
IMGCPCBRouteBorder_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 43, (43, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 45, (45, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRouteFence_vtables_dispatch_ = 1
IMGCPCBRouteFence_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'FenceType' , 'eFenceType' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'FenceType' , 'eFenceType' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 43, (43, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 44, (44, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRouteFences_vtables_dispatch_ = 1
IMGCPCBRouteFences_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppRouteFence' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pRouteFence' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRoutePass_vtables_dispatch_ = 1
IMGCPCBRoutePass_vtables_ = [
	(( 'Config' , 'bRouteDuringFanout' , 'bAllowCleanup' , ), 0, (0, (), [ (11, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PassType' , 'ePassType' , 'nEffortStart' , 'nEffortEnd' , 'bViaGrid' , 
			 'bRouteGrid' , ), 1, (1, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (11, 49, 'False', None) , (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Order' , 'eOrderType' , 'nCustomValue' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Items' , 'eType' , 'pCollection' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (9, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'LayerSelect' , 'eType' , 'nLayer' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FixUnfix' , 'bFixUnfix' , 'eMask' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Go' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRouteTarget_vtables_dispatch_ = 1
IMGCPCBRouteTarget_vtables_ = [
	(( 'PositionX' , 'eUnit' , 'pX' , ), 0, (0, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 0, (0, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 2, (2, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pHighlighted' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 4, (4, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AssociatedComponentPin' , 'ppPin' , ), 6, (6, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 4, (4, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 8 , 4 , 0 , 136 , (3, 0, None, None) , 64 , )),
]

IMGCPCBRouteTargets_vtables_dispatch_ = 1
IMGCPCBRouteTargets_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppRouteTarget' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pRouteTarget' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRuleArea_vtables_dispatch_ = 1
IMGCPCBRuleArea_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 41, (41, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 42, (42, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'EscapeOutline' , 'val' , ), 44, (44, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'EscapeOutline' , 'val' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DFTArea' , 'val' , ), 45, (45, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DFTArea' , 'val' , ), 45, (45, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'DFTAreaName' , 'val' , ), 46, (46, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DFTAreaName' , 'val' , ), 46, (46, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 47, (47, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 48, (48, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DFTTestpointCellName' , 'CellName' , ), 49, (49, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'DFTTestpointCellName' , 'CellName' , ), 49, (49, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 50, (50, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

IMGCPCBRuleAreas_vtables_dispatch_ = 1
IMGCPCBRuleAreas_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppRuleArea' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pRuleArea' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSandbox_vtables_dispatch_ = 1
IMGCPCBSandbox_vtables_ = [
	(( 'Owner' , 'pOwner' , ), 40, (40, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'pState' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'pState' , ), 41, (41, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PlacementLayers' , 'PlacementLayers' , ), 42, (42, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayers' , 'RouteLayers' , ), 43, (43, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PlacementLayer' , 'Layer' , 'bEnabled' , ), 44, (44, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PlacementLayer' , 'Layer' , 'bEnabled' , ), 44, (44, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayer' , 'Layer' , 'bEnabled' , ), 45, (45, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'RouteLayer' , 'Layer' , 'bEnabled' , ), 45, (45, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 46, (46, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 47, (47, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 48, (48, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 49, (49, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 50, (50, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 51, (51, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSandboxes_vtables_dispatch_ = 1
IMGCPCBSandboxes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppSandbox' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pSandbox' , ), 30, (30, (), [ (9, 1, None, "IID('{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSettings_vtables_dispatch_ = 1
IMGCPCBSettings_vtables_ = [
	(( 'GetInteger' , 'ClientId' , 'SettingId' , 'SettingType' , 'DefaultValue' , 
			 'retval' , ), 1, (1, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 49, '0', None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PutInteger' , 'ClientId' , 'SettingId' , 'SettingType' , 'Integer' , 
			 ), 2, (2, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetIntegerArray' , 'ClientId' , 'SettingId' , 'SettingType' , 'retval' , 
			 ), 3, (3, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PutIntegerArray' , 'ClientId' , 'SettingId' , 'SettingType' , 'IntegerArray' , 
			 ), 4, (4, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetDouble' , 'ClientId' , 'SettingId' , 'SettingType' , 'DefaultValue' , 
			 'retval' , ), 5, (5, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (5, 49, '0.0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PutDouble' , 'ClientId' , 'SettingId' , 'SettingType' , 'DoubleVal' , 
			 ), 6, (6, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetDoubleArray' , 'ClientId' , 'SettingId' , 'SettingType' , 'retval' , 
			 ), 7, (7, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PutDoubleArray' , 'ClientId' , 'SettingId' , 'SettingType' , 'DoubleArray' , 
			 ), 8, (8, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetString' , 'ClientId' , 'SettingId' , 'SettingType' , 'DefaultValue' , 
			 'retval' , ), 9, (9, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (8, 49, "'0'", None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 32, None, None) , 0 , )),
	(( 'PutString' , 'ClientId' , 'SettingId' , 'SettingType' , 'StringVal' , 
			 ), 10, (10, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetStringArray' , 'ClientId' , 'SettingId' , 'SettingType' , 'retval' , 
			 ), 11, (11, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PutStringArray' , 'ClientId' , 'SettingId' , 'SettingType' , 'StringArray' , 
			 ), 12, (12, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSetupParameter_vtables_dispatch_ = 1
IMGCPCBSetupParameter_vtables_ = [
	(( 'PutUserLayer' , 'sName' , 'ppUserLayer' , ), 1, (1, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'pUnit' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'TestpointCellName' , 'pName' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'TestpointSide' , 'pSide' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ViaLayerRanges' , 'ViaLayerRanges' , ), 5, (5, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TestpointCellName' , 'pName' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TestpointSide' , 'pSide' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'TestPointRefDesPrefix' , 'pTestPointRefDesPrefix' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TestPointRefDesPrefix' , 'pTestPointRefDesPrefix' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UseAssemblyAsTestPointObstructs' , 'pValue' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UseAssemblyAsTestPointObstructs' , 'pValue' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PutViaSpan' , 'StartLayer' , 'EndLayer' , 'pDefaultViaPadstack' , 'ppViaSpan' , 
			 ), 8, (8, (), [ (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , (16393, 10, None, "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'CurrentPadstackTechnologyName' , 'pName' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IMGCPCBShearingHole_vtables_dispatch_ = 1
IMGCPCBShearingHole_vtables_ = [
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 40, (40, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 32, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 40, (40, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 32, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 41, (41, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 43, (43, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 44, (44, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

IMGCPCBShearingHoles_vtables_dispatch_ = 1
IMGCPCBShearingHoles_vtables_ = [
	(( 'Item' , 'Index' , 'ppShearingHole' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pShearingHole' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSheet_vtables_dispatch_ = 1
IMGCPCBSheet_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 1, (1, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DrawingTemplate' , 'pTemplate' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Instances' , 'instanceNames' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Schemes' , 'schemeNames' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PutInstanceScheme' , 'InstanceName' , 'schemeName' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (8, 49, "''", None) , ], 1 , 1 , 4 , 0 , 104 , (3, 32, None, None) , 0 , )),
	(( 'Boards' , 'eSelectOnly' , 'ppBoards' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Boards' , 'eSelectOnly' , 'ppBoards' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Panels' , 'eSelectOnly' , 'ppPanels' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Panels' , 'eSelectOnly' , 'ppPanels' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{C0072D28-C269-4E34-86D1-FE550D7FD7AB}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 8, (8, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerGfxs' , 'eSelectOnly' , 'sLayerOnly' , 'ppGfxs' , ), 8, (8, (), [ 
			 (3, 49, '0', None) , (8, 49, "'*'", None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'bIncludeComponentText' , 'ppTexts' , 
			 ), 9, (9, (), [ (3, 49, '0', None) , (8, 49, "'*'", None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 32, None, None) , 0 , )),
	(( 'UserLayerTexts' , 'eSelectOnly' , 'sLayerOnly' , 'bIncludeComponentText' , 'ppTexts' , 
			 ), 9, (9, (), [ (3, 49, '0', None) , (8, 49, "'*'", None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 32, None, None) , 0 , )),
	(( 'SheetOutline' , 'ppSheetOutline' , ), 10, (10, (), [ (16393, 10, None, "IID('{8906B110-98F5-44A5-BD6C-DCE96AC36C87}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SheetNumber' , 'pNumber' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SheetNumber' , 'pNumber' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 14, (14, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 32, None, None) , 0 , )),
	(( 'ConductorLayerGfxs2' , 'pArrayOfSelectType' , 'eSelectOnly' , 'nLayerOnly' , 'ppGfxs' , 
			 ), 14, (14, (), [ (16396, 49, "''", None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 32, None, None) , 0 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'Side' , 'ppGfxs' , 
			 ), 15, (15, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerGfxs' , 'eSelectType' , 'eSelectOnly' , 'Side' , 'ppGfxs' , 
			 ), 15, (15, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'bIncludeComponentText' , 'ppTexts' , 
			 ), 16, (16, (), [ (3, 49, '0', None) , (3, 49, '0', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ConductorLayerTexts' , 'eSelectOnly' , 'nLayerOnly' , 'bIncludeComponentText' , 'ppTexts' , 
			 ), 16, (16, (), [ (3, 49, '0', None) , (3, 49, '0', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'bIncludeComponentText' , 
			 'ppTexts' , ), 17, (17, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'FabricationLayerTexts' , 'eSelectType' , 'eSelectOnly' , 'eLayerOnly' , 'bIncludeComponentText' , 
			 'ppTexts' , ), 17, (17, (), [ (3, 49, '-1', None) , (3, 49, '0', None) , (3, 49, '0', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Components' , 'eSelectOnly' , 'eCompType' , 'eCelltype' , 'ppComps' , 
			 ), 22, (22, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '4', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Components' , 'eSelectOnly' , 'eCompType' , 'eCelltype' , 'ppComps' , 
			 ), 22, (22, (), [ (3, 49, '0', None) , (3, 49, '-1', None) , (3, 49, '4', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Contours' , 'eSelectOnly' , 'ppContours' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Contours' , 'eSelectOnly' , 'ppContours' , ), 24, (24, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Groups' , 'eSelectOnly' , 'topMostRootGroup' , 'ppGroups' , ), 25, (25, (), [ 
			 (3, 49, '0', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Groups' , 'eSelectOnly' , 'topMostRootGroup' , 'ppGroups' , ), 25, (25, (), [ 
			 (3, 49, '0', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DrillDrawings' , 'eSelectOnly' , 'ppDrillDrawings' , ), 26, (26, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DrillDrawings' , 'eSelectOnly' , 'ppDrillDrawings' , ), 26, (26, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DetailedViews' , 'eSelectOnly' , 'ppDetailViews' , ), 27, (27, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DetailedViews' , 'eSelectOnly' , 'ppDetailViews' , ), 27, (27, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSheetOutline_vtables_dispatch_ = 1
IMGCPCBSheetOutline_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSheets_vtables_dispatch_ = 1
IMGCPCBSheets_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppView' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pView' , ), 30, (30, (), [ (9, 1, None, "IID('{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSketchPlan_vtables_dispatch_ = 1
IMGCPCBSketchPlan_vtables_ = [
	(( 'BitWidth' , 'pBitWidth' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Shielding' , 'pShielding' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'TracesBetween' , 'pTracesBetween' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNet' , 'ppNet' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ShieldingNetClass' , 'ppNetClass' , ), 47, (47, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 48, (48, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 50, (50, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Nets' , 'ppNets' , ), 52, (52, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 53, (53, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 54, (54, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 54, (54, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ShieldGroup' , 'ppShieldNetGroup' , ), 55, (55, (), [ (16393, 10, None, "IID('{651025AE-83BA-4C30-BDA0-8BB7EB01116F}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Markers' , 'Markers' , ), 56, (56, (), [ (16393, 10, None, "IID('{3CCA32E2-09D7-42AB-9D14-565025B422B2}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 64 , )),
	(( 'FromTos' , 'FromTos' , ), 57, (57, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
	(( 'IsSketchPlanRouted' , 'IsSketchPlanRouted' , ), 58, (58, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 59, (59, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 64 , )),
	(( 'FromTos' , 'FromTos' , ), 57, (57, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 8 , 4 , 0 , 392 , (3, 0, None, None) , 64 , )),
	(( 'RemoveFromTos' , 'FromTos' , ), 60, (60, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 64 , )),
]

IMGCPCBSketchPlanVia_vtables_dispatch_ = 1
IMGCPCBSketchPlanVia_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FromLayer' , 'pLayer' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ToLayer' , 'pLayer' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SketchPlans' , 'ppSketchPlan' , ), 6, (6, (), [ (16393, 10, None, "IID('{2F037114-93ED-4C02-B835-6EC2ECD32E3C}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
	(( 'ObjectClass' , 'pClass' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 64 , )),
	(( 'Geometry' , 'ppGeometry' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSketchPlanVias_vtables_dispatch_ = 1
IMGCPCBSketchPlanVias_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppSketchPlanVia' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{252A33B0-814C-48B3-BEB6-36FC5550AE43}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pSketchPlanVia' , ), 30, (30, (), [ (9, 1, None, "IID('{252A33B0-814C-48B3-BEB6-36FC5550AE43}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBSketchPlans_vtables_dispatch_ = 1
IMGCPCBSketchPlans_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppSketchPlan' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pSketchPlan' , ), 30, (30, (), [ (9, 1, None, "IID('{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBStackupScheme_vtables_dispatch_ = 1
IMGCPCBStackupScheme_vtables_ = [
	(( 'Name' , 'pName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LayerStack' , 'ppLayerObjects' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LayerStack' , 'ppLayerObjects' , ), 2, (2, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , ], 1 , 8 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ObjectClass' , 'pClass' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBStackupSchemes_vtables_dispatch_ = 1
IMGCPCBStackupSchemes_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppStackupScheme' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0D170493-3863-40A7-B222-C70CDC73B07A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pStackupScheme' , ), 30, (30, (), [ (9, 1, None, "IID('{0D170493-3863-40A7-B222-C70CDC73B07A}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTargetArea_vtables_dispatch_ = 1
IMGCPCBTargetArea_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 1, (1, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pSelected' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RouteTargets' , 'ppRouteTargets' , ), 7, (7, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA4}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PutRouteTarget' , 'pPin' , 'pNet' , 'dX' , 'dY' , 
			 'eUnit' , 'sName' , 'ppRouteTarget' , ), 9, (9, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}')") , 
			 (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (8, 49, "''", None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 32, None, None) , 64 , )),
]

IMGCPCBTargetAreas_vtables_dispatch_ = 1
IMGCPCBTargetAreas_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppTargetArea' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pTargetArea' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTeardrop_vtables_dispatch_ = 1
IMGCPCBTeardrop_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'PadstackObjects' , 'ppPadstackObjects' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 44, (44, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 45, (45, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 46, (46, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 47, (47, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 49, (49, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTeardropDefault_vtables_dispatch_ = 1
IMGCPCBTeardropDefault_vtables_ = [
	(( 'LengthRatio' , 'pRatio' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PreferredLength' , 'eUnit' , 'pLength' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PreferredLength' , 'eUnit' , 'pLength' , ), 2, (2, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SecondaryLength' , 'eUnit' , 'pLength' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SecondaryLength' , 'eUnit' , 'pLength' , ), 3, (3, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MaxPadToPadDistance' , 'eUnit' , 'pDistance' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MaxPadToPadDistance' , 'eUnit' , 'pDistance' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IncludeFixLockTraces' , 'pInclude' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeRectPads' , 'pExclude' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeSMDPads' , 'pExclude' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeMultiViaToMultiVia' , 'pExclude' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'MaxMultiViaToMultiViaDistance' , 'eUnit' , 'pDistance' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'MaxMultiViaToMultiViaDistance' , 'eUnit' , 'pDistance' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeMultiViaToVia' , 'pExclude' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'MaxMultiViaToViaDistance' , 'eUnit' , 'pDistance' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'MaxMultiViaToViaDistance' , 'eUnit' , 'pDistance' , ), 14, (14, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeMultiViaToSMDPad' , 'pExclude' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MaxMultiViaToSMDPadDistance' , 'eUnit' , 'pDistance' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'MaxMultiViaToSMDPadDistance' , 'eUnit' , 'pDistance' , ), 16, (16, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTeardropDefaults_vtables_dispatch_ = 1
IMGCPCBTeardropDefaults_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppTeardropDefault' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pTeardropDefault' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTeardrops_vtables_dispatch_ = 1
IMGCPCBTeardrops_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppTeardrop' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pTeardrop' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTestFixtureOutline_vtables_dispatch_ = 1
IMGCPCBTestFixtureOutline_vtables_ = [
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTieLeg_vtables_dispatch_ = 1
IMGCPCBTieLeg_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'PlaneShape' , 'ppPlaneShape' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 64 , )),
	(( 'ActualPlaneShape' , 'ppActualPlaneShape' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 64 , )),
	(( 'IsModified' , 'Modified' , ), 47, (47, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 48, (48, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 50, (50, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 51, (51, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 51, (51, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 52, (52, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 53, (53, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTieLegs_vtables_dispatch_ = 1
IMGCPCBTieLegs_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppTieLeg' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pTieLeg' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTiebar_vtables_dispatch_ = 1
IMGCPCBTiebar_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'eUnit' , 'pWidth' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'eUnit' , 'pWidth' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetShortedNets' , 'shortNets' , ), 43, (43, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionPoints' , 'eUnit' , 'pSafeArrayOfPoints' , ), 44, (44, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ConnectionPoints' , 'eUnit' , 'pSafeArrayOfPoints' , ), 44, (44, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTiebars_vtables_dispatch_ = 1
IMGCPCBTiebars_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppTiebar' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8D64846E-3942-4DD1-AF9E-102981DA52D2}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBToolingHole_vtables_dispatch_ = 1
IMGCPCBToolingHole_vtables_ = [
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 40, (40, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 32, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 40, (40, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 32, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 41, (41, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 42, (42, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 43, (43, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 44, (44, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

IMGCPCBToolingHoles_vtables_dispatch_ = 1
IMGCPCBToolingHoles_vtables_ = [
	(( 'Item' , 'Index' , 'ppToolingHole' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pToolingHole' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTrace_vtables_dispatch_ = 1
IMGCPCBTrace_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Vp' , 'eUnit' , 'pVelocity' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Vp' , 'eUnit' , 'pVelocity' , ), 45, (45, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Zo' , 'pImpedance' , ), 46, (46, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'eUnit' , 'pLength' , ), 47, (47, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'eUnit' , 'pLength' , ), 47, (47, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 8 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 48, (48, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 87, (87, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 49, (49, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 50, (50, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 52, (52, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 50, (50, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 64 , )),
	(( 'TraceSegments' , 'eSelectOnly' , 'ppTraceSegments' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E9383918-8714-45AA-BA68-B0FDB928473C}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'TraceSegments' , 'eSelectOnly' , 'ppTraceSegments' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E9383918-8714-45AA-BA68-B0FDB928473C}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Split' , 'x' , 'y' , 'eUnit' , 'ppTraces' , 
			 ), 54, (54, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}')") , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Combine' , 'inputTrace' , ), 55, (55, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 56, (56, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 56, (56, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Placed' , 'pPlaced' , ), 57, (57, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 58, (58, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTraceSegment_vtables_dispatch_ = 1
IMGCPCBTraceSegment_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'ppGeometry' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Trace' , 'ppTrace' , ), 3, (3, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Point1X' , 'eUnit' , 'pX' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Point1X' , 'eUnit' , 'pX' , ), 4, (4, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Point1Y' , 'eUnit' , 'pY' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Point1Y' , 'eUnit' , 'pY' , ), 5, (5, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Point2X' , 'eUnit' , 'pX' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Point2X' , 'eUnit' , 'pX' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Point2Y' , 'eUnit' , 'pY' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Point2Y' , 'eUnit' , 'pY' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTraceSegments_vtables_dispatch_ = 1
IMGCPCBTraceSegments_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppTrace' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BCC7826E-B004-43A2-A084-A76329E08D2B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pTraceSegment' , ), 30, (30, (), [ (9, 1, None, "IID('{BCC7826E-B004-43A2-A084-A76329E08D2B}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 35, (35, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTracedrop_vtables_dispatch_ = 1
IMGCPCBTracedrop_vtables_ = [
	(( 'Net' , 'ppNet' , ), 41, (41, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 64 , )),
	(( 'Anchor' , 'pAnchorType' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'PadstackObjects' , 'ppPadstackObjects' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 44, (44, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 45, (45, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 46, (46, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 47, (47, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 49, (49, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTracedrops_vtables_dispatch_ = 1
IMGCPCBTracedrops_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppBreakoutTrace' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pBreakoutTrace' , ), 30, (30, (), [ (9, 1, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTraces_vtables_dispatch_ = 1
IMGCPCBTraces_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppTrace' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pTrace' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 33, (33, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TraceLength' , 'eUnit' , 'pLength' , ), 35, (35, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TraceLength' , 'eUnit' , 'pLength' , ), 35, (35, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMGCPCBTuningMeter_vtables_dispatch_ = 1
IMGCPCBTuningMeter_vtables_ = [
	(( 'Update' , 'dMinLength' , 'dMaxLength' , 'dTargetLength' , 'dRoutedLength' , 
			 'dEstimatedLength' , 'strUnit' , 'isWholeNetSolution' , 'isApproximateSolution' , ), 0, (0, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (8, 1, None, None) , (11, 49, 'False', None) , (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'pVisible' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'pVisible' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMGCPCBUserLayer_vtables_dispatch_ = 1
IMGCPCBUserLayer_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 1, (1, (), [ ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IMGCPCBUserLayerGfx_vtables_dispatch_ = 1
IMGCPCBUserLayerGfx_vtables_ = [
	(( 'Name' , 'pName' , ), 30, (30, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Layer' , 'pLayer' , ), 31, (31, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'pLayerName' , ), 32, (32, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsDimensionGfx' , 'pDimensionGfx' , ), 33, (33, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 34, (34, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 35, (35, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 36, (36, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 36, (36, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 8 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 37, (37, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'IsConstructionElement' , 'val' , ), 38, (38, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ChangeType' , 'eObjectClass' , 'pLayerObject' , 'ppChangedObject' , ), 39, (39, (), [ 
			 (3, 0, None, None) , (9, 0, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 40, (40, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 41, (41, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 64 , )),
	(( 'Reserved' , 'bVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 44, (44, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 45, (45, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 46, (46, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'PositionX' , 'eUnit' , 'pX' , ), 46, (46, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 47, (47, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'PositionY' , 'eUnit' , 'pY' , ), 47, (47, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 48, (48, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
]

IMGCPCBUserLayerGfxs_vtables_dispatch_ = 1
IMGCPCBUserLayerGfxs_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppGfx' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pGfx' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMGCPCBUserLayerText_vtables_dispatch_ = 1
IMGCPCBUserLayerText_vtables_ = [
	(( 'Layer' , 'pLayer' , ), 30, (30, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'LayerName' , 'pLayerName' , ), 31, (31, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'IsDimensionText' , 'pDimensionText' , ), 32, (32, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 33, (33, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 33, (33, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 8 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SetTextType' , 'pType' , ), 34, (34, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 64 , )),
	(( 'ChangeType' , 'eObjectClass' , 'pLayerObject' , 'ppChangedText' , ), 35, (35, (), [ 
			 (3, 0, None, None) , (9, 0, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 64 , )),
	(( 'UniqueId' , 'identifier' , ), 36, (36, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 38, (38, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 39, (39, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DisplayCondition' , 'eCondition' , ), 39, (39, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 64 , )),
	(( 'FindProperty' , 'sName' , 'ppProperty' , ), 41, (41, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PutProperty' , 'sName' , 'sValue' , 'ppProperty' , ), 42, (42, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}')") , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'ppProperties' , ), 43, (43, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 44, (44, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 45, (45, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'OriginalLayer' , 'eLayer' , ), 40, (40, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 64 , )),
	(( 'FixLock' , 'pAnchorType' , ), 46, (46, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 46, (46, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 47, (47, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'StrokeText' , 'units' , 'textPoints' , ), 48, (48, (), [ (3, 49, '0', None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
]

IMGCPCBUserLayerTexts_vtables_dispatch_ = 1
IMGCPCBUserLayerTexts_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppText' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pText' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBUserLayers_vtables_dispatch_ = 1
IMGCPCBUserLayers_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppUserLayer' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pUserlayer' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBUserPad_vtables_dispatch_ = 1
IMGCPCBUserPad_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'UserLayer' , 'ppUserLayer' , ), 1, (1, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Geometries' , 'ppGeometries' , ), 2, (2, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ShapeType' , 'eShapeType' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 5, (5, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddGeometry' , 'PointsArray' , 'RemoveExisting' , 'Unit' , ), 6, (6, (), [ 
			 (16396, 1, None, None) , (11, 49, 'True', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 64 , )),
]

IMGCPCBUserPads_vtables_dispatch_ = 1
IMGCPCBUserPads_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppUserPad' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0A6E0E06-2267-49D6-AC17-548E09AE85CD}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pUserPad' , ), 30, (30, (), [ (9, 1, None, "IID('{0A6E0E06-2267-49D6-AC17-548E09AE85CD}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 31, (31, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IMGCPCBUtility_vtables_dispatch_ = 1
IMGCPCBUtility_vtables_ = [
	(( 'Dummy' , ), 1, (1, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 64 , )),
	(( 'CreateRectXYR' , 'dMinX' , 'dMinY' , 'dMaxX' , 'dMaxY' , 
			 'pPoints' , ), 2, (2, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CreateCircleXYR' , 'dCenterX' , 'dCenterY' , 'dRadiues' , 'pPoints' , 
			 ), 3, (3, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MemoryUsage' , 'pKBytes' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 64 , )),
	(( 'ConvertUnit' , 'dValue' , 'eFromUnit' , 'eToUnit' , 'pRetValue' , 
			 ), 5, (5, (), [ (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NewColor' , 'nRed' , 'nGreen' , 'nBlue' , 'ppColor' , 
			 ), 7, (7, (), [ (2, 49, '255', None) , (2, 49, '255', None) , (2, 49, '255', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NewColorPattern' , 'nRed' , 'nGreen' , 'nBlue' , 'nAlphaBlend' , 
			 'nPattern' , 'bTransparent' , 'bOutline' , 'ppColorPattern' , ), 8, (8, (), [ 
			 (2, 49, '255', None) , (2, 49, '255', None) , (2, 49, '255', None) , (3, 49, '100', None) , (2, 49, '0', None) , 
			 (11, 49, 'False', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'NewExtrema' , 'MinX' , 'MinY' , 'MaxX' , 'MaxY' , 
			 'eUnit' , 'ppExtrema' , ), 9, (9, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'NewComponents' , 'ppComponents' , ), 10, (10, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'NewNets' , 'ppNets' , ), 11, (11, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'NewLayerObject' , 'ppLayerObject' , ), 12, (12, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'NewLayerObjects' , 'ppLayerObjects' , ), 13, (13, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FindApplication' , 'vAppDescriptor' , 'ppApplication' , ), 18, (18, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'NewObjects' , 'ppObjects' , ), 19, (19, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CreateScriptObject' , 'Script' , 'CreateFromFile' , 'pDisp' , ), 20, (20, (), [ 
			 (8, 1, None, None) , (11, 49, 'True', None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 64 , )),
	(( 'NewLayerRanges' , 'ppLayerRanges' , ), 21, (21, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'NewLayerRange' , 'StartLayer' , 'EndLayer' , 'ppLayerRange' , ), 22, (22, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}')") , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GetUniqueIdString' , 'UniqueId' , 'UniqueIdString' , ), 23, (23, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'IsEqual' , 'UniqueId1' , 'UniqueId2' , 'ret' , ), 24, (24, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'NewObjectFilter' , 'ppObjectFilter' , ), 25, (25, (), [ (16393, 10, None, "IID('{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}')") , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Globals' , 'ppDispatch' , ), 26, (26, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'NewGroups' , 'ppGroups' , ), 27, (27, (), [ (16393, 10, None, "IID('{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'CreateLineXYR' , 'startX' , 'startY' , 'endX' , 'endY' , 
			 'pPoints' , ), 28, (28, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'NewFromTos' , 'ppFromTos' , ), 29, (29, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}')") , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 64 , )),
	(( 'NewPhysicalReuseLibraryCircuits' , 'ppPhysicalReuseLibraryCircuits' , ), 30, (30, (), [ (16393, 10, None, "IID('{4E0A6DAF-4C0D-415C-B43D-A6A1ED666FE6}')") , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IMGCPCBVariantInfo_vtables_dispatch_ = 1
IMGCPCBVariantInfo_vtables_ = [
	(( 'Variants' , 'retval' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PutVariant' , 'sVariantSpec' , 'ReservedForFutureUse' , 'ReserverdForFutureUse2' , 'bPreserve' , 
			 ), 2, (2, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (11, 49, 'True', None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RemoveVariant' , 'sVariantSpec' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RemoveAllVariants' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'pParent' , ), 5, (5, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IMGCPCBVia_vtables_dispatch_ = 1
IMGCPCBVia_vtables_ = [
	(( 'StartLayer' , 'pLayer' , ), 40, (40, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pLayer' , ), 41, (41, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutDefaults' , 'nLayer' , 'ppBreakoutDefaults' , ), 42, (42, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'TeardropDefaults' , 'nLayer' , 'ppTeardropDefaults' , ), 43, (43, (), [ (3, 49, '0', None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Teardrops' , 'ppTeardrops' , ), 44, (44, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'BreakoutTraces' , 'ppBreakoutTraces' , ), 45, (45, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 64 , )),
	(( 'ConnectedObjects' , 'pObjects' , ), 46, (46, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Subnet' , 'pSubnet' , ), 47, (47, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'PutTestPoint' , 'ppTestPoint' , ), 48, (48, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}')") , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'IsMultiViaMember' , 'bVal' , ), 49, (49, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 50, (50, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'IsSkipVia' , 'bVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 52, (52, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 456 , (3, 32, None, None) , 0 , )),
	(( 'UserPads' , 'sLayerOnly' , 'ppUserPads' , ), 52, (52, (), [ (8, 49, "'*'", None) , 
			 (16393, 10, None, "IID('{ACC37237-2F98-403B-8783-C21D7026F5B4}')") , ], 1 , 2 , 4 , 0 , 456 , (3, 32, None, None) , 0 , )),
	(( 'TieLegType' , 'nLayer' , 'pTieLegNumber' , ), 53, (53, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'TieLegType' , 'nLayer' , 'pTieLegNumber' , ), 53, (53, (), [ (3, 49, '0', None) , 
			 (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'TieLegRotation' , 'nLayer' , 'pTieLegRotation' , ), 54, (54, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'TieLegRotation' , 'nLayer' , 'pTieLegRotation' , ), 54, (54, (), [ (3, 49, '0', None) , 
			 (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 55, (55, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 55, (55, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'TieLegWidth' , 'nLayer' , 'eUnit' , 'pWidth' , ), 55, (55, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 56, (56, (), [ 
			 (3, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 56, (56, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'TieLegClearance' , 'nLayer' , 'eUnit' , 'pClearance' , ), 56, (56, (), [ 
			 (3, 49, '0', None) , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'UsePadstackThermalDefaults' , 'nLayer' , 'pUsePadstackThermalDefault' , ), 57, (57, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'UsePadstackThermalDefaults' , 'nLayer' , 'pUsePadstackThermalDefault' , ), 57, (57, (), [ (3, 49, '0', None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 58, (58, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'ReservedBy' , 'bVal' , ), 60, (60, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 61, (61, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 61, (61, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Tracedrops' , 'ppTracedrops' , ), 62, (62, (), [ (16393, 10, None, "IID('{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}')") , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'Placed' , 'pPlaced' , ), 63, (63, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'AddShortedNets' , 'nLayer' , 'shortedNets' , ), 64, (64, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'RemoveShortedNets' , 'nLayer' , 'shortedNets' , ), 65, (65, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'GetShortedNets' , 'nLayer' , 'shortNets' , ), 66, (66, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'MultiBoardOutline' , 'ppMultiBoardOutline' , ), 67, (67, (), [ (16393, 10, None, "IID('{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}')") , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'IsConnectedToPathOrAreaOnLayer' , 'nLayer' , 'bConnected' , ), 68, (68, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'PadGrowError' , 'nLayer' , 'bPadGrowFailed' , ), 69, (69, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'IsStitchVia' , 'bVal' , ), 70, (70, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
]

IMGCPCBViaSpan_vtables_dispatch_ = 1
IMGCPCBViaSpan_vtables_ = [
	(( 'Name' , 'pViaSpan' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'StartLayer' , 'pStartLayer' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'EndLayer' , 'pEndLayer' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaPadstack' , 'ppDefaultPadstack' , ), 3, (3, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DefaultViaPadstack' , 'ppDefaultPadstack' , ), 3, (3, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AllowedViaPadstacks' , 'ppAllowedPadstacks' , ), 4, (4, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddAllowedViaPadstack' , 'pPadstack' , ), 5, (5, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'RemoveAllowedViaPadstack' , 'pPadstack' , ), 6, (6, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Capacitance' , 'pCapacitance' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Capacitance' , 'pCapacitance' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Inductance' , 'pInductance' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Inductance' , 'pInductance' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Delay' , 'pDelay' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Delay' , 'pDelay' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eUnit' , 'pGrid' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eUnit' , 'pGrid' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eUnit' , 'pGrid' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Grid' , 'eUnit' , 'pGrid' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Skip' , 'pSkip' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Skip' , 'pSkip' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TraceClearanceOverride' , 'eUnit' , 'dValue' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TraceClearanceOverride' , 'eUnit' , 'dValue' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TraceClearanceOverride' , 'eUnit' , 'dValue' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'TraceClearanceOverride' , 'eUnit' , 'dValue' , ), 12, (12, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'GeneralViaClearanceOverride' , 'pViaSpan' , 'eUnit' , 'dValue' , ), 13, (13, (), [ 
			 (9, 49, '0', "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GeneralViaClearanceOverride' , 'pViaSpan' , 'eUnit' , 'dValue' , ), 13, (13, (), [ 
			 (9, 49, '0', "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GeneralViaClearanceOverride' , 'pViaSpan' , 'eUnit' , 'dValue' , ), 13, (13, (), [ 
			 (9, 49, '0', "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GeneralViaClearanceOverride' , 'pViaSpan' , 'eUnit' , 'dValue' , ), 13, (13, (), [ 
			 (9, 49, '0', "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SameNetViaClearanceOverride' , 'pViaSpan' , 'eUnit' , 'pValue' , ), 14, (14, (), [ 
			 (9, 49, '0', "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SameNetViaClearanceOverride' , 'pViaSpan' , 'eUnit' , 'pValue' , ), 14, (14, (), [ 
			 (9, 49, '0', "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , (3, 49, '0', None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SameNetViaClearanceOverride' , 'pViaSpan' , 'eUnit' , 'pValue' , ), 14, (14, (), [ 
			 (9, 49, '0', "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SameNetViaClearanceOverride' , 'pViaSpan' , 'eUnit' , 'pValue' , ), 14, (14, (), [ 
			 (9, 49, '0', "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SameNetViaClearanceOverrideMode' , 'pViaSpan' , 'pMode' , ), 15, (15, (), [ (9, 1, None, "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SameNetViaClearanceOverrideMode' , 'pViaSpan' , 'pMode' , ), 15, (15, (), [ (9, 1, None, "IID('{C4A8992A-7CE8-4925-963C-462E3FC2623E}')") , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IMGCPCBViaUtility_vtables_dispatch_ = 1
IMGCPCBViaUtility_vtables_ = [
	(( 'AddViaStitchArea' , ), 1, (1, (), [ ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
]

IMGCPCBVias_vtables_dispatch_ = 1
IMGCPCBVias_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppVia' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pVia' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 31, (31, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , ), 32, (32, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 33, (33, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CurrentPadstack' , ), 35, (35, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}')") , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMGCPCBView_vtables_dispatch_ = 1
IMGCPCBView_vtables_ = [
	(( 'Name' , 'pName' , ), 0, (0, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Pan' , 'dX' , 'dY' , 'eUnit' , ), 1, (1, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SetExtentsToAll' , ), 2, (2, (), [ ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SetExtentsToBoard' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SetExtents' , 'dMinX' , 'dMinY' , 'dMaxX' , 'dMaxY' , 
			 'eUnit' , ), 4, (4, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetExtentsToSelection' , 'bIncludeHighlightedThings' , 'bIncludeText' , ), 5, (5, (), [ (11, 49, 'False', None) , 
			 (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CenterX' , 'eUnit' , 'pX' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CenterX' , 'eUnit' , 'pX' , ), 6, (6, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CenterY' , 'eUnit' , 'pY' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CenterY' , 'eUnit' , 'pY' , ), 7, (7, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Extrema' , 'ppExtrema' , ), 8, (8, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxPutLine' , 'dX1' , 'dY1' , 'e1' , 'dX2' , 
			 'dY2' , 'e2' , 'nTagID' , 'dWidth' , 'pColor' , 
			 'eUnit' , ), 12, (12, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 49, '0.0', None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxPutRect' , 'dX1' , 'dY1' , 'e1' , 'dX2' , 
			 'dY2' , 'e2' , 'nTagID' , 'dWidth' , 'pColor' , 
			 'eUnit' , ), 13, (13, (), [ (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 49, '0.0', None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxPutArcByCenter' , 'dX1' , 'dY1' , 'dXc' , 'dYc' , 
			 'ec' , 'dX2' , 'dY2' , 'e2' , 'bClockwise' , 
			 'nTagID' , 'dWidth' , 'pColor' , 'eUnit' , ), 14, (14, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , 
			 (5, 49, '0.0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxDeleteByTag' , 'nTagID' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxDrawAnyUndrawn' , ), 16, (16, (), [ ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'MousePositionX' , 'eUnit' , 'pX' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MousePositionX' , 'eUnit' , 'pX' , ), 17, (17, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MousePositionY' , 'eUnit' , 'pY' , ), 18, (18, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'MousePositionY' , 'eUnit' , 'pY' , ), 18, (18, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PopupMenu' , 'nRows' , 'vBSTRArray' , 'pRowSelected' , ), 19, (19, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxPutArcFillet' , 'dX1' , 'dY1' , 'dXIntersect' , 'dYIntersect' , 
			 'dXMouse' , 'dYMouse' , 'eMouse' , 'dRadius' , 'nTagID' , 
			 'dWidth' , 'pColor' , 'eUnit' , ), 20, (20, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (3, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (5, 49, '0.0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , 
			 (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxGetTag' , 'pTagID' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SetExtentsToExtrema' , 'pExtrema' , ), 22, (22, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 23, (23, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DisplayControl' , 'ppDC' , ), 24, (24, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxPutText' , 'sString' , 'x' , 'y' , 'e' , 
			 'dHeight' , 'dRotation' , 'dPenWidth' , 'sFont' , 'eAttr' , 
			 'eHoriz' , 'eVert' , 'nTagID' , 'pColor' , 'bShowBoundingBox' , 
			 'eUnit' , 'eAngleUnit' , ), 25, (25, (), [ (8, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , (11, 49, 'True', None) , (3, 49, '0', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxSnapToGridX' , 'XCoord' , 'eUnit' , 'pVal' , ), 30, (30, (), [ 
			 (5, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 64 , )),
	(( 'MotionGfxSnapToGridY' , 'YCoord' , 'eUnit' , 'pVal' , ), 31, (31, (), [ 
			 (5, 1, None, None) , (3, 49, '0', None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 64 , )),
	(( 'SetExtentsEx' , 'dMinX' , 'dMinY' , 'dMaxX' , 'dMaxY' , 
			 'bOversize' , 'eUnit' , ), 32, (32, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (11, 49, 'False', None) , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SetExtentsToExtremaEx' , 'pExtrema' , 'bOversize' , ), 33, (33, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , 
			 (11, 49, 'False', None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'eViewType' , ), 36, (36, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 37, (37, (), [ ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'pName' , ), 0, (0, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ViewContentsExtrema' , 'ppExtrema' , ), 9, (9, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PixelWidth' , 'eUnit' , 'Width' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PixelWidth' , 'eUnit' , 'Width' , ), 10, (10, (), [ (3, 49, '0', None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ProgID' , '_progID' , ), 38, (38, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 64 , )),
	(( 'CustomViewControl' , '_customViewControl' , ), 39, (39, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 64 , )),
	(( 'SaveCustomEvent' , '_eventDescription' , ), 40, (40, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 64 , )),
	(( 'SetIcon' , 'libraryPath' , 'iconId' , ), 41, (41, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 64 , )),
	(( 'OriginalName' , 'pName' , ), 42, (42, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'MotionGfxPutPointsArray' , 'PointsArray' , 'eMouse' , 'nTagID' , 'dWidth' , 
			 'pColor' , 'eUnit' , ), 43, (43, (), [ (16396, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (5, 49, '0.0', None) , (9, 49, '0', "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}')") , (3, 49, '0', None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'TuningMeter' , 'ppTuningMeter' , ), 44, (44, (), [ (16393, 10, None, "IID('{C08852D9-8D46-4AF5-8957-C02383D370A8}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 64 , )),
	(( 'LockMotionGfx' , ), 45, (45, (), [ ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'UnlockMotionGfx' , ), 46, (46, (), [ ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'RadialGrid' , 'ppVal' , ), 47, (47, (), [ (16393, 10, None, "IID('{36F191D7-5E03-4303-BBE3-53541ED04939}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'IsSelectable' , 'UniqueIdOrObject' , 'pSelectable' , ), 48, (48, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'IsVisible' , 'UniqueIdOrObject' , 'pVal' , ), 49, (49, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Activate' , ), 50, (50, (), [ ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'InstanceGuid' , 'sGUID' , ), 51, (51, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'DumpContents' , ), 52, (52, (), [ ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 64 , )),
	(( 'ShowCurrentPopupMenu' , ), 53, (53, (), [ ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ShowCurrentPopupMenuEx' , 'vBSTRArray' , 'pRowSelected' , ), 54, (54, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'IsMouseCursorInView' , 'pMouseInView' , ), 55, (55, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 64 , )),
]

IMGCPCBViews_vtables_dispatch_ = 1
IMGCPCBViews_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppView' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pView' , ), 30, (30, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 32, (32, (), [ ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 34, (34, (), [ ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMGCPCBWireBondGuide_vtables_dispatch_ = 1
IMGCPCBWireBondGuide_vtables_ = [
	(( 'Net' , 'ppNet' , ), 17, (17, (), [ (16393, 10, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Net' , 'ppNet' , ), 17, (17, (), [ (9, 1, None, "IID('{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}')") , ], 1 , 8 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'FixLock' , 'pAnchorType' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Facement' , 'pFacement' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Facement' , 'pFacement' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'identifier' , ), 20, (20, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Parent' , 'ppParent' , ), 21, (21, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Reserved' , 'bVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CanBeModified' , 'bVal' , ), 60, (60, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IMGCPCBWireBondGuides_vtables_dispatch_ = 1
IMGCPCBWireBondGuides_vtables_ = [
	(( 'Item' , 'vIndex' , 'ppWireBondGuide' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'pWireBondGuide' , ), 4, (4, (), [ (9, 1, None, "IID('{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMGCPCBXProbe_vtables_dispatch_ = 1
IMGCPCBXProbe_vtables_ = [
	(( 'Fitted' , 'pVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Highlighted' , 'pVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Selected' , 'pVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsValid' , 'pValid' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PlaceBySchematic' , 'pVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PlaceBySchematic' , 'pVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

RecordMap = {
}

CLSIDToClassMap = {
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}' : IMGCPCBApplication,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}' : IMGCPCBDocument,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}' : IMGCPCBView,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}' : IMGCPCBExtrema,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}' : IMGCPCBColor,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}' : IMGCPCBDisplayControl,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED74}' : IMGCPCBGlobalDisplayControl,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}' : IMGCPCBColorPattern,
	'{C08852D9-8D46-4AF5-8957-C02383D370A8}' : IMGCPCBTuningMeter,
	'{36F191D7-5E03-4303-BBE3-53541ED04939}' : IMGCPCBRadialGrid,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED28}' : IMGCPCBXProbe,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}' : IMGCPCBComponents,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED62}' : IMGCPCBBaseCollection,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}' : IMGCPCBComponent,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}' : IMGCPCBPins,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}' : IMGCPCBPin,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}' : IMGCPCBPadstackObject,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}' : IMGCPCBPadstack,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}' : IMGCPCBHoles,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}' : IMGCPCBHole,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}' : IMGCPCBGeometries,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}' : IMGCPCBGeometry,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}' : IMGCPCBObjects,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}' : IMGCPCBPads,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}' : IMGCPCBPad,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}' : IMGCPCBFabricationPads,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}' : IMGCPCBFabricationPad,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}' : IMGCPCBVias,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}' : IMGCPCBVia,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}' : IMGCPCBBreakoutDefaults,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}' : IMGCPCBBreakoutDefault,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}' : IMGCPCBTeardropDefaults,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}' : IMGCPCBTeardropDefault,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}' : IMGCPCBTeardrops,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}' : IMGCPCBTeardrop,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}' : IMGCPCBConductorLayerGfx,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED40}' : IMGCPCBBaseGfx,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}' : IMGCPCBProperties,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}' : IMGCPCBProperty,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}' : IMGCPCBDimensions,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}' : IMGCPCBDimension,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}' : IMGCPCBDimensionScheme,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7E}' : IMGCPCBDimensionedObject,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}' : IMGCPCBLayerObject,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}' : IMGCPCBUserLayer,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED97}' : IMGCPCBLayerProperties,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}' : IMGCPCBNet,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}' : IMGCPCBTraces,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}' : IMGCPCBTrace,
	'{E9383918-8714-45AA-BA68-B0FDB928473C}' : IMGCPCBTraceSegments,
	'{BCC7826E-B004-43A2-A084-A76329E08D2B}' : IMGCPCBTraceSegment,
	'{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}' : IMGCPCBMultiBoardOutline,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}' : IMGCPCBLayerObjects,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}' : IMGCPCBRouteBorder,
	'{0D170493-3863-40A7-B222-C70CDC73B07A}' : IMGCPCBStackupScheme,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}' : IMGCPCBNetClass,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}' : IMGCPCBNets,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}' : IMGCPCBGeneratedPlanes,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}' : IMGCPCBGeneratedPlane,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}' : IMGCPCBPlaneShape,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}' : IMGCPCBActualPlaneShapes,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}' : IMGCPCBActualPlaneShape,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}' : IMGCPCBTieLegs,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}' : IMGCPCBTieLeg,
	'{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}' : IMGCPCBPlaneClass,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}' : IMGCPCBMountingHoles,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}' : IMGCPCBMountingHole,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}' : IMGCPCBBreakoutTraces,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}' : IMGCPCBBreakoutTrace,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}' : IMGCPCBPadstackObjects,
	'{ACC37237-2F98-403B-8783-C21D7026F5B4}' : IMGCPCBUserPads,
	'{0A6E0E06-2267-49D6-AC17-548E09AE85CD}' : IMGCPCBUserPad,
	'{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}' : IMGCPCBTracedrops,
	'{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}' : IMGCPCBTracedrop,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}' : IMGCPCBConductiveAreas,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}' : IMGCPCBConductiveArea,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}' : IMGCPCBFromTos,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}' : IMGCPCBFromTo,
	'{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}' : IMGCPCBMarker,
	'{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}' : IMGCPCBSketchPlan,
	'{651025AE-83BA-4C30-BDA0-8BB7EB01116F}' : IMGCPCBNetGroup,
	'{DF8FC11D-AFBD-41A9-AF29-8821B9164732}' : IMGCPCBNetGroups,
	'{3CCA32E2-09D7-42AB-9D14-565025B422B2}' : IMGCPCBMarkers,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}' : IMGCPCBPlaneShapes,
	'{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}' : IMGCPCBPlaneAssignments,
	'{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}' : IMGCPCBPlaneAssignment,
	'{EAFAC376-315E-407D-A294-7DB8A2222C40}' : IMGCPCBConstraint,
	'{9A2E2DB0-60CA-45A0-8788-43D139963F55}' : IMGCPCBDifferentialPair,
	'{5D4AF6CF-7583-490E-89D2-7000976F2151}' : IMGCPCBMatchLengthGroup,
	'{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}' : IMGCPCBBondPads,
	'{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}' : IMGCPCBBondPad,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}' : IMGCPCBFabricationLayerText,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED32}' : IMGCPCBBaseText,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}' : IMGCPCBFormat,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}' : IMGCPCBFabricationLayerTexts,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}' : IMGCPCBConductorLayerText,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}' : IMGCPCBConductorLayerTexts,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}' : IMGCPCBUserLayerText,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}' : IMGCPCBUserLayerTexts,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}' : IMGCPCBRoom,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}' : IMGCPCBContours,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}' : IMGCPCBContour,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}' : IMGCPCBConductorLayerGfxs,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}' : IMGCPCBPlacementObstructs,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}' : IMGCPCBPlacementObstruct,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}' : IMGCPCBPlacementOutlines,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}' : IMGCPCBPlacementOutline,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}' : IMGCPCBObstructs,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}' : IMGCPCBObstruct,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}' : IMGCPCBFiducials,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}' : IMGCPCBFiducial,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}' : IMGCPCBCell,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}' : IMGCPCBDrillDrawings,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}' : IMGCPCBDrillDrawing,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}' : IMGCPCBFabricationLayerGfxs,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}' : IMGCPCBFabricationLayerGfx,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}' : IMGCPCBUserLayerGfxs,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}' : IMGCPCBUserLayerGfx,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}' : IMGCPCBEmbeddedPassiveShapes,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}' : IMGCPCBEmbeddedPassiveShape,
	'{75404CBD-630D-4F46-A588-6251B8FE7514}' : IMGCPCBVariantInfo,
	'{F48923B1-F092-42C5-8108-1256A55CDB86}' : IMGCPCBMetalizationAreas,
	'{315D2489-54AB-4C47-9927-5D1EB59FC6E7}' : IMGCPCBMetalizationArea,
	'{EDAD6DA3-1AE5-4B8E-94F0-2A3F9B69553D}' : IMGCPCBGlueSpots,
	'{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}' : IMGCPCBGlueSpot,
	'{892F84E5-2360-4C62-BA83-B10CFECE180F}' : IMGCPCBMotionObject,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED11}' : IMGCPCBNetClasses,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED20}' : IMGCPCBParts,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}' : IMGCPCBPart,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED19}' : IMGCPCBCells,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}' : IMGCPCBPadstacks,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED33}' : IMGCPCBBoardOutline,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1B}' : IMGCPCBRuleAreas,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}' : IMGCPCBRuleArea,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}' : IMGCPCBRooms,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED70}' : IMGCPCBUserLayers,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6E}' : IMGCPCBSetupParameter,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}' : IMGCPCBLayerRanges,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}' : IMGCPCBLayerRange,
	'{C4A8992A-7CE8-4925-963C-462E3FC2623E}' : IMGCPCBViaSpan,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7F}' : IMGCPCBRoutePass,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7D}' : IMGCPCBEditorControl,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED78}' : IMGCPCBClusters,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}' : IMGCPCBCluster,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7C}' : IMGCPCBJumperTableEntries,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7B}' : IMGCPCBJumperTableEntry,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED83}' : IMGCPCBPanelOutline,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED84}' : IMGCPCBPanelBorder,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED86}' : IMGCPCBToolingHoles,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}' : IMGCPCBToolingHole,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8E}' : IMGCPCBShearingHoles,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}' : IMGCPCBShearingHole,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED88}' : IMGCPCBCopperBalancingShapes,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}' : IMGCPCBCopperBalancingShape,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8A}' : IMGCPCBCopperBalancingDatas,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}' : IMGCPCBCopperBalancingData,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}' : IMGCPCBBoards,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}' : IMGCPCBBoard,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}' : IMGCPCBDetailedViews,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}' : IMGCPCBDetailedView,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED91}' : IMGCPCBManufacturingOutline,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED92}' : IMGCPCBEnvironment,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9C}' : IMGCPCBRouteFences,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}' : IMGCPCBRouteFence,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}' : IMGCPCBHazards,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}' : IMGCPCBHazard,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}' : IMGCPCBMultiVias,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}' : IMGCPCBMultiVia,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA2}' : IMGCPCBTargetAreas,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}' : IMGCPCBTargetArea,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA4}' : IMGCPCBRouteTargets,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}' : IMGCPCBRouteTarget,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA6}' : IMGCPCBBusPaths,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}' : IMGCPCBBusPath,
	'{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}' : IMGCPCBConstraintClass,
	'{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}' : IMGCPCBGroups,
	'{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}' : IMGCPCBGroup,
	'{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}' : IMGCPCBObjectFilter,
	'{C35F5B71-49BA-4499-9EFB-7DDE542F9503}' : IMGCPCBGroupOutline,
	'{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}' : IMGCPCBComplexVias,
	'{DA0209B0-DA9A-4145-B0B5-8174B59835ED}' : IMGCPCBComplexVia,
	'{6C221751-C228-4D62-9393-F0E4A5169EFB}' : IMGCPCBPlaneEditingSketches,
	'{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}' : IMGCPCBPlaneEditingSketch,
	'{9028C42A-551A-40C4-A596-C7A7058DC671}' : IMGCPCBCopperBalancing,
	'{E7852DF4-9F9F-456E-8861-17AF75A62595}' : IMGCPCBErrors,
	'{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}' : IMGCPCBError,
	'{C0072D28-C269-4E34-86D1-FE550D7FD7AB}' : IMGCPCBPanels,
	'{6B941F88-756B-4734-B3B2-EAB2861ECB7C}' : IMGCPCBPanel,
	'{8906B110-98F5-44A5-BD6C-DCE96AC36C87}' : IMGCPCBSheetOutline,
	'{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}' : IMGCPCBDrillTables,
	'{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}' : IMGCPCBDrillTable,
	'{05700A92-D895-44BB-96C1-9D5BCCAE050F}' : IMGCPCBViews,
	'{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}' : IMGCPCBSheet,
	'{CCFAFD52-099E-4BD6-B0DE-BC496050ED45}' : IMGCPCBDFFSliverAnalysis,
	'{6F314C25-CF10-405C-ADBD-F9D1CC8733CD}' : IMGCPCBIDFImport,
	'{A86800CB-BF55-4C68-ACD4-23E5E63A8F78}' : IMGCPCBPlaneClasses,
	'{70468F79-8CB4-4E7B-B6AE-9B167F349DC3}' : IMGCPCBConstructionPoints,
	'{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}' : IMGCPCBConstructionPoint,
	'{9F40B36F-3CB4-48B6-AC53-8F42E432C5C5}' : IMGCPCBConstructionLines,
	'{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}' : IMGCPCBConstructionLine,
	'{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}' : IMGCPCBSheets,
	'{B7CBBAF8-984C-4358-998E-F3FD7C2F761D}' : IMGCPCBDifferentialPairs,
	'{62A90059-38AB-4024-8A7C-0829DE185371}' : IMGCPCBMatchLengthGroups,
	'{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8B}' : IMGCPCBClearance,
	'{045F3585-5036-40BA-97E0-EB9EF5098737}' : IMGCPCBInsertionOutline,
	'{B9781283-DCA6-44C7-975D-DB76652A3391}' : IMGCPCBInsertionOutlines,
	'{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}' : IMGCPCBSandbox,
	'{BD848A19-1634-4C73-BADF-459C5B94BA4C}' : IMGCPCBSandboxes,
	'{3637D13B-92C5-41E2-BC84-8B8815A8041C}' : IMGCPCBChangeData,
	'{9826B261-A768-44F9-A0B9-1C289FB5D797}' : IMGCPCBCavity,
	'{F6D6B8DF-76C9-425E-80A0-9DA8D54B1612}' : IMGCPCBCavities,
	'{DC0CD70D-0F4E-4DB7-9D0B-6AD595D27C1F}' : IMGCPCBResistorShapes,
	'{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}' : IMGCPCBResistorShape,
	'{585FFB16-62CC-4252-BE51-45D541FA8266}' : IMGCPCBTestFixtureOutline,
	'{E9B3363C-F1A7-4947-ABF3-3FE59EFFD055}' : IMGCPCBDXFImport,
	'{AEDD489A-9A64-4842-ADF9-72F22B82C33C}' : IMGCPCBConstraintClasses,
	'{C2DF1786-E310-4E24-B331-225D0EB92338}' : IMGCPCBPlowUtilities,
	'{90BA08EC-F7F1-4338-9AAA-F2384EB35423}' : IMGCPCBExpansionMode,
	'{6ADF1858-A878-47E5-B3B2-5820C27712DB}' : IMGCPCBPoint,
	'{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}' : IMGCPCBCheckpoint,
	'{D650CB6A-FA51-4F22-9F2C-F7900A4B304C}' : IMGCPCBActiveClearanceEngine,
	'{427B888F-9F9E-4408-B28C-8ECD4A5B696C}' : IMGCPCBMaterials,
	'{24B5B850-C62F-41AE-B405-018D644055AD}' : IMGCPCBMaterial,
	'{9C207921-4551-473E-94BC-1C7EDB8B5A1B}' : IMGCPCBReservedAreas,
	'{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}' : IMGCPCBReservedArea,
	'{B73D0A93-E85F-4B22-9CA8-E59101A04DC0}' : IMGCPCBDRCWindow,
	'{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}' : IMGCPCBReuseArea,
	'{3575F847-F278-44C6-BBC8-F79FA9E37CDB}' : IMGCPCBReuseAreas,
	'{405FFFFA-4B23-4032-AC7F-4170EE726100}' : IMGCPCBWireBondGuides,
	'{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}' : IMGCPCBWireBondGuide,
	'{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}' : IMGCPCBHazardExplorer,
	'{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}' : IMGCPCBHazardTreeItem,
	'{8FEE430F-5A97-4BAF-8D0D-E931AF9CA2DA}' : IMGCPCBHazardSymbol,
	'{6B76C06F-2E50-491B-B845-D70A57247DB0}' : IMGCPCBBendAreas,
	'{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}' : IMGCPCBBendArea,
	'{D69EB1A8-F5FC-4897-AD3C-676C50CF60AC}' : IMGCPCBMultiBoardOutlines,
	'{2F037114-93ED-4C02-B835-6EC2ECD32E3C}' : IMGCPCBSketchPlans,
	'{E35CE437-C28B-4021-85A6-EEB20664B18B}' : IMGCPCBImages,
	'{33704F23-0EB7-47D7-AB6F-F4337D5F823F}' : IMGCPCBImage,
	'{B23A65B4-1FAE-4B6C-B55D-DF78F9D3735A}' : IMGCPCBOutgassingVoidsSettings,
	'{FE804AAF-0865-4606-BD7C-E26536BD81F9}' : IMGCPCBComplexViaPatterns,
	'{392E8A72-90FA-4B22-8214-7CEE80816541}' : IMGCPCBComplexViaPattern,
	'{DFE5ADA4-8560-4DCB-B850-D84BBEF0562B}' : IMGCPCBSketchPlanVias,
	'{252A33B0-814C-48B3-BEB6-36FC5550AE43}' : IMGCPCBSketchPlanVia,
	'{64167F8C-BA98-4CB3-B48F-9D5CDC0FDE50}' : IMGCPCBViaUtility,
	'{E17DBE7F-A013-4E92-9F62-E20CE0AEB25D}' : IMGCPCBStackupSchemes,
	'{52D5D12D-8051-483C-8BDD-E9B195CE294D}' : IMGCPCBDataManagementEntity,
	'{862C7303-2D1E-44EF-8B42-02192C0307B8}' : IMGCPCBDataManagementAdditionalProperty,
	'{B6B6919E-4B12-4132-8866-FB68697C6CD6}' : IMGCPCBDataManagementEntities,
	'{4E0A6DAF-4C0D-415C-B43D-A6A1ED666FE6}' : IMGCPCBPhysicalReuseLibraryCircuits,
	'{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}' : IMGCPCBPhysicalReuseLibraryCircuit,
	'{0B2A45D4-326B-493F-A476-16B04123A8CB}' : IMGCPCBTiebars,
	'{8D64846E-3942-4DD1-AF9E-102981DA52D2}' : IMGCPCBTiebar,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4B}' : IMGCPCBUtility,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5B}' : IMGCPCBGui,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5C}' : IMGCPCBDialog,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5D}' : IMGCPCBButton,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED80}' : IMGCPCBCheckBox,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9A}' : IMGCPCBEditBox,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED30}' : IMGCPCBCommand,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA7}' : IMGCPCBCommandListener,
	'{AA01E86F-E470-4E69-AAB6-AE16DC30E3D0}' : IMGCPCBSettings,
	'{E6C0D2B9-F966-4A54-AEB3-AFB0DBC97986}' : IMGCPCBDataManagement,
	'{1B2EFA70-4BC4-4F20-BB58-77E7FC2CDEEC}' : IMGCPCBDataManagementAdditionalProperties,
	'{32D2D203-BDBD-4091-AF4D-83DD57CA1AC5}' : IMGCPCBHThing,
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4A}' : IMGCPCBDimensionSchemes,
	'{EDEDED01-D5F6-4B04-8FE7-EDEDEDEDED00}' : _IMGCPCBApplicationEvents,
	'{8B451C9D-6CF5-1014-857A-77B9EECCF0AC}' : Application,
	'{8B45609B-6CF5-1014-857A-77B9EECCF0AC}' : ExpeditionPCBApplication,
	'{8B45621A-6CF5-1014-857A-77B9EECCF0AC}' : BoardStationREApplication,
	'{8B45634F-6CF5-1014-857A-77B9EECCF0AC}' : SFXREApplication,
	'{8B456462-6CF5-1014-857A-77B9EECCF0AC}' : ICXProVerifyApplication,
	'{8B456577-6CF5-1014-857A-77B9EECCF0AC}' : FablinkXEApplication,
	'{8B456683-6CF5-1014-857A-77B9EECCF0AC}' : CellEditorApplication,
	'{8B456792-6CF5-1014-857A-77B9EECCF0AC}' : PlannerPCBApplication,
	'{8B4568A7-6CF5-1014-857A-77B9EECCF0AC}' : ViewerPCBApplication,
	'{8B456A39-6CF5-1014-857A-77B9EECCF0AC}' : BrowserPCBApplication,
	'{8B456B83-6CF5-1014-857A-77B9EECCF0AC}' : BoardStationXEApplication,
	'{8B456C93-6CF5-1014-857A-77B9EECCF0AC}' : DrawingEditorApplication,
	'{8B456FB0-6CF5-1014-857A-77B9EECCF0AC}' : XtremeDesignSessionApplication,
	'{8B456D9C-6CF5-1014-857A-77B9EECCF0AC}' : ExpeditionPEApplication,
	'{8B463BA6-6CF5-1014-857A-77B9EECCF0AC}' : XpeditionPDApplication,
	'{8B456EA8-6CF5-1014-857A-77B9EECCF0AC}' : SolidEdgePCBApplication,
	'{EDEDED03-D5F6-4B04-8FE7-EDEDEDEDED00}' : _IMGCPCBDocumentEvents,
	'{EDEDED04-D5F6-4B04-8FE7-EDEDEDEDED00}' : Document,
	'{EDEDED06-D5F6-4B04-8FE7-EDEDEDEDED00}' : View,
	'{EDEDED07-D5F6-4B04-8FE7-EDEDEDEDED00}' : Components,
	'{EDEDED08-D5F6-4B04-8FE7-EDEDEDEDED00}' : Component,
	'{EDEDED09-D5F6-4B04-8FE7-EDEDEDEDED00}' : Nets,
	'{EDEDED0A-D5F6-4B04-8FE7-EDEDEDEDED00}' : Net,
	'{EDEDED0B-D5F6-4B04-8FE7-EDEDEDEDED00}' : Pins,
	'{EDEDED0C-D5F6-4B04-8FE7-EDEDEDEDED00}' : Pin,
	'{EDEDED0D-D5F6-4B04-8FE7-EDEDEDEDED00}' : Traces,
	'{EDEDED0E-D5F6-4B04-8FE7-EDEDEDEDED00}' : Trace,
	'{64FE251C-549A-4B0B-BBF5-E7EE6E32ECF4}' : Tiebars,
	'{42DF9F9D-8B9E-475C-8024-B68AF6AAA3CB}' : Tiebar,
	'{EDEDED0F-D5F6-4B04-8FE7-EDEDEDEDED00}' : Vias,
	'{EDEDED10-D5F6-4B04-8FE7-EDEDEDEDED00}' : Via,
	'{EDEDED11-D5F6-4B04-8FE7-EDEDEDEDED00}' : Padstack,
	'{EDEDED12-D5F6-4B04-8FE7-EDEDEDEDED00}' : Hole,
	'{EDEDED13-D5F6-4B04-8FE7-EDEDEDEDED00}' : Parts,
	'{EDEDED14-D5F6-4B04-8FE7-EDEDEDEDED00}' : Part,
	'{EDEDED15-D5F6-4B04-8FE7-EDEDEDEDED00}' : NetClasses,
	'{EDEDED16-D5F6-4B04-8FE7-EDEDEDEDED00}' : NetClass,
	'{7570D721-A2E1-4A5F-8140-E422383072B9}' : NetGroups,
	'{8BFB2DB2-773C-43C5-B16A-6D60D2AB5FC1}' : NetGroup,
	'{EDEDED17-D5F6-4B04-8FE7-EDEDEDEDED00}' : Padstacks,
	'{EDEDED18-D5F6-4B04-8FE7-EDEDEDEDED00}' : Pad,
	'{EDEDED19-D5F6-4B04-8FE7-EDEDEDEDED00}' : Pads,
	'{EDEDED1A-D5F6-4B04-8FE7-EDEDEDEDED00}' : Holes,
	'{EDEDED1B-D5F6-4B04-8FE7-EDEDEDEDED00}' : Cell,
	'{EDEDED1C-D5F6-4B04-8FE7-EDEDEDEDED00}' : Cells,
	'{EDEDED1D-D5F6-4B04-8FE7-EDEDEDEDED00}' : RuleArea,
	'{EDEDED1E-D5F6-4B04-8FE7-EDEDEDEDED00}' : RuleAreas,
	'{EDEDED1F-D5F6-4B04-8FE7-EDEDEDEDED00}' : FromTo,
	'{EDEDED20-D5F6-4B04-8FE7-EDEDEDEDED00}' : FromTos,
	'{EDEDED21-D5F6-4B04-8FE7-EDEDEDEDED00}' : Contour,
	'{EDEDED22-D5F6-4B04-8FE7-EDEDEDEDED00}' : Contours,
	'{EDEDED23-D5F6-4B04-8FE7-EDEDEDEDED00}' : ConductorLayerGfx,
	'{EDEDED24-D5F6-4B04-8FE7-EDEDEDEDED00}' : ConductorLayerGfxs,
	'{EDEDED25-D5F6-4B04-8FE7-EDEDEDEDED00}' : Obstruct,
	'{EDEDED26-D5F6-4B04-8FE7-EDEDEDEDED00}' : Obstructs,
	'{EDEDED27-D5F6-4B04-8FE7-EDEDEDEDED00}' : ConductiveArea,
	'{EDEDED28-D5F6-4B04-8FE7-EDEDEDEDED00}' : ConductiveAreas,
	'{EDEDED29-D5F6-4B04-8FE7-EDEDEDEDED00}' : MountingHole,
	'{EDEDED2A-D5F6-4B04-8FE7-EDEDEDEDED00}' : MountingHoles,
	'{EDEDED2B-D5F6-4B04-8FE7-EDEDEDEDED00}' : XProbe,
	'{EDEDED2C-D5F6-4B04-8FE7-EDEDEDEDED00}' : Fiducial,
	'{EDEDED2D-D5F6-4B04-8FE7-EDEDEDEDED00}' : Fiducials,
	'{BA6106DA-5EA2-42AA-AD89-A2F3C050B80C}' : TraceSegments,
	'{B96D1270-A555-4AD2-9A59-EE5A4943F47A}' : TraceSegment,
	'{DA99EC4C-6A6D-4B0E-AB92-281FB592D296}' : ConstraintClasses,
	'{8D428186-DE3C-49F3-A8D0-F14DC5037D49}' : ConstraintClass,
	'{F33247C1-FE50-4BBE-8A41-1EF349FCACA6}' : BendArea,
	'{6B2ED012-98B6-4544-A4DA-58794B7ABECC}' : BendAreas,
	'{EDEDED32-D5F6-4B04-8FE7-EDEDEDEDED00}' : _IMGCPCBCommandEvents,
	'{EDEDED33-D5F6-4B04-8FE7-EDEDEDEDED00}' : Command,
	'{EDEDED36-D5F6-4B04-8FE7-EDEDEDEDED00}' : BoardOutline,
	'{EDEDED37-D5F6-4B04-8FE7-EDEDEDEDED00}' : RouteBorder,
	'{EDEDED38-D5F6-4B04-8FE7-EDEDEDEDED00}' : PlacementObstruct,
	'{EDEDED39-D5F6-4B04-8FE7-EDEDEDEDED00}' : PlacementObstructs,
	'{EDEDED3A-D5F6-4B04-8FE7-EDEDEDEDED00}' : Room,
	'{EDEDED3B-D5F6-4B04-8FE7-EDEDEDEDED00}' : Rooms,
	'{EDEDED3C-D5F6-4B04-8FE7-EDEDEDEDED00}' : PlaneShape,
	'{EDEDED3D-D5F6-4B04-8FE7-EDEDEDEDED00}' : PlaneShapes,
	'{EDEDED3E-D5F6-4B04-8FE7-EDEDEDEDED00}' : PlacementOutline,
	'{EDEDED3F-D5F6-4B04-8FE7-EDEDEDEDED00}' : PlacementOutlines,
	'{EDEDED40-D5F6-4B04-8FE7-EDEDEDEDED00}' : GeneratedPlane,
	'{EDEDED41-D5F6-4B04-8FE7-EDEDEDEDED00}' : GeneratedPlanes,
	'{EDEDED44-D5F6-4B04-8FE7-EDEDEDEDED00}' : property,
	'{EDEDED45-D5F6-4B04-8FE7-EDEDEDEDED00}' : Properties,
	'{EDEDED46-D5F6-4B04-8FE7-EDEDEDEDED00}' : DrillDrawing,
	'{EDEDED47-D5F6-4B04-8FE7-EDEDEDEDED00}' : DrillDrawings,
	'{EDEDED48-D5F6-4B04-8FE7-EDEDEDEDED00}' : Dimension,
	'{EDEDED49-D5F6-4B04-8FE7-EDEDEDEDED00}' : Dimensions,
	'{EDEDED4A-D5F6-4B04-8FE7-EDEDEDEDED00}' : DimensionScheme,
	'{EDEDED4B-D5F6-4B04-8FE7-EDEDEDEDED00}' : DimensionSchemes,
	'{EDEDED4C-D5F6-4B04-8FE7-EDEDEDEDED00}' : Utility,
	'{EDEDED4F-D5F6-4B04-8FE7-EDEDEDEDED00}' : FabricationLayerGfx,
	'{EDEDED50-D5F6-4B04-8FE7-EDEDEDEDED00}' : FabricationLayerGfxs,
	'{EDEDED51-D5F6-4B04-8FE7-EDEDEDEDED00}' : UserLayerGfx,
	'{EDEDED52-D5F6-4B04-8FE7-EDEDEDEDED00}' : UserLayerGfxs,
	'{EDEDED53-D5F6-4B04-8FE7-EDEDEDEDED00}' : FabricationPad,
	'{EDEDED54-D5F6-4B04-8FE7-EDEDEDEDED00}' : FabricationPads,
	'{EDEDED55-D5F6-4B04-8FE7-EDEDEDEDED00}' : FabricationLayerText,
	'{EDEDED56-D5F6-4B04-8FE7-EDEDEDEDED00}' : FabricationLayerTexts,
	'{EDEDED57-D5F6-4B04-8FE7-EDEDEDEDED00}' : UserLayerText,
	'{EDEDED58-D5F6-4B04-8FE7-EDEDEDEDED00}' : UserLayerTexts,
	'{EDEDED59-D5F6-4B04-8FE7-EDEDEDEDED00}' : ConductorLayerText,
	'{EDEDED5A-D5F6-4B04-8FE7-EDEDEDEDED00}' : ConductorLayerTexts,
	'{EDEDED5B-D5F6-4B04-8FE7-EDEDEDEDED00}' : Gui,
	'{EDEDED5C-D5F6-4B04-8FE7-EDEDEDEDED00}' : _IMGCPCBDialogEvents,
	'{EDEDED5E-D5F6-4B04-8FE7-EDEDEDEDED00}' : Dialog,
	'{EDEDED5F-D5F6-4B04-8FE7-EDEDEDEDED00}' : button,
	'{EDEDED61-D5F6-4B04-8FE7-EDEDEDEDED00}' : Extrema,
	'{EDEDED62-D5F6-4B04-8FE7-EDEDEDEDED00}' : Geometry,
	'{EDEDED63-D5F6-4B04-8FE7-EDEDEDEDED00}' : Format,
	'{EDEDED64-D5F6-4B04-8FE7-EDEDEDEDED00}' : BreakoutTrace,
	'{EDEDED65-D5F6-4B04-8FE7-EDEDEDEDED00}' : BreakoutTraces,
	'{EDEDED66-D5F6-4B04-8FE7-EDEDEDEDED00}' : BreakoutDefault,
	'{EDEDED67-D5F6-4B04-8FE7-EDEDEDEDED00}' : BreakoutDefaults,
	'{EDEDED68-D5F6-4B04-8FE7-EDEDEDEDED00}' : Teardrop,
	'{EDEDED69-D5F6-4B04-8FE7-EDEDEDEDED00}' : Teardrops,
	'{EDEDED6A-D5F6-4B04-8FE7-EDEDEDEDED00}' : TeardropDefault,
	'{EDEDED6B-D5F6-4B04-8FE7-EDEDEDEDED00}' : TeardropDefaults,
	'{EDEDED6C-D5F6-4B04-8FE7-EDEDEDEDED00}' : PadstackObject,
	'{EDEDED6D-D5F6-4B04-8FE7-EDEDEDEDED00}' : PadstackObjects,
	'{EDEDED6E-D5F6-4B04-8FE7-EDEDEDEDED00}' : Geometries,
	'{EDEDED6F-D5F6-4B04-8FE7-EDEDEDEDED00}' : SetupParameter,
	'{4E25E2A6-FB18-45C0-97C2-87AC496094CA}' : OutgassingVoidsSettings,
	'{EDEDED70-D5F6-4B04-8FE7-EDEDEDEDED00}' : UserLayer,
	'{EDEDED71-D5F6-4B04-8FE7-EDEDEDEDED00}' : UserLayers,
	'{EDEDED72-D5F6-4B04-8FE7-EDEDEDEDED00}' : Color,
	'{FD58EC9E-6CA3-438D-8F4B-A440658E5002}' : Material,
	'{E9E4D68B-9D4E-43E1-9A62-40BE49C403A3}' : Materials,
	'{EDEDED73-D5F6-4B04-8FE7-EDEDEDEDED00}' : ColorPattern,
	'{EDEDED74-D5F6-4B04-8FE7-EDEDEDEDED00}' : DisplayControl,
	'{EDEDED75-D5F6-4B04-8FE7-EDEDEDEDED00}' : GlobalDisplayControl,
	'{EDEDED76-D5F6-4B04-8FE7-EDEDEDEDED00}' : Objects,
	'{EDEDED77-D5F6-4B04-8FE7-EDEDEDEDED00}' : Cluster,
	'{EDEDED78-D5F6-4B04-8FE7-EDEDEDEDED00}' : Clusters,
	'{EDEDED79-D5F6-4B04-8FE7-EDEDEDEDED00}' : JumperTableEntries,
	'{EDEDED7A-D5F6-4B04-8FE7-EDEDEDEDED00}' : JumperTableEntry,
	'{EDEDED7B-D5F6-4B04-8FE7-EDEDEDEDED00}' : LayerRange,
	'{EDEDED7C-D5F6-4B04-8FE7-EDEDEDEDED00}' : LayerRanges,
	'{EDEDED7D-D5F6-4B04-8FE7-EDEDEDEDED00}' : EditorControl,
	'{EDEDED7E-D5F6-4B04-8FE7-EDEDEDEDED00}' : DimensionedObject,
	'{EDEDED7F-D5F6-4B04-8FE7-EDEDEDEDED00}' : RoutePass,
	'{EDEDED80-D5F6-4B04-8FE7-EDEDEDEDED00}' : checkbox,
	'{EDEDED81-D5F6-4B04-8FE7-EDEDEDEDED00}' : LayerObject,
	'{EDEDED82-D5F6-4B04-8FE7-EDEDEDEDED00}' : LayerObjects,
	'{EDEDED83-D5F6-4B04-8FE7-EDEDEDEDED00}' : PanelOutline,
	'{EDEDED84-D5F6-4B04-8FE7-EDEDEDEDED00}' : PanelBorder,
	'{EDEDED85-D5F6-4B04-8FE7-EDEDEDEDED00}' : ToolingHole,
	'{EDEDED86-D5F6-4B04-8FE7-EDEDEDEDED00}' : ToolingHoles,
	'{EDEDED87-D5F6-4B04-8FE7-EDEDEDEDED00}' : CopperBalancingShape,
	'{EDEDED88-D5F6-4B04-8FE7-EDEDEDEDED00}' : CopperBalancingShapes,
	'{EDEDED89-D5F6-4B04-8FE7-EDEDEDEDED00}' : CopperBalancingData,
	'{EDEDED8A-D5F6-4B04-8FE7-EDEDEDEDED00}' : CopperBalancingDatas,
	'{999DCEAB-25BD-4D69-90A6-7BD6D7E8FCBA}' : Panel,
	'{E0831839-85FA-4BC5-A67D-AB4D5457BA87}' : Panels,
	'{EDEDED8B-D5F6-4B04-8FE7-EDEDEDEDED00}' : Board,
	'{EDEDED8C-D5F6-4B04-8FE7-EDEDEDEDED00}' : Boards,
	'{EDEDED8D-D5F6-4B04-8FE7-EDEDEDEDED00}' : ShearingHole,
	'{EDEDED8E-D5F6-4B04-8FE7-EDEDEDEDED00}' : ShearingHoles,
	'{EDEDED8F-D5F6-4B04-8FE7-EDEDEDEDED00}' : DetailedView,
	'{EDEDED90-D5F6-4B04-8FE7-EDEDEDEDED00}' : DetailedViews,
	'{EDEDED91-D5F6-4B04-8FE7-EDEDEDEDED00}' : ManufacturingOutline,
	'{EDEDED92-D5F6-4B04-8FE7-EDEDEDEDED00}' : Environment,
	'{EDEDED93-D5F6-4B04-8FE7-EDEDEDEDED00}' : ActualPlaneShape,
	'{EDEDED94-D5F6-4B04-8FE7-EDEDEDEDED00}' : ActualPlaneShapes,
	'{EDEDED95-D5F6-4B04-8FE7-EDEDEDEDED00}' : TieLeg,
	'{EDEDED96-D5F6-4B04-8FE7-EDEDEDEDED00}' : TieLegs,
	'{EDEDED97-D5F6-4B04-8FE7-EDEDEDEDED00}' : LayerProperties,
	'{EDEDED98-D5F6-4B04-8FE7-EDEDEDEDED00}' : EmbeddedPassiveShape,
	'{EDEDED99-D5F6-4B04-8FE7-EDEDEDEDED00}' : EmbeddedPassiveShapes,
	'{EDEDED9A-D5F6-4B04-8FE7-EDEDEDEDED00}' : EditBox,
	'{EDEDED9B-D5F6-4B04-8FE7-EDEDEDEDED00}' : RouteFence,
	'{EDEDED9C-D5F6-4B04-8FE7-EDEDEDEDED00}' : RouteFences,
	'{EDEDED9D-D5F6-4B04-8FE7-EDEDEDEDED00}' : Hazard,
	'{EDEDED9E-D5F6-4B04-8FE7-EDEDEDEDED00}' : Hazards,
	'{EDEDED9F-D5F6-4B04-8FE7-EDEDEDEDED00}' : MultiVias,
	'{EDEDEDA0-D5F6-4B04-8FE7-EDEDEDEDED00}' : MultiVia,
	'{EDEDEDA1-D5F6-4B04-8FE7-EDEDEDEDED00}' : TargetArea,
	'{EDEDEDA2-D5F6-4B04-8FE7-EDEDEDEDED00}' : TargetAreas,
	'{EDEDEDA3-D5F6-4B04-8FE7-EDEDEDEDED00}' : RouteTarget,
	'{EDEDEDA4-D5F6-4B04-8FE7-EDEDEDEDED00}' : RouteTargets,
	'{EDEDEDA5-D5F6-4B04-8FE7-EDEDEDEDED00}' : BusPath,
	'{E3CE28CA-2EAC-4695-B4F3-6D38423F7F13}' : SheetOutline,
	'{C7BC8E5F-F3D1-4A50-AF40-C0F7283A38F2}' : DrillTables,
	'{022D2D2D-A8EB-47EA-8D44-DB1DC78E5791}' : DrillTable,
	'{42818231-BDC7-4236-AAF8-179AF482F1AE}' : Views,
	'{0B9C6959-78B6-4BF2-B0B2-24D356BAE93E}' : Sheets,
	'{FBAD0390-893C-42E4-A427-82B628D8A021}' : Sheet,
	'{EDEDEDA6-D5F6-4B04-8FE7-EDEDEDEDED00}' : BusPaths,
	'{1D127C3B-0C83-49F0-8974-F64B30D1E33B}' : SketchPlan,
	'{3693B0E6-CA38-4811-82EA-F78D4BA04A95}' : SketchPlans,
	'{087AE75B-81DC-41DF-ABAD-978E425B3AD9}' : SketchPlanVia,
	'{EA861E6A-16B1-4A85-A174-5AB9AF229FBD}' : SketchPlanVias,
	'{6CC07E43-9B26-46B8-B778-832911602B4B}' : PhysicalReuseLibraryCircuit,
	'{B05D0EE8-3B79-460F-982D-E15CF70AC323}' : PhysicalReuseLibraryCircuits,
	'{41738154-9334-4AFD-91A0-3C1BC60F969B}' : Images,
	'{C6070113-C01B-46B0-ADCC-489B4BF474F7}' : Image,
	'{EDEDEDA7-D5F6-4B04-8FE7-EDEDEDEDED00}' : _IMGCPCBCommandListenerEvents,
	'{EDEDEDA8-D5F6-4B04-8FE7-EDEDEDEDED00}' : CommandListener,
	'{EDEDEDA9-D5F6-4B04-8FE7-EDEDEDEDED00}' : Tracedrop,
	'{EDEDEDAA-D5F6-4B04-8FE7-EDEDEDEDED00}' : Tracedrops,
	'{96C19E74-E567-42EB-BE5C-CC01B0286255}' : Group,
	'{6D64459B-086C-40CB-B431-EDD1527E01B6}' : Groups,
	'{FAD5FFCC-73AF-468F-ACA9-5F0F48FE1978}' : PlaneEditingSketch,
	'{47834540-ADA2-4C09-887C-8EFCF724F59C}' : PlaneEditingSketches,
	'{2664BBAB-8FFE-42A4-A2C2-326AC42C265C}' : CopperBalancing,
	'{BF402A9A-D287-49EE-A88E-2FB4C3CED2A6}' : DFFSliverAnalysis,
	'{21C0D8FC-A893-49F0-87AF-DE0FF0F9370B}' : IDFImport,
	'{4793EAF3-C6B3-4118-9155-C3F3961FA25D}' : DXFImport,
	'{91AA2A03-36ED-4133-8FFA-42AC7D52FFEC}' : Error,
	'{1ABBE87F-3700-46B8-9FFD-64475723BD6F}' : Errors,
	'{A5EF4AE4-C5B1-4DFF-811A-2B55EB8A78EB}' : UserPad,
	'{19561159-3A13-4D58-AEEA-7FD328997BD2}' : UserPads,
	'{43665D15-2EBE-4BCF-906C-70AB147CD1B2}' : MetalizationArea,
	'{01F88762-C02D-42FB-9DB3-A62C739BF1BE}' : MetalizationAreas,
	'{78CBB863-1042-4845-B8C4-843764CD8C10}' : PlaneClass,
	'{C9584331-8E6C-4186-B77C-224A771F9FA9}' : PlaneClasses,
	'{A2316731-42FD-4B3A-9006-F76599AD13A0}' : PlaneAssignment,
	'{B36B9D7C-B29E-409B-BA12-58FE415F6429}' : PlaneAssignments,
	'{2C80B0ED-1ED8-41C9-87E7-0735F2178A4B}' : ConstructionPoint,
	'{7CBEF113-44DD-4D31-A205-8D2FF6B252F8}' : ConstructionPoints,
	'{C0D2A601-EBA5-47D3-98B0-83FD262FB6CB}' : ConstructionLine,
	'{54FA30B2-0D79-4F3B-BA78-77622DC51F7C}' : ConstructionLines,
	'{7F9D3438-714B-4F63-BFB0-C261254D1556}' : Constraint,
	'{23D9A7BD-4B0A-49FB-AA5F-EEFB91E477D6}' : DifferentialPair,
	'{0D3F7906-B221-42A5-9D68-3DEC3EF8072A}' : DifferentialPairs,
	'{73EB686E-4413-42D6-B0EA-574EC9B6CBCB}' : MatchLengthGroup,
	'{4AC89F8E-5916-4D23-A346-C2A1A0ADD05A}' : MatchLengthGroups,
	'{D9C635E1-8AE1-446D-ADD3-EFFC82AC9044}' : Clearance,
	'{3AA0DF89-DE2B-406C-A5C9-A3C42FC945C3}' : InsertionOutline,
	'{EDD45523-ADD3-4469-877A-EFAAD505A5EB}' : InsertionOutlines,
	'{6C4DEA98-587A-41EE-9BC9-1FD19AE3C883}' : Sandbox,
	'{6E49B9FA-AFE5-471B-A7B6-3537D2753266}' : Sandboxes,
	'{A3124861-0E05-4372-9212-5BC14BF80705}' : BondPad,
	'{809A1741-717F-40B3-A0BF-0A5C944F72F1}' : BondPads,
	'{2C63C8B0-5B8F-499C-8C8E-A3361EED9017}' : WireBondGuide,
	'{7499ED95-4CE6-4A33-99D5-E4C8C1DC6D1D}' : WireBondGuides,
	'{64167F8C-BA98-4DB3-B48F-9D5CDC0FDE50}' : ViaUtility,
	'{F6E0FBD0-742B-407E-87C3-16A63F5545A4}' : Cavity,
	'{039A55EC-D850-4645-AEF1-E5B0D8F4DE54}' : Cavities,
	'{185EF0A1-E14B-4A1E-81FC-01B0A91A1AAE}' : Copper,
	'{722E36DF-2BD1-4988-A670-96048FBC5FF0}' : StackupScheme,
	'{7AF637B3-357E-41AD-990E-49C61B6A605A}' : StackupSchemes,
	'{7775EBCC-A87C-4B01-A0A8-27C6D05E2708}' : Internal,
	'{0F064616-1834-4DD3-9FCA-28034A045554}' : HThing,
	'{C7F1BAE9-76A9-44F5-A22A-A2984B43C2AB}' : ChangeData,
	'{B84F9DBD-1C63-4AFE-9806-BF558A41DBE0}' : ObjectFilter,
	'{19165111-34B6-48A8-ADAC-DFCE46334755}' : ViaSpan,
	'{8717F36C-1B10-4AE7-BEE0-93C9BD63FA03}' : ResistorShape,
	'{A7141DD4-4024-4DBC-AEAB-20F8712F2C1A}' : ResistorShapes,
	'{37DEF24E-A64B-40E3-9614-6EEE9BC06981}' : GlueSpot,
	'{8E170053-F2B1-4ED8-AC31-8841426EC4C2}' : GlueSpots,
	'{2D0374E9-4948-4CE9-912F-DCCD33BDF0E3}' : Settings,
	'{5F43EC13-8A7A-4D88-BBC9-B310BD2F6743}' : TestFixtureOutline,
	'{6AC7C876-C1C1-419E-90D2-71324569E41E}' : IMGCPCBRFHazard,
	'{A43DB03C-72FD-425F-92DF-1BB5516B8DC1}' : RFHazard,
	'{6356402A-B8B6-4A48-BAD2-07B7749EAB1F}' : Marker,
	'{EA828EB7-F1BC-4E3D-B86F-E22107617ACA}' : Markers,
	'{112EBB48-A7FC-4993-BFDC-207DACB7EF41}' : TuningMeter,
	'{BB885650-D4A1-4724-89AB-4A6D83BD436B}' : ActiveClearanceEngine,
	'{9718D930-A889-485C-8B3C-F05198AE1B58}' : MotionObject,
	'{CDF6343B-6DD7-4573-9411-EFF95322DBE6}' : RadialGrid,
	'{DE842064-5FF0-4FA0-BB09-9EA774EF6417}' : ReservedArea,
	'{863F1725-6431-48E7-B656-4D80383AA334}' : ReservedAreas,
	'{887911D8-607E-4A56-AE98-47F3DF6C0D07}' : ReuseArea,
	'{D0E409CC-42BA-471E-83C0-E7D034966335}' : ReuseAreas,
	'{3C82C9A5-9A63-4D83-B9FC-E5FA2EE8FD7A}' : IMGCPCBReusableBlock,
	'{E7751A10-BD2B-48BA-8C2C-788374F67904}' : ReusableBlock,
	'{30B9C205-B35F-4495-9B6F-04A9FA733B57}' : GroupOutline,
	'{E4CF19CE-E948-4DE5-921F-069160EA465B}' : ComplexVia,
	'{5C2518D2-FB17-4F9B-9BA0-A30A7FDA06F0}' : ComplexVias,
	'{5EE8496D-7DDE-482A-B5B2-7F4756313DE4}' : ComplexViaPattern,
	'{8BFD00E4-8BDA-4061-B5F5-88117C47587F}' : ComplexViaPatterns,
	'{A54F58CC-B418-45BC-80B0-BCE062DF441C}' : _IMGCPCBHazardExplorerEvents,
	'{2E182699-C20B-4388-98C0-BC5AE8D7A250}' : HazardExplorer,
	'{E5918914-F4D4-4450-B2E6-18431CCEE78F}' : HazardTreeItem,
	'{3C015462-AF66-4760-BA75-09D8ED7D4A37}' : HazardSymbol,
	'{1B5956ED-8394-4126-B154-2496AD9A5E39}' : MultiBoardOutline,
	'{42CAFFCF-D5B6-4053-B485-5F81D4A27E33}' : MultiBoardOutlines,
	'{31E57DFC-2D52-4BB2-B49D-263545035B14}' : DataManagement,
	'{D3329B2A-F69B-4204-B3F2-1DBA963E1388}' : DataManagementEntity,
	'{3100EEB6-0071-40A4-9D53-BABA18027081}' : DataManagementEntities,
	'{B70B652C-4484-48E5-BCA9-62CE39087DC1}' : DataManagementAdditionalProperty,
	'{8BF7551C-1117-4231-A247-D5739B12B8F4}' : DataManagementAdditionalProperties,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}' : 'IMGCPCBApplication',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}' : 'IMGCPCBDocument',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}' : 'IMGCPCBView',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}' : 'IMGCPCBExtrema',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}' : 'IMGCPCBColor',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}' : 'IMGCPCBDisplayControl',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED74}' : 'IMGCPCBGlobalDisplayControl',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}' : 'IMGCPCBColorPattern',
	'{C08852D9-8D46-4AF5-8957-C02383D370A8}' : 'IMGCPCBTuningMeter',
	'{36F191D7-5E03-4303-BBE3-53541ED04939}' : 'IMGCPCBRadialGrid',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED28}' : 'IMGCPCBXProbe',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}' : 'IMGCPCBComponents',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED62}' : 'IMGCPCBBaseCollection',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}' : 'IMGCPCBComponent',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}' : 'IMGCPCBPins',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}' : 'IMGCPCBPin',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}' : 'IMGCPCBPadstackObject',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}' : 'IMGCPCBPadstack',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}' : 'IMGCPCBHoles',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}' : 'IMGCPCBHole',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}' : 'IMGCPCBGeometries',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}' : 'IMGCPCBGeometry',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}' : 'IMGCPCBObjects',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}' : 'IMGCPCBPads',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}' : 'IMGCPCBPad',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}' : 'IMGCPCBFabricationPads',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}' : 'IMGCPCBFabricationPad',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}' : 'IMGCPCBVias',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}' : 'IMGCPCBVia',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}' : 'IMGCPCBBreakoutDefaults',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}' : 'IMGCPCBBreakoutDefault',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}' : 'IMGCPCBTeardropDefaults',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}' : 'IMGCPCBTeardropDefault',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}' : 'IMGCPCBTeardrops',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}' : 'IMGCPCBTeardrop',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}' : 'IMGCPCBConductorLayerGfx',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED40}' : 'IMGCPCBBaseGfx',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}' : 'IMGCPCBProperties',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}' : 'IMGCPCBProperty',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}' : 'IMGCPCBDimensions',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}' : 'IMGCPCBDimension',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}' : 'IMGCPCBDimensionScheme',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7E}' : 'IMGCPCBDimensionedObject',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}' : 'IMGCPCBLayerObject',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}' : 'IMGCPCBUserLayer',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED97}' : 'IMGCPCBLayerProperties',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}' : 'IMGCPCBNet',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}' : 'IMGCPCBTraces',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}' : 'IMGCPCBTrace',
	'{E9383918-8714-45AA-BA68-B0FDB928473C}' : 'IMGCPCBTraceSegments',
	'{BCC7826E-B004-43A2-A084-A76329E08D2B}' : 'IMGCPCBTraceSegment',
	'{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}' : 'IMGCPCBMultiBoardOutline',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}' : 'IMGCPCBLayerObjects',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}' : 'IMGCPCBRouteBorder',
	'{0D170493-3863-40A7-B222-C70CDC73B07A}' : 'IMGCPCBStackupScheme',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}' : 'IMGCPCBNetClass',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}' : 'IMGCPCBNets',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}' : 'IMGCPCBGeneratedPlanes',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}' : 'IMGCPCBGeneratedPlane',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}' : 'IMGCPCBPlaneShape',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}' : 'IMGCPCBActualPlaneShapes',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}' : 'IMGCPCBActualPlaneShape',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}' : 'IMGCPCBTieLegs',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}' : 'IMGCPCBTieLeg',
	'{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}' : 'IMGCPCBPlaneClass',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}' : 'IMGCPCBMountingHoles',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}' : 'IMGCPCBMountingHole',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}' : 'IMGCPCBBreakoutTraces',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}' : 'IMGCPCBBreakoutTrace',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}' : 'IMGCPCBPadstackObjects',
	'{ACC37237-2F98-403B-8783-C21D7026F5B4}' : 'IMGCPCBUserPads',
	'{0A6E0E06-2267-49D6-AC17-548E09AE85CD}' : 'IMGCPCBUserPad',
	'{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}' : 'IMGCPCBTracedrops',
	'{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}' : 'IMGCPCBTracedrop',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}' : 'IMGCPCBConductiveAreas',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}' : 'IMGCPCBConductiveArea',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}' : 'IMGCPCBFromTos',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}' : 'IMGCPCBFromTo',
	'{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}' : 'IMGCPCBMarker',
	'{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}' : 'IMGCPCBSketchPlan',
	'{651025AE-83BA-4C30-BDA0-8BB7EB01116F}' : 'IMGCPCBNetGroup',
	'{DF8FC11D-AFBD-41A9-AF29-8821B9164732}' : 'IMGCPCBNetGroups',
	'{3CCA32E2-09D7-42AB-9D14-565025B422B2}' : 'IMGCPCBMarkers',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}' : 'IMGCPCBPlaneShapes',
	'{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}' : 'IMGCPCBPlaneAssignments',
	'{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}' : 'IMGCPCBPlaneAssignment',
	'{EAFAC376-315E-407D-A294-7DB8A2222C40}' : 'IMGCPCBConstraint',
	'{9A2E2DB0-60CA-45A0-8788-43D139963F55}' : 'IMGCPCBDifferentialPair',
	'{5D4AF6CF-7583-490E-89D2-7000976F2151}' : 'IMGCPCBMatchLengthGroup',
	'{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}' : 'IMGCPCBBondPads',
	'{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}' : 'IMGCPCBBondPad',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}' : 'IMGCPCBFabricationLayerText',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED32}' : 'IMGCPCBBaseText',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}' : 'IMGCPCBFormat',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}' : 'IMGCPCBFabricationLayerTexts',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}' : 'IMGCPCBConductorLayerText',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}' : 'IMGCPCBConductorLayerTexts',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}' : 'IMGCPCBUserLayerText',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}' : 'IMGCPCBUserLayerTexts',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}' : 'IMGCPCBRoom',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}' : 'IMGCPCBContours',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}' : 'IMGCPCBContour',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}' : 'IMGCPCBConductorLayerGfxs',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}' : 'IMGCPCBPlacementObstructs',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}' : 'IMGCPCBPlacementObstruct',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}' : 'IMGCPCBPlacementOutlines',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}' : 'IMGCPCBPlacementOutline',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}' : 'IMGCPCBObstructs',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}' : 'IMGCPCBObstruct',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}' : 'IMGCPCBFiducials',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}' : 'IMGCPCBFiducial',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}' : 'IMGCPCBCell',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}' : 'IMGCPCBDrillDrawings',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}' : 'IMGCPCBDrillDrawing',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}' : 'IMGCPCBFabricationLayerGfxs',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}' : 'IMGCPCBFabricationLayerGfx',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}' : 'IMGCPCBUserLayerGfxs',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}' : 'IMGCPCBUserLayerGfx',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}' : 'IMGCPCBEmbeddedPassiveShapes',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}' : 'IMGCPCBEmbeddedPassiveShape',
	'{75404CBD-630D-4F46-A588-6251B8FE7514}' : 'IMGCPCBVariantInfo',
	'{F48923B1-F092-42C5-8108-1256A55CDB86}' : 'IMGCPCBMetalizationAreas',
	'{315D2489-54AB-4C47-9927-5D1EB59FC6E7}' : 'IMGCPCBMetalizationArea',
	'{EDAD6DA3-1AE5-4B8E-94F0-2A3F9B69553D}' : 'IMGCPCBGlueSpots',
	'{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}' : 'IMGCPCBGlueSpot',
	'{892F84E5-2360-4C62-BA83-B10CFECE180F}' : 'IMGCPCBMotionObject',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED11}' : 'IMGCPCBNetClasses',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED20}' : 'IMGCPCBParts',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}' : 'IMGCPCBPart',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED19}' : 'IMGCPCBCells',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}' : 'IMGCPCBPadstacks',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED33}' : 'IMGCPCBBoardOutline',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1B}' : 'IMGCPCBRuleAreas',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}' : 'IMGCPCBRuleArea',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}' : 'IMGCPCBRooms',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED70}' : 'IMGCPCBUserLayers',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6E}' : 'IMGCPCBSetupParameter',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}' : 'IMGCPCBLayerRanges',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}' : 'IMGCPCBLayerRange',
	'{C4A8992A-7CE8-4925-963C-462E3FC2623E}' : 'IMGCPCBViaSpan',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7F}' : 'IMGCPCBRoutePass',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7D}' : 'IMGCPCBEditorControl',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED78}' : 'IMGCPCBClusters',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}' : 'IMGCPCBCluster',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7C}' : 'IMGCPCBJumperTableEntries',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7B}' : 'IMGCPCBJumperTableEntry',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED83}' : 'IMGCPCBPanelOutline',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED84}' : 'IMGCPCBPanelBorder',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED86}' : 'IMGCPCBToolingHoles',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}' : 'IMGCPCBToolingHole',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8E}' : 'IMGCPCBShearingHoles',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}' : 'IMGCPCBShearingHole',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED88}' : 'IMGCPCBCopperBalancingShapes',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}' : 'IMGCPCBCopperBalancingShape',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8A}' : 'IMGCPCBCopperBalancingDatas',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}' : 'IMGCPCBCopperBalancingData',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}' : 'IMGCPCBBoards',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}' : 'IMGCPCBBoard',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}' : 'IMGCPCBDetailedViews',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}' : 'IMGCPCBDetailedView',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED91}' : 'IMGCPCBManufacturingOutline',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED92}' : 'IMGCPCBEnvironment',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9C}' : 'IMGCPCBRouteFences',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}' : 'IMGCPCBRouteFence',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}' : 'IMGCPCBHazards',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}' : 'IMGCPCBHazard',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}' : 'IMGCPCBMultiVias',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}' : 'IMGCPCBMultiVia',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA2}' : 'IMGCPCBTargetAreas',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}' : 'IMGCPCBTargetArea',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA4}' : 'IMGCPCBRouteTargets',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}' : 'IMGCPCBRouteTarget',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA6}' : 'IMGCPCBBusPaths',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}' : 'IMGCPCBBusPath',
	'{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}' : 'IMGCPCBConstraintClass',
	'{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}' : 'IMGCPCBGroups',
	'{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}' : 'IMGCPCBGroup',
	'{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}' : 'IMGCPCBObjectFilter',
	'{C35F5B71-49BA-4499-9EFB-7DDE542F9503}' : 'IMGCPCBGroupOutline',
	'{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}' : 'IMGCPCBComplexVias',
	'{DA0209B0-DA9A-4145-B0B5-8174B59835ED}' : 'IMGCPCBComplexVia',
	'{6C221751-C228-4D62-9393-F0E4A5169EFB}' : 'IMGCPCBPlaneEditingSketches',
	'{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}' : 'IMGCPCBPlaneEditingSketch',
	'{9028C42A-551A-40C4-A596-C7A7058DC671}' : 'IMGCPCBCopperBalancing',
	'{E7852DF4-9F9F-456E-8861-17AF75A62595}' : 'IMGCPCBErrors',
	'{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}' : 'IMGCPCBError',
	'{C0072D28-C269-4E34-86D1-FE550D7FD7AB}' : 'IMGCPCBPanels',
	'{6B941F88-756B-4734-B3B2-EAB2861ECB7C}' : 'IMGCPCBPanel',
	'{8906B110-98F5-44A5-BD6C-DCE96AC36C87}' : 'IMGCPCBSheetOutline',
	'{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}' : 'IMGCPCBDrillTables',
	'{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}' : 'IMGCPCBDrillTable',
	'{05700A92-D895-44BB-96C1-9D5BCCAE050F}' : 'IMGCPCBViews',
	'{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}' : 'IMGCPCBSheet',
	'{CCFAFD52-099E-4BD6-B0DE-BC496050ED45}' : 'IMGCPCBDFFSliverAnalysis',
	'{6F314C25-CF10-405C-ADBD-F9D1CC8733CD}' : 'IMGCPCBIDFImport',
	'{A86800CB-BF55-4C68-ACD4-23E5E63A8F78}' : 'IMGCPCBPlaneClasses',
	'{70468F79-8CB4-4E7B-B6AE-9B167F349DC3}' : 'IMGCPCBConstructionPoints',
	'{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}' : 'IMGCPCBConstructionPoint',
	'{9F40B36F-3CB4-48B6-AC53-8F42E432C5C5}' : 'IMGCPCBConstructionLines',
	'{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}' : 'IMGCPCBConstructionLine',
	'{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}' : 'IMGCPCBSheets',
	'{B7CBBAF8-984C-4358-998E-F3FD7C2F761D}' : 'IMGCPCBDifferentialPairs',
	'{62A90059-38AB-4024-8A7C-0829DE185371}' : 'IMGCPCBMatchLengthGroups',
	'{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8B}' : 'IMGCPCBClearance',
	'{045F3585-5036-40BA-97E0-EB9EF5098737}' : 'IMGCPCBInsertionOutline',
	'{B9781283-DCA6-44C7-975D-DB76652A3391}' : 'IMGCPCBInsertionOutlines',
	'{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}' : 'IMGCPCBSandbox',
	'{BD848A19-1634-4C73-BADF-459C5B94BA4C}' : 'IMGCPCBSandboxes',
	'{3637D13B-92C5-41E2-BC84-8B8815A8041C}' : 'IMGCPCBChangeData',
	'{9826B261-A768-44F9-A0B9-1C289FB5D797}' : 'IMGCPCBCavity',
	'{F6D6B8DF-76C9-425E-80A0-9DA8D54B1612}' : 'IMGCPCBCavities',
	'{DC0CD70D-0F4E-4DB7-9D0B-6AD595D27C1F}' : 'IMGCPCBResistorShapes',
	'{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}' : 'IMGCPCBResistorShape',
	'{585FFB16-62CC-4252-BE51-45D541FA8266}' : 'IMGCPCBTestFixtureOutline',
	'{E9B3363C-F1A7-4947-ABF3-3FE59EFFD055}' : 'IMGCPCBDXFImport',
	'{AEDD489A-9A64-4842-ADF9-72F22B82C33C}' : 'IMGCPCBConstraintClasses',
	'{C2DF1786-E310-4E24-B331-225D0EB92338}' : 'IMGCPCBPlowUtilities',
	'{90BA08EC-F7F1-4338-9AAA-F2384EB35423}' : 'IMGCPCBExpansionMode',
	'{6ADF1858-A878-47E5-B3B2-5820C27712DB}' : 'IMGCPCBPoint',
	'{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}' : 'IMGCPCBCheckpoint',
	'{D650CB6A-FA51-4F22-9F2C-F7900A4B304C}' : 'IMGCPCBActiveClearanceEngine',
	'{427B888F-9F9E-4408-B28C-8ECD4A5B696C}' : 'IMGCPCBMaterials',
	'{24B5B850-C62F-41AE-B405-018D644055AD}' : 'IMGCPCBMaterial',
	'{9C207921-4551-473E-94BC-1C7EDB8B5A1B}' : 'IMGCPCBReservedAreas',
	'{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}' : 'IMGCPCBReservedArea',
	'{B73D0A93-E85F-4B22-9CA8-E59101A04DC0}' : 'IMGCPCBDRCWindow',
	'{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}' : 'IMGCPCBReuseArea',
	'{3575F847-F278-44C6-BBC8-F79FA9E37CDB}' : 'IMGCPCBReuseAreas',
	'{405FFFFA-4B23-4032-AC7F-4170EE726100}' : 'IMGCPCBWireBondGuides',
	'{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}' : 'IMGCPCBWireBondGuide',
	'{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}' : 'IMGCPCBHazardExplorer',
	'{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}' : 'IMGCPCBHazardTreeItem',
	'{8FEE430F-5A97-4BAF-8D0D-E931AF9CA2DA}' : 'IMGCPCBHazardSymbol',
	'{6B76C06F-2E50-491B-B845-D70A57247DB0}' : 'IMGCPCBBendAreas',
	'{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}' : 'IMGCPCBBendArea',
	'{D69EB1A8-F5FC-4897-AD3C-676C50CF60AC}' : 'IMGCPCBMultiBoardOutlines',
	'{2F037114-93ED-4C02-B835-6EC2ECD32E3C}' : 'IMGCPCBSketchPlans',
	'{E35CE437-C28B-4021-85A6-EEB20664B18B}' : 'IMGCPCBImages',
	'{33704F23-0EB7-47D7-AB6F-F4337D5F823F}' : 'IMGCPCBImage',
	'{B23A65B4-1FAE-4B6C-B55D-DF78F9D3735A}' : 'IMGCPCBOutgassingVoidsSettings',
	'{FE804AAF-0865-4606-BD7C-E26536BD81F9}' : 'IMGCPCBComplexViaPatterns',
	'{392E8A72-90FA-4B22-8214-7CEE80816541}' : 'IMGCPCBComplexViaPattern',
	'{DFE5ADA4-8560-4DCB-B850-D84BBEF0562B}' : 'IMGCPCBSketchPlanVias',
	'{252A33B0-814C-48B3-BEB6-36FC5550AE43}' : 'IMGCPCBSketchPlanVia',
	'{64167F8C-BA98-4CB3-B48F-9D5CDC0FDE50}' : 'IMGCPCBViaUtility',
	'{E17DBE7F-A013-4E92-9F62-E20CE0AEB25D}' : 'IMGCPCBStackupSchemes',
	'{52D5D12D-8051-483C-8BDD-E9B195CE294D}' : 'IMGCPCBDataManagementEntity',
	'{862C7303-2D1E-44EF-8B42-02192C0307B8}' : 'IMGCPCBDataManagementAdditionalProperty',
	'{B6B6919E-4B12-4132-8866-FB68697C6CD6}' : 'IMGCPCBDataManagementEntities',
	'{4E0A6DAF-4C0D-415C-B43D-A6A1ED666FE6}' : 'IMGCPCBPhysicalReuseLibraryCircuits',
	'{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}' : 'IMGCPCBPhysicalReuseLibraryCircuit',
	'{0B2A45D4-326B-493F-A476-16B04123A8CB}' : 'IMGCPCBTiebars',
	'{8D64846E-3942-4DD1-AF9E-102981DA52D2}' : 'IMGCPCBTiebar',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4B}' : 'IMGCPCBUtility',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5B}' : 'IMGCPCBGui',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5C}' : 'IMGCPCBDialog',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5D}' : 'IMGCPCBButton',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED80}' : 'IMGCPCBCheckBox',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9A}' : 'IMGCPCBEditBox',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED30}' : 'IMGCPCBCommand',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA7}' : 'IMGCPCBCommandListener',
	'{AA01E86F-E470-4E69-AAB6-AE16DC30E3D0}' : 'IMGCPCBSettings',
	'{E6C0D2B9-F966-4A54-AEB3-AFB0DBC97986}' : 'IMGCPCBDataManagement',
	'{1B2EFA70-4BC4-4F20-BB58-77E7FC2CDEEC}' : 'IMGCPCBDataManagementAdditionalProperties',
	'{32D2D203-BDBD-4091-AF4D-83DD57CA1AC5}' : 'IMGCPCBHThing',
	'{F01B88CC-C007-4706-98BA-DBE009337E3B}' : 'IMGCPCBCopper',
	'{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4A}' : 'IMGCPCBDimensionSchemes',
	'{06B94B22-CAD6-4189-86EC-E173787490DF}' : 'IMGCPCBInternal',
	'{C771A1BA-E6EA-45AB-9716-AE638D1408C0}' : 'IMGCPCBCommon',
	'{6AC7C876-C1C1-419E-90D2-71324569E41E}' : 'IMGCPCBRFHazard',
	'{3C82C9A5-9A63-4D83-B9FC-E5FA2EE8FD7A}' : 'IMGCPCBReusableBlock',
}


NamesToIIDMap = {
	'IMGCPCBApplication' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED01}',
	'IMGCPCBDocument' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED02}',
	'IMGCPCBView' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED03}',
	'IMGCPCBExtrema' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5F}',
	'IMGCPCBColor' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED71}',
	'IMGCPCBDisplayControl' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED73}',
	'IMGCPCBGlobalDisplayControl' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED74}',
	'IMGCPCBColorPattern' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED72}',
	'IMGCPCBTuningMeter' : '{C08852D9-8D46-4AF5-8957-C02383D370A8}',
	'IMGCPCBRadialGrid' : '{36F191D7-5E03-4303-BBE3-53541ED04939}',
	'IMGCPCBXProbe' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED28}',
	'IMGCPCBComponents' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED04}',
	'IMGCPCBBaseCollection' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED62}',
	'IMGCPCBComponent' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED05}',
	'IMGCPCBPins' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED08}',
	'IMGCPCBPin' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED09}',
	'IMGCPCBPadstackObject' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED37}',
	'IMGCPCBPadstack' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0E}',
	'IMGCPCBHoles' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED17}',
	'IMGCPCBHole' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0F}',
	'IMGCPCBGeometries' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6D}',
	'IMGCPCBGeometry' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED60}',
	'IMGCPCBObjects' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED76}',
	'IMGCPCBPads' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED16}',
	'IMGCPCBPad' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED15}',
	'IMGCPCBFabricationPads' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED53}',
	'IMGCPCBFabricationPad' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED52}',
	'IMGCPCBVias' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0C}',
	'IMGCPCBVia' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0D}',
	'IMGCPCBBreakoutDefaults' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED65}',
	'IMGCPCBBreakoutDefault' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED66}',
	'IMGCPCBTeardropDefaults' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED69}',
	'IMGCPCBTeardropDefault' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6A}',
	'IMGCPCBTeardrops' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED67}',
	'IMGCPCBTeardrop' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED68}',
	'IMGCPCBConductorLayerGfx' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED54}',
	'IMGCPCBBaseGfx' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED40}',
	'IMGCPCBProperties' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED44}',
	'IMGCPCBProperty' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED43}',
	'IMGCPCBDimensions' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED48}',
	'IMGCPCBDimension' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED47}',
	'IMGCPCBDimensionScheme' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED49}',
	'IMGCPCBDimensionedObject' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7E}',
	'IMGCPCBLayerObject' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED81}',
	'IMGCPCBUserLayer' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6F}',
	'IMGCPCBLayerProperties' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED97}',
	'IMGCPCBNet' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED07}',
	'IMGCPCBTraces' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0A}',
	'IMGCPCBTrace' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED0B}',
	'IMGCPCBTraceSegments' : '{E9383918-8714-45AA-BA68-B0FDB928473C}',
	'IMGCPCBTraceSegment' : '{BCC7826E-B004-43A2-A084-A76329E08D2B}',
	'IMGCPCBMultiBoardOutline' : '{D6996A5A-6C2D-4E44-A3B3-0E93C26634F1}',
	'IMGCPCBLayerObjects' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED82}',
	'IMGCPCBRouteBorder' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED34}',
	'IMGCPCBStackupScheme' : '{0D170493-3863-40A7-B222-C70CDC73B07A}',
	'IMGCPCBNetClass' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED12}',
	'IMGCPCBNets' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED06}',
	'IMGCPCBGeneratedPlanes' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3F}',
	'IMGCPCBGeneratedPlane' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3E}',
	'IMGCPCBPlaneShape' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3A}',
	'IMGCPCBActualPlaneShapes' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED94}',
	'IMGCPCBActualPlaneShape' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED93}',
	'IMGCPCBTieLegs' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED96}',
	'IMGCPCBTieLeg' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED95}',
	'IMGCPCBPlaneClass' : '{0F8BDFEA-6D20-4B70-9357-B9FD2BA712FB}',
	'IMGCPCBMountingHoles' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED27}',
	'IMGCPCBMountingHole' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED26}',
	'IMGCPCBBreakoutTraces' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED63}',
	'IMGCPCBBreakoutTrace' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED64}',
	'IMGCPCBPadstackObjects' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6B}',
	'IMGCPCBUserPads' : '{ACC37237-2F98-403B-8783-C21D7026F5B4}',
	'IMGCPCBUserPad' : '{0A6E0E06-2267-49D6-AC17-548E09AE85CD}',
	'IMGCPCBTracedrops' : '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8C}',
	'IMGCPCBTracedrop' : '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8D}',
	'IMGCPCBConductiveAreas' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED25}',
	'IMGCPCBConductiveArea' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED24}',
	'IMGCPCBFromTos' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1D}',
	'IMGCPCBFromTo' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1C}',
	'IMGCPCBMarker' : '{6F167A83-58E5-4E0B-A86C-D8CBBAE195DC}',
	'IMGCPCBSketchPlan' : '{ECE186A2-E5E2-4367-99FC-A1799DFBDF77}',
	'IMGCPCBNetGroup' : '{651025AE-83BA-4C30-BDA0-8BB7EB01116F}',
	'IMGCPCBNetGroups' : '{DF8FC11D-AFBD-41A9-AF29-8821B9164732}',
	'IMGCPCBMarkers' : '{3CCA32E2-09D7-42AB-9D14-565025B422B2}',
	'IMGCPCBPlaneShapes' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3B}',
	'IMGCPCBPlaneAssignments' : '{9A5632AE-DF66-44F0-956F-0BE6CE7623C0}',
	'IMGCPCBPlaneAssignment' : '{DB4BAFE3-7452-4D8A-880E-1E1D727206AD}',
	'IMGCPCBConstraint' : '{EAFAC376-315E-407D-A294-7DB8A2222C40}',
	'IMGCPCBDifferentialPair' : '{9A2E2DB0-60CA-45A0-8788-43D139963F55}',
	'IMGCPCBMatchLengthGroup' : '{5D4AF6CF-7583-490E-89D2-7000976F2151}',
	'IMGCPCBBondPads' : '{C9CD7A01-7FD7-4111-9561-E40CC9312B5E}',
	'IMGCPCBBondPad' : '{2D6C8A25-5C94-4AEE-8220-57084E0A0F73}',
	'IMGCPCBFabricationLayerText' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED57}',
	'IMGCPCBBaseText' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED32}',
	'IMGCPCBFormat' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED61}',
	'IMGCPCBFabricationLayerTexts' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED58}',
	'IMGCPCBConductorLayerText' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED55}',
	'IMGCPCBConductorLayerTexts' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED56}',
	'IMGCPCBUserLayerText' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED59}',
	'IMGCPCBUserLayerTexts' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5A}',
	'IMGCPCBRoom' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED38}',
	'IMGCPCBContours' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1F}',
	'IMGCPCBContour' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1E}',
	'IMGCPCBConductorLayerGfxs' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED21}',
	'IMGCPCBPlacementObstructs' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED36}',
	'IMGCPCBPlacementObstruct' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED35}',
	'IMGCPCBPlacementOutlines' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3D}',
	'IMGCPCBPlacementOutline' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED3C}',
	'IMGCPCBObstructs' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED23}',
	'IMGCPCBObstruct' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED22}',
	'IMGCPCBFiducials' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED29}',
	'IMGCPCBFiducial' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED2A}',
	'IMGCPCBCell' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED18}',
	'IMGCPCBDrillDrawings' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED46}',
	'IMGCPCBDrillDrawing' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED45}',
	'IMGCPCBFabricationLayerGfxs' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4F}',
	'IMGCPCBFabricationLayerGfx' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4E}',
	'IMGCPCBUserLayerGfxs' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED51}',
	'IMGCPCBUserLayerGfx' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED50}',
	'IMGCPCBEmbeddedPassiveShapes' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED99}',
	'IMGCPCBEmbeddedPassiveShape' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED98}',
	'IMGCPCBVariantInfo' : '{75404CBD-630D-4F46-A588-6251B8FE7514}',
	'IMGCPCBMetalizationAreas' : '{F48923B1-F092-42C5-8108-1256A55CDB86}',
	'IMGCPCBMetalizationArea' : '{315D2489-54AB-4C47-9927-5D1EB59FC6E7}',
	'IMGCPCBGlueSpots' : '{EDAD6DA3-1AE5-4B8E-94F0-2A3F9B69553D}',
	'IMGCPCBGlueSpot' : '{BEF54ABB-0F01-4448-A3B6-F4D75A9E7085}',
	'IMGCPCBMotionObject' : '{892F84E5-2360-4C62-BA83-B10CFECE180F}',
	'IMGCPCBNetClasses' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED11}',
	'IMGCPCBParts' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED20}',
	'IMGCPCBPart' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED10}',
	'IMGCPCBCells' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED19}',
	'IMGCPCBPadstacks' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED14}',
	'IMGCPCBBoardOutline' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED33}',
	'IMGCPCBRuleAreas' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1B}',
	'IMGCPCBRuleArea' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED1A}',
	'IMGCPCBRooms' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED39}',
	'IMGCPCBUserLayers' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED70}',
	'IMGCPCBSetupParameter' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED6E}',
	'IMGCPCBLayerRanges' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7A}',
	'IMGCPCBLayerRange' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED79}',
	'IMGCPCBViaSpan' : '{C4A8992A-7CE8-4925-963C-462E3FC2623E}',
	'IMGCPCBRoutePass' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7F}',
	'IMGCPCBEditorControl' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7D}',
	'IMGCPCBClusters' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED78}',
	'IMGCPCBCluster' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED77}',
	'IMGCPCBJumperTableEntries' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7C}',
	'IMGCPCBJumperTableEntry' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED7B}',
	'IMGCPCBPanelOutline' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED83}',
	'IMGCPCBPanelBorder' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED84}',
	'IMGCPCBToolingHoles' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED86}',
	'IMGCPCBToolingHole' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED85}',
	'IMGCPCBShearingHoles' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8E}',
	'IMGCPCBShearingHole' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8D}',
	'IMGCPCBCopperBalancingShapes' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED88}',
	'IMGCPCBCopperBalancingShape' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED87}',
	'IMGCPCBCopperBalancingDatas' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8A}',
	'IMGCPCBCopperBalancingData' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED89}',
	'IMGCPCBBoards' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8C}',
	'IMGCPCBBoard' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8B}',
	'IMGCPCBDetailedViews' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED90}',
	'IMGCPCBDetailedView' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED8F}',
	'IMGCPCBManufacturingOutline' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED91}',
	'IMGCPCBEnvironment' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED92}',
	'IMGCPCBRouteFences' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9C}',
	'IMGCPCBRouteFence' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9B}',
	'IMGCPCBHazards' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9E}',
	'IMGCPCBHazard' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9D}',
	'IMGCPCBMultiVias' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9F}',
	'IMGCPCBMultiVia' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA0}',
	'IMGCPCBTargetAreas' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA2}',
	'IMGCPCBTargetArea' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA1}',
	'IMGCPCBRouteTargets' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA4}',
	'IMGCPCBRouteTarget' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA3}',
	'IMGCPCBBusPaths' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA6}',
	'IMGCPCBBusPath' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA5}',
	'IMGCPCBConstraintClass' : '{44F1C4BB-CBC6-485E-AC0D-33C8F1E36706}',
	'IMGCPCBGroups' : '{83B83D46-A7A5-4D22-9A2A-15C34F6B40CA}',
	'IMGCPCBGroup' : '{47DF847D-0DF4-471B-8B6C-29C3C6C24D8D}',
	'IMGCPCBObjectFilter' : '{E83A79E9-68D0-48C7-9AC6-F64D3D8E9797}',
	'IMGCPCBGroupOutline' : '{C35F5B71-49BA-4499-9EFB-7DDE542F9503}',
	'IMGCPCBComplexVias' : '{8E06DFDF-E8D3-4D0D-ABDF-86DA7B7CA4CE}',
	'IMGCPCBComplexVia' : '{DA0209B0-DA9A-4145-B0B5-8174B59835ED}',
	'IMGCPCBPlaneEditingSketches' : '{6C221751-C228-4D62-9393-F0E4A5169EFB}',
	'IMGCPCBPlaneEditingSketch' : '{BFE5FFDE-12E4-4291-B796-11A9DFC52B27}',
	'IMGCPCBCopperBalancing' : '{9028C42A-551A-40C4-A596-C7A7058DC671}',
	'IMGCPCBErrors' : '{E7852DF4-9F9F-456E-8861-17AF75A62595}',
	'IMGCPCBError' : '{4E1E6F8C-3637-4B4B-B5B1-F0AAC357BF34}',
	'IMGCPCBPanels' : '{C0072D28-C269-4E34-86D1-FE550D7FD7AB}',
	'IMGCPCBPanel' : '{6B941F88-756B-4734-B3B2-EAB2861ECB7C}',
	'IMGCPCBSheetOutline' : '{8906B110-98F5-44A5-BD6C-DCE96AC36C87}',
	'IMGCPCBDrillTables' : '{0A4FD085-3288-45AB-982D-0C5DF73CFAEC}',
	'IMGCPCBDrillTable' : '{7F3134EB-48CB-4EF2-B66E-5D736DB4BD00}',
	'IMGCPCBViews' : '{05700A92-D895-44BB-96C1-9D5BCCAE050F}',
	'IMGCPCBSheet' : '{A81482C1-5A1F-4A6A-A049-4C6B4B75B2D2}',
	'IMGCPCBDFFSliverAnalysis' : '{CCFAFD52-099E-4BD6-B0DE-BC496050ED45}',
	'IMGCPCBIDFImport' : '{6F314C25-CF10-405C-ADBD-F9D1CC8733CD}',
	'IMGCPCBPlaneClasses' : '{A86800CB-BF55-4C68-ACD4-23E5E63A8F78}',
	'IMGCPCBConstructionPoints' : '{70468F79-8CB4-4E7B-B6AE-9B167F349DC3}',
	'IMGCPCBConstructionPoint' : '{73C10CC3-DBE5-46A4-9444-CA1C34F5381B}',
	'IMGCPCBConstructionLines' : '{9F40B36F-3CB4-48B6-AC53-8F42E432C5C5}',
	'IMGCPCBConstructionLine' : '{7F0DAAF0-3C8C-408A-99E5-0211E6C59B84}',
	'IMGCPCBSheets' : '{74EA0496-1B5F-4B40-8E75-D19BF96DA3A6}',
	'IMGCPCBDifferentialPairs' : '{B7CBBAF8-984C-4358-998E-F3FD7C2F761D}',
	'IMGCPCBMatchLengthGroups' : '{62A90059-38AB-4024-8A7C-0829DE185371}',
	'IMGCPCBClearance' : '{624AEAAD-9A8F-487F-A9A0-556E0E3F0B8B}',
	'IMGCPCBInsertionOutline' : '{045F3585-5036-40BA-97E0-EB9EF5098737}',
	'IMGCPCBInsertionOutlines' : '{B9781283-DCA6-44C7-975D-DB76652A3391}',
	'IMGCPCBSandbox' : '{5E03CC19-0E30-4CA5-B350-03E9D6FB7C34}',
	'IMGCPCBSandboxes' : '{BD848A19-1634-4C73-BADF-459C5B94BA4C}',
	'IMGCPCBChangeData' : '{3637D13B-92C5-41E2-BC84-8B8815A8041C}',
	'IMGCPCBCavity' : '{9826B261-A768-44F9-A0B9-1C289FB5D797}',
	'IMGCPCBCavities' : '{F6D6B8DF-76C9-425E-80A0-9DA8D54B1612}',
	'IMGCPCBResistorShapes' : '{DC0CD70D-0F4E-4DB7-9D0B-6AD595D27C1F}',
	'IMGCPCBResistorShape' : '{A971AD70-6D19-4DFB-800B-E0AF178F7FDD}',
	'IMGCPCBTestFixtureOutline' : '{585FFB16-62CC-4252-BE51-45D541FA8266}',
	'IMGCPCBDXFImport' : '{E9B3363C-F1A7-4947-ABF3-3FE59EFFD055}',
	'IMGCPCBConstraintClasses' : '{AEDD489A-9A64-4842-ADF9-72F22B82C33C}',
	'IMGCPCBPlowUtilities' : '{C2DF1786-E310-4E24-B331-225D0EB92338}',
	'IMGCPCBExpansionMode' : '{90BA08EC-F7F1-4338-9AAA-F2384EB35423}',
	'IMGCPCBPoint' : '{6ADF1858-A878-47E5-B3B2-5820C27712DB}',
	'IMGCPCBCheckpoint' : '{59A4CD11-43E8-40C4-A67D-D03B8ED437E3}',
	'IMGCPCBActiveClearanceEngine' : '{D650CB6A-FA51-4F22-9F2C-F7900A4B304C}',
	'IMGCPCBMaterials' : '{427B888F-9F9E-4408-B28C-8ECD4A5B696C}',
	'IMGCPCBMaterial' : '{24B5B850-C62F-41AE-B405-018D644055AD}',
	'IMGCPCBReservedAreas' : '{9C207921-4551-473E-94BC-1C7EDB8B5A1B}',
	'IMGCPCBReservedArea' : '{13B4E4A1-A142-4EBB-92F5-71E9F7D034E3}',
	'IMGCPCBDRCWindow' : '{B73D0A93-E85F-4B22-9CA8-E59101A04DC0}',
	'IMGCPCBReuseArea' : '{63C6F615-B7DE-49BE-B7CF-A77A8FBEAA3A}',
	'IMGCPCBReuseAreas' : '{3575F847-F278-44C6-BBC8-F79FA9E37CDB}',
	'IMGCPCBWireBondGuides' : '{405FFFFA-4B23-4032-AC7F-4170EE726100}',
	'IMGCPCBWireBondGuide' : '{02AF3C7D-AAB5-4389-9EEA-D30510ED6781}',
	'IMGCPCBHazardExplorer' : '{F3FACF5A-DE69-493F-BBFC-D1EEECDBFF69}',
	'IMGCPCBHazardTreeItem' : '{6F0F6525-9863-4AB4-A8E7-7F74760DDFF3}',
	'IMGCPCBHazardSymbol' : '{8FEE430F-5A97-4BAF-8D0D-E931AF9CA2DA}',
	'IMGCPCBBendAreas' : '{6B76C06F-2E50-491B-B845-D70A57247DB0}',
	'IMGCPCBBendArea' : '{66D692AC-44FD-46C2-8CD3-AF9A32C24DD4}',
	'IMGCPCBMultiBoardOutlines' : '{D69EB1A8-F5FC-4897-AD3C-676C50CF60AC}',
	'IMGCPCBSketchPlans' : '{2F037114-93ED-4C02-B835-6EC2ECD32E3C}',
	'IMGCPCBImages' : '{E35CE437-C28B-4021-85A6-EEB20664B18B}',
	'IMGCPCBImage' : '{33704F23-0EB7-47D7-AB6F-F4337D5F823F}',
	'IMGCPCBOutgassingVoidsSettings' : '{B23A65B4-1FAE-4B6C-B55D-DF78F9D3735A}',
	'IMGCPCBComplexViaPatterns' : '{FE804AAF-0865-4606-BD7C-E26536BD81F9}',
	'IMGCPCBComplexViaPattern' : '{392E8A72-90FA-4B22-8214-7CEE80816541}',
	'IMGCPCBSketchPlanVias' : '{DFE5ADA4-8560-4DCB-B850-D84BBEF0562B}',
	'IMGCPCBSketchPlanVia' : '{252A33B0-814C-48B3-BEB6-36FC5550AE43}',
	'IMGCPCBViaUtility' : '{64167F8C-BA98-4CB3-B48F-9D5CDC0FDE50}',
	'IMGCPCBStackupSchemes' : '{E17DBE7F-A013-4E92-9F62-E20CE0AEB25D}',
	'IMGCPCBDataManagementEntity' : '{52D5D12D-8051-483C-8BDD-E9B195CE294D}',
	'IMGCPCBDataManagementAdditionalProperty' : '{862C7303-2D1E-44EF-8B42-02192C0307B8}',
	'IMGCPCBDataManagementEntities' : '{B6B6919E-4B12-4132-8866-FB68697C6CD6}',
	'IMGCPCBPhysicalReuseLibraryCircuits' : '{4E0A6DAF-4C0D-415C-B43D-A6A1ED666FE6}',
	'IMGCPCBPhysicalReuseLibraryCircuit' : '{DD8F69CD-D97F-4E85-AC0E-92F9D05FC8FE}',
	'IMGCPCBTiebars' : '{0B2A45D4-326B-493F-A476-16B04123A8CB}',
	'IMGCPCBTiebar' : '{8D64846E-3942-4DD1-AF9E-102981DA52D2}',
	'IMGCPCBUtility' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4B}',
	'IMGCPCBGui' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5B}',
	'IMGCPCBDialog' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5C}',
	'IMGCPCBButton' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED5D}',
	'IMGCPCBCheckBox' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED80}',
	'IMGCPCBEditBox' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED9A}',
	'IMGCPCBCommand' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED30}',
	'IMGCPCBCommandListener' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDEDA7}',
	'IMGCPCBSettings' : '{AA01E86F-E470-4E69-AAB6-AE16DC30E3D0}',
	'IMGCPCBDataManagement' : '{E6C0D2B9-F966-4A54-AEB3-AFB0DBC97986}',
	'IMGCPCBDataManagementAdditionalProperties' : '{1B2EFA70-4BC4-4F20-BB58-77E7FC2CDEEC}',
	'IMGCPCBHThing' : '{32D2D203-BDBD-4091-AF4D-83DD57CA1AC5}',
	'IMGCPCBDimensionSchemes' : '{E972C9A3-D5F6-4B04-8FE7-EDEDEDEDED4A}',
	'_IMGCPCBApplicationEvents' : '{EDEDED01-D5F6-4B04-8FE7-EDEDEDEDED00}',
	'_IMGCPCBDocumentEvents' : '{EDEDED03-D5F6-4B04-8FE7-EDEDEDEDED00}',
	'_IMGCPCBCommandEvents' : '{EDEDED32-D5F6-4B04-8FE7-EDEDEDEDED00}',
	'_IMGCPCBDialogEvents' : '{EDEDED5C-D5F6-4B04-8FE7-EDEDEDEDED00}',
	'_IMGCPCBCommandListenerEvents' : '{EDEDEDA7-D5F6-4B04-8FE7-EDEDEDEDED00}',
	'IMGCPCBRFHazard' : '{6AC7C876-C1C1-419E-90D2-71324569E41E}',
	'IMGCPCBReusableBlock' : '{3C82C9A5-9A63-4D83-B9FC-E5FA2EE8FD7A}',
	'_IMGCPCBHazardExplorerEvents' : '{A54F58CC-B418-45BC-80B0-BCE062DF441C}',
	'IMGCPCBCopper' : '{F01B88CC-C007-4706-98BA-DBE009337E3B}',
	'IMGCPCBInternal' : '{06B94B22-CAD6-4189-86EC-E173787490DF}',
	'IMGCPCBCommon' : '{C771A1BA-E6EA-45AB-9716-AE638D1408C0}',
}

win32com.client.constants.__dicts__.append(constants.__dict__)

__all__ = ['IMGCPCBActiveClearanceEngine','IMGCPCBActualPlaneShape','IMGCPCBActualPlaneShapes','IMGCPCBApplication','IMGCPCBBaseCollection','IMGCPCBBaseGfx','IMGCPCBBaseText','IMGCPCBBendArea','IMGCPCBBendAreas','IMGCPCBBoard','IMGCPCBBoardOutline','IMGCPCBBoards','IMGCPCBBondPad','IMGCPCBBondPads','IMGCPCBBreakoutDefault','IMGCPCBBreakoutDefaults','IMGCPCBBreakoutTrace','IMGCPCBBreakoutTraces','IMGCPCBBusPath','IMGCPCBBusPaths','IMGCPCBButton','IMGCPCBCavities','IMGCPCBCavity','IMGCPCBCell','IMGCPCBCells','IMGCPCBChangeData','IMGCPCBCheckBox','IMGCPCBCheckpoint','IMGCPCBClearance','IMGCPCBCluster','IMGCPCBClusters','IMGCPCBColor','IMGCPCBColorPattern','IMGCPCBCommand','IMGCPCBCommandListener','IMGCPCBComplexVia','IMGCPCBComplexViaPattern','IMGCPCBComplexViaPatterns','IMGCPCBComplexVias','IMGCPCBComponent','IMGCPCBComponents','IMGCPCBConductiveArea','IMGCPCBConductiveAreas','IMGCPCBConductorLayerGfx','IMGCPCBConductorLayerGfxs','IMGCPCBConductorLayerText','IMGCPCBConductorLayerTexts','IMGCPCBConstraint','IMGCPCBConstraintClass','IMGCPCBConstraintClasses','IMGCPCBConstructionLine','IMGCPCBConstructionLines','IMGCPCBConstructionPoint','IMGCPCBConstructionPoints','IMGCPCBContour','IMGCPCBContours','IMGCPCBCopperBalancing','IMGCPCBCopperBalancingData','IMGCPCBCopperBalancingDatas','IMGCPCBCopperBalancingShape','IMGCPCBCopperBalancingShapes','IMGCPCBDFFSliverAnalysis','IMGCPCBDRCWindow','IMGCPCBDXFImport','IMGCPCBDataManagement','IMGCPCBDataManagementAdditionalProperties','IMGCPCBDataManagementAdditionalProperty','IMGCPCBDataManagementEntities','IMGCPCBDataManagementEntity','IMGCPCBDetailedView','IMGCPCBDetailedViews','IMGCPCBDialog','IMGCPCBDifferentialPair','IMGCPCBDifferentialPairs','IMGCPCBDimension','IMGCPCBDimensionScheme','IMGCPCBDimensionSchemes','IMGCPCBDimensionedObject','IMGCPCBDimensions','IMGCPCBDisplayControl','IMGCPCBDocument','IMGCPCBDrillDrawing','IMGCPCBDrillDrawings','IMGCPCBDrillTable','IMGCPCBDrillTables','IMGCPCBEditBox','IMGCPCBEditorControl','IMGCPCBEmbeddedPassiveShape','IMGCPCBEmbeddedPassiveShapes','IMGCPCBEnvironment','IMGCPCBError','IMGCPCBErrors','IMGCPCBExpansionMode','IMGCPCBExtrema','IMGCPCBFabricationLayerGfx','IMGCPCBFabricationLayerGfxs','IMGCPCBFabricationLayerText','IMGCPCBFabricationLayerTexts','IMGCPCBFabricationPad','IMGCPCBFabricationPads','IMGCPCBFiducial','IMGCPCBFiducials','IMGCPCBFormat','IMGCPCBFromTo','IMGCPCBFromTos','IMGCPCBGeneratedPlane','IMGCPCBGeneratedPlanes','IMGCPCBGeometries','IMGCPCBGeometry','IMGCPCBGlobalDisplayControl','IMGCPCBGlueSpot','IMGCPCBGlueSpots','IMGCPCBGroup','IMGCPCBGroupOutline','IMGCPCBGroups','IMGCPCBGui','IMGCPCBHThing','IMGCPCBHazard','IMGCPCBHazardExplorer','IMGCPCBHazardSymbol','IMGCPCBHazardTreeItem','IMGCPCBHazards','IMGCPCBHole','IMGCPCBHoles','IMGCPCBIDFImport','IMGCPCBImage','IMGCPCBImages','IMGCPCBInsertionOutline','IMGCPCBInsertionOutlines','IMGCPCBJumperTableEntries','IMGCPCBJumperTableEntry','IMGCPCBLayerObject','IMGCPCBLayerObjects','IMGCPCBLayerProperties','IMGCPCBLayerRange','IMGCPCBLayerRanges','IMGCPCBManufacturingOutline','IMGCPCBMarker','IMGCPCBMarkers','IMGCPCBMatchLengthGroup','IMGCPCBMatchLengthGroups','IMGCPCBMaterial','IMGCPCBMaterials','IMGCPCBMetalizationArea','IMGCPCBMetalizationAreas','IMGCPCBMotionObject','IMGCPCBMountingHole','IMGCPCBMountingHoles','IMGCPCBMultiBoardOutline','IMGCPCBMultiBoardOutlines','IMGCPCBMultiVia','IMGCPCBMultiVias','IMGCPCBNet','IMGCPCBNetClass','IMGCPCBNetClasses','IMGCPCBNetGroup','IMGCPCBNetGroups','IMGCPCBNets','IMGCPCBObjectFilter','IMGCPCBObjects','IMGCPCBObstruct','IMGCPCBObstructs','IMGCPCBOutgassingVoidsSettings','IMGCPCBPad','IMGCPCBPads','IMGCPCBPadstack','IMGCPCBPadstackObject','IMGCPCBPadstackObjects','IMGCPCBPadstacks','IMGCPCBPanel','IMGCPCBPanelBorder','IMGCPCBPanelOutline','IMGCPCBPanels','IMGCPCBPart','IMGCPCBParts','IMGCPCBPhysicalReuseLibraryCircuit','IMGCPCBPhysicalReuseLibraryCircuits','IMGCPCBPin','IMGCPCBPins','IMGCPCBPlacementObstruct','IMGCPCBPlacementObstructs','IMGCPCBPlacementOutline','IMGCPCBPlacementOutlines','IMGCPCBPlaneAssignment','IMGCPCBPlaneAssignments','IMGCPCBPlaneClass','IMGCPCBPlaneClasses','IMGCPCBPlaneEditingSketch','IMGCPCBPlaneEditingSketches','IMGCPCBPlaneShape','IMGCPCBPlaneShapes','IMGCPCBPlowUtilities','IMGCPCBPoint','IMGCPCBProperties','IMGCPCBProperty','IMGCPCBRFHazard','IMGCPCBRadialGrid','IMGCPCBReservedArea','IMGCPCBReservedAreas','IMGCPCBResistorShape','IMGCPCBResistorShapes','IMGCPCBReusableBlock','IMGCPCBReuseArea','IMGCPCBReuseAreas','IMGCPCBRoom','IMGCPCBRooms','IMGCPCBRouteBorder','IMGCPCBRouteFence','IMGCPCBRouteFences','IMGCPCBRoutePass','IMGCPCBRouteTarget','IMGCPCBRouteTargets','IMGCPCBRuleArea','IMGCPCBRuleAreas','IMGCPCBSandbox','IMGCPCBSandboxes','IMGCPCBSettings','IMGCPCBSetupParameter','IMGCPCBShearingHole','IMGCPCBShearingHoles','IMGCPCBSheet','IMGCPCBSheetOutline','IMGCPCBSheets','IMGCPCBSketchPlan','IMGCPCBSketchPlanVia','IMGCPCBSketchPlanVias','IMGCPCBSketchPlans','IMGCPCBStackupScheme','IMGCPCBStackupSchemes','IMGCPCBTargetArea','IMGCPCBTargetAreas','IMGCPCBTeardrop','IMGCPCBTeardropDefault','IMGCPCBTeardropDefaults','IMGCPCBTeardrops','IMGCPCBTestFixtureOutline','IMGCPCBTieLeg','IMGCPCBTieLegs','IMGCPCBTiebar','IMGCPCBTiebars','IMGCPCBToolingHole','IMGCPCBToolingHoles','IMGCPCBTrace','IMGCPCBTraceSegment','IMGCPCBTraceSegments','IMGCPCBTracedrop','IMGCPCBTracedrops','IMGCPCBTraces','IMGCPCBTuningMeter','IMGCPCBUserLayer','IMGCPCBUserLayerGfx','IMGCPCBUserLayerGfxs','IMGCPCBUserLayerText','IMGCPCBUserLayerTexts','IMGCPCBUserLayers','IMGCPCBUserPad','IMGCPCBUserPads','IMGCPCBUtility','IMGCPCBVariantInfo','IMGCPCBVia','IMGCPCBViaSpan','IMGCPCBViaUtility','IMGCPCBVias','IMGCPCBView','IMGCPCBViews','IMGCPCBWireBondGuide','IMGCPCBWireBondGuides','IMGCPCBXProbe']
